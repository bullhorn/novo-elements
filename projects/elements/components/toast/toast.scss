@import "~novo-design-tokens/scss";

:host {
  background: var(--toast-color-background);
  color: var(--toast-color-text);
  padding: var(--toast-spacing);
  gap: var(--toast-spacing);
  border-radius: var(--toast-border-radius);
  box-shadow: var(--toast-shadow);
  min-height: var(--toast-height);

  display: grid;
  grid-template-columns: min-content 1fr min-content;
  justify-content: flex-start;
  align-content: center;
  align-items: flex-start;
  position: relative;

  &.show {
    display: grid !important;
  }

  &.launched {
    display: none;
    position: fixed;
    z-index: 9999;
  }

  .toast-icon,
  .close-icon {
    display: flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    width: var(--size-height-md);
    height: var(--toast-height);
    i {
      display: flex;
      position: relative;
      font-size: var(--font-size-xl);
      line-height: 1;
    }
  }
  .close-icon {
    color: var(--color-text-muted);
  }

  .link-generated {
    width: 100%;
    position: relative;
    input {
      background: transparent !important;
      border: none;
      border-bottom: var(--border-main);
      border-radius: 0;
      outline: none;
      height: 2rem;
      width: 95%;
      margin: 0;
      padding: 0;
      box-shadow: none;
      box-sizing: content-box;
      transition: all 300ms;
      color: var(--color-white);
      text-overflow: ellipsis;
      &:focus {
        background-color: var(--color-selection);
      }
      &:hover {
        border-bottom: var(--border-main);
      }
    }
  }

  &.message-only {
    .toast-caption {
      padding: 0;
      font-size: var(--font-size-lg);
    }
  }
  .toast-caption {
    white-space: pre-line;
    margin: 0;
    max-width: inherit;
    font-size: 1.3rem;
  }

  .toast-title {
    display: block;
    font-size: 1.4rem;
    color: inherit;
  }

  // &.text {
  //   background: var(--color-text);
  // }
  // &.neutral {
  //   background: var(--color-neutral);
  // }
  // &.background {
  //   background: var(--color-background-subtle);
  //   .toast-content > h5 {
  //     color: var(--color-text) !important;
  //   }
  //   i,
  //   p {
  //     color: var(--color-text);
  //   }
  // }

  @include theme-colors() using ($name, $color, $contrast, $tint, $shade, $pale) {
    &.novo-theme-#{$name} {
      --toast-color-background: #{$color};
      --toast-color-text: #{$contrast};
      .toast-icon i,
      .close-icon {
        color: #{$contrast};
      }
    }
    &.novo-accent-#{$name} {
      .toast-icon i {
        color: #{$color};
      }
    }
  }
  &.novo-theme-error {
    --toast-color-background: var(--color-danger);
    --toast-color-text: var(--color-danger-contrast);
    .toast-icon i,
    .close-icon {
      color: var(--color-danger-contrast);
    }
  }
  &.novo-accent-error {
    .toast-icon i {
      color: var(--color-danger);
    }
  }
}

:host(.fixedBottom),
:host(.fixedTop) {
  left: 0;
  right: 0;
}

:host(.fixedTop) {
  top: -100%;
  padding-top: 20px;
  @include ease("all", "swift-ease-in-out");
  &.animate {
    padding-top: 20px;
    top: -6px;
  }
}

:host(.fixedBottom) {
  bottom: -100%;
  padding-bottom: 20px;
  @include ease("all", "swift-ease-in-out");
  &.animate {
    padding-bottom: 20px;
    bottom: -6px;
  }
}

:host([class*="growl"]) {
  border-radius: 3px;
  max-width: 350px;
}

:host(.growlBottomLeft),
:host(.growlTopLeft) {
  left: -100%;
  right: auto;
  width: calc(100% - 30px);
  @include ease("all", "swift-ease-in-out");
  &.animate {
    left: 15px;
  }
}

:host {
  &.growlTopLeft,
  &.growlTopRight {
    top: 1rem;
  }

  &.growlBottomLeft,
  &.growlBottomRight {
    bottom: 1rem;
  }

  &.growlBottomRight,
  &.growlTopRight {
    right: -100%;
    left: auto;
    width: calc(100% - 30px);
    @include ease("all", "swift-ease-in-out");
    &.animate {
      right: 1rem;
    }
  }

  &.fixedTop {
    @for $i from 2 through 100 {
      &:nth-last-of-type(#{$i}) {
        top: (25px * ($i - 1));
        z-index: 9999 - $i;
        filter: brightness(calc(1 - (1 / 7)));
      }
    }
  }

  &.fixedBottom {
    @for $i from 2 through 100 {
      &:nth-last-of-type(#{$i}) {
        bottom: (25px * ($i - 1));
        z-index: 9999 - $i;
        filter: brightness(calc(1 - (1 / 7)));
      }
    }
  }

  &.growlTopLeft,
  &.growlTopRight {
    @for $i from 2 through 100 {
      &:nth-last-of-type(#{$i}) {
        top: (25px * $i);
        transform: scale(calc(1 - (1 / 25)));
        z-index: 9999 - $i;
        filter: brightness(calc(1 - (1 / 7)));
      }
    }
  }

  &.growlBottomLeft,
  &.growlBottomRight {
    @for $i from 2 through 100 {
      &:nth-last-of-type(#{$i}) {
        bottom: (25px * $i);
        transform: scale(calc(1 - (1 / 25)));
        z-index: 9999 - $i;
        filter: brightness(calc(1 - (1 / 7)));
      }
    }
  }

  &.growlBottomLeft,
  &.growlBottomRight,
  &.growlTopLeft,
  &.growlTopRight {
    &:last-of-type {
      box-shadow: var(--toast-shadow);
    }
  }

  &.embedded.fixedBottom,
  &.embedded.fixedTop {
    top: auto;
    left: auto;
    right: auto;
    width: inherit;
    margin: -1rem -3rem;
    &.animate {
      top: auto;
    }
  }

  &:not(.launched) {
    animation: embedded-slide-in 200ms ease-in-out;
  }

  &.dialogue {
    .toast-content {
      display: flex;
      flex-direction: row !important;
      align-items: center;
    }
    p.message-only {
      flex: 3 0 0;
    }
    .dialogue {
      display: inherit;
    }
  }
}

@media screen and (min-width: 350px) {
  :host {
    &[class*="growl"] {
      min-width: 350px;
    }
    &.growlBottomLeft,
    &.growlTopLeft {
      left: -100%;
      right: auto;
      @include ease("all", "swift-ease-in-out");
      &.animate {
        left: 1rem;
      }
    }
    &.growlBottomRight,
    &.growlTopRight {
      right: -100%;
      left: auto;
      @include ease("all", "swift-ease-in-out");
      &.animate {
        right: 1rem;
      }
    }
  }
}

@keyframes embedded-slide-in {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
