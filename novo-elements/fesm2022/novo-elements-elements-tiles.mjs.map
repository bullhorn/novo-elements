{"version":3,"file":"novo-elements-elements-tiles.mjs","sources":["../../../projects/novo-elements/src/elements/tiles/Tiles.ts","../../../projects/novo-elements/src/elements/tiles/Tiles.module.ts","../../../projects/novo-elements/src/elements/tiles/novo-elements-elements-tiles.ts"],"sourcesContent":["// NG2\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\nimport { Helpers } from 'novo-elements/utils';\n\n// Value accessor for the component (supports ngModel)\nconst TILES_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTilesElement),\n  multi: true,\n};\n\n@Component({\n    selector: 'novo-tiles',\n    providers: [TILES_VALUE_ACCESSOR],\n    template: `\n    <div class=\"tile-container\" [class.active]=\"focused\" [class.disabled]=\"disabled\">\n      <button class=\"tile\" type=\"button\"\n        *ngFor=\"let option of _options; let i = index\"\n        [ngClass]=\"{ defaultColor: !option.color, active: option.checked, disabled: option.disabled }\"\n        [theme]=\"option.checked ? 'primary' : 'dialogue'\"\n        [color]=\"option.checked ? option.color || 'darken($ocean, 20%)' : 'dark'\"\n        [icon]=\"option.icon\"\n        [side]=\"option.iconSide || 'left'\"\n        (click)=\"select($event, option)\"\n        [attr.data-automation-id]=\"option.label || option\">\n        <input\n          class=\"tiles-input\"\n          [name]=\"name\"\n          type=\"radio\"\n          [value]=\"option.checked || option.value || option\"\n          [attr.id]=\"name + i\"\n          (change)=\"select($event, option)\"\n          (focus)=\"setFocus(true)\"\n          (blur)=\"setFocus(false)\"\n          [disabled]=\"disabled\"\n        />\n        <label [attr.for]=\"name + i\" [attr.data-automation-id]=\"option.label || option\">\n          {{ option.label || option }}\n        </label>\n      </button>\n    </div>\n  `,\n    styleUrls: ['./Tiles.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class NovoTilesElement implements ControlValueAccessor, AfterContentInit, OnChanges {\n  @Input()\n  name: string = new Date().getTime().toString();\n  @Input()\n  options: any;\n  @Input()\n  required: boolean;\n  @Input('controlDisabled')\n  disabled: boolean = false;\n  @Output()\n  onChange: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onSelectedOptionClick: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onDisabledOptionClick: EventEmitter<any> = new EventEmitter();\n\n  _options: Array<any> = [];\n  public activeTile: any = null;\n  public focused: boolean = false;\n\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(private element: ElementRef, private ref: ChangeDetectorRef) {}\n\n  public setFocus(focus: boolean): void {\n    this.focused = focus;\n  }\n\n  ngAfterContentInit() {\n    this.name = this.name || '';\n    this.setupOptions();\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.options && change.options.currentValue && !change.options.firstChange) {\n      this.name = this.name || '';\n      this._options = [];\n      this.setupOptions();\n    }\n  }\n\n  setupOptions() {\n    if (this.options && this.options.length && (this.options[0].value === undefined || this.options[0].value === null)) {\n      this._options = this.options.map((x) => {\n        const item = { value: x, label: x, checked: this.model === x };\n        if (item.checked) {\n          this.setTile(item);\n        }\n        return item;\n      });\n    } else {\n      this._options = this.options.map((x) => {\n        x.checked = this.model === x.value || (this.model && this.model.id === x.value);\n        if (x.checked) {\n          this.setTile(x);\n        }\n        return x;\n      });\n    }\n    this.ref.markForCheck();\n  }\n\n  select(event, item) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    if (!item.disabled) {\n      if (item.checked) {\n        this.onSelectedOptionClick.emit(item);\n        return;\n      }\n\n      for (const option of this._options) {\n        option.checked = false;\n      }\n\n      item.checked = !item.checked;\n      this.onChange.emit(item.value);\n      this.onModelChange(item.value);\n      this.setTile(item);\n      this.model = item.value;\n    } else {\n      this.onDisabledOptionClick.emit(item);\n    }\n    this.ref.markForCheck();\n  }\n\n  setTile(item) {\n    if (item) {\n      this.activeTile = item.value;\n      this.ref.markForCheck();\n    }\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n    if (!Helpers.isBlank(model)) {\n      this.setupOptions();\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NovoButtonModule } from 'novo-elements/elements/button';\nimport { NovoTilesElement } from './Tiles';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule, ReactiveFormsModule],\n  declarations: [NovoTilesElement],\n  exports: [NovoTilesElement],\n})\nexport class NovoTilesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAkBA;AACA,MAAM,oBAAoB,GAAG;AAC3B,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;AAC/C,IAAA,KAAK,EAAE,IAAI;CACZ;MAqCY,gBAAgB,CAAA;IAwB3B,WAAoB,CAAA,OAAmB,EAAU,GAAsB,EAAA;QAAnD,IAAO,CAAA,OAAA,GAAP,OAAO;QAAsB,IAAG,CAAA,GAAA,GAAH,GAAG;QAtBpD,IAAI,CAAA,IAAA,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;QAM9C,IAAQ,CAAA,QAAA,GAAY,KAAK;AAEzB,QAAA,IAAA,CAAA,QAAQ,GAAsB,IAAI,YAAY,EAAE;AAEhD,QAAA,IAAA,CAAA,qBAAqB,GAAsB,IAAI,YAAY,EAAE;AAE7D,QAAA,IAAA,CAAA,qBAAqB,GAAsB,IAAI,YAAY,EAAE;QAE7D,IAAQ,CAAA,QAAA,GAAe,EAAE;QAClB,IAAU,CAAA,UAAA,GAAQ,IAAI;QACtB,IAAO,CAAA,OAAA,GAAY,KAAK;AAG/B,QAAA,IAAA,CAAA,aAAa,GAAa,MAAK,GAAG;AAClC,QAAA,IAAA,CAAA,cAAc,GAAa,MAAK,GAAG;;AAI5B,IAAA,QAAQ,CAAC,KAAc,EAAA;AAC5B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK;;IAGtB,kBAAkB,GAAA;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE;QAC3B,IAAI,CAAC,YAAY,EAAE;;AAGrB,IAAA,WAAW,CAAC,MAAqB,EAAA;AAC/B,QAAA,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE;YAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE;AAC3B,YAAA,IAAI,CAAC,QAAQ,GAAG,EAAE;YAClB,IAAI,CAAC,YAAY,EAAE;;;IAIvB,YAAY,GAAA;AACV,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE;AAClH,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAI;AACrC,gBAAA,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAC9D,gBAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;AAEpB,gBAAA,OAAO,IAAI;AACb,aAAC,CAAC;;aACG;AACL,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAI;gBACrC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;AAC/E,gBAAA,IAAI,CAAC,CAAC,OAAO,EAAE;AACb,oBAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;;AAEjB,gBAAA,OAAO,CAAC;AACV,aAAC,CAAC;;AAEJ,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;;IAGzB,MAAM,CAAC,KAAK,EAAE,IAAI,EAAA;QAChB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,eAAe,EAAE;YACvB,KAAK,CAAC,cAAc,EAAE;;AAGxB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC;;AAGF,YAAA,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClC,gBAAA,MAAM,CAAC,OAAO,GAAG,KAAK;;AAGxB,YAAA,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9B,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AAClB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;;aAClB;AACL,YAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;;AAEvC,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;;AAGzB,IAAA,OAAO,CAAC,IAAI,EAAA;QACV,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK;AAC5B,YAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;;;AAI3B,IAAA,UAAU,CAAC,KAAU,EAAA;AACnB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE;;;AAIvB,IAAA,gBAAgB,CAAC,EAAY,EAAA;AAC3B,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE;;AAGzB,IAAA,iBAAiB,CAAC,EAAY,EAAA;AAC5B,QAAA,IAAI,CAAC,cAAc,GAAG,EAAE;;AAG1B,IAAA,gBAAgB,CAAC,QAAiB,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;;+GAlHf,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,EAjCd,YAAA,EAAA,KAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,EAAA,SAAA,EAAA,CAAC,oBAAoB,CAAC,EACvB,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BX,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,4vBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;4FAKU,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAnC5B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EACX,SAAA,EAAA,CAAC,oBAAoB,CAAC,EACvB,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BX,EAAA,CAAA,EAAA,eAAA,EAEkB,uBAAuB,CAAC,MAAM,EAAA,UAAA,EACnC,KAAK,EAAA,MAAA,EAAA,CAAA,4vBAAA,CAAA,EAAA;+GAInB,IAAI,EAAA,CAAA;sBADH;gBAGD,OAAO,EAAA,CAAA;sBADN;gBAGD,QAAQ,EAAA,CAAA;sBADP;gBAGD,QAAQ,EAAA,CAAA;sBADP,KAAK;uBAAC,iBAAiB;gBAGxB,QAAQ,EAAA,CAAA;sBADP;gBAGD,qBAAqB,EAAA,CAAA;sBADpB;gBAGD,qBAAqB,EAAA,CAAA;sBADpB;;;ACzEH;MAYa,eAAe,CAAA;+GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAf,eAAe,EAAA,YAAA,EAAA,CAHX,gBAAgB,CADrB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAEnD,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAEf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAJhB,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;;4FAIlD,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,mBAAmB,CAAC;oBAC9D,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;AAC5B,iBAAA;;;ACXD;;AAEG;;;;"}