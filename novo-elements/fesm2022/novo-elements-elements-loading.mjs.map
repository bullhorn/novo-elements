{"version":3,"file":"novo-elements-elements-loading.mjs","sources":["../../../projects/novo-elements/src/elements/loading/Loading.ts","../../../projects/novo-elements/src/elements/loading/Loading.module.ts","../../../projects/novo-elements/src/elements/loading/novo-elements-elements-loading.ts"],"sourcesContent":["// NG2\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  ContentChildren,\n  Directive,\n  EmbeddedViewRef,\n  HostBinding,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Component({\n    selector: 'novo-loading',\n    styleUrls: ['./Loading.scss'],\n    template: `\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n  `,\n    standalone: false\n})\nexport class NovoLoadingElement {\n  /**\n   * **deprecated** please use `color`.\n   * @deprecated\n   **/\n  @Input()\n  set theme(value: string) {\n    console.warn(`'theme' property is deprecated, please use 'color'.`);\n    this.color = value;\n  }\n  get theme(): string {\n    return this.color;\n  }\n\n  @Input()\n  color: string;\n\n  @Input()\n  size: string = 'medium';\n\n  @HostBinding('class')\n  get hb_class() {\n    return [`color-${this.color}`, `size-${this.size}`].join(' ');\n  }\n}\n\n@Component({\n    selector: 'novo-spinner',\n    styleUrls: ['./NovoSpinner.scss'],\n    template: `\n    <div class=\"dot1 dot\"></div>\n    <div class=\"dot2 dot\"></div>\n    <div class=\"dot3 dot\"></div>\n    <div class=\"dot4 dot\"></div>\n    <div class=\"dot5 dot\"></div>\n    <div class=\"dot6 dot\"></div>\n    <div class=\"dot7 dot\"></div>\n    <div class=\"dot8 dot\"></div>\n    <div class=\"dot9 dot\"></div>\n    <div class=\"dot10 dot\"></div>\n    <div class=\"dot11 dot\"></div>\n    <div class=\"dot12 dot\"></div>\n  `,\n    standalone: false\n})\nexport class NovoSpinnerElement {\n  /**\n   * **deprecated** please use `color`.\n   * @deprecated\n   **/\n  @Input()\n  set theme(value: string) {\n    console.warn(`'theme' property is deprecated, please use 'color'.`);\n    this.color = value;\n  }\n  get theme(): string {\n    return this.color;\n  }\n\n  @Input()\n  color: string;\n\n  @Input()\n  size: string = 'medium';\n\n  private _inverse: boolean;\n  get inverse(): boolean {\n    return this._inverse;\n  }\n  @Input()\n  set inverse(value: boolean) {\n    this._inverse = coerceBooleanProperty(value);\n  }\n\n  @HostBinding('class')\n  get hb_class() {\n    return [this.inverse ? 'color-white' : `color-${this.color}`, `size-${this.size}`].join(' ');\n  }\n}\n\n@Directive({\n    selector: '[skeleton]',\n    standalone: false\n})\nexport class NovoSkeletonDirective {\n  @HostBinding('class.skeleton')\n  skeleton: boolean = true;\n}\n@Directive({\n    selector: '[loaded]',\n    standalone: false\n})\nexport class NovoLoadedDirective {}\n\n@Directive({\n    selector: '[isLoading]',\n    standalone: false\n})\nexport class NovoIsLoadingDirective {\n  @ContentChildren(NovoSkeletonDirective, { read: TemplateRef })\n  public skeletonTemplates: QueryList<TemplateRef<any>>;\n  @ContentChildren(NovoLoadedDirective, { read: TemplateRef })\n  public loadedTemplates: QueryList<TemplateRef<any>>;\n\n  private hasView = false;\n  private skeletonViews: EmbeddedViewRef<NovoSkeletonDirective>[] = [];\n  private loadedViews: EmbeddedViewRef<NovoLoadedDirective>[] = [];\n\n  constructor(private viewContainer: ViewContainerRef) {}\n\n  @Input()\n  set isLoading(condition: boolean) {\n    if (!condition && !this.hasView) {\n      this.destroyViews(this.loadedViews);\n      this.skeletonViews = this.createViews(this.skeletonTemplates);\n      this.hasView = true;\n    } else if (condition && this.hasView) {\n      this.destroyViews(this.skeletonViews);\n      this.loadedViews = this.createViews(this.loadedTemplates);\n      this.hasView = false;\n    }\n  }\n  createViews(templates: QueryList<TemplateRef<any>>) {\n    return templates && templates.map((v, i) => this.viewContainer.createEmbeddedView(v, null, i));\n  }\n  destroyViews(views: EmbeddedViewRef<any>[]) {\n    if (views) {\n      for (const view of views) {\n        view.destroy();\n      }\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoIsLoadingDirective, NovoLoadedDirective, NovoLoadingElement, NovoSkeletonDirective, NovoSpinnerElement } from './Loading';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n  exports: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n})\nexport class NovoLoadingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}