{"version":3,"file":"novo-elements-elements-flex.mjs","sources":["../../../projects/novo-elements/src/elements/flex/Box.ts","../../../projects/novo-elements/src/elements/flex/Flex.ts","../../../projects/novo-elements/src/elements/flex/Grid.ts","../../../projects/novo-elements/src/elements/flex/Flex.module.ts","../../../projects/novo-elements/src/elements/flex/novo-elements-elements-flex.ts"],"sourcesContent":["// NG2\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n    selector: 'novo-box',\n    template: ` <ng-content></ng-content> `,\n    standalone: false\n})\nexport class NovoBoxElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'block';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'center';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @HostBinding('style.flex-wrap')\n  @Input()\n  wrap: string = 'nowrap';\n\n  @HostBinding('style.gap')\n  @Input()\n  gap: string;\n\n  // get hb_gridCols() {\n  //   return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, ${ResourceSettings.eventWidth})`);\n  // }\n}\n","// NG2\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n    selector: 'novo-flex,novo-row',\n    template: ` <ng-content></ng-content> `,\n    standalone: false\n})\nexport class NovoFlexElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'flex';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'center';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @HostBinding('style.flex-wrap')\n  @Input()\n  wrap: string = 'nowrap';\n\n  @HostBinding('style.gap')\n  @Input()\n  gap: string;\n\n  // get hb_gridCols() {\n  //   return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, ${ResourceSettings.eventWidth})`);\n  // }\n}\n\n@Component({\n    selector: 'novo-stack,novo-column',\n    template: ` <ng-content></ng-content> `,\n    standalone: false\n})\nexport class NovoStackElement extends NovoFlexElement {\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'column';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'start';\n}\n","// NG2\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { Component, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'novo-grid',\n    template: ` <ng-content></ng-content> `,\n    standalone: false\n})\nexport class NovoGridElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'grid';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'start';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @Input()\n  columns: string = '1';\n\n  @HostBinding('style.grid-template-columns')\n  get hb_gridCols() {\n    if (_isNumberValue(this.columns)) {\n      return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, 1fr)`);\n    }\n    return this._sanitizer.bypassSecurityTrustStyle(`${this.columns}`);\n  }\n\n  constructor(private _sanitizer: DomSanitizer) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoBoxElement } from './Box';\nimport { NovoFlexElement, NovoStackElement } from './Flex';\nimport { NovoGridElement } from './Grid';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoFlexElement, NovoStackElement, NovoGridElement, NovoBoxElement],\n  exports: [NovoFlexElement, NovoStackElement, NovoGridElement, NovoBoxElement],\n})\nexport class NovoFlexModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}