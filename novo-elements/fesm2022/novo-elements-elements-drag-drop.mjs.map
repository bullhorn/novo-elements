{"version":3,"file":"novo-elements-elements-drag-drop.mjs","sources":["../../../projects/novo-elements/src/elements/drag-drop/drag-drop-box.ts","../../../projects/novo-elements/src/elements/drag-drop/drag-drop.module.ts","../../../projects/novo-elements/src/elements/drag-drop/novo-elements-elements-drag-drop.ts"],"sourcesContent":["import { AfterViewInit, Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nexport interface NovoDragFinishEvent<T> {\n    draggedItem: T;\n    allItems: T[];\n    event: DragEvent;\n}\n\ninterface NovoDragItem<T> {\n    item: T;\n    element: HTMLElement;\n}\n\n@Directive({\n    selector: '[novoDragDrop]',\n    standalone: false\n})\nexport class NovoDragBoxParent<T> implements AfterViewInit, OnDestroy {\n\n    pickedUp?: HTMLElement;\n    savedOrder?: NovoDragItem<T>[];\n\n    $destroy = new ReplaySubject<void>(1);\n\n    @Input('novoDragDrop') items: T[];\n\n    @Output() novoDragDropFinish = new EventEmitter<NovoDragFinishEvent<T>>();\n\n    private trackedItems: NovoDragItem<T>[];\n\n    get itemsReordered(): T[] {\n        return this.trackedItems.map(item => item.item);\n    }\n\n    mutationObserver = new MutationObserver(this.mutationDetected.bind(this));\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    get element(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    ngAfterViewInit(): void {\n        this.registerChildren();\n        this.mutationObserver.observe(this.element, { childList: true });\n    }\n\n    ngOnDestroy(): void {\n        this.$destroy.next();\n        this.$destroy.complete();\n    }\n\n    private registerChildren(): void {\n        if (this.items && this.items.length !== this.element.children.length) {\n            throw new Error(`Could not match item list to children list - drag box contains ${this.items.length} items, but has ${this.element.children.length} elements`);\n        }\n        this.trackedItems = [];\n        for (let i = 0; i < this.element.children.length; i++) {\n            this.registerChild(this.element.children[i] as HTMLElement, i);\n        }\n\n    }\n\n    private registerChild(element: HTMLElement, index: number) {\n        const listeners = [\n            this.renderer.listen(element, 'dragstart', this.onDragStart.bind(this)),\n            this.renderer.listen(element, 'drop', this.onDragFinish.bind(this)),\n            this.renderer.listen(element, 'dragend', this.onDragStop.bind(this))\n        ];\n        element.draggable = true;\n        this.$destroy.subscribe(() => listeners.forEach(cb => cb()));\n        this.trackedItems.push({\n            item: this.items[index],\n            element\n        });\n    }\n\n    mutationDetected(mutations: MutationRecord[]) {\n        if (this.pickedUp) {\n            return;\n        }\n        const addedNodes = new Set<HTMLElement>();\n        const removedNodes = new Set<HTMLElement>();\n        for (let mutation of mutations) {\n            mutation.addedNodes.forEach((a: HTMLElement) => {\n                if (!removedNodes.delete(a)) {\n                    addedNodes.add(a);\n                }\n            });\n            mutation.removedNodes.forEach((a: HTMLElement) => {\n                if (!addedNodes.delete(a)) {\n                    removedNodes.add(a);\n                }\n            });\n        }\n        addedNodes.forEach(node => {\n            const idx = Array.prototype.indexOf.call(this.element.children, node);\n            this.registerChild(node, idx);\n        });\n        if (removedNodes.size > 0) {\n            this.trackedItems = this.trackedItems.filter(\n                item => !removedNodes.has(item.element));\n        }\n    }\n\n    /** Per-item listeners */\n\n    onDragStart(event: DragEvent) {\n        if (this.shouldBlockDragStart(event)) {\n            event.preventDefault();\n            return;\n        }\n        const dataTransfer = event.dataTransfer;\n        // Present a native 'move item' effect\n        dataTransfer.effectAllowed = 'move';\n        this.pickedUp = event.target as HTMLElement;\n        event.stopPropagation();\n        this.savedOrder = [...this.trackedItems];\n    }\n\n    // Equivalent of \"finally\" - this runs whether or not the drag finished on a valid ending location\n    onDragStop(event: DragEvent): void {\n        this.pickedUp = null;\n        this.savedOrder = null;\n        event.stopPropagation();\n    }\n\n    onDragFinish(event: DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.element.contains(event.currentTarget as HTMLElement)) {\n            // this is for a different drag region - ignore\n            return;\n        }\n        const draggedItem = this.trackedItems.find(item => item.element === this.pickedUp)?.item;\n        this.trackedItems = Array.prototype.map.call(this.element.children, child => {\n            const item = this.trackedItems.find(item => item.element === child);\n            if (!item) {\n                throw new Error('DragDrop: Error - could not reassociate an item post-drag');\n            }\n            return item;\n        });\n        this.novoDragDropFinish.emit({\n            draggedItem,\n            allItems: this.itemsReordered,\n            event\n        });\n\n    }\n\n    /** - end per-item listeners */\n\n    @HostListener('window:dragover', ['$event'])\n    onDragOver(event: DragEvent): void {\n        if (!this.pickedUp) {\n            return;\n        }\n        let target = event.target as HTMLElement;\n        if (!this.element.contains(target)) {\n            target = null;\n        }\n        // In some cases (maybe browser-specific) we may have this event reported from a sub-element of a drag destination.\n        // We need to go upwards in the tree to find the actual target\n        if (target && !target.draggable) {\n            target = this.findDraggableParentOfElement(target);\n        }\n        // Check if this drag event is within this drag box\n        if (target && target.parentElement === this.element) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (event.dataTransfer) {\n                event.dataTransfer.dropEffect = 'move';\n            }\n            this.applyTempSort(this.pickedUp, target);\n        } else {\n            // if not within this drag box, then move this item back to its original position and show a diabled drag effect\n            if (event.dataTransfer) {\n                event.dataTransfer.dropEffect = 'none';\n            }\n            this.resetSorting();\n        }\n    }\n\n    private findDraggableParentOfElement(target: HTMLElement): HTMLElement | null {\n        const parentElement = target.parentElement;\n        if (!parentElement) {\n            return null;\n        } else if (parentElement.draggable) {\n            return parentElement;\n        } else {\n            return this.findDraggableParentOfElement(parentElement);\n        }\n    }\n\n    private applyTempSort(showXElement: HTMLElement, inPlaceOfY: HTMLElement) {\n        if (showXElement === inPlaceOfY) {\n            // same element - ignoring\n            return;\n        }\n        // Apply the \"preview\" effect from dragging one item to another\n        const aIndex = Array.prototype.indexOf.call(this.elementRef.nativeElement.children, showXElement);\n        const bIndex = Array.prototype.indexOf.call(this.elementRef.nativeElement.children, inPlaceOfY);\n        const diff = bIndex - aIndex;\n        let insertPosition: InsertPosition;\n        if (diff > 0) {\n            insertPosition = 'afterend';\n        } else if (diff < 0) {\n            insertPosition = 'beforebegin';\n        } else {\n            throw new Error('DragDrop: Two elements are in the same position');\n        }\n        inPlaceOfY.insertAdjacentElement(insertPosition, showXElement);\n    }\n\n    private resetSorting(): void {\n        // return to the order of elements from the last time we called onDragPickup\n        if (!this.savedOrder) {\n            throw new Error('DragDrop: Cannot reset sorting with no saved order');\n        }\n        const boxElem = this.elementRef.nativeElement as HTMLElement;\n        for (let i = 0; i < boxElem.children.length; i++) {\n            const item = boxElem.children[i];\n            if (this.savedOrder[i].element !== item && i > 0) {\n                this.savedOrder[i - 1].element.insertAdjacentElement('afterend', this.savedOrder[i].element);\n            }\n        }\n    }\n\n    // If the user has provided classes indicating they only want a certain region to be draggable, ignore\n    // this drag event if it is outside of there.\n    private shouldBlockDragStart(event: DragEvent): boolean {\n        const dragTarget = event.target as HTMLElement;\n        // TODO: Allow for multiple drag targets, and drag exclusion targets\n        const userDragTarget = dragTarget.querySelector('.novo-drag-target');\n        if (userDragTarget) {\n            return !this.isElementWithinEventBounds(userDragTarget, event);\n        }\n    }\n\n    public isElementWithinEventBounds(element: Element, event: DragEvent) {\n        const rect = element.getBoundingClientRect();\n        const isInside = event.clientX > rect.left && event.clientX < rect.right &&\n            event.clientY < rect.bottom && event.clientY > rect.top;\n        return isInside;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NovoDragBoxParent } from './drag-drop-box';\n\n\n@NgModule({\n    declarations: [NovoDragBoxParent],\n    exports: [NovoDragBoxParent]\n})\nexport class NovoDragDropModule {}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}