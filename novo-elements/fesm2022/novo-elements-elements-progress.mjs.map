{"version":3,"file":"novo-elements-elements-progress.mjs","sources":["../../../projects/novo-elements/src/elements/progress/ProgressConstants.ts","../../../projects/novo-elements/src/elements/progress/ProgressBar.ts","../../../projects/novo-elements/src/elements/progress/Progress.ts","../../../projects/novo-elements/src/elements/progress/Progress.module.ts","../../../projects/novo-elements/src/elements/progress/novo-elements-elements-progress.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport enum ProgressAppearance {\n  LINEAR = 'linear',\n  RADIAL = 'radial',\n}\n\n/**\n * Used to provide a progress container to a progress bar while avoiding circular references.\n * @docs-private\n */\nexport const NOVO_PROGRESS_CONTAINER = new InjectionToken('NOVO_PROGRESS_CONTAINER');\n","// NG2\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// import type { NovoProgressElement } from './Progress';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n// make radio-button-group ids unique\nlet nextId = 0;\n\n// Value accessor for the component (supports ngModel)\nconst PROGRESS_BAR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoProgressBarElement),\n  multi: true,\n};\n\n@Component({\n    selector: 'novo-progress-bar',\n    styleUrls: ['./ProgressBar.scss'],\n    providers: [PROGRESS_BAR_VALUE_ACCESSOR],\n    template: `\n    <div *ngIf=\"appearance === progressAppearance.LINEAR\" class=\"progress-bar\"></div>\n    <svg *ngIf=\"appearance === progressAppearance.RADIAL\" width=\"120\" height=\"120\">\n      <circle\n        [style.strokeDasharray]=\"circumference\"\n        [style.strokeDashoffset]=\"dashoffset\"\n        [attr.r]=\"radius\"\n        cx=\"60\"\n        cy=\"60\"\n        stroke-width=\"4\"\n        fill=\"transparent\"\n        class=\"progress__value\"\n      />\n    </svg>\n  `,\n    standalone: false\n})\nexport class NovoProgressBarElement implements ControlValueAccessor, OnInit {\n  private _uniqueId: string = `novo-progress-${++nextId}`;\n  @HostBinding('class')\n  public appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  @Input() id: string = this._uniqueId;\n  @Input() name: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  @Input() label: string;\n  @Input() theme: string;\n  @Input() color: string;\n  @Input() indeterminate: boolean = false;\n  // Radial Value\n  public radius = 54;\n  public circumference = 2 * Math.PI * this.radius;\n  public dashoffset: number;\n  public progressAppearance = ProgressAppearance;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  @HostBinding('class.animated')\n  @Input()\n  animated: boolean = false;\n\n  @HostBinding('class.flash')\n  @Input()\n  flash: boolean = false;\n\n  @HostBinding('style.width')\n  get width() {\n    if (this.appearance === ProgressAppearance.RADIAL) {\n      return `100%`;\n    }\n    return `${this._percent * 100}%`;\n  }\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _percent: number = 0;\n  private _value: number = 0;\n  private _disabled: boolean = false;\n\n  @Input() get value(): number {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      if (this.progress) {\n        this._percent = this.progress.total > 0 ? this._value / this.progress.total : 0;\n      } else {\n        this._percent = value;\n      }\n      this.dashoffset = this.circumference * (1 - this._percent);\n      this.onChangeCallback(this._value);\n    }\n  }\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled || (this.progress != null && this.progress.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(private ref: ChangeDetectorRef, @Optional() @Inject(NOVO_PROGRESS_CONTAINER) public progress: any) {\n    // NovoProgressElement\n    this.progress = progress;\n  }\n\n  ngOnInit() {\n    if (this.indeterminate) {\n      this.striped = true;\n      this.animated = true;\n    }\n    if (this.indeterminate || this.flash) {\n      this._value = this.progress?.total || 100;\n    }\n    if (this.flash) {\n      this.progress.fitContainer = true;\n    }\n    if (this.progress) {\n      this._percent = this.progress.total > 0 ? this._value / this.progress.total : 0;\n      this.appearance = this.progress.appearance;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n}\n","// NG2\nimport { AfterContentInit, Component, ContentChildren, forwardRef, HostBinding, Input, QueryList } from '@angular/core';\nimport { NovoProgressBarElement } from './ProgressBar';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n@Component({\n    selector: 'novo-progress',\n    styleUrls: ['./Progress.scss'],\n    template: ` <ng-content></ng-content> `,\n    providers: [\n        {\n            provide: NOVO_PROGRESS_CONTAINER,\n            useExisting: NovoProgressElement,\n        },\n    ],\n    standalone: false\n})\nexport class NovoProgressElement implements AfterContentInit {\n  @Input()\n  color: string;\n  @Input() theme: string;\n  @Input() total: number = 100;\n  @Input() radius: number = 54;\n\n  @HostBinding('class.fit-container')\n  fitContainer: boolean = false;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  // Private vars for getters\n  private _appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  private _disabled: boolean = false;\n\n  @HostBinding('class')\n  @Input()\n  get appearance(): ProgressAppearance {\n    return this._appearance;\n  }\n  set appearance(value: ProgressAppearance) {\n    if (this._appearance !== value) {\n      this._appearance = value as ProgressAppearance;\n      this._updateBarAppearance();\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  @ContentChildren(forwardRef(() => NovoProgressBarElement), { descendants: true })\n  _bars: QueryList<NovoProgressBarElement>;\n\n  ngAfterContentInit() {\n    this._updateBarRadius();\n  }\n\n  private _updateBarAppearance(): void {\n    if (this._bars) {\n      this._bars.forEach((bar) => {\n        bar.appearance = this.appearance as ProgressAppearance;\n      });\n    }\n  }\n\n  private _updateBarRadius(): void {\n    if (this._bars) {\n      this._bars.forEach((bar, i) => {\n        bar.radius = this.radius - i * 5;\n      });\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoProgressElement } from './Progress';\nimport { NovoProgressBarElement } from './ProgressBar';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoProgressBarElement, NovoProgressElement],\n  exports: [NovoProgressBarElement, NovoProgressElement],\n})\nexport class NovoProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}