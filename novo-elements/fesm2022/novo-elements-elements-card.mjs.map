{"version":3,"file":"novo-elements-elements-card.mjs","sources":["../../../projects/novo-elements/src/elements/card/Card.ts","../../../projects/novo-elements/src/elements/card/Card.module.ts","../../../projects/novo-elements/src/elements/card/novo-elements-elements-card.ts"],"sourcesContent":["// NG2\nimport { Component, EventEmitter, HostBinding, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n// APP\nimport { NovoLabelService } from 'novo-elements/services';\nimport { BooleanInput } from 'novo-elements/utils';\n\n@Component({\n    selector: 'novo-card-actions',\n    template: '<ng-content></ng-content>',\n    standalone: false\n})\nexport class CardActionsElement {}\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n */\n@Component({\n    selector: 'novo-card-content, [novo-card-content], [novoCardContent]',\n    host: { class: 'novo-card-content', '[class.condensed]': 'condensed' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./CardContent.scss'],\n    standalone: false\n})\nexport class CardContentElement {\n  @Input() @BooleanInput() condensed: boolean = false;\n}\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n */\n@Component({\n    selector: 'novo-card-header, [novo-card-header], [novoCardHeader]',\n    host: { class: 'novo-card-header' },\n    template: `\n    <ng-content select=\"novo-avatar, [novo-avatar], novo-icon\"></ng-content>\n    <div class=\"novo-card-header-text\">\n      <ng-content select=\"novo-title, [novo-title], novo-text, novo-label, novo-caption\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <div class=\"novo-card-header-actions\">\n      <ng-content select=\"novo-action\"></ng-content>\n    </div>\n  `,\n    styleUrls: ['./CardHeader.scss'],\n    standalone: false\n})\nexport class CardHeaderElement {}\n\n@Component({\n    selector: 'novo-card-footer, [novo-card-footer], [novoCardFooter]',\n    host: { class: 'novo-card-footer' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./CardFooter.scss'],\n    standalone: false\n})\nexport class CardFooterElement {}\n\n@Component({\n    selector: 'novo-card',\n    host: {\n        class: 'novo-card',\n        '[attr.data-automation-id]': 'cardAutomationId',\n        '[class.loading]': 'loading || config.loading',\n    },\n    template: `\n    <!--Loading-->\n    <div class=\"card-loading-container\" *ngIf=\"loading || config.loading\">\n      <novo-loading theme=\"line\" [attr.data-automation-id]=\"cardAutomationId + '-loading'\"></novo-loading>\n    </div>\n    <!--Card Header-->\n    <header *ngIf=\"title || config.title\">\n      <div class=\"title\">\n        <!--Grabber Icon-->\n        <novo-icon\n          *ngIf=\"move || config.move\"\n          tooltip=\"{{ labels.move }}\"\n          tooltipPosition=\"bottom-right\"\n          [attr.data-automation-id]=\"cardAutomationId + '-move'\"\n          >move</novo-icon\n        >\n        <!--Card Title-->\n        <h3 [attr.data-automation-id]=\"cardAutomationId + '-title'\">\n          <span [tooltip]=\"iconTooltip\" tooltipPosition=\"right\"><i *ngIf=\"icon\" [ngClass]=\"iconClass\"></i></span>\n          {{ title || config.title }}\n        </h3>\n      </div>\n      <!--Card Actions-->\n      <div class=\"actions\" [attr.data-automation-id]=\"cardAutomationId + '-actions'\">\n        <ng-content select=\"novo-card-actions\"></ng-content>\n        <novo-button\n          theme=\"icon\"\n          icon=\"refresh\"\n          (click)=\"toggleRefresh()\"\n          *ngIf=\"refresh || config.refresh\"\n          [attr.data-automation-id]=\"cardAutomationId + '-refresh'\"\n          tooltip=\"{{ labels.refresh }}\"\n          tooltipPosition=\"bottom-left\"\n        ></novo-button>\n\n        <novo-button\n          theme=\"icon\"\n          icon=\"close-o\"\n          (click)=\"toggleClose()\"\n          *ngIf=\"close || config.close\"\n          [attr.data-automation-id]=\"cardAutomationId + '-close'\"\n          tooltip=\"{{ labels.close }}\"\n          tooltipPosition=\"bottom-left\"\n        ></novo-button>\n      </div>\n    </header>\n    <!--Content (transcluded)-->\n    <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\"></ng-content>\n    <!--Error/Empty Message-->\n    <p\n      class=\"card-message\"\n      *ngIf=\"!(loading || config.loading) && (message || config.message)\"\n      [attr.data-automation-id]=\"cardAutomationId + '-message'\"\n    >\n      <i *ngIf=\"messageIconClass\" [ngClass]=\"messageIconClass\"></i> <span [innerHtml]=\"message || config.message\"></span>\n    </p>\n    <!--Card Footer-->\n    <ng-content\n      *ngIf=\"!(loading || config.loading) && !(message || config.message)\"\n      select=\"footer,novo-card-footer,[novo-card-footer],[novoCardFooter]\"\n    ></ng-content>\n  `,\n    styleUrls: ['./Card.scss'],\n    standalone: false\n})\nexport class CardElement implements OnChanges, OnInit {\n  @Input()\n  padding: boolean = true;\n  @Input()\n  config: any = {};\n  @Input()\n  title: string;\n  @Input()\n  message: string;\n  @Input()\n  messageIcon: string;\n  @Input()\n  icon: string;\n  @Input()\n  iconTooltip: string;\n  @Input()\n  refresh: boolean;\n  @Input()\n  close: boolean;\n  @Input()\n  move: boolean;\n  @Input()\n  loading: boolean;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-card-inline')\n  inline: boolean;\n\n  @Input()\n  inset: string = 'none';\n  @HostBinding('class')\n  get hbInset() {\n    return `novo-card-inset-${this.inset}`;\n  }\n\n  @Output()\n  onClose: EventEmitter<void> = new EventEmitter();\n  @Output()\n  onRefresh: EventEmitter<void> = new EventEmitter();\n\n  cardAutomationId: string;\n  labels: NovoLabelService;\n  iconClass: string | null;\n  messageIconClass: string;\n\n  constructor(labels: NovoLabelService) {\n    this.labels = labels;\n  }\n\n  ngOnInit() {\n    this.config = this.config || {};\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    this.config = this.config || {};\n    this.cardAutomationId = `${(this.title || this.config.title || 'no-title').trim().toLowerCase().replace(/\\s/g, '-')}-card`;\n\n    const newIcon: string = this.icon || this.config.icon;\n    const newMessageIcon: string = this.messageIcon || this.config.messageIcon;\n    this.iconClass = newIcon ? `bhi-${newIcon}` : null;\n    this.messageIconClass = newMessageIcon ? `bhi-${newMessageIcon}` : null;\n  }\n\n  toggleClose() {\n    if (!this.config.onClose) {\n      this.onClose.next();\n    } else {\n      this.config.onClose();\n    }\n  }\n\n  toggleRefresh() {\n    if (!this.config.onRefresh) {\n      this.onRefresh.next();\n    } else {\n      this.config.onRefresh();\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonModule } from 'novo-elements/elements/button';\nimport { NovoIconModule } from 'novo-elements/elements/icon';\nimport { NovoLoadingModule } from 'novo-elements/elements/loading';\nimport { NovoTooltipModule } from 'novo-elements/elements/tooltip';\nimport { CardActionsElement, CardContentElement, CardElement, CardFooterElement, CardHeaderElement } from './Card';\n\n@NgModule({\n  imports: [CommonModule, NovoIconModule, NovoButtonModule, NovoLoadingModule, NovoTooltipModule],\n  declarations: [CardElement, CardActionsElement, CardContentElement, CardHeaderElement, CardFooterElement],\n  exports: [CardElement, CardActionsElement, CardContentElement, CardHeaderElement, CardFooterElement],\n})\nexport class NovoCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAWa,kBAAkB,CAAA;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,8EAHjB,2BAA2B,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;4FAG5B,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,QAAQ,EAAE,2BAA2B;AACrC,oBAAA,UAAU,EAAE;AACf,iBAAA;;AAGD;;AAEG;MAQU,kBAAkB,CAAA;AAP/B,IAAA,WAAA,GAAA;QAQ2B,IAAS,CAAA,SAAA,GAAY,KAAK;AACpD;+GAFY,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,yPAJjB,2BAA2B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,2DAAA,CAAA,EAAA,CAAA,CAAA;;AAKd,UAAA,CAAA;AAAf,IAAA,YAAY,EAAE;;AAA4B,CAAA,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;4FADzC,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAP9B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,2DAA2D,EAC/D,IAAA,EAAA,EAAE,KAAK,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,WAAW,EAAE,EAC5D,QAAA,EAAA,2BAA2B,cAEzB,KAAK,EAAA,MAAA,EAAA,CAAA,2DAAA,CAAA,EAAA;8BAGM,SAAS,EAAA,CAAA;sBAAjC;;AAGH;;AAEG;MAiBU,iBAAiB,CAAA;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,EAbhB,YAAA,EAAA,KAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;AASX,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,s0HAAA,CAAA,EAAA,CAAA,CAAA;;4FAIU,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAhB7B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wDAAwD,QAC5D,EAAE,KAAK,EAAE,kBAAkB,EAAE,EACzB,QAAA,EAAA;;;;;;;;;AASX,EAAA,CAAA,EAAA,UAAA,EAEa,KAAK,EAAA,MAAA,EAAA,CAAA,s0HAAA,CAAA,EAAA;;MAWR,iBAAiB,CAAA;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,iKAJhB,2BAA2B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,4xHAAA,CAAA,EAAA,CAAA,CAAA;;4FAI5B,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAP7B,SAAS;+BACI,wDAAwD,EAAA,IAAA,EAC5D,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAA,QAAA,EACzB,2BAA2B,EAAA,UAAA,EAEzB,KAAK,EAAA,MAAA,EAAA,CAAA,4xHAAA,CAAA,EAAA;;MA4ER,WAAW,CAAA;AA+BtB,IAAA,IACI,OAAO,GAAA;AACT,QAAA,OAAO,CAAmB,gBAAA,EAAA,IAAI,CAAC,KAAK,EAAE;;AAaxC,IAAA,WAAA,CAAY,MAAwB,EAAA;QA5CpC,IAAO,CAAA,OAAA,GAAY,IAAI;QAEvB,IAAM,CAAA,MAAA,GAAQ,EAAE;QA0BhB,IAAK,CAAA,KAAA,GAAW,MAAM;AAOtB,QAAA,IAAA,CAAA,OAAO,GAAuB,IAAI,YAAY,EAAE;AAEhD,QAAA,IAAA,CAAA,SAAS,GAAuB,IAAI,YAAY,EAAE;AAQhD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM;;IAGtB,QAAQ,GAAA;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE;;AAGjC,IAAA,WAAW,CAAC,OAAuB,EAAA;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE;AAC/B,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO;QAE1H,MAAM,OAAO,GAAW,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI;QACrD,MAAM,cAAc,GAAW,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW;AAC1E,QAAA,IAAI,CAAC,SAAS,GAAG,OAAO,GAAG,CAAO,IAAA,EAAA,OAAO,CAAE,CAAA,GAAG,IAAI;AAClD,QAAA,IAAI,CAAC,gBAAgB,GAAG,cAAc,GAAG,CAAO,IAAA,EAAA,cAAc,CAAE,CAAA,GAAG,IAAI;;IAGzE,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AACxB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;;aACd;AACL,YAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;;;IAIzB,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AAC1B,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;;aAChB;AACL,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;;;+GA5EhB,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,WAAW,EAjEV,YAAA,EAAA,KAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,yBAAA,EAAA,kBAAA,EAAA,eAAA,EAAA,2BAAA,EAAA,wBAAA,EAAA,aAAA,EAAA,OAAA,EAAA,cAAA,EAAA,EAAA,cAAA,EAAA,WAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DX,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,o3DAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,mBAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AA+BD,UAAA,CAAA;AAFC,IAAA,YAAY,EAAE;;AAEC,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;4FA3BL,WAAW,EAAA,UAAA,EAAA,CAAA;kBAxEvB,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,EACf,IAAA,EAAA;AACF,wBAAA,KAAK,EAAE,WAAW;AAClB,wBAAA,2BAA2B,EAAE,kBAAkB;AAC/C,wBAAA,iBAAiB,EAAE,2BAA2B;qBACjD,EACS,QAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DX,EAAA,CAAA,EAAA,UAAA,EAEa,KAAK,EAAA,MAAA,EAAA,CAAA,o3DAAA,CAAA,EAAA;qFAInB,OAAO,EAAA,CAAA;sBADN;gBAGD,MAAM,EAAA,CAAA;sBADL;gBAGD,KAAK,EAAA,CAAA;sBADJ;gBAGD,OAAO,EAAA,CAAA;sBADN;gBAGD,WAAW,EAAA,CAAA;sBADV;gBAGD,IAAI,EAAA,CAAA;sBADH;gBAGD,WAAW,EAAA,CAAA;sBADV;gBAGD,OAAO,EAAA,CAAA;sBADN;gBAGD,KAAK,EAAA,CAAA;sBADJ;gBAGD,IAAI,EAAA,CAAA;sBADH;gBAGD,OAAO,EAAA,CAAA;sBADN;gBAMD,MAAM,EAAA,CAAA;sBAHL;;sBAEA,WAAW;uBAAC,wBAAwB;gBAIrC,KAAK,EAAA,CAAA;sBADJ;gBAGG,OAAO,EAAA,CAAA;sBADV,WAAW;uBAAC,OAAO;gBAMpB,OAAO,EAAA,CAAA;sBADN;gBAGD,SAAS,EAAA,CAAA;sBADR;;;ACvKH;MAea,cAAc,CAAA;+GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAHV,YAAA,EAAA,CAAA,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,CAD9F,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,cAAc,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,CAEpF,EAAA,OAAA,EAAA,CAAA,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;gHAExF,cAAc,EAAA,OAAA,EAAA,CAJf,YAAY,EAAE,cAAc,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;;4FAInF,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;oBAC/F,YAAY,EAAE,CAAC,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;oBACzG,OAAO,EAAE,CAAC,WAAW,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;AACrG,iBAAA;;;ACdD;;AAEG;;;;"}