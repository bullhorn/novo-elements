{"version":3,"file":"novo-elements-elements-header.mjs","sources":["../../../projects/novo-elements/src/elements/header/Header.ts","../../../projects/novo-elements/src/elements/header/Header.module.ts","../../../projects/novo-elements/src/elements/header/novo-elements-elements-header.ts"],"sourcesContent":["import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BooleanInput } from 'novo-elements/utils';\n\n@Component({\n    selector: 'header-spacer',\n    template: `<ng-content></ng-content>`,\n    styleUrls: ['./HeaderSpacer.scss'],\n    standalone: false\n})\nexport class NovoHeaderSpacer {}\n\n@Component({\n    selector: 'utils',\n    template: `<ng-content></ng-content>`,\n    standalone: false\n})\nexport class NovoUtilsComponent {}\n\n@Component({\n    selector: 'util-action, novo-action',\n    template: `\n    <novo-button theme=\"icon\" [icon]=\"icon\" [size]=\"size\" [attr.inverse]=\"inverse\" [disabled]=\"disabled\">\n      <ng-content></ng-content>\n    </novo-button>\n  `,\n    host: {\n        class: 'novo-action',\n    },\n    standalone: false\n})\nexport class NovoUtilActionComponent {\n  @Input()\n  public icon: string;\n  @Input()\n  public size: string;\n  @Input()\n  public inverse: boolean;\n  @Input()\n  public disabled: boolean;\n}\n\n@Component({\n    selector: 'novo-header,header[theme],header[accent]',\n    template: `\n    <section>\n      <div class=\"header-title\">\n        <ng-content select=\"[prefix]\"></ng-content>\n        <ng-container *ngIf=\"title\">\n          <novo-icon class=\"header-icon\" *ngIf=\"icon\">{{ icon }}</novo-icon>\n          <div class=\"header-titles\">\n            <novo-title size=\"xl\">{{ title }}</novo-title>\n            <novo-title size=\"md\" *ngIf=\"subTitle\">{{ subTitle }}</novo-title>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!title\">\n          <ng-content select=\"novo-icon, [novo-icon]\"></ng-content>\n          <div class=\"header-titles\">\n            <ng-content select=\"h1, h2, h3, h4, h5, h6, small, novo-title, [novo-title], [novo-subtitle]\"></ng-content>\n          </div>\n        </ng-container>\n      </div>\n      <ng-content select=\"section\"></ng-content>\n      <span class=\"spacer\"></span>\n      <div class=\"header-actions\">\n        <ng-content select=\"novo-action,[novo-action]\"></ng-content>\n      </div>\n      <ng-content select=\"utils\"></ng-content>\n      <ng-content select=\"[suffix]\"></ng-content>\n    </section>\n    <ng-content></ng-content>\n  `,\n    styleUrls: ['./Header.scss'],\n    standalone: false\n})\nexport class NovoHeaderComponent {\n  @HostBinding('attr.role')\n  public role = 'heading';\n  @HostBinding('class')\n  public headerClass: string = 'novo-header';\n  @HostBinding('class.condensed')\n  @Input()\n  @BooleanInput()\n  public condensed: boolean = false;\n  @Input()\n  public title: string;\n  @Input()\n  public subTitle: string;\n  public inverse: string = 'inverse';\n\n  @Input()\n  public icon: string;\n\n  @Input()\n  public size: 'small' | 'medium' | 'large';\n\n  @HostBinding('class.header-size-small')\n  get hb_isSizeSmall(): boolean {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.header-size-large')\n  get hb_isSizeLarge(): boolean {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.header-size-default')\n  get hb_isSizeDefault(): boolean {\n    return !['small', 'large'].includes(this.size);\n  }\n\n  @HostBinding('attr.theme')\n  @Input()\n  set theme(theme: string) {\n    this._theme = theme;\n    this.inverse = theme === 'white' || theme === 'off-white' || theme === 'light' ? undefined : 'inverse';\n  }\n\n  get theme(): string {\n    return this._theme;\n  }\n\n  private _theme: string;\n\n  constructor(public element: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from 'novo-elements/elements/button';\nimport { NovoCommonModule } from 'novo-elements/elements/common';\nimport { NovoIconModule } from 'novo-elements/elements/icon';\nimport { NovoHeaderComponent, NovoHeaderSpacer, NovoUtilActionComponent, NovoUtilsComponent } from './Header';\n\n@NgModule({\n  imports: [CommonModule, NovoCommonModule, NovoIconModule, NovoButtonModule],\n  declarations: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n  exports: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n})\nexport class NovoHeaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}