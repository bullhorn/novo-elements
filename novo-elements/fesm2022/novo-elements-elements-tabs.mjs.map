{"version":3,"file":"novo-elements-elements-tabs.mjs","sources":["../../../projects/novo-elements/src/elements/tabs/Tabs.ts","../../../projects/novo-elements/src/elements/tabs/Tabs.module.ts","../../../projects/novo-elements/src/elements/tabs/novo-elements-elements-tabs.ts"],"sourcesContent":["// NG2\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { BooleanInput } from 'novo-elements/utils';\n\n@Component({\n    selector: 'novo-nav',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./tab-nav.scss'],\n    standalone: false\n})\nexport class NovoNavElement implements AfterContentChecked {\n  @Input()\n  theme: string = '';\n  @Input()\n  direction: string = '';\n  @Input()\n  outlet: any;\n  @Input()\n  router: string;\n  @HostBinding('class.condensed')\n  @Input()\n  @BooleanInput()\n  condensed: boolean = false;\n\n  items: Array<any> = [];\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._deactivateAllItems(this.items);\n        this._activateSelectedItem(indexToSelect);\n        this._showActiveContent(indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n\n      this._selectedIndex = indexToSelect;\n    }\n  }\n\n  select(item) {\n    const indexToSelect = this.items.indexOf(item);\n    // Deactivate all other tabs\n    this._deactivateAllItems(this.items);\n    this._activateSelectedItem(indexToSelect);\n    this._showActiveContent(indexToSelect);\n    this.selectedIndexChange.emit(indexToSelect);\n  }\n\n  add(item) {\n    if (this.items.length === 0) {\n      item.active = true;\n      // item.selected.next();\n    }\n    this.items.push(item);\n  }\n\n  private _activateSelectedItem(indexToSelect: number) {\n    const item = this.items[indexToSelect];\n    if (item) {\n      item.active = true;\n    }\n  }\n\n  private _showActiveContent(indexToSelect: number) {\n    if (this.outlet) {\n      this.outlet.show(indexToSelect);\n    }\n  }\n\n  private _deactivateAllItems(items: Array<any>) {\n    items.forEach((t) => {\n      if (t.active === true) {\n        // t.deselected.next();\n      }\n      t.active = false;\n    });\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    return Math.min(this.items.length - 1, Math.max(index || 0, 0));\n  }\n}\n\n@Component({\n    selector: 'novo-tab',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[attr.role]': 'tab',\n    },\n    template: `\n    <div #tablink class=\"novo-tab-link\">\n      <ng-content></ng-content>\n    </div>\n    <span class=\"indicator\"></span>\n  `,\n    styleUrls: ['./tab.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class NovoTabElement {\n  @HostBinding('attr.role')\n  public role = 'tab';\n\n  @Input()\n  active: boolean = false;\n\n  @Input()\n  color: string;\n\n  @Input()\n  @BooleanInput()\n  disabled: boolean = false;\n\n  @Output()\n  activeChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  onlyText = true;\n  @HostBinding('class.text-only')\n  get hb_textOnly() {\n    return this.onlyText;\n  }\n\n  @ViewChild('tablink')\n  tablink;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement, private el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.nav = nav;\n    this.nav.add(this);\n    const tablink = el.nativeElement.querySelector('.novo-tab-link');\n    if (tablink) {\n      for (let i = 0; i < tablink.childNodes.length; i++) {\n        if (tablink.childNodes[i].nodeType !== Node.TEXT_NODE) this.onlyText = false;\n      }\n    }\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.activeChange.emit(true);\n      this.nav.select(this);\n    }\n    this.cdr.detectChanges();\n  }\n}\n\n@Component({\n    selector: 'novo-tab-button',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n    },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./tab-button.scss'],\n    standalone: false\n})\nexport class NovoTabButtonElement {\n  @HostBinding('attr.role')\n  public role = 'tab';\n  @Input()\n  active: boolean = false;\n  @Input()\n  disabled: boolean = false;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement) {\n    this.nav = nav;\n    this.nav.add(this);\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.nav.select(this);\n    }\n  }\n}\n\n@Component({\n    selector: 'novo-tab-link',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n    },\n    template: `\n    <div class=\"novo-tab-link\">\n      <ng-content></ng-content>\n    </div>\n    <span class=\"indicator\"></span>\n  `,\n    styleUrls: ['./tab.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class NovoTabLinkElement implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'tab';\n  @Input()\n  active: boolean = false;\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  spy: string;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement, private router: Router, private cdr: ChangeDetectorRef, @Optional() private link?: RouterLink) {\n    this.nav = nav;\n    this.nav.add(this);\n  }\n\n  ngOnInit(): void {\n    if (this.isLinkActive(this.link)) {\n      this.nav.select(this);\n    }\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.nav.select(this);\n      if (this.spy) {\n        const el = document.querySelector(`#${this.spy}`);\n        el?.scrollIntoView(true);\n      }\n    }\n  }\n\n  private isLinkActive(link: RouterLink) {\n    return link && link.urlTree ? this.router.isActive(link.urlTree, false) : false;\n  }\n}\n\n@Component({\n    selector: 'novo-nav-outlet',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./tab-outlet.scss'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: false\n})\nexport class NovoNavOutletElement {\n  items: Array<any> = [];\n\n  show(index) {\n    const item = this.items[index];\n\n    /**\n     * Deactivates other tab items\n     * @param items - deactivated items\n     */\n    function _deactivateAllItems(items) {\n      items.forEach((t) => {\n        if (t.active === true) {\n          // t.deselected.next();\n        }\n        t.active = false;\n      });\n    }\n\n    _deactivateAllItems(this.items);\n    item.active = true;\n  }\n\n  add(item) {\n    if (this.items.length === 0) {\n      item.active = true;\n    }\n    this.items.push(item);\n  }\n}\n\n@Component({\n    selector: 'novo-nav-content',\n    host: {\n        '[class.active]': 'active',\n    },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./tab-content.scss'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: false\n})\nexport class NovoNavContentElement {\n  @Input()\n  active: boolean = false;\n\n  constructor(outlet: NovoNavOutletElement) {\n    outlet.add(this);\n  }\n}\n\n@Component({\n    selector: 'novo-nav-header',\n    host: {\n        '[class.active]': 'active',\n        '(click)': 'show($event)',\n    },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./tab-header.scss'],\n    standalone: false\n})\nexport class NovoNavHeaderElement {\n  @HostBinding('attr.role')\n  public role = 'tabpanel';\n  @Input()\n  active: boolean = false;\n  @Input('for')\n  forElement: any;\n  outlet: any;\n\n  constructor(outlet: NovoNavOutletElement) {\n    this.active = this.active || false;\n    this.outlet = outlet;\n  }\n\n  show(event?: any) {\n    try {\n      const INDEX = this.outlet.items.indexOf(this.forElement);\n      if (INDEX > -1) {\n        this.outlet.show(INDEX);\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport {\n  NovoNavContentElement,\n  NovoNavElement,\n  NovoNavHeaderElement,\n  NovoNavOutletElement,\n  NovoTabButtonElement,\n  NovoTabElement,\n  NovoTabLinkElement,\n} from './Tabs';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NovoNavElement,\n    NovoTabElement,\n    NovoTabButtonElement,\n    NovoTabLinkElement,\n    NovoNavOutletElement,\n    NovoNavContentElement,\n    NovoNavHeaderElement,\n  ],\n  exports: [\n    NovoNavElement,\n    NovoTabElement,\n    NovoTabButtonElement,\n    NovoTabLinkElement,\n    NovoNavOutletElement,\n    NovoNavContentElement,\n    NovoNavHeaderElement,\n  ],\n})\nexport class NovoTabModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}