import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { Subject } from 'rxjs';
import { NovoLabelService } from 'novo-elements/services';
import { IDataTablePaginationEvent } from '../interfaces';
import { DataTableState } from '../state/data-table-state.service';
import * as i0 from "@angular/core";
export declare class NovoDataTablePagination<T> implements OnInit, OnDestroy {
    private changeDetectorRef;
    labels: NovoLabelService;
    private state;
    theme: string;
    get page(): number;
    set page(page: number);
    _page: number;
    get pageSize(): number;
    set pageSize(pageSize: number);
    private _pageSize;
    dataFeatureId: string;
    get pageSizeOptions(): any[];
    set pageSizeOptions(pageSizeOptions: any[]);
    private _pageSizeOptions;
    canSelectAll: boolean;
    allMatchingSelected: boolean;
    loading: boolean;
    errorLoading: boolean;
    paginationRefreshSubject: Subject<void>;
    showPaginationTotalRecordCount: boolean;
    get length(): number;
    set length(length: number);
    _length: number;
    pageChange: EventEmitter<IDataTablePaginationEvent>;
    displayedPageSizeOptions: {
        value: string;
        label: string;
    }[];
    longRangeLabel: string;
    shortRangeLabel: string;
    pages: {
        number: number;
        text: string;
        active: boolean;
    }[];
    private resetSubscription;
    totalPages: number;
    private _initialized;
    constructor(changeDetectorRef: ChangeDetectorRef, labels: NovoLabelService, state: DataTableState<T>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    selectPage(page: any): void;
    nextPage(): void;
    previousPage(): void;
    hasPreviousPage(): boolean;
    hasNextPage(): boolean;
    changePageSize(pageSize: number): void;
    private updateDisplayedPageSizeOptions;
    private emitPageEvent;
    private calculateTotalPages;
    private makePage;
    private getPages;
    static ɵfac: i0.ɵɵFactoryDeclaration<NovoDataTablePagination<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NovoDataTablePagination<any>, "novo-data-table-pagination", never, { "theme": { "alias": "theme"; "required": false; }; "page": { "alias": "page"; "required": false; }; "pageSize": { "alias": "pageSize"; "required": false; }; "dataFeatureId": { "alias": "dataFeatureId"; "required": false; }; "pageSizeOptions": { "alias": "pageSizeOptions"; "required": false; }; "canSelectAll": { "alias": "canSelectAll"; "required": false; }; "allMatchingSelected": { "alias": "allMatchingSelected"; "required": false; }; "loading": { "alias": "loading"; "required": false; }; "errorLoading": { "alias": "errorLoading"; "required": false; }; "paginationRefreshSubject": { "alias": "paginationRefreshSubject"; "required": false; }; "showPaginationTotalRecordCount": { "alias": "showPaginationTotalRecordCount"; "required": false; }; "length": { "alias": "length"; "required": false; }; }, { "pageChange": "pageChange"; }, never, never, false, never>;
}
