import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { BasePickerResults } from 'novo-elements/elements/picker';
import { GlobalRef } from 'novo-elements/services';
import { Observable } from 'rxjs';
import { GooglePlacesService } from './places.service';
import * as i0 from "@angular/core";
export interface Settings {
    geoPredictionServerUrl?: string;
    geoLatLangServiceUrl?: string;
    geoLocDetailServerUrl?: string;
    geoCountryRestriction?: any;
    geoTypes?: any;
    geoLocation?: any;
    geoRadius?: number;
    serverResponseListHierarchy?: any;
    serverResponseatLangHierarchy?: any;
    serverResponseDetailHierarchy?: any;
    resOnSearchButtonClickOnly?: boolean;
    useGoogleGeoApi?: boolean;
    inputPlaceholderText?: string;
    inputString?: string;
    showSearchButton?: boolean;
    showRecentSearch?: boolean;
    showCurrentLocation?: boolean;
    recentStorageName?: string;
    noOfRecentSearchSave?: number;
    currentLocIconUrl?: string;
    searchIconUrl?: string;
    locationIconUrl?: string;
}
export declare class PlacesListComponent extends BasePickerResults implements OnInit, OnChanges, ControlValueAccessor {
    private platformId;
    private _elmRef;
    private _global;
    private _googlePlacesService;
    private cdr;
    userSettings: Settings;
    termChange: EventEmitter<any>;
    select: EventEmitter<any>;
    locationInput: string;
    gettingCurrentLocationFlag: boolean;
    dropdownOpen: boolean;
    recentDropdownOpen: boolean;
    isSettingsError: boolean;
    settingsErrorMsg: string;
    settings: Settings;
    private moduleinit;
    private selectedDataIndex;
    private recentSearchData;
    private userSelectedOption;
    private defaultSettings;
    model: any;
    onModelChange: Function;
    onModelTouched: Function;
    constructor(platformId: Object, _elmRef: ElementRef, _global: GlobalRef, _googlePlacesService: GooglePlacesService, cdr: ChangeDetectorRef);
    ngOnInit(): any;
    ngOnChanges(): any;
    writeValue(model: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    searchinputClickCallback(event: any): any;
    searchinputCallback(event: any): any;
    activeListNode(index: number): any;
    selectedListNode(event: MouseEvent, index: number): any;
    selectMatch(match: any): any;
    closeAutocomplete(event: any): any;
    userQuerySubmit(selectedOption?: any): any;
    currentLocationSelected(): any;
    private moduleInit;
    private processSearchQuery;
    private setUserSettings;
    private getListQuery;
    private extractServerList;
    private updateListItem;
    private showRecentSearch;
    private getCurrentLocationInfo;
    private getPlaceLocationInfo;
    private setRecentLocation;
    private getRecentLocations;
    onKeyDown(event: KeyboardEvent): void;
    search(term: any, mode?: any): Observable<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PlacesListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PlacesListComponent, "google-places-list", never, { "userSettings": { "alias": "userSettings"; "required": false; }; }, { "termChange": "termChange"; "select": "select"; }, never, never, false, never>;
}
