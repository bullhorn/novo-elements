{"version":3,"sources":["./demo/$_lazy_route_resource lazy namespace object","./demo/app/app.component.ts","./demo/app/app.module.ts","./demo/environments/environment.ts","./demo/main.ts","./dist/chomsky/fesm2015/chomsky.js","./dist/novo-elements/fesm2015/novo-elements.js","./dist/novo-examples/fesm2015/novo-examples.js","./demo/app/app.component.html"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,6E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA,MAAM;AACsD;AACnB;AACzC,SAAS;AAC0D;AAMnE,IAAa,YAAY,GAAzB,MAAa,YAAY;IASvB,YAAY,MAAc,EAAE,gBAAkC,EAAE,OAAyB,EAAE,YAA8B;QARzH,aAAQ,GAAY,KAAK,CAAC;QASxB,OAAO,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;QAC/C,YAAY,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;QAEpD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtG,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7G,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3G,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,CAAC,EAAE,CAAC;QACX,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO,CAAC,CAAC;SACV;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;CACF;;YA/BqB,sDAAM;YAAoB,8DAAgB;YAAW,8DAAgB;YAAgB,8DAAgB;;AAT9G,YAAY;IAJxB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,oKAAmC;KACpC,CAAC;qCAUoB,sDAAM,EAAoB,8DAAgB,EAAW,8DAAgB,EAAgB,8DAAgB;GAT9G,YAAY,CAwCxB;AAxCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVzB,MAAM;AACmC;AACiB;AACqB;AACX;AACF;AACT;AACA;AAEzD,SAAS;AAYc;AAEwB;AACW;AAEnD,SAAS,0BAA0B,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM;IAC9E,MAAM,mBAAmB,GAAG,IAAI,iEAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC3F,mBAAmB,CAAC,OAAO,GAAG;QAC5B,IAAI,EAAE,gBAAgB;KACvB,CAAC;IACF,OAAO,mBAAmB,CAAC;AAC7B,CAAC;AAEM,SAAS,uBAAuB,CAAC,IAAI;IAC1C,IAAI,CAAC,qEAAW,CAAC,UAAU,EAAE;QAC3B,OAAO,IAAI,iEAAmB,CAAC,IAAI,CAAC,CAAC;KACtC;IACD,OAAO,IAAI,8DAAgB,EAAE,CAAC;AAChC,CAAC;AAoCD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IAlCrB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2DAAY,CAAC;QAC5B,OAAO,EAAE;YACP,MAAM;YACN,4FAAuB;YACvB,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,kEAAmB;YACnB,sEAAe;YACf,SAAS;YACT,gEAAkB;YAClB,kEAAoB,CAAC,OAAO,EAAE;YAC9B,MAAM;YACN,sEAAwB;SACzB;QACD,SAAS,EAAE;YACT,uBAAuB;YACvB,uDAAS;YACT,8DAAgB;YAChB;gBACE,OAAO,EAAE,iEAAmB;gBAC5B,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAE,CAAC,8DAAgB,EAAE,8DAAgB,EAAE,uDAAS,EAAE,+DAAU,EAAE,8DAAgB,CAAC;aACpF;YACD;gBACE,OAAO,EAAE,8DAAgB;gBACzB,UAAU,EAAE,uBAAuB;gBACnC,IAAI,EAAE,CAAC,+DAAU,CAAC;aACnB;SACF;QACD,eAAe,EAAE,CAAC,2DAAY,CAAC;QAC/B,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;AC3EtB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE;KACrB,eAAe,CAAC,yDAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACZpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiG;AACxD;AACgB;;AAEzD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,uCAAuC;AACvC;AACA,4BAA4B,iBAAiB;AAC7C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA,sBAAsB;AACtB,wBAAwB;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC;AACpC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,GAAG,mBAAmB;AAChD,0BAA0B;AAC1B,mBAAmB,EAAE;AACrB,mCAAmC,qCAAqC;AACxE;AACA;AACA,sEAAsE,qDAAqD;AAC3H;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC;AACvC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,kBAAkB,eAAe,GAAG,iBAAiB,EAAE,UAAU;AACjE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iDAAiD;AACjD,oCAAoC,IAAI,IAAI;AAC5C,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,eAAe,iDAAI;AACnB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2FAA2F,OAAO;AAClG,iDAAiD;AACjD;AACA,iBAAiB;AACjB,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,qFAAqF,aAAa;AAClG,6CAA6C,IAAI;AACjD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,cAAc,EAAE,OAAO;AAC1D;AACA;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sEAAY;AACxB;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,iBAAiB,OAAO,yDAAW,wBAAwB;AAC3D;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE6F;AAC7F;;;;;;;;;;;;;ACjjya;AACnS;AACjH;AACO;AACG;AACM;AACuC;AACC;AACO;AACyB;AAC8b;AAClc;AACrB;AAC3B;AACkF;AAClF;AAC6K;AACzK;AACR;AACa;AACd;AACwC;AACA;AACvB;AACD;AACsC;AACvD;;AAEnD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,0CAA0C,MAAM;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,kDAAkD,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mDAAmD,IAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,8DAA8D,IAAI,GAAG,OAAO;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC;AACvC,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB,2CAA2C;AAC3C;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB,qBAAqB,6BAA6B;AACtH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,oDAAM,EAAE;AAC5B;AACA,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uHAAuH,SAAS;AAChI;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,0BAA0B,iEAAK,EAAE,eAAe;AAC7E,wBAAwB,iEAAK,YAAY,iEAAK,EAAE,eAAe;AAC/D,wBAAwB,sEAAU;AAClC,4BAA4B,iEAAK;AACjC;AACA;AACA,6BAA6B;AAC7B,4BAA4B,mEAAO;AACnC;AACA,wBAAwB,sEAAU;AAClC,4BAA4B,iEAAK;AACjC;AACA;AACA,6BAA6B;AAC7B,4BAA4B,mEAAO;AACnC;AACA;AACA;AACA,2CAA2C,mBAAmB,WAAW,iBAAiB,eAAe,0DAA0D,iBAAiB,mBAAmB,0BAA0B,sCAAsC,uBAAuB,yBAAyB,6BAA6B,sBAAsB,yBAAyB,6BAA6B,yBAAyB,yBAAyB,6BAA6B,yBAAyB,yBAAyB,6BAA6B,yBAAyB,kBAAkB,mGAAmG,mBAAmB,kBAAkB,qBAAqB,6BAA6B,YAAY,gBAAgB,uBAAuB,YAAY,wBAAwB,YAAY,uBAAuB,WAAW,yBAAyB,qBAAqB,4BAA4B,oBAAoB,qBAAqB,SAAS,yBAAyB,kCAAkC,yBAAyB,iCAAiC,yBAAyB,oCAAoC,yBAAyB,oCAAoC,yBAAyB,iCAAiC,yBAAyB,eAAe,oBAAoB,QAAQ,SAAS,uCAAuC,yBAAyB,sCAAsC,yBAAyB,yCAAyC,yBAAyB,yCAAyC,yBAAyB,kCAAkC,yBAAyB,cAAc,oBAAoB,OAAO,SAAS,wCAAwC,yBAAyB,uCAAuC,yBAAyB,0CAA0C,yBAAyB,0CAA0C,yBAAyB,+BAA+B,iBAAiB,qBAAqB,MAAM,4BAA4B,qCAAqC,yBAAyB,oCAAoC,yBAAyB,uCAAuC,yBAAyB,uCAAuC,yBAAyB,oCAAoC,4BAA4B,eAAe,iBAAiB,QAAQ,MAAM,0CAA0C,4BAA4B,yCAAyC,4BAA4B,4CAA4C,4BAA4B,4CAA4C,4BAA4B,qCAAqC,4BAA4B,cAAc,iBAAiB,OAAO,MAAM,2CAA2C,4BAA4B,0CAA0C,4BAA4B,6CAA6C,4BAA4B,6CAA6C,4BAA4B,6BAA6B,0BAA0B,mBAAmB,mBAAmB,QAAQ,WAAW,mCAAmC,0BAA0B,kCAAkC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,8BAA8B,OAAO,WAAW,2BAA2B,kBAAkB,mBAAmB,oCAAoC,2BAA2B,mCAAmC,2BAA2B,sCAAsC,2BAA2B,sCAAsC,2BAA2B,wBAAwB,aAAa,kBAAkB,eAAe,6BAA6B,sBAAsB;AACv9H,aAAa;AACb;AACA,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,kEAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mEAAe;AACxD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,uCAAuC,GAAG,sCAAsC;AACnH,mCAAmC,oCAAoC,GAAG,mCAAmC;AAC7G,mCAAmC,oCAAoC,GAAG,wCAAwC;AAClH,mCAAmC,sCAAsC,GAAG,sCAAsC;AAClH,mCAAmC,oCAAoC,GAAG,yCAAyC;AACnH,mCAAmC,sCAAsC,GAAG,qCAAqC;AACjH,mCAAmC,mCAAmC,GAAG,wCAAwC;AACjH,mCAAmC,iCAAiC,GAAG,sCAAsC;AAC7G,mCAAmC,mCAAmC,GAAG,sCAAsC;AAC/G,mCAAmC,sCAAsC,GAAG,mCAAmC;AAC/G,mCAAmC,iCAAiC,GAAG,wCAAwC;AAC/G,mCAAmC,oCAAoC,GAAG,qCAAqC;AAC/G;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,YAAY,OAAO,mDAAK,0BAA0B;AAClD,YAAY,OAAO,mDAAK,0BAA0B;AAClD,cAAc,OAAO,mDAAK,4BAA4B;AACtD,iBAAiB,OAAO,mDAAK,+BAA+B;AAC5D,eAAe,OAAO,mDAAK,6BAA6B;AACxD,cAAc,OAAO,mDAAK,4BAA4B;AACtD,cAAc,OAAO,mDAAK,4BAA4B;AACtD,eAAe,OAAO,mDAAK,6BAA6B;AACxD,mBAAmB,OAAO,mDAAK,iCAAiC;AAChE,oBAAoB,OAAO,mDAAK,kCAAkC;AAClE,oBAAoB,OAAO,0DAAY,yBAAyB;AAChE,oBAAoB,OAAO,0DAAY,yBAAyB;AAChE;AACA,WAAW,EAuDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,8BAA8B,IAAI;AAClC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+BAA+B,MAAM;AACrC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACbeAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,iBAAiB,IAAI;AAC/C,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,oBAAoB,IAAI;AAClD,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB,gBAAgB;AACpF,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAmD;AACrF;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,wBAAwB,OAAO,oDAAM,EAAE;AACvC;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iBAAiB,iDAAO;AACxB,kBAAkB,kDAAQ;AAC1B,mBAAmB,mDAAS;AAC5B,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,6DAAW;AAC1B;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,2DAAS;AACxB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,4CAA4C,kEAAkE;AAC9G,2CAA2C,iHAAiH;AAC5J,0CAA0C,sHAAsH;AAChK;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,WAAW,EAOV;AACD;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAWV;AACD;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAKV;AACD;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAUV;AACD;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EA2BV;AACD;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAeV;AACD;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAGV;AACD;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAWV;AACD;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAOV;AACD;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAeV;AACD;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAOV;AACD;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAOV;AACD;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAGV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAOV;AACD;AACA;AACA;AACA,kCAAkC;AAClC,WAAW,EAOV;AACD;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAeV;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,+BAA+B,wCAAwC;AACvE,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,kEAAgB,CAAC,4DAAU,CAAC,0DAAQ,iBAAiB,4DAAU;AAC9E;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mCAAmC,yCAAyC;AAC5E;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA,eAAe,EAAE;AACjB,qBAAqB,kEAAgB;AACrC,uCAAuC,mDAAmD;AAC1F;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,0BAA0B,gCAAgC;AAC1D,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAY,6BAA6B,8DAAY;AAC7D;AACA;AACA,QAAQ,8DAAY,2BAA2B,8DAAY;AAC3D;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,4BAA4B,iCAAiC;AAC7D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4BAA4B,4DAAU,CAAC,0DAAQ,CAAC,4DAAU;AAC1D,mBAAmB,EAAE;AACrB,0BAA0B,4DAAU,CAAC,0DAAQ,CAAC,+DAAa;AAC3D,eAAe,yDAAO,2BAA2B,0DAAQ;AACzD,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,qBAAqB,OAAO;AAC5B,eAAe,EAAE;AACjB,kBAAkB,4DAAU;AAC5B;AACA;AACA;AACA,iBAAiB,2DAAS;AAC1B;AACA,+CAA+C,wDAAM;AACrD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,4BAA4B,yCAAyC;AACrE,eAAe,EAAE;AACjB,kBAAkB,6DAAW,YAAY,eAAe;AACxD,eAAe,EAAE;AACjB;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,EAAE;AACrB,qBAAqB,yDAAO;AAC5B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,sBAAsB,qGAAqG;AAC3H;AACA;AACA;AACA,eAAe,EAAE;AACjB,4BAA4B,6DAAW,YAAY,eAAe;AAClE,eAAe,EAAE;AACjB,0BAA0B,2DAAS,YAAY,eAAe;AAC9D,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,iEAAiE,iEAAiE;AAClI;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,+CAA+C,gDAAgD;AAC/F,mBAAmB,EAAE;AACrB;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,qEAAmB;AACpD;AACA,mBAAmB,qEAAmB;AACtC;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,4DAAU,CAAC,0DAAQ,CAAC,4DAAU;AAC1D,mBAAmB,EAAE;AACrB,0BAA0B,4DAAU,CAAC,0DAAQ,CAAC,+DAAa,CAAC,0DAAQ;AACpE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,qEAAmB;AAC5C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qBAAqB,qEAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA,eAAe,EAAE;AACjB,kBAAkB,6DAAW,CAAC,8DAAY,aAAa,eAAe;AACtE,eAAe,EAAE;AACjB,gBAAgB,2DAAS,CAAC,4DAAU,aAAa,eAAe;AAChE,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA,mBAAmB,KAAK,kEAAgB,iBAAiB;AACzD,mBAAmB,EAAE;AACrB,qBAAqB,yDAAO;AAC5B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,EAAE,iBAAiB,OAAO;AAC9D,uBAAuB,EAAE;AACzB;AACA;AACA,6BAA6B,4DAAU;AACvC,2BAA2B,0DAAQ;AACnC,aAAa;AACb,0BAA0B,6DAAW;AACrC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,qBAAqB,mFAAmF;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,wBAAwB,4DAAU,CAAC,0DAAQ,CAAC,4DAAU;AACtD,eAAe,EAAE;AACjB,sBAAsB,4DAAU,CAAC,0DAAQ,CAAC,+DAAa,CAAC,0DAAQ;AAChE,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,qEAAmB;AACtC;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qBAAqB,qEAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qBAAqB,4DAAU;AAC/B,mBAAmB,0DAAQ;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,6BAA6B,4CAA4C;AACzE,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,wBAAwB,4DAAU,CAAC,0DAAQ,CAAC,4DAAU;AACtD,eAAe,EAAE;AACjB,sBAAsB,4DAAU,CAAC,0DAAQ,CAAC,+DAAa,CAAC,0DAAQ;AAChE,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,2BAA2B,4DAAU;AACrC,mBAAmB,kBAAkB;AACrC,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kBAAkB;AACzC,uBAAuB,EAAE;AACzB,yBAAyB,4DAAU,CAAC,0DAAQ;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,yDAAO;AAC5B,mBAAmB,EAAE;AACrB,sBAAsB,0DAAQ;AAC9B,mBAAmB,EAAE;AACrB,qBAAqB,yDAAO;AAC5B,mBAAmB,EAAE;AACrB,yBAAyB,yDAAO,CAAC,0DAAQ,CAAC,yDAAO;AACjD,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,qEAAmB;AACnD,qBAAqB,4DAAU;AAC/B;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD,iDAAiD,+BAA+B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA,WAAW,EAyFV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,2DAAS;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,2DAAS;AAC1C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+CAA+C;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,sEAAsE,kBAAkB;AACxF,4CAA4C,gCAAgC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB,qBAAqB;AACrF,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU,kCAAkC,UAAU;AACxF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,uCAAuC,yCAAyC;AAChF;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,yCAAyC;;AAEhF;;AAEA;AACA;AACA,gCAAgC,KAAK,qDAAqD,KAAK;AAC/F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA,WAAW,EA8IV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA,uCAAuC,oBAAoB,iDAAiD;AAC5G,eAAe,mCAAmC;AAClD,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA,kCAAkC,+EAA+E;AACjH;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA,uCAAuC,wBAAwB;AAC/D,6CAA6C,8BAA8B;AAC3E;AACA;AACA;AACA;AACA,kCAAkC,mFAAmF;AACrH;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,uBAAuB;AACpE;AACA,yCAAyC,wDAAwD;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU,kCAAkC,UAAU;AACxF;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,uCAAuC,wCAAwC;AAC/E;;AAEA;;AAEA;AACA;AACA,gCAAgC,KAAK,qDAAqD,KAAK;AAC/F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,2BAA2B,OAAO,mDAAK,EAAE;AACzC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA,WAAW,EAyIV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA,2CAA2C,sBAAsB;AACjE,iDAAiD,6BAA6B;AAC9E;AACA;AACA;AACA;AACA;AACA,kCAAkC,iFAAiF;AACnH;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,kBAAkB;AAC5C;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,gBAAgB;AAC1C;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,gCAAgC;AAChF;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,mBAAmB;AAC7C;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,eAAe;AACzC;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,gBAAgB;AAC1C;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,qBAAqB;AAC/C;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA,gDAAgD,gCAAgC;AAChF;AACA;AACA;AACA,KAAK,OAAO,kDAAI,UAAU,2BAA2B;AACrD;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAOV;AACD;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAGV;AACD;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yEAAyE,UAAU,OAAO,MAAM;AAChG;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yEAAyE,UAAU;AACnF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0EAA0E,UAAU,OAAO,MAAM;AACjG;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0EAA0E,UAAU;AACpF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,MAAM,MAAM,MAAM;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,MAAM,oCAAoC,MAAM;AACtF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd,mBAAmB,EAAE;AACrB;AACA,kBAAkB,eAAe,GAAG,iBAAiB,EAAE,UAAU;AACjE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oEAAoE,kBAAkB;AACtF;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kEAAkE,gBAAgB;AAClF;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,eAAe,KAAK,SAAS,GAAG,OAAO,kBAAkB,eAAe,KAAK,SAAS,MAAM,OAAO;AAC7H;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uDAAuD,gBAAgB,SAAS,gBAAgB;AAChG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uDAAS,IAAI;AAC5F;AACA,WAAW,EA6LV;AACD,WAAW,EAAE;AACb,yCAAyC,wDAAwD;;AAEjG;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,kFAAkF;AACrH,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,0CAA0C,QAAQ;AAClD,wDAAwD,eAAe;AACvE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,wFAAwF,uBAAuB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA,0LAA0L,uBAAuB;AACjN;AACA;AACA;AACA;AACA,0LAA0L,kBAAkB;AAC5M,iLAAiL,gBAAgB;AACjM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,oDAAM,EAAE;AAC9B,iBAAiB,OAAO,oDAAM,EAAE;AAChC;AACA,WAAW,EAmCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,yDAAW,6BAA6B;AAC/D;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,yBAAyB,OAAO,6DAAe,iCAAiC,OAAO,yDAAW,EAAE,IAAI;AACxG,uBAAuB,OAAO,6DAAe,+BAA+B,OAAO,yDAAW,EAAE,IAAI;AACpG,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kDAAkD;AAClD,4CAA4C;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY,IAAI,iCAAiC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D,sHAAsH,kBAAkB;AACxI,oIAAoI,kBAAkB;AACtJ;AACA;AACA;AACA,4CAA4C,yCAAyC;AACrF;AACA;AACA;AACA;AACA,gFAAgF,2BAA2B;AAC3G,oGAAoG,cAAc;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,eAAe,OAAO,oDAAM,2BAA2B;AACvD,wBAAwB,OAAO,oDAAM,EAAE;AACvC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA,WAAW,EA2BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,yDAAW,8BAA8B,GAAG,OAAO,mDAAK,EAAE;AAClF;AACA,WAAW,EAaV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EASV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAGV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,kBAAkB,OAAO,mDAAK,kBAAkB;AAChD;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAQV;AACD;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,iEAAiE,sDAAQ,SAAS,oBAAoB;AACtG;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,OAAO,sEAAwB;AACpC;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EAaV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,oFAAqB;AACxD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,mEAAmE;AAC9F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,mBAAmB;AACzH;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,uBAAuB;AAC5B,KAAK;AACL;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,YAAY,OAAO,mDAAK,EAAE;AAC1B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,eAAe,OAAO,oDAAM,EAAE;AAC9B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,uDAAS,qBAAqB,OAAO,8DAAgB,iBAAiB,IAAI;AAChG,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAuDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,mDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA,eAAe,mDAAK,CAAC,uDAAS,8BAA8B,uDAAS,kCAAkC,8DAAM;AAC7G,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mEAAmE,6DAAK;AACxE;AACA;AACA,gBAAgB,mDAAK;AACrB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,6DAAK;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,kEAAc;AACxC;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,kEAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,sCAAsC,GAAG,wCAAwC;AAC3I,uCAAuC,mCAAmC,GAAG,qCAAqC;AAClH,uCAAuC,sCAAsC,GAAG,wCAAwC;AACxH;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sDAAsD,mBAAmB,GAAG,8BAA8B;AAC1G;AACA;AACA,sDAAsD,wCAAwC,GAAG,uCAAuC;AACxI;AACA;AACA;AACA,uCAAuC,0BAA0B,GAAG,wCAAwC;AAC5G,uCAAuC,wCAAwC,GAAG,uCAAuC;AACzH,uCAAuC,qCAAqC,GAAG,0CAA0C;AACzH;AACA;AACA,2CAA2C,6BAA6B,GAAG,wCAAwC;AACnH,2CAA2C,wCAAwC,GAAG,0CAA0C;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,gBAAgB,OAAO,uDAAS,SAAS,yDAAW,GAAG,gBAAgB,IAAI;AAC3E,aAAa,OAAO,uDAAS,mBAAmB,gBAAgB,IAAI;AACpE,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,mDAAK,EAAE;AAC5B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,oDAAM,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EA4DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW,EAAE,kEAAa,EAAE,uEAAe;AACnF;AACA,wDAAwD,uEAAe;AACvE,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,uBAAuB;AACnD;AACA,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,kDAAI;AACnB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EA2CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,gEAAgE,qBAAqB;AACrF;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,SAAS,+DAAS;AAClB;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,oFAAqB;AACxD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,uDAAS,yCAAyC,oEAAY,OAAO,4EAAoB;AACvH;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,uDAAS,yCAAyC,oEAAY,OAAO,4EAAoB;AAC1H;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC,gCAAgC,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC,0CAA0C,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC,uCAAuC,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB,GAAG,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB,eAAe,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,uBAAuB;AAC5B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,uDAAS,qBAAqB,OAAO,8DAAgB,gBAAgB,IAAI;AAC/F,cAAc,OAAO,mDAAK,EAAE;AAC5B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,YAAY,OAAO,mDAAK,EAAE;AAC1B,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,eAAe,OAAO,oDAAM,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,iBAAiB,OAAO,uDAAS,wCAAwC,eAAe,IAAI;AAC5F,aAAa,OAAO,uDAAS,mBAAmB,eAAe,IAAI;AACnE;AACA,WAAW,EAyEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gEAAgE,oDAAoD;AACpH;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB,GAAG,gBAAgB;AACtE;AACA,8BAA8B,kBAAkB;AAChD;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA,8BAA8B,UAAU,KAAK,mBAAmB;AAChE;AACA,+BAA+B,EAAE;AACjC,mCAAmC,UAAU;AAC7C;AACA;AACA,uCAAuC,MAAM,KAAK,2BAA2B,GAAG,0BAA0B,KAAK,sBAAsB;AACrI;AACA;AACA,uCAAuC,MAAM,KAAK,sBAAsB;AACxE;AACA;AACA,uCAAuC,MAAM,KAAK,2BAA2B,GAAG,0BAA0B;AAC1G;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,+EAA+E,sBAAsB;AACrG,+EAA+E,+BAA+B;AAC9G;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,eAAe,kDAAI;AACnB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2CAA2C;AAC3C,qEAAqE,iCAAiC;AACtG;AACA,4CAA4C;AAC5C,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,uGAAuG,sBAAsB;AAC7H;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,uDAAS;AAC7C,kBAAkB,oEAAY,OAAO,4EAAoB;AACzD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,qCAAqC;AACrC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,gDAAgD,8CAA8C;AAC9F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,yEAAyE;AACtG;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+CAA+C,sDAAsD;AACrG;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kBAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,oBAAoB,OAAO,uDAAS,mBAAmB,eAAe,IAAI;AAC1E,mBAAmB,OAAO,uDAAS,kBAAkB,gBAAgB,IAAI;AACzE;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,gFAAgF,sBAAsB;AACtG;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,yDAAW,2BAA2B;AAC3D;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gCAAgC,iBAAiB,4BAA4B;AAC3H;AACA;AACA,8CAA8C,oBAAoB,iBAAiB,sDAAsD,oDAAoD,IAAI;AACjM;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uEAAY,EAAE;AAC1B,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,yDAAW,2BAA2B;AAC3D,gBAAgB,OAAO,yDAAW,qBAAqB;AACvD;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yDAAyD,SAAS,KAAK,KAAK;AAC5E;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB,iBAAiB,oCAAoC;AACvG;AACA;AACA,kCAAkC,eAAe,iBAAiB,4CAA4C;AAC9G;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD,qBAAqB,sDAAsD,oDAAoD,IAAI;AACnI;AACA;AACA,kCAAkC,kBAAkB;AACpD,qBAAqB,oDAAoD,oDAAoD,IAAI;AACjI;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uEAAY,EAAE;AAC1B,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,yDAAW,2BAA2B;AAC3D,gBAAgB,OAAO,yDAAW,qBAAqB;AACvD;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4EAA4E,gBAAgB;AAC5F;AACA,oIAAoI,6BAA6B;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,qBAAqB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,uBAAuB;AAC5B,KAAK;AACL;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kDAAkD;AAClD;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,GAAG,wBAAwB;AAClE,yDAAyD,EAAE;AAC3D,4DAA4D;AAC5D,8DAA8D;AAC9D,sDAAsD;AACtD,6DAA6D;AAC7D,wCAAwC;AACxC,oFAAoF;AACpF,mDAAmD;AACnD,+DAA+D;AAC/D,kEAAkE;AAClE;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,oFAAoF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB,iCAAiC;AAClD,iBAAiB,8DAA8D;AAC/E,iBAAiB,+CAA+C;AAChE;AACA,iBAAiB,oGAAoG;AACrH,iBAAiB,kEAAkE;AACnF,iBAAiB,kDAAkD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,sBAAsB;AACtB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B,YAAY,OAAO,uDAAS,kBAAkB,gBAAgB,IAAI;AAClE,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,2BAA2B;AACnD;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAU;AACvC,6BAA6B,4DAAU,CAAC,yDAAO,CAAC,4DAAU;AAC1D;AACA;AACA;AACA;AACA,0CAA0C,yDAAO,CAAC,8DAAY,kBAAkB,8DAAY;AAC5F,0CAA0C,yDAAO,CAAC,4DAAU,kBAAkB,4DAAU;AACxF;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAO;AAC1C,oCAAoC,6CAAO;AAC3C,oCAAoC,6CAAO;AAC3C,+BAA+B,6CAAO;AACtC,gCAAgC,6CAAO;AACvC,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,+BAA+B,0DAAY;AAC3C,4BAA4B,0DAAY;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,uIAAuI,gBAAgB;AACvJ;AACA,0HAA0H,oBAAoB;AAC9I,gIAAgI,sBAAsB;AACtJ,wIAAwI,6BAA6B;AACrK;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,oDAAM,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,8BAA8B,8DAAU;AACxC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,mDAAK,6BAA6B,iEAAS,QAAQ,iEAAS;AAC3E,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,2DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS,IAAI,kEAAU;AACvB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uCAAuC;AACvC;AACA,mBAAmB,gDAAE;AACrB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAE,EAAE,mCAAmC;AACtD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,kCAAkC;AAClC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,sCAAsC,8BAA8B;AACpE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,YAAY,OAAO,mDAAK,EAAE;AAC1B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,oDAAM,EAAE;AAC9B,eAAe,OAAO,uDAAS,wCAAwC,gBAAgB,IAAI;AAC3F,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,WAAW,EA2DV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,0DAAY,gCAAgC;AAClE;AACA,WAAW,EAgBV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,OAAO,6DAAe,4BAA4B;AAC/D;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6BAA6B,sBAAsB,iBAAiB;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB;AACtB;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,sBAAsB,iBAAiB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mDAAmD,EAAE;AACrD;AACA,4CAA4C;AAC5C;AACA,6BAA6B,EAAE;AAC/B,iDAAiD,EAAE;AACnD;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,6BAA6B,EAAE;AAC/B,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,mDAAmD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA,oEAAoE,EAAE;AACtE,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sCAAsC,uDAAS;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,kFAAkF,mBAAmB;AACrG,kFAAkF,mBAAmB;AACrG,8EAA8E,mBAAmB;AACjG;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oCAAoC,uDAAS;AAC7C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,+CAA+C;AAC5D,aAAa,gDAAgD;AAC7D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D,aAAa,+CAA+C;AAC5D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,oBAAoB,aAAa;AACjC,wDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,4FAA4F,8BAA8B;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,8BAA8B;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,sBAAsB;AAC7G;AACA;AACA;AACA,8DAA8D,WAAW,oBAAoB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oHAAoH;AACpH;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,yBAAyB;AAC9B,KAAK,uBAAuB;AAC5B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,8CAA8C,OAAO,sDAAQ,EAAE,GAAG;AACvE,KAAK,OAAO,gEAAY,gBAAgB,OAAO,sDAAQ,EAAE;AACzD;AACA;AACA,mBAAmB,OAAO,uDAAS,yBAAyB,gBAAgB,IAAI;AAChF,gBAAgB,OAAO,uDAAS,+BAA+B,gBAAgB,IAAI;AACnF,yBAAyB,OAAO,uDAAS,+BAA+B,gBAAgB,IAAI;AAC5F,mBAAmB,OAAO,mDAAK,EAAE;AACjC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,eAAe,OAAO,mDAAK,EAAE;AAC7B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,iBAAiB,OAAO,yDAAW,8BAA8B;AACjE,cAAc,OAAO,mDAAK,0CAA0C;AACpE,4CAA4C,OAAO,0DAAY,kCAAkC;AACjG;AACA,WAAW,EA+FV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,4FAA4F;AAC1I;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kDAAkD,4CAA4C;AAC9F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,yCAAyC,0FAA0F;AACnI;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,yCAAyC,0FAA0F;AACnI;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,oFAAqB;AACpD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oFAAqB;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,oFAAqB;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iCAAiC,uEAAuE;AACxG;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA,+CAA+C,EAAE,kBAAkB,EAAE;AACrE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAA0B;AACxE;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,SAAS,iEAAK,EAAE,sDAAsD;AACnG,wBAAwB,iEAAK,MAAM,iEAAK,EAAE,qCAAqC;AAC/E,wBAAwB,sEAAU,eAAe,mEAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yDAAyD;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iDAAiD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wBAAwB,oDAAoD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,WAAW,4CAA4C;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,cAAc,wEAAwE;AACtF;AACA;AACA,cAAc,4EAA4E;AAC1F;AACA;AACA,cAAc,wEAAwE;AACtF;AACA;AACA,cAAc,4EAA4E;AAC1F;AACA;AACA,cAAc,8EAA8E;AAC5F;AACA;AACA,cAAc,0EAA0E;AACxF;AACA;AACA,cAAc,+EAA+E;AAC7F;AACA;AACA;AACA;AACA,sCAAsC,kCAAkC;AACxE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA,qBAAqB,2CAA2C;AAChE;AACA,QAAQ;AACR;AACA;AACA,wBAAwB,2CAA2C;AACnE;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,wCAAwC,kCAAkC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,aAAa;AAC/F;AACA;AACA;AACA,6CAA6C,iDAAiD;AAC9F;AACA;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA;AACA,kEAAkE,WAAW,iBAAiB;AAC9F;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,qCAAqC,OAAO,yDAAW,yCAAyC;AAChG,uBAAuB,OAAO,6DAAe,yBAAyB;AACtE,wBAAwB,OAAO,0DAAY,yBAAyB;AACpE,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E,8BAA8B,OAAO,uDAAS,oCAAoC,gBAAgB,IAAI;AACtG,eAAe,OAAO,oDAAM,EAAE;AAC9B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,qBAAqB,OAAO,mDAAK,EAAE;AACnC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,wBAAwB,OAAO,mDAAK,EAAE;AACtC,YAAY,OAAO,mDAAK,EAAE;AAC1B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,aAAa,OAAO,yDAAW,0BAA0B;AACzD,oBAAoB,OAAO,yDAAW,4BAA4B;AAClE,wBAAwB,OAAO,mDAAK,EAAE;AACtC;AACA,WAAW,EA+HV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uCAAuC,YAAY,gBAAgB;AACnE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iDAAiD,sBAAsB,qBAAqB;AAC5F,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,gDAAgD;AAChD;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,8DAA8D,iBAAiB;AAC/E,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA,gDAAgD;AAChD,sBAAsB,wBAAwB;AAC9C,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,+DAAY,EAAE;AAC1B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,eAAe,OAAO,uDAAS,wCAAwC,eAAe,IAAI;AAC1F,gBAAgB,OAAO,uDAAS,6BAA6B,eAAe,IAAI;AAChF,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,WAAW,EA4DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW,EAAE,6DAAU;AAC/D;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,gBAAgB,+CAAe;AAC/B;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,wBAAwB,0DAAY;AACpC,2BAA2B,0DAAY;AACvC,wBAAwB,0DAAY;AACpC,uBAAuB,0DAAY;AACnC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,6BAA6B,0DAAY;AACzC,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EA2BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,kBAAkB,+CAAe;AACjC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,WAAW,OAAO,mDAAK,sBAAsB;AAC7C,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB;AACxB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,WAAW,EAeV;AACD;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAiBV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,kCAAkC,0DAAY;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA,mEAAmE,cAAc;AACjF;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,mDAAmD,MAAM;AACzD;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,mCAAmC,yCAAyC;AAC5E,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,iCAAiC,yCAAyC;AAC1E;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAA6D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAA6D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,qDAAqD;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,uDAAuD;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,mDAAmD;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAA+D;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA,WAAW,EA4CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,yBAAyB;AACzB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0CAA0C;AAC1E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+EAA+E;AACtG,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,2BAA2B;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qCAAqC,GAAG;AACpF,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD;AACA,iBAAiB,aAAa,wBAAwB,wBAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa,oBAAoB,yBAAyB;AACpF,6DAA6D,oBAAoB;AACjF;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,uDAAS,uBAAuB,eAAe,IAAI;AAC3E,kBAAkB,OAAO,uDAAS,wBAAwB,eAAe,IAAI;AAC7E,iBAAiB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,gBAAgB,IAAI;AACnG,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,aAAa,OAAO,mDAAK,EAAE;AAC3B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EA6DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,0DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,yCAAyC,0DAAY;AACrD,yCAAyC,0DAAY;AACrD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB,oDAAoD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,6BAA6B,OAAO,oDAAM,EAAE;AAC5C,6BAA6B,OAAO,oDAAM,EAAE;AAC5C;AACA,WAAW,EAqCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,kEAAmB;AAC3D;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,6DAAM,sBAAsB,4DAAK,sBAAsB,0DAAG;AACzF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,qDAAqD,EAAE;AACvD,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,mDAAK,EAAE;AAC3B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,qBAAqB,OAAO,oDAAM,EAAE;AACpC,eAAe,OAAO,yDAAW,4BAA4B;AAC7D,eAAe,OAAO,uDAAS,wCAAwC,gBAAgB,IAAI;AAC3F,aAAa,OAAO,uDAAS,mBAAmB,eAAe,IAAI;AACnE,cAAc,OAAO,yDAAW,2BAA2B;AAC3D;AACA,WAAW,EA6DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAKV;AACD;AACA;AACA;AACA,gBAAgB;AAChB,WAAW,EAWV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,kGAAkG,yDAAO,oBAAoB,0DAAQ;AACrI,uBAAuB,EAAE;AACzB,sGAAsG,0DAAQ,mBAAmB,yDAAO;AACxI,uBAAuB,EAAE;AACzB,4DAA4D,0DAAQ,oBAAoB,yDAAO;AAC/F,uBAAuB,EAAE;AACzB,6DAA6D,yDAAO,mBAAmB,0DAAQ;AAC/F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,2DAAS,yBAAyB,2DAAS,oBAAoB,yDAAO;AAC1F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,2DAAS,yBAAyB,2DAAS,mBAAmB,0DAAQ;AAC1F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qBAAqB,yDAAO,mBAAmB,0DAAQ;AACvD,gBAAgB,2DAAS;AACzB,gBAAgB,2DAAS;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,0DAAQ,gBAAgB,yDAAO;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,4EAA4E,iBAAiB;AAC7F,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB,0DAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB,yDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gCAAgC,6DAAW,YAAY,+BAA+B;AACtF,iCAAiC,2DAAS,YAAY,+BAA+B;AACrF;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAU;AAC1C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC,yDAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAQ;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qCAAqC,0DAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,gBAAgB;AAC5F;AACA,0EAA0E,kBAAkB;AAC5F;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,0DAAQ;AACpB;AACA;AACA,4EAA4E,gBAAgB;AAC5F;AACA,0EAA0E,kBAAkB;AAC5F;AACA,iBAAiB;AACjB;AACA,6EAA6E,gBAAgB;AAC7F;AACA,2EAA2E,kBAAkB;AAC7F;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,gGAAgG,UAAU;AAC1G,2BAA2B,EAAE;AAC7B,mGAAmG,UAAU,IAAI,yCAAyC;AAC1J;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,gBAAgB;AACpF;AACA,kEAAkE,kBAAkB;AACpF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,6DAAW,SAAS,+BAA+B;AACtE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,wDAAwD;AACrF;AACA,mBAAmB,yDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,yBAAyB,yDAAO;AAChC;AACA,aAAa;AACb;AACA,mBAAmB,yDAAO;AAC1B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,cAAc,iEAAK;AAChD;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,YAAY,iEAAK;AAC9C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,0BAA0B,mEAAO;AACnE;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,cAAc,iEAAK;AAChD;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,YAAY,iEAAK;AAC9C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,0BAA0B,mEAAO;AACnE;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,cAAc,iEAAK;AAChD;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,YAAY,iEAAK;AAC9C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,0BAA0B,mEAAO;AACnE;AACA;AACA;AACA;AACA;AACA,2EAA2E,cAAc;AACzF,+EAA+E,gBAAgB;AAC/F,6EAA6E,eAAe;AAC5F,6EAA6E,eAAe;AAC5F;AACA;AACA,oKAAoK,eAAe;AACnL,8JAA8J,gBAAgB;AAC9K;AACA;AACA;AACA;AACA;AACA,6GAA6G,YAAY;AACzH,0GAA0G,sBAAsB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,KAAK,iEAAiE,kBAAkB;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,2KAA2K,YAAY;AACvL;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,mDAAmD,qCAAqC,sCAAsC,OAAO;AACrI;AACA;AACA;AACA;AACA,kDAAkD,0CAA0C,qCAAqC,MAAM;AACvI;AACA;AACA;AACA,+FAA+F,gBAAgB;AAC/G;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,WAAW,OAAO,mDAAK,EAAE;AACzB,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EA4DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,kCAAkC,IAAI,cAAc,IAAI;AACxD,uBAAuB,EAAE;AACzB,mCAAmC,IAAI;AACvC,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,WAAW,EAAE,aAAa;AAC1D;AACA;AACA,gCAAgC,WAAW,EAAE,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI,MAAM,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,sFAAsF,IAAI,GAAG,IAAI;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yFAA2B;AACjD;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,6DAAM,sBAAsB,4DAAK,sBAAsB,0DAAG;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAO;AACjD,uBAAuB,wDAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,WAAW,OAAO,mDAAK,EAAE;AACzB,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,gBAAgB,OAAO,yDAAW,6BAA6B,GAAG,OAAO,mDAAK,EAAE;AAChF,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,eAAe,OAAO,uDAAS,wCAAwC,gBAAgB,IAAI;AAC3F;AACA,WAAW,EA8DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW,qBAAqB,kEAAc;AACtF;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,gCAAgC,2DAAO;AACvC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,+BAA+B;AAC5H,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,kFAAkF,kBAAkB;AACpG,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,8CAA8C,WAAW,4BAA4B;AACrF;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wCAAwC,2DAAO;AAC/C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,+BAA+B;AACrI,4EAA4E,+BAA+B;AAC3G;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,sBAAsB;AAC3B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,sCAAsC,2DAAO;AAC7C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,+BAA+B;AACnI,0EAA0E,+BAA+B;AACzG;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,sBAAsB;AAC3B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,qCAAqC,gEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0BAA0B,oEAAgB;AAC1C,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,yDAAW,oBAAoB;AACtD,mBAAmB,OAAO,yDAAW,iCAAiC,GAAG,OAAO,mDAAK,EAAE;AACvF,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,+BAA+B,0DAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0BAA0B,oEAAgB;AAC1C,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,yDAAW,oBAAoB;AACtD,YAAY,OAAO,yDAAW,wBAAwB;AACtD,UAAU,OAAO,yDAAW,sBAAsB,GAAG,OAAO,mDAAK,EAAE;AACnE,wBAAwB,OAAO,yDAAW,sCAAsC,GAAG,OAAO,mDAAK,EAAE;AACjG;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4CAA4C,iEAAa;AACzD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,+BAA+B;AAC1I,0EAA0E,+BAA+B;AACzG;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,sBAAsB;AAC3B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,8CAA8C,iEAAa;AAC3D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,+BAA+B;AAC5I,4EAA4E,+BAA+B;AAC3G;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,sBAAsB;AAC3B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EA8BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,sCAAsC,iEAAa;AACnD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,+BAA+B;AACnI,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,kFAAkF,kBAAkB;AACpG,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,YAAY;AAC5E;;AAEA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yBAAyB;AACjG,yCAAyC,8BAA8B,+DAA+D,UAAU;AAChJ,wEAAwE,sCAAsC;AAC9G;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA;AACA,aAAa,OAAO,yDAAW,oBAAoB,GAAG,OAAO,mDAAK,EAAE;AACpE,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,mDAAK,EAAE;AAC5B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,WAAW,EAqDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA,sBAAsB,8BAA8B,EAAE,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gDAAgD,EAAE,kBAAkB,EAAE;AACtE;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0DAA0D,sBAAsB;AAChF;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,uBAAuB;AAC5B,KAAK;AACL;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,kCAAkC;AAC9D,eAAe,OAAO,0DAAY,gCAAgC;AAClE;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,kEAAc;AAClC,oBAAoB,4DAAY;AAChC,oBAAoB,0DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,iEAAe,CAAC,4DAAU,CAAC,4DAAU,CAAC,0DAAQ,kBAAkB,0DAAQ,oBAAoB,4DAAU,oBAAoB,4DAAU,oBAAoB,iEAAe;AACtL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,kBAAkB,mEAAO;AAC3D;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,kBAAkB,mEAAO;AAC3D;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,kBAAkB,mEAAO;AAC3D;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,SAAS,iEAAK;AAC3C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,kBAAkB,mEAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,SAAS;AACrF,kFAAkF,WAAW;AAC7F,sDAAsD,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EA0CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,wDAAM,UAAU,uDAAK;AAC7C,wBAAwB,wDAAM,UAAU,uDAAK;AAC7C;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,WAAW,OAAO,mDAAK,EAAE;AACzB,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA,WAAW,EAkDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK;AAC7E;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,KAAK,YAAY,KAAK,YAAY,KAAK,YAAY,KAAK;AACtF;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,KAAK,YAAY,KAAK,YAAY,KAAK,YAAY,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,wBAAwB,WAAW,GAAG,aAAa,GAAG,cAAc;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,OAAO,8EAA8E,SAAS;AACpL;AACA;AACA,oMAAoM,QAAQ;AAC5M;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,mBAAmB;AAClF;AACA;AACA;AACA,sFAAsF,2BAA2B,4EAA4E,MAAM;AACnM;AACA;AACA,4FAA4F,+BAA+B,kFAAkF,QAAQ;AACrN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,WAAW,EA2CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC,yFAA2B,YAAY,yFAA2B;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,6DAAM,sBAAsB,4DAAK,sBAAsB,0DAAG;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,0BAA0B;AAC/B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,yDAAW,6BAA6B,GAAG,OAAO,mDAAK,EAAE;AAChF,iBAAiB,OAAO,oDAAM,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,eAAe,OAAO,uDAAS,wCAAwC,gBAAgB,IAAI;AAC3F;AACA,WAAW,EA6CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW,EAAE,kEAAc;AACnE;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW,8CAA8C,kEAAc;AAC/G;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B,oEAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,oFAAqB;AAChD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAO;AAC5B,QAAQ,iEAAK,cAAc,iEAAK,EAAE,4BAA4B;AAC9D,QAAQ,iEAAK,aAAa,iEAAK,EAAE,8BAA8B;AAC/D,QAAQ,sEAAU,2BAA2B,mEAAO;AACpD;AACA;AACA;AACA;AACA,2BAA2B,mEAAO;AAClC,QAAQ,iEAAK,cAAc,iEAAK;AAChC,uBAAuB,iBAAiB;AACxC,SAAS;AACT,qBAAqB,0BAA0B;AAC/C,SAAS;AACT,QAAQ,iEAAK,aAAa,iEAAK;AAC/B,uBAAuB,gBAAgB;AACvC,SAAS;AACT,qBAAqB,yBAAyB;AAC9C,SAAS;AACT,QAAQ,sEAAU,2BAA2B,iEAAK,EAAE,iEAAK,qBAAqB,wEAAY,KAAK,iBAAiB,GAAG,mEAAO;AAC1H;AACA;AACA;AACA;AACA,mBAAmB,mEAAO;AAC1B,QAAQ,iEAAK,cAAc,iEAAK,EAAE,sCAAsC;AACxE,QAAQ,iEAAK,aAAa,iEAAK,EAAE,qCAAqC;AACtE,QAAQ,sEAAU,2BAA2B,mEAAO;AACpD;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wEAAgB;AACjD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,oFAAqB;AAChD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,oFAAqB;AAC7C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAS,QAAQ,8DAAM;AAC7C,wBAAwB;AACxB;AACA,oDAAoD,4DAAI;AACxD;AACA,wBAAwB;AACxB;AACA;AACA,mCAAmC,kEAAc;AACjD,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oDAAoD,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,+BAA+B,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,8BAA8B,GAAG,yBAAyB,KAAK,sBAAsB,wBAAwB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,kBAAkB,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,uBAAuB,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,sBAAsB,GAAG,yBAAyB,KAAK,sBAAsB,gBAAgB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,sBAAsB,gBAAgB,cAAc,iGAAiG,uBAAuB,cAAc,cAAc,oCAAoC,iBAAiB,yBAAyB,kVAAkV,2BAA2B,mCAAmC,cAAc,0EAA0E,WAAW,iDAAiD,WAAW,oBAAoB,8KAA8K,cAAc,mDAAmD,0BAA0B,qDAAqD,0BAA0B,sDAAsD,6BAA6B,gDAAgD,0BAA0B,mDAAmD,0BAA0B,uDAAuD,0BAA0B,+CAA+C,0BAA0B,uGAAuG,6BAA6B,mDAAmD,6BAA6B,qDAAqD,6BAA6B,2QAA2Q,6BAA6B,gDAAgD,6BAA6B,iDAAiD,6BAA6B,gDAAgD,6BAA6B,iDAAiD,6BAA6B,qDAAqD,6BAA6B,uDAAuD,6BAA6B,sDAAsD,6BAA6B,qDAAqD,6BAA6B,oDAAoD,6BAA6B,oDAAoD,6BAA6B,mDAAmD,6BAA6B,oDAAoD,6BAA6B,mDAAmD,6BAA6B,iDAAiD,0BAA0B,gDAAgD,6BAA6B,iDAAiD,6BAA6B,mDAAmD,6BAA6B,gDAAgD,6BAA6B,oDAAoD,6BAA6B,oDAAoD,6BAA6B,+KAA+K,6BAA6B,sDAAsD,6BAA6B,gDAAgD,6BAA6B,+CAA+C,6BAA6B,iDAAiD,6BAA6B,oDAAoD,6BAA6B,sDAAsD,6BAA6B,2DAA2D,6BAA6B,iDAAiD,0BAA0B,gDAAgD,0BAA0B,qDAAqD,6BAA6B,iDAAiD,6BAA6B,iDAAiD,6BAA6B,gDAAgD,6BAA6B,kDAAkD,6BAA6B,iDAAiD,6BAA6B,oCAAoC,gBAAgB,gDAAgD,aAAa,+CAA+C,gBAAgB,8BAA8B,gBAAgB,4CAA4C,iBAAiB,yDAAyD,oBAAoB,0DAA0D,aAAa,yDAAyD,gBAAgB,iBAAiB,uBAAuB,qBAAqB,aAAa,mBAAmB,yBAAyB,2BAA2B,oCAAoC,gBAAgB,8CAA8C,cAAc,iBAAiB;AACnrN,aAAa;AACb;AACA;AACA;AACA,KAAK,oCAAoC,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AAC7E,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,mFAAyB,EAAE;AACvC,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,oBAAoB,OAAO,0DAAY,qCAAqC,gBAAgB,IAAI;AAChG;AACA,WAAW,EAmDV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,kDAAY;AACrD;AACA;AACA,yCAAyC,mDAAK,sDAAsD,8DAAM;AAC1G,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB;AACjB,uDAAuD,aAAa,mBAAmB,mBAAmB,eAAe,sEAAsE,UAAU,kGAAkG,mBAAmB,uDAAuD,eAAe,cAAc,aAAa,OAAO,mBAAmB,gBAAgB,4EAA4E,aAAa,YAAY,kBAAkB,mBAAmB,gGAAgG,eAAe,iBAAiB,yCAAyC,YAAY,iCAAiC,mBAAmB,yBAAyB,aAAa,qBAAqB,YAAY,wBAAwB,sBAAsB;AACj7B,aAAa;AACb;AACA;AACA;AACA,KAAK,yCAAyC,OAAO,kDAAI,EAAE,GAAG;AAC9D,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA,WAAW,EA4BV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0EAAkB,EAAE,gEAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,EAaV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAiIV;AACD;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yDAAU;AAC3C;AACA;AACA;AACA,iCAAiC,yDAAU;AAC3C;AACA;AACA;AACA,iCAAiC,yDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sDAAsD,EAAE;AACxD,4EAA4E;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,qCAAqC,2CAA2C;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,8BAA8B,0DAAW;AACzC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,4BAA4B,yDAAU;AACtC;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,yDAAU;AACvC;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB,qEAAqE,KAAK;AAC/F;AACA;AACA;AACA,+BAA+B,oEAAoE;AACnG;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB,kBAAkB;AACzE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EA8GV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,4BAA4B,wDAAS;AACrC;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,EAAE;AAChC,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,mBAAmB;AACnB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,oCAAoC,iBAAiB,UAAU,YAAY;AAC3E;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC;AACnC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACriEAAiE,qBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,eAAe;AACzD,gCAAgC,eAAe,GAAG,WAAW;AAC7D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4FAA4F;AACtI;AACA;AACA,0CAA0C,wDAAwD;AAClG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,qBAAqB,sCAAsC,GAAG,sCAAsC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B;AAC5B;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,uDAAK;AACxB;AACA;AACA,mBAAmB,yDAAO,CAAC,8DAAY;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAWV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,iBAAiB,IAAI;AACpG;AACA,WAAW,EAaV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,yCAAyC,GAAG,4CAA4C;AACpH;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uEAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAiBV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB,yBAAyB;AACzB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,iCAAiC,WAAW;AAC5C;AACA,8BAA8B,YAAY,GAAG,eAAe,GAAG,aAAa;AAC5E;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD,oDAAoD,mBAAmB,YAAY,sBAAsB,mCAAmC,sBAAsB;AAClK,4CAA4C,qBAAqB;AACjE,2IAA2I,iBAAiB;AAC5J,+JAA+J,eAAe;AAC9K;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,wBAAwB;AAC7B,KAAK;AACL;AACA,WAAW,EAUV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C,0DAA0D,UAAU;AACpE,2IAA2I,iBAAiB;AAC5J,8JAA8J,cAAc;AAC5K;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,wBAAwB;AAC7B,KAAK;AACL;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB;AACA;AACA;AACA,WAAW,EAYV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,GAAG;AACtB,mBAAmB,GAAG;AACtB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,sCAAsC,4EAA4E,oCAAoC,8CAA8C,eAAe,SAAS;AAC5N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,GAAG;AACtB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC,qGAAqG,kBAAkB,UAAU,YAAY;AAC7I;AACA;AACA,8BAA8B,2DAAG;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8GAA8G;AAC9G;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC;AACA,gHAAgH;AAChH;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,qDAAqD;AACpF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD,+BAA+B,gDAAgD;AAC/E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,kDAAkD;AACjF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mCAAmC,4DAA4D;AAC/F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mCAAmC,+CAA+C;AAClF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,gDAAgD;AAC/E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,qBAAqB,EAAE;AACvB,4DAA4D,0CAA0C;AACtG,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qBAAqB,EAAE;AACvB,2DAA2D,eAAe;AAC1E;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mCAAmC,4EAA4E;AAC/G;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAA2D;AAC1F;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,uGAAuG;AAC1H,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,8CAA8C,0BAA0B,qBAAqB,0CAA0C,kBAAkB,6BAA6B,uBAAuB,+BAA+B,yBAAyB,kBAAkB,YAAY,sCAAsC,qJAAqJ;AAC9d;AACA,+BAA+B,qDAAqD;AACpF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC;AACvC;AACA,2BAA2B,2DAA2D;AACtF;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,oGAAoG;AACpG;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,mCAAmC,0DAA0D;AAC7F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,mCAAmC,qDAAqD;AACxF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,yBAAyB;AAC9B,KAAK,kBAAkB;AACvB,KAAK,OAAO,gEAAU,EAAE;AACxB,KAAK;AACL;AACA,WAAW,EAmDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,uBAAuB;AACvB,sBAAsB;AACtB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,eAAe,OAAO,0DAAY,uCAAuC;AACzE;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,wBAAwB,0DAAY;AACpC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,oEAAY;AACpF,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yEAAyE,oEAAY;AACrF,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,8GAA8G,oEAAY;AAC1H,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,uCAAuC;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yDAAyD;AAC/F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kEAAkE,gCAAgC,GAAG,yDAAyD;AAC9J;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,qEAAqE,YAAY;AACjF;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6IAA6I,mDAAmD;AAChM,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,wDAAwD,0CAA0C;AAClG,wCAAwC,6CAA6C;AACrF;AACA;AACA,yDAAyD,0CAA0C;AACnG;AACA;AACA,iHAAiH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0CAA0C;AAC1F;AACA;AACA,mJAAmJ,gDAAgD,GAAG,qBAAqB;AAC3N,4FAA4F,gDAAgD,GAAG,oBAAoB,GAAG,wCAAwC;AAC9M,+KAA+K,6DAA6D;AAC5O,wHAAwH,iEAAiE;AACzL,mIAAmI,4BAA4B;AAC/J,+FAA+F,gDAAgD,GAAG,uBAAuB;AACzK,8HAA8H,gDAAgD,GAAG,qBAAqB;AACtM,uEAAuE,gDAAgD,GAAG,uBAAuB;AACjJ,2FAA2F,iBAAiB;AAC5G;AACA,kCAAkC;AAClC;AACA;AACA,gCAAgC;AAChC;AACA;AACA,4HAA4H,mCAAmC,GAAG,qBAAqB;AACvL;AACA;AACA;AACA,kCAAkC;AAClC;AACA,oGAAoG,sCAAsC;;AAE1I;AACA,sSAAsS,aAAa,GAAG,qDAAqD;AAC3W,uOAAuO,aAAa,GAAG,qDAAqD;AAC5S;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uIAAuI;AACvI;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,0BAA0B;AAC/B,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,mBAAmB;AAC9C,eAAe,OAAO,oDAAM,oBAAoB;AAChD;AACA,WAAW,EA8HV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,sCAAsC;AACtC,WAAW,EAGV;AACD;AACA;AACA;AACA,sCAAsC;AACtC,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qBAAqB,oFAAqB;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,oFAAqB;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+DAA+D,EAAE;AACjE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C;AACA;AACA,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,0BAA0B,8CAA8C;AACxE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C;AACA,2BAA2B,0BAA0B;AACrD,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C,oDAAoD,sBAAsB,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qfAAqf,SAAS,oKAAoK,eAAe,yXAAyX,OAAO,snDAAsnD,aAAa,mNAAmN,eAAe,usBAAusB,qDAAqD,gNAAgN,6HAA6H,yDAAyD,8PAA8P,gBAAgB,0NAA0N,cAAc;AAC9gJ,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,kBAAkB;AACvB,KAAK,OAAO,0DAAW,EAAE;AACzB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,WAAW,OAAO,mDAAK,EAAE;AACzB,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,WAAW,OAAO,mDAAK,EAAE;AACzB,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAiFV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,0BAA0B;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wFAAwF,uBAAuB;AAC/G,gFAAgF,WAAW;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6OAA6O;AAC7O;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,OAAO,0DAAY,yBAAyB;AACpE;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,0DAA0D,yBAAyB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAmBV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,uBAAuB,OAAO,6DAAe,yBAAyB;AACtE;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,6DAAe,yBAAyB;AACtE;AACA,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,+CAA+C,8DAA8D,kCAAkC,SAAS;AACxJ;AACA,+BAA+B,yDAAyD;AACxF,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAgCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,kDAAI;AACnB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,oFAAoF,yBAAyB;AAC7G;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qBAAqB,OAAO,EAAE,WAAW;AACzC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,4GAA4G;AAC5G;AACA,mBAAmB,EAAE;AACrB,0CAA0C;AAC1C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB,yBAAyB,iBAAiB,mBAAmB,oBAAoB;AAC/H;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,eAAe,OAAO,uDAAS,qBAAqB,eAAe,IAAI;AACvE,YAAY,OAAO,uDAAS,kBAAkB,eAAe,IAAI;AACjE,eAAe,OAAO,uDAAS,qBAAqB,OAAO,8DAAgB,gBAAgB,IAAI;AAC/F,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAyFV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,OAAO,yDAAW,oBAAoB;AACzD,iBAAiB,OAAO,yDAAW,8BAA8B,GAAG,OAAO,mDAAK,EAAE;AAClF,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,yDAAW,yBAAyB,GAAG,OAAO,mDAAK,EAAE;AACzE,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,sFAAsF,OAAO;AAC7F;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,uEAAY;AACxB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,WAAW,OAAO,mDAAK,EAAE;AACzB,kBAAkB,OAAO,mDAAK,EAAE;AAChC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,oDAAM,EAAE;AAChC;AACA,WAAW,EAyCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,kEAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kEAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,yDAAW,0BAA0B,GAAG,OAAO,mDAAK,EAAE;AAC3E,YAAY,OAAO,yDAAW,wBAAwB,GAAG,OAAO,mDAAK,EAAE;AACvE,aAAa,OAAO,yDAAW,yBAAyB,GAAG,OAAO,mDAAK,EAAE;AACzE,aAAa,OAAO,yDAAW,yBAAyB,GAAG,OAAO,mDAAK,EAAE;AACzE,YAAY,OAAO,yDAAW,wBAAwB;AACtD,iBAAiB,OAAO,yDAAW,8BAA8B;AACjE,WAAW,OAAO,mDAAK,EAAE;AACzB,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gEAAgE,+BAA+B;AAC/F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,8CAA8C,cAAc,GAAG,eAAe,GAAG,aAAa;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,mBAAmB;AAC9F;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,oDAAM,EAAE;AAC9B,aAAa,OAAO,oDAAM,EAAE;AAC5B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EA6CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,WAAW,EAMV;AACD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,yEAAiB;AACjC,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC,wCAAwC;AACxC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,yEAAiB;AACjC,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,kCAAkC,mBAAmB;AACrD,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,yEAAiB;AACjC,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,gDAAgD,qCAAqC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,yEAAiB;AACjC,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,0CAA0C,UAAU;AACpD,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,yEAAiB;AACjC,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,0CAA0C,uBAAuB;AACjE,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,OAAO,gEAAU,EAAE;AACxB,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,kBAAkB;AACvB,KAAK;AACL;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,EA6CV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,kCAAkC,iGAAiG;AACnI;AACA,gCAAgC,4CAA4C;AAC5E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,kBAAkB;AACvB,KAAK;AACL;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAsEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,0BAA0B,4DAAY,EAAE,sEAAgB,EAAE,0DAAW;AACrE;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,+BAA+B;AAC/B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B,gCAAgC,EAAE;AAClC;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD,0DAA0D,SAAS;AACnE;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,uDAAS,wBAAwB,gBAAgB,IAAI;AAC9E;AACA,WAAW,EAqCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,sEAAwB;AACpC;AACA;AACA,eAAe,OAAO,mDAAK,sBAAsB;AACjD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,eAAe,OAAO,oDAAM,EAAE;AAC9B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,yBAAyB,OAAO,0DAAY,oBAAoB;AAChE,mBAAmB,OAAO,0DAAY,sBAAsB,GAAG,OAAO,0DAAY,yBAAyB;AAC3G,mBAAmB,OAAO,0DAAY,uBAAuB,GAAG,OAAO,0DAAY,yBAAyB;AAC5G;AACA,WAAW,EA8CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB;AACtB;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAMV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,qBAAqB,8DAAU;AAC/B,WAAW,EAAE;AACb,2BAA2B,oEAAgB;AAC3C,WAAW,EAAE;AACb,uBAAuB,gEAAY;AACnC,WAAW,EAAE;AACb,wBAAwB,iEAAa;AACrC,WAAW,EAAE;AACb,kBAAkB,2DAAO;AACzB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,8DAAU,kCAAkC;AACnF,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,oEAAgB,wCAAwC;AAC/F,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,gEAAY,oCAAoC;AACvF,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,kCAAkC;AAC1D;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,+BAA+B;AACnI,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,kFAAkF,kBAAkB;AACpG,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAeV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oGAAoG,+BAA+B;AACnI,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAGV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,+BAA+B;AAC5I,4EAA4E,+BAA+B;AAC3G;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,oCAAoC,OAAO,sDAAQ,EAAE;AAC1D;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAeV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,+BAA+B;AAC5H,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,kFAAkF,kBAAkB;AACpG,8EAA8E,kBAAkB;AAChG;AACA,sFAAsF,uBAAuB;AAC7G,sFAAsF,uBAAuB;AAC7G,kFAAkF,uBAAuB;AACzG;AACA;AACA;AACA,sFAAsF,+CAA+C;AACrI,sFAAsF,+CAA+C;AACrI,kFAAkF,+CAA+C;AACjI;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iFAAiF,wBAAwB;AACzG;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAiBV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,+BAA+B;AACrI,4EAA4E,+BAA+B;AAC3G;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,oCAAoC,OAAO,sDAAQ,EAAE;AAC1D;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAkBV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,+BAA+B;AACnI;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,kCAAkC;AAC3G;AACA;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK;AACL;AACA;AACA,YAAY,OAAO,yDAAW,wBAAwB;AACtD,WAAW,OAAO,mDAAK,EAAE;AACzB,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAMV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAA0B,oFAAqB;AAC/C,4BAA4B,oFAAqB;AACjD,8CAA8C;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAU;AACnC,yBAAyB,4DAAU,CAAC,yDAAO,CAAC,4DAAU;AACtD;AACA;AACA;AACA;AACA,sCAAsC,yDAAO,CAAC,8DAAY,kBAAkB,8DAAY;AACxF,sCAAsC,yDAAO,CAAC,iEAAe,kBAAkB,iEAAe;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,+CAA+C;AAC5D,aAAa,gDAAgD;AAC7D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D,aAAa,+CAA+C;AAC5D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,4FAA4F,8BAA8B;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,yBAAyB;AAC9B,KAAK,+BAA+B;AACpC,KAAK,qCAAqC,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,gEAAY,gBAAgB,OAAO,sDAAQ,EAAE;AACzD;AACA;AACA,gBAAgB,OAAO,uDAAS,+BAA+B,gBAAgB,IAAI;AACnF,mBAAmB,OAAO,mDAAK,EAAE;AACjC,cAAc,OAAO,mDAAK,sCAAsC;AAChE;AACA,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,YAAY;AAC5E;;AAEA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,WAAW,EA6CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,mEAAe;AACzC,WAAW,EAAE;AACb,uBAAuB,6DAAS;AAChC,WAAW,EAAE;AACb,uBAAuB,gEAAY;AACnC,WAAW,EAAE;AACb,iBAAiB,0DAAM;AACvB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,mEAAe,uCAAuC;AAC7F,aAAa;AACb;AACA;AACA,eAAe,OAAO,mDAAK,qCAAqC;AAChE;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,6DAAS,iCAAiC;AACjF,aAAa;AACb;AACA;AACA,eAAe,OAAO,mDAAK,sCAAsC;AACjE;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0BAA0B,oEAAgB;AAC1C,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,yDAAW,oBAAoB;AACtD,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0BAA0B,oEAAgB;AAC1C,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,gBAAgB,OAAO,yDAAW,oBAAoB;AACtD,YAAY,OAAO,yDAAW,wBAAwB;AACtD;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,4BAA4B,UAAU;AACtC;AACA;AACA,2BAA2B,EAAE;AAC7B,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAE,EAAE,wCAAwC;AAC3D;AACA;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA,sCAAsC,8DAAU;AAChD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,mDAAK,6BAA6B,iEAAS,QAAQ,iEAAS;AAC3E,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,2DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS,IAAI,kEAAU;AACvB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC;AACjC;AACA,mBAAmB,gDAAE;AACrB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,mBAAmB,4DAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0BAA0B,sEAAkB;AAC5C,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oFAAqB;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,oFAAqB;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sBAAsB,oFAAqB;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,6CAA6C,0FAA0F;AACvI;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iCAAiC,uEAAuE;AACxG;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C,0BAA0B,uBAAuB;AACjD,gCAAgC,4BAA4B;AAC5D,kCAAkC,8BAA8B;AAChE,uCAAuC,uBAAuB;AAC9D,gCAAgC,sBAAsB;AACtD,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA,oKAAoK,gBAAgB;AACpL;AACA;AACA;AACA,gEAAgE,2BAA2B;AAC3F;AACA;AACA;AACA;AACA,kEAAkE,mCAAmC;AACrG;AACA;AACA;AACA;AACA;AACA,kEAAkE,4BAA4B;AAC9F;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,qCAAqC,OAAO,yDAAW,yCAAyC;AAChG,uBAAuB,OAAO,mDAAK,EAAE;AACrC,eAAe,OAAO,mDAAK,EAAE;AAC7B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,yDAAW,0BAA0B;AACzD,oBAAoB,OAAO,yDAAW,4BAA4B;AAClE;AACA,WAAW,EAyDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,kEAAc;AAClC,oBAAoB,4DAAY;AAChC,oBAAoB,0DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,6FAA6F,eAAe;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,4BAA4B,kEAAY;AACxC;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,6BAA6B,mEAAa;AAC1C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sBAAsB,mFAAoB;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8NAA8N,MAAM,0GAA0G,WAAW,sdAAsd,OAAO;AACtzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iCAAiC,qEAAuB;AACxD,oDAAoD,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,kBAAkB,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,+BAA+B,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,uBAAuB,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,8BAA8B,GAAG,yBAAyB,KAAK,sBAAsB,sBAAsB,GAAG,yBAAyB,KAAK,sBAAsB,wBAAwB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,gBAAgB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,kBAAkB,iBAAiB,UAAU,eAAe,kBAAkB,oBAAoB,eAAe,4CAA4C,kBAAkB,YAAY,WAAW,mBAAmB,uBAAuB,aAAa,gFAAgF,cAAc,gBAAgB,aAAa,oCAAoC,aAAa,mBAAmB,uBAAuB,kBAAkB,kCAAkC,mBAAmB,WAAW,8CAA8C,mBAAmB,WAAW,iBAAiB,qBAAqB,mBAAmB,gBAAgB,uBAAuB,eAAe,sBAAsB,kBAAkB,cAAc,sBAAsB,kBAAkB,uBAAuB,gBAAgB;AACnuD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAO;AACrC,QAAQ,iEAAK,aAAa,iEAAK,EAAE,8DAA8D;AAC/F,QAAQ,iEAAK,YAAY,iEAAK,EAAE,2CAA2C;AAC3E,QAAQ,iEAAK,SAAS,iEAAK,EAAE,6DAA6D;AAC1F,QAAQ,sEAAU,WAAW,mEAAO;AACpC;AACA;AACA;AACA;AACA,4BAA4B,mEAAO;AACnC,QAAQ,iEAAK,aAAa,iEAAK,EAAE,sCAAsC;AACvE,QAAQ,iEAAK,SAAS,iEAAK,EAAE,sCAAsC;AACnE,QAAQ,iEAAK,YAAY,iEAAK,EAAE,qCAAqC;AACrE,QAAQ,sEAAU,kBAAkB,mEAAO;AAC3C;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,kBAAkB,6DAAO;AACzB,WAAW,EAAE;AACb,qBAAqB,gEAAU;AAC/B,uBAAuB,6DAAO;AAC9B;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAU,gBAAgB,OAAO,oDAAM,SAAS,gEAAU;AACtE,gCAAgC;AAChC;AACA,2CAA2C;AAC3C;AACA;AACA,iBAAiB,OAAO,0DAAY,yBAAyB,gBAAgB,IAAI;AACjF,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAYV;AACD,0BAA0B,gEAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,iEAAS;AAC1C,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA,mBAAmB,OAAO,0DAAY,2BAA2B;AACjE,cAAc,OAAO,6DAAe,qBAAqB;AACzD,cAAc,OAAO,6DAAe,8BAA8B;AAClE;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,kMAAkM,eAAe,qrCAAqrC;AACt4C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,2DAA2D;AACxF;AACA;AACA,iCAAiC,qEAAuB;AACxD,oDAAoD,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,kBAAkB,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,+BAA+B,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,uBAAuB,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,8BAA8B,GAAG,yBAAyB,KAAK,sBAAsB,sBAAsB,GAAG,yBAAyB,KAAK,sBAAsB,wBAAwB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,gBAAgB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,gDAAgD,cAAc,0CAA0C,mBAAmB,aAAa,mBAAmB,uBAAuB,kBAAkB,mBAAmB,8BAA8B,gCAAgC,UAAU,YAAY,YAAY,uCAAuC,gCAAgC,gCAAgC,aAAa,YAAY,iBAAiB,iBAAiB,mBAAmB,uBAAuB,eAAe,kDAAkD,aAAa,WAAW,uBAAuB,mBAAmB,kBAAkB,WAAW,SAAS,4EAA4E,WAAW,kBAAkB,mFAAmF,aAAa,cAAc,sBAAsB,iBAAiB,gCAAgC,kFAAkF,aAAa,cAAc,sBAAsB,4BAA4B,gBAAgB,6BAA6B,gLAAgL,gCAAgC,uFAAuF,6BAA6B,4EAA4E,kBAAkB,mFAAmF,aAAa,cAAc,gBAAgB,kBAAkB,kBAAkB,UAAU,QAAQ,SAAS,WAAW,UAAU,8EAA8E,kBAAkB,UAAU,8BAA8B,aAAa,mBAAmB,aAAa,gBAAgB,wGAAwG,kBAAkB,4HAA4H,eAAe,iBAAiB,iCAAiC,gBAAgB,sDAAsD,SAAS,mCAAmC,gBAAgB,oBAAoB,iCAAiC,iBAAiB,SAAS,kBAAkB,2CAA2C,cAAc,kBAAkB,mCAAmC,aAAa,kBAAkB,UAAU,aAAa,OAAO,WAAW,8BAA8B,6CAA6C,UAAU,QAAQ,uHAAuH,oCAAoC,wCAAwC,kBAAkB,UAAU,SAAS,oBAAoB,+BAA+B,gBAAgB,uBAAuB,oBAAoB,uDAAuD,YAAY;AACnhI,aAAa;AACb;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA,WAAW,EAGV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gFAAgF,eAAe;AAC/F;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,yDAAyD;AACtF;AACA,iCAAiC,qEAAuB;AACxD,oDAAoD,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,kBAAkB,GAAG,qBAAqB,IAAI,0BAA0B,KAAK,2BAA2B,+BAA+B,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,uBAAuB,GAAG,yBAAyB,IAAI,0BAA0B,KAAK,0BAA0B,8BAA8B,GAAG,yBAAyB,KAAK,sBAAsB,sBAAsB,GAAG,yBAAyB,KAAK,sBAAsB,wBAAwB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,gBAAgB,GAAG,UAAU,4BAA4B,IAAI,wBAAwB,KAAK,UAAU,yBAAyB,gDAAgD,cAAc,0CAA0C,mBAAmB,aAAa,mBAAmB,uBAAuB,kBAAkB,mBAAmB,8BAA8B,gCAAgC,UAAU,YAAY,YAAY,uCAAuC,gCAAgC,gCAAgC,aAAa,YAAY,iBAAiB,iBAAiB,mBAAmB,uBAAuB,eAAe,kDAAkD,aAAa,WAAW,uBAAuB,mBAAmB,kBAAkB,WAAW,SAAS,4EAA4E,WAAW,kBAAkB,mFAAmF,aAAa,cAAc,sBAAsB,iBAAiB,gCAAgC,kFAAkF,aAAa,cAAc,sBAAsB,4BAA4B,gBAAgB,6BAA6B,gLAAgL,gCAAgC,uFAAuF,6BAA6B,4EAA4E,kBAAkB,mFAAmF,aAAa,cAAc,gBAAgB,kBAAkB,kBAAkB,UAAU,QAAQ,SAAS,WAAW,UAAU,8EAA8E,kBAAkB,UAAU,8BAA8B,aAAa,mBAAmB,aAAa,gBAAgB,wGAAwG,kBAAkB,4HAA4H,eAAe,iBAAiB,iCAAiC,gBAAgB,sDAAsD,SAAS,mCAAmC,gBAAgB,oBAAoB,iCAAiC,iBAAiB,SAAS,kBAAkB,2CAA2C,cAAc,kBAAkB,mCAAmC,aAAa,kBAAkB,UAAU,aAAa,OAAO,WAAW,8BAA8B,6CAA6C,UAAU,QAAQ,uHAAuH,oCAAoC,wCAAwC,kBAAkB,UAAU,SAAS,oBAAoB,+BAA+B,gBAAgB,uBAAuB,oBAAoB,uDAAuD,YAAY;AACnhI,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,iEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gCAAgC;AAChC;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,kCAAkC,OAAO,oDAAM,SAAS,gEAAU;AACvE,gCAAgC;AAChC;AACA,2CAA2C,GAAG;AAC9C,KAAK,qCAAqC,OAAO,oDAAM,SAAS,gEAAU;AAC1E,gCAAgC;AAChC;AACA,8CAA8C;AAC9C;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,gEAAY,oBAAoB,sEAAgB,kBAAkB,6DAAU;AACpH;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA,8BAA8B,qDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yCAAyC;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAY;AACvE;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kCAAkC;AAClC;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kBAAkB,WAAW;AAC7B,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kBAAkB,WAAW;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,2EAA2E,EAAE;AAC7E;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kBAAkB,WAAW;AAC7B,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kBAAkB,WAAW;AAC7B,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+DAA+D,EAAE;AACjE,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,+BAA+B,WAAW,oBAAoB,WAAW,cAAc,YAAY;AACnG,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,iCAAiC,EAAE;AACnC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,sBAAsB,WAAW;AACjC;AACA,aAAa;AACb;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,WAAW;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kCAAkC,QAAQ;AAC1C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,WAAW,iBAAiB;AAC1C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6BAA6B,EAAE;AAC/B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sUAAsU,sBAAsB,6tBAA6tB,iBAAiB,IAAI,mBAAmB,2PAA2P,sBAAsB,kNAAkN,2BAA2B,uVAAuV,q7BAAq7B,2oBAA2oB,mCAAmC,0DAA0D,uCAAuC,wDAAwD,iEAAiE;AACnvH,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,0BAA0B,OAAO,uDAAS,oDAAoD,gBAAgB,IAAI;AAClH,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA,WAAW,EAyCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,0DAAW;AAC/B,oBAAoB,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAOV;AACD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;AACA;AACA,oEAAoE;AACpE,0DAA0D,mBAAmB;AAC7E;AACA;AACA,uEAAuE,0BAA0B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,sCAAsC,0DAAY;AAClD,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,oFAAqB;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iBAAiB,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,2BAA2B;AAChI;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE,MAAM,+BAA+B;AAClE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,sEAAsE,yBAAyB;AAC/F,yCAAyC,iBAAiB,wGAAwG,QAAQ;AAC1K,sEAAsE,qBAAqB;AAC3F;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,mDAAK,EAAE;AAC3B,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,kBAAkB,OAAO,oDAAM,EAAE;AACjC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EA2BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,+DAA+D,2BAA2B;AAC1F;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,gBAAgB,IAAI;AACnG,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAY,OAAO,4EAAoB;AAC7D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,4DAA4D,SAAS,8BAA8B,SAAS;AAC5G;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,gBAAgB,IAAI;AACnG,cAAc,OAAO,mDAAK,EAAE;AAC5B,WAAW,OAAO,mDAAK,EAAE;AACzB,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8CAA8C,EAAE;AAChD,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,kDAAkD,EAAE;AACpD,0CAA0C,yBAAyB;AACnE,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,cAAc,OAAO,mDAAK,8BAA8B;AACxD,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,0DAAY,kCAAkC;AAC3E,eAAe,OAAO,0DAAY,gCAAgC;AAClE;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,cAAc,OAAO,mDAAK,8BAA8B;AACxD,qBAAqB,OAAO,oDAAM,EAAE;AACpC;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,cAAc,OAAO,mDAAK,6BAA6B;AACvD,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EA6BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B,gBAAgB,eAAe;AAC/B,gBAAgB,eAAe;AAC/B,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAyBV;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAS,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,oEAAY;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,sDAAsD,EAAE;AACxD;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,gDAAgD;AAChD;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,qCAAqC,4DAAU;AAC/C,qCAAqC,4DAAU,CAAC,yDAAO,CAAC,4DAAU;AAClE;AACA;AACA;AACA;AACA,yDAAyD,yDAAO,CAAC,8DAAY,yBAAyB,8DAAY;AAClH,yDAAyD,yDAAO,CAAC,iEAAe,yBAAyB,iEAAe;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wEAAwE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,oCAAoC;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,+CAA+C;AAC5D,aAAa,gDAAgD;AAC7D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D,aAAa,+CAA+C;AAC5D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oCAAoC;AACpC,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uCAAuC,mBAAmB;AAC1D,iCAAiC;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+BAA+B;AACvC,QAAQ,4BAA4B;AACpC;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,yBAAyB,EAAE;AAC3B,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iCAAiC,+CAA+C;AAChF;AACA,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,gJAAgJ;AACvN;AACA;AACA;AACA,6CAA6C,gCAAgC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E,wLAAwL,gBAAgB;AACxM;AACA;AACA;AACA,0DAA0D,yCAAyC;AACnG,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E,+JAA+J,gBAAgB;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E,+JAA+J,gBAAgB;AAC/K;AACA;AACA,0DAA0D,yCAAyC;AACnG,8CAA8C,2BAA2B;AACzE;AACA;AACA,mHAAmH,8BAA8B;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAyC,0EAA0E,yCAAyC;AAC1L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4BAA4B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,mCAAmC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,8BAA8B;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,oIAAoI,uBAAuB;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,kBAAkB;AACvB,KAAK,OAAO,0DAAW;AACvB;AACA;AACA,oBAAoB,OAAO,0DAAY,yBAAyB,OAAO,wDAAU,EAAE,IAAI;AACvF,cAAc,OAAO,mDAAK,EAAE;AAC5B,eAAe,OAAO,mDAAK,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA,WAAW,EA6EV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,0DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kEAAc;AAClC;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,IAAI,GAAG,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK;AACL;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,uCAAuC,gBAAgB,QAAQ;AAC/D;AACA;AACA,uCAAuC,gBAAgB,QAAQ;AAC/D;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB,GAAG,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,yBAAyB,GAAG,wBAAwB;AACnF;AACA;AACA,+BAA+B,MAAM,KAAK,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,mCAAmC,qBAAqB,GAAG,qBAAqB;AAChF;AACA,+BAA+B,iBAAiB,GAAG,kBAAkB,GAAG,gBAAgB,EAAE,yDAAyD;AACnJ,+BAA+B,iDAAiD,EAAE,+CAA+C;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,6CAA6C;AAChI;AACA;AACA;AACA,4DAA4D,4DAA4D;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sBAAsB,GAAG,qBAAqB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gCAAgC,GAAG,+BAA+B;AACpG;AACA;AACA,oDAAoD,KAAK,KAAK,2BAA2B,OAAO,2BAA2B;AAC3H;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB,qBAAqB,UAAU,GAAG,iDAAiD,GAAG,gDAAgD;AACzL;AACA;AACA,8BAA8B,wBAAwB,wBAAwB,UAAU,GAAG,kDAAkD;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,4CAA4C;AAC5H;AACA;AACA;AACA;AACA;AACA,gFAAgF,4CAA4C;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oDAAoD,IAAI,WAAW,MAAM,eAAe;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,WAAW;AACvG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uEAAY,EAAE;AAC1B,KAAK;AACL;AACA,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yEAAyE,GAAG,gBAAgB,GAAG;AAC/F,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA,mEAAmE,sBAAsB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,yDAAW,2BAA2B;AAC7D;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,kEAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAe;AACnC;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE,qBAAqB,0DAA0D;AAC/E,qBAAqB,wDAAwD;AAC7E,qBAAqB,4DAA4D;AACjF,qBAAqB,8DAA8D;AACnF,qBAAqB,iDAAiD;AACtE,qBAAqB,8DAA8D;AACnF,qBAAqB,oDAAoD;AACzE,qBAAqB,0CAA0C;AAC/D;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,KAAK,4DAA4D;AACjE,KAAK,gDAAgD;AACrD,KAAK,wDAAwD;AAC7D,KAAK,8DAA8D;AACnE,KAAK,wDAAwD;AAC7D,KAAK,oDAAoD;AACzD,KAAK,iDAAiD;AACtD,KAAK,8DAA8D;AACnE,KAAK,oDAAoD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAaV;AACD;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAOV;AACD;AACA;AACA;AACA,uCAAuC;AACvC,WAAW,EAGV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,0BAA0B,KAAK,UAAU,WAAW;AAChF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+CAA+C,8FAA8F;AAC7I;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wGAAwG;AACxG;AACA,2BAA2B,EAAE;AAC7B,oCAAoC;AACpC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,4GAA4G;AAC5G;AACA,2BAA2B,EAAE;AAC7B,oCAAoC;AACpC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oGAAoG;AACpG;AACA,2BAA2B,EAAE;AAC7B,oCAAoC;AACpC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,wBAAwB;AACxB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uDAAuD,oCAAoC;AAC3F,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,cAAc;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,iDAAiD;AAC9E,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uDAAuD,qDAAqD;AAC5G,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,cAAc;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,iDAAiD;AAC9E,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,cAAc;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,iDAAiD;AAC9E,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uDAAuD,uCAAuC;AAC9F,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,cAAc;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA,8DAA8D,cAAc;AAC5E;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6BAA6B,iDAAiD;AAC9E,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EA2BV;AACD;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB;AACtB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa,GAAG,YAAY,IAAI,wBAAwB;AACxF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,aAAa,GAAG,YAAY,cAAc,wBAAwB;AACnG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa,GAAG,YAAY,aAAa,wBAAwB;AACjG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,aAAa,GAAG,YAAY,IAAI,wBAAwB;AAC3F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,MAAM;AAClC,uBAAuB,EAAE;AACzB,+CAA+C;AAC/C,2BAA2B,eAAe;AAC1C,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEo9M;AACp9M;;;;;;;;;;;;;ACznC;AAC5C;AACyrB;AAC9qB;AACL;AACT;AACQ;AACL;AACqB;AACX;AACP;;AAElD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sHAAsH,mBAAmB;AACzI;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAqB;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wDAAwD,mEAAqB;AAC7E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kEAAkE,mEAAqB;AACvF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iEAAiE,mEAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAqB;AAC1C,mCAAmC,mEAAqB;AACxD;AACA,qBAAqB,mEAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mHAAmH,2BAA2B,uCAAuC,2BAA2B;AAChN;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,oHAAoH,oCAAoC,sCAAsC,kCAAkC;AAChO;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+GAA+G,qCAAqC;AACpJ;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY,EAAE;AAC1B,KAAK,OAAO,6DAAe;AAC3B;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,GAAG,gCAAgC,GAAG,gCAAgC;AACtI;AACA,uCAAuC,uCAAuC,GAAG,iCAAiC;AAClH;AACA,qCAAqC,6BAA6B,GAAG,8BAA8B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+BAA+B,6BAA6B,EAAE;AACvF,yBAAyB,+BAA+B,6BAA6B,kBAAkB;AACvG,yBAAyB,+BAA+B,6BAA6B,+CAA+C;AACpI;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,GAAG,+BAA+B;AAC9F,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA,uBAAuB,UAAU;AACjC,uBAAuB,EAAE;AACzB,kCAAkC,wDAAO,kBAAkB,wDAAO;AAClE;AACA;AACA,8BAA8B,qBAAqB,EAAE,aAAa,UAAU,EAAE;AAC9E,oCAAoC,QAAQ;AAC5C,kCAAkC,EAAE;AACpC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uDAAuD,iCAAiC,cAAc;AACtG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,8BAA8B;AACxE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sEAAsE;AACtE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,glBAAglB,YAAY;AAC5lB,iCAAiC,qEAAuB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EA8CV;AACD,oCAAoC,oEAAsB;AAC1D;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,gDAAgD,WAAW,QAAQ,UAAU,YAAY,SAAS,QAAQ,UAAU;AACpH,eAAe,+CAAE,EAAE,8CAA8C,OAAO,4DAAK;AAC7E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,qDAAO;AACnC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,iCAAiC,oDAAoD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,IAAI,EAAE,GAAG,GAAG,6BAA6B;AACrE;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,gCAAgC,IAAI,GAAG,MAAM;AAC7C;AACA;AACA,gCAAgC,IAAI,EAAE,GAAG,EAAE,gCAAgC;AAC3E;AACA;AACA,gCAAgC,IAAI,EAAE,GAAG,EAAE,gCAAgC;AAC3E;AACA;AACA,gCAAgC,IAAI,EAAE,GAAG,GAAG,iCAAiC;AAC7E;AACA;AACA,gCAAgC,IAAI,EAAE,GAAG,GAAG,iCAAiC;AAC7E;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI,UAAU,WAAW;AACzD;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,yDAAyD,IAAI,GAAG,OAAO;AACvE;AACA;AACA;AACA;AACA,4BAA4B,IAAI,EAAE,GAAG,EAAE,4BAA4B;AACnE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,GAAG,gCAAgC,GAAG,gCAAgC;AACtI;AACA,uCAAuC,uCAAuC,GAAG,iCAAiC;AAClH;AACA,qCAAqC,6BAA6B,GAAG,8BAA8B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+BAA+B,6BAA6B,EAAE;AACvF,yBAAyB,+BAA+B,6BAA6B,kBAAkB;AACvG,yBAAyB,+BAA+B,6BAA6B,+CAA+C;AACpI;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,GAAG,+BAA+B;AAC9F,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,uBAAuB,EAAE;AACzB,kCAAkC,wDAAO,kBAAkB,wDAAO;AAClE;AACA;AACA,8BAA8B,qBAAqB,EAAE,aAAa,UAAU,EAAE;AAC9E,oCAAoC,QAAQ;AAC5C,kCAAkC,EAAE;AACpC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA,aAAa;AACb;AACA;AACA,8BAA8B,qBAAqB,EAAE,aAAa,UAAU,EAAE;AAC9E,oCAAoC,QAAQ;AAC5C,kCAAkC,EAAE;AACpC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uDAAuD,iCAAiC,cAAc;AACtG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,8BAA8B;AACxE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sEAAsE;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wEAAwE;AACxE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,yqDAAyqD,iCAAiC,wcAAwc,+BAA+B,8pBAA8pB,UAAU,4MAA4M,YAAY;AACjjG,iCAAiC,qEAAuB;AACxD,2CAA2C,aAAa,gBAAgB,YAAY;AACpF,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,aAAa,OAAO,uDAAS,mBAAmB,gBAAgB,IAAI;AACpE;AACA,WAAW,EAgEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,GAAG,gCAAgC,GAAG,gCAAgC;AACtI;AACA,uCAAuC,uCAAuC,GAAG,iCAAiC;AAClH;AACA,qCAAqC,6BAA6B,GAAG,8BAA8B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+BAA+B,6BAA6B,EAAE;AACvF,yBAAyB,+BAA+B,6BAA6B,kBAAkB;AACvG,yBAAyB,+BAA+B,6BAA6B,+CAA+C;AACpI;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,GAAG,+BAA+B;AAC9F,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,uBAAuB,EAAE;AACzB,kCAAkC,wDAAO,kBAAkB,wDAAO;AAClE;AACA;AACA,8BAA8B,qBAAqB,EAAE,aAAa,UAAU,EAAE;AAC9E,oCAAoC,QAAQ;AAC5C,kCAAkC,EAAE;AACpC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD,aAAa;AACb;AACA;AACA,8BAA8B,qBAAqB,EAAE,aAAa,UAAU,EAAE;AAC9E,oCAAoC,QAAQ;AAC5C,kCAAkC,EAAE;AACpC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD,aAAa;AACb;AACA,gCAAgC,oEAAsB;AACtD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uDAAuD,iCAAiC,cAAc;AACtG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wCAAwC,oEAAsB;AAC9D;AACA;AACA,wCAAwC,oEAAsB;AAC9D;AACA;AACA,wCAAwC,oEAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,8BAA8B;AACxE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sEAAsE;AACtE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,wiBAAwiB,YAAY;AACpjB,iCAAiC,qEAAuB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAwDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACteAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+SAA+S,QAAQ;AACvT;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,aAAa,+HAA+H;AAC5I,aAAa,4FAA4F;AACzG,aAAa,sEAAsE;AACnF,aAAa,wEAAwE;AACrF,aAAa,gEAAgE;AAC7E,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,mBAAmB,cAAc,aAAa,8BAA8B,mBAAmB,eAAe,oBAAoB,aAAa;AAC/K,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,mBAAmB,cAAc,8BAA8B,mBAAmB,cAAc,4BAA4B,iBAAiB,gBAAgB,gDAAgD,YAAY,oBAAoB,YAAY;AACzR,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,aAAa,qBAAqB;AAClE,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6FAA6F,OAAO,EAAE,WAAW;AACjH,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6FAA6F,OAAO,EAAE,WAAW;AACjH,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,sCAAsC,OAAO,EAAE,WAAW;AAC1D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2KAA2K,aAAa;AACxL;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,YAAY,qCAAqC,GAAG,uCAAuC;AAC3F,kBAAkB,oCAAoC,GAAG,2BAA2B;AACpF;AACA,qCAAqC,8DAAgB;AACrD;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,8EAA8E,OAAO,EAAE,WAAW;AAClG,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6EAA6E,OAAO,EAAE,WAAW;AACjG,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mLAAmL,aAAa;AAChM;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,YAAY,qCAAqC,GAAG,uCAAuC;AAC3F,kBAAkB,oCAAoC,GAAG,2BAA2B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6EAA6E,OAAO,EAAE,WAAW;AACjG,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,4EAA4E,OAAO,EAAE,WAAW;AAChG,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,4KAA4K,aAAa;AACzL;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gdAAgd,WAAW,4ZAA4Z,KAAK;AAC53B;AACA,aAAa;AACb;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uDAAuD,aAAa,iDAAiD,SAAS;AAC9H;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wCAAwC,yBAAyB;AACjE;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,EAAE;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,2CAA2C,EAAE;AAC7C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,YAAY;AACtB,2CAA2C,EAAE;AAC7C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,kEAAkE,4BAA4B;AAC9F,gEAAgE,2BAA2B;AAC3F,gEAAgE,2BAA2B;AAC3F;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uXAAuX,8BAA8B,6DAA6D,6BAA6B,kDAAkD,8BAA8B;AAC/jB,uDAAuD,aAAa,8BAA8B,sDAAsD,cAAc,oDAAoD,UAAU;AACpO,aAAa;AACb;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,6BAA6B,8BAA8B;AAC3D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,iCAAiC,qCAAqC;AACtE,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,iCAAiC,qCAAqC;AACtE,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C,EAAE;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,QAAQ;AAClB,+CAA+C,EAAE;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,IAAI;AACd,wDAAwD,EAAE;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,IAAI;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0XAA0X,+BAA+B,sDAAsD,iCAAiC,gEAAgE,0CAA0C;AAC1lB,uDAAuD,aAAa,8BAA8B,sDAAsD,cAAc,oDAAoD,UAAU;AACpO,aAAa;AACb;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,EAAE;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,qDAAqD,EAAE;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yDAAyD,4BAA4B;AACrF;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+aAA+a,8BAA8B,+DAA+D,uCAAuC;AACnjB,uDAAuD,aAAa,8BAA8B,sDAAsD,cAAc,oDAAoD,UAAU;AACpO,aAAa;AACb;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,EAAE;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,WAAW;AACrB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yDAAyD,4BAA4B;AACrF;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qbAAqb,8BAA8B;AACnd,uDAAuD,aAAa,8BAA8B,sDAAsD,cAAc,oDAAoD,UAAU;AACpO,aAAa;AACb;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,gBAAgB,iCAAiC;AACjD,CAAC;AACD,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA,gDAAgD,OAAO;AACvD,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA,uCAAuC,OAAO;AAC9C,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA,uCAAuC,OAAO;AAC9C,WAAW,EAAE;AACb;AACA,KAAK,mFAAmF;AACxF,KAAK,6EAA6E;AAClF,KAAK,uEAAuE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB,sDAAQ;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB,4DAAc;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB,8DAAgB;AAClC;AACA;AACA;AACA;AACA,2BAA2B,uCAAuC,GAAG,mCAAmC,GAAG,uCAAuC;AAClJ,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE,6BAA6B,uCAAuC;AACpE,6BAA6B,uCAAuC;AACpE;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,4CAA4C;AAC5C;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB,iBAAiB,kCAAkC;AACnD;AACA,sBAAsB,6DAAe;AACrC,iBAAiB,8EAA8E;AAC/F,iBAAiB,gFAAgF;AACjG,iBAAiB,+EAA+E;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,w7CAAw7C,wBAAwB;AACh9C;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2YAA2Y,uBAAuB;AACla;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+DAA+D;AAChF,iBAAiB,oEAAoE;AACrF,iBAAiB,oEAAoE;AACrF,iBAAiB,oEAAoE;AACrF;AACA;AACA,iBAAiB,yDAAyD;AAC1E,iBAAiB,yDAAyD;AAC1E,iBAAiB,yDAAyD;AAC1E,iBAAiB,yDAAyD;AAC1E,iBAAiB,yDAAyD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,UAAU;AAC7C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qLAAqL,oBAAoB,kFAAkF,WAAW,iCAAiC,YAAY,gFAAgF,UAAU;AAC7a,8CAA8C,aAAa,mBAAmB,2BAA2B,eAAe,qBAAqB,WAAW,2BAA2B,qBAAqB,kBAAkB,UAAU,gBAAgB,kBAAkB,aAAa,8IAA8I,uBAAuB,yCAAyC,kBAAkB,aAAa,uBAAuB,mBAAmB,aAAa,kBAAkB,sCAAsC,0BAA0B,kBAAkB,2BAA2B,SAAS,YAAY,eAAe,yBAAyB,2BAA2B,WAAW;AACzxB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,UAAU;AAC7C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+KAA+K,oBAAoB,kFAAkF,WAAW,iCAAiC,YAAY,gFAAgF,UAAU;AACva,8CAA8C,aAAa,mBAAmB,2BAA2B,eAAe,qBAAqB,WAAW,2BAA2B,qBAAqB,kBAAkB,UAAU,gBAAgB,kBAAkB,aAAa,8IAA8I,uBAAuB,yCAAyC,kBAAkB,aAAa,uBAAuB,mBAAmB,aAAa,kBAAkB,sCAAsC,0BAA0B,kBAAkB,2BAA2B,SAAS,YAAY,eAAe,yBAAyB,2BAA2B,WAAW;AACzxB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,UAAU;AAC7C,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iLAAiL,oBAAoB,kFAAkF,WAAW,iCAAiC,YAAY,gFAAgF,UAAU;AACza,8CAA8C,aAAa,mBAAmB,2BAA2B,eAAe,qBAAqB,WAAW,2BAA2B,qBAAqB,kBAAkB,UAAU,gBAAgB,kBAAkB,aAAa,8IAA8I,uBAAuB,yCAAyC,kBAAkB,aAAa,uBAAuB,mBAAmB,aAAa,kBAAkB,6aAA6a,0BAA0B,kBAAkB,qBAAqB,SAAS,YAAY,eAAe,yBAAyB,2BAA2B,WAAW,sCAAsC,0BAA0B,kBAAkB,2BAA2B,SAAS,YAAY,eAAe,yBAAyB,2BAA2B,WAAW;AAC12C,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,QAAQ;AAC/B,uBAAuB,EAAE;AACzB;AACA,2BAA2B,QAAQ;AACnC,4BAA4B,WAAW,EAAE,GAAG,EAAE,sBAAsB,EAAE,UAAU,EAAE,GAAG;AACrF;AACA,+BAA+B,EAAE,IAAI,WAAW,EAAE,sBAAsB,EAAE,UAAU;AACpF;AACA;AACA;AACA,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA;AACA,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+JAA+J,4BAA4B,gUAAgU,4BAA4B,oWAAoW,4BAA4B;AACv5B;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,iBAAiB;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,mCAAmC,8DAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sHAAsH,2BAA2B,qCAAqC,2BAA2B;AACjN;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gIAAgI,uCAAuC,kBAAkB,uCAAuC,+CAA+C,qCAAqC,kBAAkB,qCAAqC;AAC3W;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sHAAsH,0CAA0C,uCAAuC,2CAA2C;AAClP;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sHAAsH,qCAAqC;AAC3J;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2HAA2H,qCAAqC;AAChK;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,q3BAAq3B,iCAAiC;AACt5B;AACA,aAAa;AACb;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6SAA6S,aAAa;AAC1T;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gUAAgU,aAAa;AAC7U;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa,sEAAsE;AACnF,aAAa,sEAAsE;AACnF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,6DAAe,EAAE,kCAAkC;AAC7E,mBAAmB,EAAE;AACrB,uBAAuB,2DAAa,EAAE,4CAA4C,iCAAiC,GAAG;AACtH,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,0EAA0E;AACjH,mBAAmB,EAAE;AACrB,uBAAuB,6DAAe,EAAE,kDAAkD;AAC1F,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,66CAA66C,oBAAoB,4CAA4C,0BAA0B;AACvgD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa,sEAAsE;AACnF,aAAa,sEAAsE;AACnF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,6DAAe,EAAE,kCAAkC;AAC7E,mBAAmB,EAAE;AACrB,uBAAuB,2DAAa,EAAE,4CAA4C,iCAAiC,GAAG;AACtH,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,0EAA0E;AACjH,mBAAmB,EAAE;AACrB,uBAAuB,6DAAe,EAAE,kDAAkD;AAC1F,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,4ZAA4Z,uBAAuB,4CAA4C,0BAA0B;AACzf;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa,sEAAsE;AACnF,aAAa,sEAAsE;AACnF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,6DAAe,EAAE,kCAAkC;AAC7E,mBAAmB,EAAE;AACrB,uBAAuB,2DAAa,EAAE,4CAA4C,iCAAiC,GAAG;AACtH,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,0EAA0E;AACjH,mBAAmB,EAAE;AACrB,uBAAuB,6DAAe,EAAE,kDAAkD;AAC1F,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,olBAAolB,oBAAoB,4CAA4C,0BAA0B;AAC9qB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa,sEAAsE;AACnF,aAAa,sEAAsE;AACnF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,6DAAe,EAAE,kCAAkC;AAC7E,mBAAmB,EAAE;AACrB,uBAAuB,2DAAa,EAAE,4CAA4C,iCAAiC,GAAG;AACtH,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,0EAA0E;AACjH,mBAAmB,EAAE;AACrB,uBAAuB,6DAAe,EAAE,kDAAkD;AAC1F,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,wbAAwb,uBAAuB,4CAA4C,0BAA0B;AACrhB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAA8D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,wEAAwE;AACrF,aAAa,sEAAsE;AACnF,aAAa,sEAAsE;AACnF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,6DAAe,EAAE,kCAAkC;AAC7E,mBAAmB,EAAE;AACrB,uBAAuB,2DAAa,EAAE,4CAA4C,iCAAiC,GAAG;AACtH,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,0EAA0E;AACjH,mBAAmB,EAAE;AACrB,uBAAuB,6DAAe,EAAE,kDAAkD;AAC1F,mBAAmB,EAAE;AACrB,uBAAuB,4DAAc,EAAE,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iYAAiY,uBAAuB,4CAA4C,0BAA0B;AAC9d;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC,4DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA,2CAA2C,EAAE;AAC7C,gDAAgD,qEAAe;AAC/D;AACA,6CAA6C,yCAAyC;AACtF;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gYAAgY,0BAA0B;AAC1Z;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,+BAA+B,yDAAW;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,yDAAW;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,yDAAW,EAAE,8CAA8C;AAC1F,mCAAmC,6DAAe,EAAE,4EAA4E;AAChI;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6uBAA6uB,2BAA2B;AACxwB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,gCAAgC,6DAAe,EAAE,kFAAkF;AACnI,oCAAoC,8DAAgB;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,0DAAY;AAC5C;AACA;AACA,uBAAuB,6BAA6B,GAAG,6BAA6B,GAAG,uDAAuD;AAC9I;AACA,SAAS;AACT,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA,uBAAuB,6BAA6B,GAAG,6BAA6B;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uwBAAuwB,wBAAwB;AAC/xB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,0FAA0F,GAAG,iCAAiC;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oBAAoB,8FAA8F;AAClH;AACA;AACA,wBAAwB,gFAAgF;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6FAA6F,OAAO,EAAE,WAAW;AACjH,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6FAA6F,OAAO,EAAE,WAAW;AACjH,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,sCAAsC,OAAO,EAAE,WAAW;AAC1D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6NAA6N,sBAAsB,2MAA2M,aAAa;AAC3c;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kEAAkE,GAAG,iCAAiC;AACtG;AACA;AACA,aAAa;AACb,SAAS;AACT,2DAA2D,0CAA0C;AACrG;AACA;AACA,2EAA2E,GAAG,iBAAiB;AAC/F;AACA;AACA,aAAa;AACb,SAAS;AACT,6DAA6D,0CAA0C;AACvG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mlCAAmlC,gCAAgC,6CAA6C,+BAA+B,qDAAqD,wCAAwC;AAC5xC;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kEAAkE,GAAG,iCAAiC;AACtG;AACA;AACA,aAAa;AACb,SAAS;AACT,2DAA2D,0CAA0C;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mzBAAmzB,uBAAuB,6CAA6C,sBAAsB,qDAAqD,+BAA+B;AACj+B;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,0EAA0E,GAAG,iCAAiC,IAAI;AAClH;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yDAAW,EAAE,uEAAuE;AACnH,oCAAoC,yDAAW;AAC/C;AACA;AACA;AACA;AACA;AACA,4BAA4B,oGAAoG;AAChI,qBAAqB,8FAA8F;AACnH,SAAS;AACT;AACA,+CAA+C,yDAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAsD;AAC1F,aAAa;AACb,SAAS;AACT;AACA,6CAA6C,yDAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qBAAqB,8FAA8F;AACnH,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oDAAoD;AACpD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sDAAsD;AACtD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wDAAwD;AACxD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,ytBAAytB,uBAAuB,sRAAsR,WAAW;AACjhC;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uCAAuC,2DAAa;AACpD;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD,SAAS;AACT,sCAAsC,2DAAa;AACnD;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD;AAC3E,SAAS;AACT,mDAAmD,2DAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,gEAAgE,2DAAa;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,4CAA4C,2DAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iEAAmB;AACpD,iCAAiC,gEAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAA8B;AAChE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,yCAAyC,2DAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,sDAAsD,2DAAa;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,2CAA2C,2DAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,wjDAAwjD,yBAAyB;AACjlD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6CAA6C,OAAO,EAAE,WAAW;AACjE,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,6CAA6C,OAAO,EAAE,WAAW;AACjE,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,sCAAsC,OAAO,EAAE,WAAW;AAC1D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,+BAA+B,4DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC,6DAAe;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,4DAAc,EAAE,gEAAgE;AAChH,iCAAiC,4DAAc,EAAE,oEAAoE;AACrH,mCAAmC,4DAAc;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,4DAAc,EAAE,gEAAgE;AAChH,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,8DAAgB;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,8DAAgB,EAAE,+DAA+D,GAAG;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0kDAA0kD,uBAAuB;AACjmD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,6DAAe,EAAE,kFAAkF;AACnI;AACA,uCAAuC,2DAAa;AACpD;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD,SAAS;AACT;AACA,+BAA+B,yDAAW,EAAE,uEAAuE;AACnH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6cAA6c,gCAAgC,6CAA6C,+BAA+B,qDAAqD,wCAAwC;AACtpB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,yEAAyE,GAAG,iCAAiC;AAC7G,0DAA0D,qCAAqC;AAC/F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,4mBAA4mB,yBAAyB,6CAA6C,wBAAwB,qDAAqD,iCAAiC;AAChyB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB,qCAAqC,GAAG,mDAAmD;AAClH,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,0FAA0F;AAC3G,iBAAiB,+BAA+B;AAChD;AACA,6BAA6B,oEAAsB;AACnD;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,uBAAuB;AACvB;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sHAAsH,MAAM,yFAAyF,MAAM;AAC3N;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,4FAA4F;AAC7G,iBAAiB,qFAAqF;AACtG;AACA,6BAA6B,oEAAsB;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAiE;AAC9E,aAAa,oDAAoD;AACjE;AACA,iCAAiC;AACjC;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,sBAAsB;AACtB;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2IAA2I,MAAM,oFAAoF,MAAM;AAC3O;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,uCAAuC,QAAQ;AAC/C,sCAAsC,iBAAiB,KAAK,WAAW,MAAM,mBAAmB,KAAK,WAAW,MAAM,GAAG;AACzH;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,kCAAkC,2DAAa;AAC/C;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,mBAAmB,iMAAiM,sBAAsB;AACrT;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,QAAQ;AACnF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,OAAO;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,QAAQ;AAC/B,uBAAuB,EAAE;AACzB;AACA,2BAA2B,QAAQ;AACnC,4BAA4B,WAAW,EAAE,GAAG,EAAE,sBAAsB,EAAE,UAAU,EAAE,GAAG;AACrF;AACA,+BAA+B,EAAE,IAAI,WAAW,EAAE,sBAAsB,EAAE,UAAU;AACpF;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,QAAQ;AAC/B,uBAAuB,EAAE;AACzB;AACA,2BAA2B,QAAQ;AACnC,2BAA2B,EAAE;AAC7B;AACA,4BAA4B,WAAW,EAAE,GAAG,EAAE,sBAAsB,EAAE,UAAU,EAAE,YAAY,OAAO,UAAU,SAAS,EAAE;AAC1H;AACA,qCAAqC,EAAE,IAAI,WAAW,EAAE,sBAAsB,EAAE,UAAU;AAC1F;AACA;AACA;AACA,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA;AACA,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD,iBAAiB,mCAAmC;AACpD;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D,6BAA6B,gCAAgC;AAC7D;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,6BAA6B,uEAAyB;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+JAA+J,8BAA8B,wTAAwT,8BAA8B,4VAA4V,8BAA8B,gVAAgV,8BAA8B;AAC3vC;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2EAA2E,iBAAiB;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,0BAA0B;AACvC,aAAa,0CAA0C;AACvD;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,wGAAwG,OAAO,gNAAgN,kBAAkB,iMAAiM,yBAAyB;AAC3iB,gCAAgC,kBAAkB,4BAA4B,2BAA2B,aAAa,mBAAmB,cAAc,YAAY,uBAAuB,eAAe,wCAAwC,YAAY,mBAAmB,cAAc,eAAe,eAAe,iBAAiB;AAC7U,aAAa;AACb;AACA,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6FAA6F,OAAO;AACpG;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2oBAA2oB,kCAAkC,gDAAgD,2BAA2B;AACxvB;AACA,aAAa;AACb;AACA,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,+BAA+B,EAAE;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,+BAA+B,EAAE;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,+BAA+B,EAAE;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,0BAA0B,WAAW,IAAI,0BAA0B;AACnE,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,8BAA8B;AAC/C,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAsCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,GAAG;AAC3B;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,GAAG;AAC3B;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,ueAAue,MAAM;AAC7e;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAcV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,GAAG;AAC3B;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAsBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,GAAG;AAC3B;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,oQAAoQ,WAAW,6JAA6J,kCAAkC,iOAAiO,gBAAgB,GAAG,qBAAqB,+BAA+B,cAAc;AACpwB;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,yRAAyR,WAAW,6KAA6K,gBAAgB,GAAG,qBAAqB,+BAA+B,cAAc,uHAAuH,kCAAkC;AAC/rB;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,yDAAU;AACtC,SAAS;AACT;AACA,6BAA6B,yDAAU;AACvC,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,kXAAkX,uBAAuB;AACzY;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,yDAAU;AACtC,SAAS;AACT;AACA,6BAA6B,yDAAU;AACvC,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,6EAA6E;AAC1F,aAAa,uEAAuE;AACpF;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,gCAAgC,iCAAiC;AACjE,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAKV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,4BAA4B,gCAAgC,GAAG,uCAAuC,GAAG,uCAAuC;AAChJ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,GAAG;AAC3B;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,oLAAoL,WAAW,KAAK,aAAa,wiCAAwiC,KAAK;AAC9vC;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAgB;AAChD,QAAQ,wDAAgB;AACxB,QAAQ,wDAAgB;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qZAAqZ,uBAAuB,6BAA6B,GAAG,mBAAmB,6BAA6B,6BAA6B,GAAG,mBAAmB,sBAAsB,6BAA6B,GAAG,mBAAmB,0BAA0B,6BAA6B,GAAG,mBAAmB,gCAAgC,iCAAiC,GAAG,2KAA2K,6BAA6B,qEAAqE,6BAA6B,8DAA8D,6BAA6B,kEAAkE,6BAA6B,wEAAwE,iCAAiC;AACt1C,kCAAkC,UAAU,qBAAqB;AACjE,aAAa;AACb;AACA;AACA;AACA,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAgB;AAChD,QAAQ,wDAAgB;AACxB,QAAQ,wDAAgB;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qPAAqP,uBAAuB,6BAA6B,GAAG,mBAAmB,sBAAsB,iCAAiC,GAAG,2KAA2K,6BAA6B,8DAA8D,iCAAiC;AAChqB;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAgB;AAChD,QAAQ,wDAAgB;AACxB,QAAQ,wDAAgB;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qPAAqP,0BAA0B,cAAc,GAAG,mBAAmB,0BAA0B,cAAc,GAAG,mBAAmB,0BAA0B,eAAe,GAAG,mBAAmB,0BAA0B,eAAe,GAAG,mBAAmB,0BAA0B,uEAAuE,GAAG,mBAAmB,0BAA0B,qEAAqE,GAAG,mBAAmB,0BAA0B,0EAA0E,GAAG,8KAA8K,cAAc,kEAAkE,cAAc,kEAAkE,eAAe,kEAAkE,eAAe,mEAAmE,uEAAuE,mEAAmE,qEAAqE,mEAAmE,0EAA0E;AAC/oD;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAgB;AAChD,QAAQ,wDAAgB;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qPAAqP,0BAA0B;AAC/Q;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAgB;AAChD;AACA,QAAQ,wDAAgB;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,wDAAgB;AACxB;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,qPAAqP,0BAA0B,eAAe,GAAG,8KAA8K,eAAe;AAC9d;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,iEAAmB;AAClC;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE,iEAAmB;AACtC;AACA,SAAS;AACT;AACA,4EAA4E,GAAG,iCAAiC;AAChH,sDAAsD,qDAAqD;AAC3G,sDAAsD,gDAAgD;AACtG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6KAA6K,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACpV;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,SAAS;AACT,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0ZAA0Z,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACjkB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,wEAAwE;AACxE;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA,4BAA4B,oEAAoE;AAChG,SAAS;AACT,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA,4BAA4B,oEAAoE;AAChG,SAAS;AACT,uCAAuC,4DAAc;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gDAAgD,6DAAe;AAC/D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,yqBAAyqB,qBAAqB,wDAAwD,qBAAqB,sDAAsD,qBAAqB;AACt1B;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,4DAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,4BAA4B,2CAA2C;AACvE,SAAS;AACT,4CAA4C,4DAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,4BAA4B,2CAA2C;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8ZAA8Z,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACrkB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0EAA0E;AAC1E;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,4DAAc;AACtD;AACA;AACA;AACA,SAAS;AACT,0CAA0C,6DAAe;AACzD;AACA;AACA;AACA,4BAA4B,iDAAiD;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,wZAAwZ,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AAC/jB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oEAAoE;AACpE,4DAA4D,6CAA6C,MAAM,iBAAiB;AAChI,SAAS;AACT;AACA,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA;AACA;AACA,4BAA4B,6DAA6D;AACzF,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+QAA+Q,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACtb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qEAAqE;AACrE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,4DAAc;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT,yCAAyC,4DAAc;AACvD;AACA;AACA;AACA,SAAS;AACT,0CAA0C,6DAAe;AACzD;AACA;AACA;AACA,4BAA4B,4CAA4C;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,kiBAAkiB,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACzsB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,qDAAqD;AACrD;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE,SAAS;AACT,uCAAuC,4DAAc;AACrD;AACA;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE,SAAS;AACT,2CAA2C,6DAAe;AAC1D;AACA;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE,SAAS;AACT,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6qBAA6qB,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACp1B;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yEAAyE;AACzE;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,0CAA0C,2DAAa;AACvD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,4BAA4B,8CAA8C;AAC1E,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6EAA6E;AAC7E;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,+EAA+E;AAC/E;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,uCAAuC,EAAE;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD,gDAAgD;AAChD;AACA;AACA;AACA,mDAAmD,EAAE;AACrD,oDAAoD;AACpD;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C,2DAAa;AACvD;AACA;AACA;AACA,SAAS;AACT,0CAA0C,2DAAa;AACvD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,0CAA0C,6DAAe;AACzD;AACA;AACA;AACA,4BAA4B,oDAAoD;AAChF,SAAS;AACT,mDAAmD,2DAAa;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB,+BAA+B;AAChD,iBAAiB,4CAA4C;AAC7D,iBAAiB,oDAAoD;AACrE,iBAAiB,gDAAgD;AACjE;AACA,4BAA4B,sDAAsD;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,yrBAAyrB,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACh2B;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,aAAa,mEAAmE;AAChF,aAAa,2DAA2D;AACxE,aAAa,2DAA2D;AACxE;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iEAAiE,mBAAmB;AACpF;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,sFAAsF,mBAAmB;AACzG;AACA;AACA;AACA,sFAAsF,mBAAmB;AACzG;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAkD;AAC9E;AACA,SAAS;AACT,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAkD;AAC9E;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,0DAAY;AAC5B;AACA;AACA,2BAA2B,yBAAyB;AACpD,gCAAgC,6CAA6C;AAC7E;AACA,aAAa;AACb,gBAAgB,4DAAc;AAC9B;AACA;AACA;AACA,gCAAgC,8DAA8D;AAC9F;AACA,aAAa;AACb,gBAAgB,4DAAc;AAC9B;AACA;AACA;AACA;AACA,gCAAgC,mEAAmE;AACnG;AACA,aAAa;AACb,gBAAgB,4DAAc;AAC9B;AACA;AACA;AACA;AACA,gCAAgC,gEAAgE;AAChG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,woBAAwoB,qBAAqB,wDAAwD,cAAc,sDAAsD,cAAc;AACvyB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qEAAqE;AACrE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,4DAAc;AAC1D;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,6DAAe;AACzD;AACA;AACA,4BAA4B,4CAA4C;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,4ZAA4Z,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACnkB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oEAAoE;AACpE;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,SAAS;AACT;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA,4BAA4B,2CAA2C;AACvE,SAAS;AACT,+CAA+C,0DAAY;AAC3D;AACA;AACA;AACA,uBAAuB,iCAAiC,GAAG,mCAAmC,GAAG,iCAAiC;AAClI,4BAA4B,iDAAiD;AAC7E,SAAS;AACT,kDAAkD,0DAAY;AAC9D;AACA;AACA;AACA,uBAAuB,4BAA4B,GAAG,4BAA4B;AAClF,4BAA4B,iDAAiD;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iiBAAiiB,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AACxsB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uEAAuE;AACvE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,4DAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,4BAA4B,kEAAkE;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mRAAmR,qBAAqB,kDAAkD,qBAAqB,sDAAsD,qBAAqB;AAC1b;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAUV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY;AACxB;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY;AACxB;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4DAAc,EAAE,iCAAiC;AAChF,gCAAgC,4DAAc,EAAE,8CAA8C;AAC9F,iCAAiC,4DAAc,EAAE,iDAAiD;AAClG,iCAAiC,2DAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAa;AAC9C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY,EAAE;AAC1B,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4DAAc,EAAE,iCAAiC;AAChF,gCAAgC,4DAAc,EAAE,8CAA8C;AAC9F,iCAAiC,4DAAc,EAAE,iDAAiD;AAClG,iCAAiC,2DAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAa;AAC9C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY,EAAE;AAC1B,KAAK,OAAO,uDAAS;AACrB;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY;AACxB;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAY;AACxB;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,cAAc,2BAA2B,eAAe,kBAAkB,kBAAkB;AAC5H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gCAAgC,kBAAkB,WAAW,gBAAgB;AAC7E;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iPAAiP,KAAK,MAAM,KAAK,MAAM,KAAK;AAC5Q,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,gCAAgC,YAAY,kBAAkB,kBAAkB,aAAa,WAAW,eAAe,YAAY;AACnI,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2nBAA2nB,gBAAgB;AAC3oB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAeV;AACD,WAAW,EAAE;AACbbsDAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAoB,0DAAW;AAC/B,oBAAoB,kEAAmB;AACvC,oBAAoB,4DAAY;AAChC,oBAAoB,gEAAkB;AACtC,oBAAoB,qDAAa;AACjC;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,QAAQ,WAAW,UAAU;AACvD,0DAA0D,QAAQ;AAClE,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAkCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EASV;AACD;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAqBV;AACD;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,6DAAM;AACzC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,2DAAI;AACpC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB,kBAAkB,UAAU,mBAAmB;AACvE;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,uEAAY,EAAE;AAC1B,KAAK,oBAAoB;AACzB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mBAAmB;AACtD,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,kIAAkI,kBAAkB;AACpJ,oIAAoI,kBAAkB;AACtJ,mIAAmI,kBAAkB;AACrJ,iGAAiG,SAAS,0BAA0B,GAAG;AACvI;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,yBAAyB,eAAe,QAAQ,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD,4CAA4C,WAAW;AACvD,gDAAgD,kBAAkB,MAAM,GAAG,mBAAmB,EAAE;AAChG;AACA;AACA,sGAAsG,mBAAmB;AACzH;AACA;AACA,4GAA4G,mBAAmB;AAC/H;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gGAAgG,cAAc;AAC9G;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,QAAQ,WAAW,UAAU;AACtD;AACA;AACA,yBAAyB,QAAQ,WAAW,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,OAAO,gEAAU;AACtB;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,WAAW,EAgBV;AACD;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,gEAAkB;AAC5C;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,0BAA0B,0DAAW,EAAE,kEAAmB,EAAE,4DAAY,EAAE,gEAAkB,0BAA0B,gEAAY;AAClI;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,y2CAAy2C,aAAa,yBAAyB,aAAa,mEAAmE,WAAW,wDAAwD,cAAc,ggCAAggC,WAAW,6YAA6Y,WAAW,0jCAA0jC,aAAa,yBAAyB,aAAa,mEAAmE,WAAW,wDAAwD,cAAc,keAAke,aAAa;AACnsJ,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,8CAA8C;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,2vCAA2vC,oBAAoB,yPAAyP,cAAc,uBAAuB,UAAU;AACvjD,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,0aAA0a;AAC1a,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6CAA6C;AAC7C,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,okBAAokB,ywCAAywC,grBAAgrB,wSAAwS,46CAA46C,0SAA0S,cAAc;AACzgJ,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,y3DAAy3D,cAAc,YAAY,aAAa,mBAAmB,IAAI,IAAI,MAAM,gBAAgB,MAAM,QAAQ,OAAO,gBAAgB,cAAc,YAAY,aAAa,wBAAwB,IAAI,IAAI,MAAM,gBAAgB,MAAM,WAAW,OAAO,gBAAgB,cAAc,YAAY,aAAa,yBAAyB,IAAI,IAAI,MAAM,gBAAgB,MAAM,WAAW,OAAO,gBAAgB,cAAc,YAAY,aAAa,6BAA6B,IAAI,IAAI,MAAM,gBAAgB,MAAM,aAAa,OAAO,gBAAgB,cAAc,YAAY,aAAa,iCAAiC,IAAI,IAAI,MAAM,gBAAgB,MAAM,eAAe,OAAO,gBAAgB,cAAc,YAAY,aAAa,iBAAiB,IAAI,IAAI,MAAM,gBAAgB,MAAM,OAAO,OAAO,gBAAgB,cAAc,YAAY,aAAa,wBAAwB,IAAI,IAAI,MAAM,gBAAgB,MAAM,aAAa,OAAO,46BAA46B,MAAM,IAAI,cAAc,eAAe,aAAa,mBAAmB,IAAI,IAAI,MAAM,eAAe,OAAO,gBAAgB,MAAM,IAAI,cAAc,eAAe,aAAa,wBAAwB,IAAI,IAAI,MAAM,eAAe,OAAO,gBAAgB,MAAM,IAAI,cAAc,eAAe,aAAa,yBAAyB,IAAI,IAAI,MAAM,iBAAiB,OAAO,gBAAgB,MAAM,IAAI,cAAc,eAAe,aAAa,6BAA6B,IAAI,IAAI,MAAM,gBAAgB,OAAO,gBAAgB,MAAM,IAAI,cAAc,eAAe,aAAa,iCAAiC,IAAI,IAAI,MAAM,gBAAgB,OAAO,gBAAgB,MAAM,IAAI,cAAc,eAAe,aAAa,iBAAiB,IAAI,IAAI,MAAM,eAAe,OAAO;AACn7I,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,i4IAAi4I,MAAM,aAAa,OAAO,YAAY,MAAM,aAAa,OAAO,YAAY,MAAM,aAAa,OAAO,YAAY,MAAM,aAAa,OAAO,YAAY,MAAM,aAAa,OAAO,YAAY,MAAM,aAAa,OAAO,YAAY,KAAK,wBAAwB,MAAM,YAAY,MAAM,YAAY,iBAAiB,aAAa,IAAI,WAAW,SAAS,YAAY,eAAe,yBAAyB,IAAI,kBAAkB,OAAO,YAAY,eAAe,yBAAyB,IAAI,cAAc,cAAc,iBAAiB,IAAI,oDAAoD,OAAO,YAAY,eAAe,yBAAyB,IAAI,cAAc,cAAc,cAAc,IAAI,oDAAoD,OAAO;AAClnK,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,oXAAoX,eAAe,goBAAgoB,mCAAmC,cAAc,KAAK;AACzjC,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,gVAAgV,0NAA0N,WAAW,sJAAsJ,WAAW,2JAA2J,UAAU,wKAAwK,cAAc,sKAAsK,YAAY,2MAA2M,eAAe,mJAAmJ,mBAAmB;AACnmD,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,62BAA62B;AAC72B,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,k5EAAk5E,4oBAA4oB;AAC9hG,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,w4CAAw4C,aAAa,QAAQ,aAAa,YAAY,WAAW,qeAAqe;AACt6D,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA,cAAc,6CAA6C,UAAU,0CAA0C,UAAU,2CAA2C,UAAU,sCAAsC,UAAU,6CAA6C,UAAU,2CAA2C,QAAQ,uCAAuC,QAAQ,0CAA0C,QAAQ,6CAA6C,QAAQ,yCAAyC,SAAS,yCAAyC,SAAS,yCAAyC,SAAS,sDAAsD,SAAS,wCAAwC,SAAS,qCAAqC,SAAS,0CAA0C,SAAS,kCAAkC,SAAS,0CAA0C,SAAS,yCAAyC,SAAS,2CAA2C,SAAS,iDAAiD,SAAS,4CAA4C,SAAS,yCAAyC,SAAS,iDAAiD,SAAS,0CAA0C,SAAS,kDAAkD,SAAS,4CAA4C,SAAS,mDAAmD,SAAS,4CAA4C,SAAS,2CAA2C,SAAS,2CAA2C,SAAS,gCAAgC,SAAS,qCAAqC,SAAS,yCAAyC,SAAS,sCAAsC,SAAS,mCAAmC,SAAS,oCAAoC,SAAS,uCAAuC,SAAS,oCAAoC,SAAS,oCAAoC,SAAS,qCAAqC,SAAS,qCAAqC,SAAS,gDAAgD,SAAS,mCAAmC,SAAS,mCAAmC,SAAS,sCAAsC,SAAS,sCAAsC,SAAS,sCAAsC,SAAS,qCAAqC,SAAS,qCAAqC;AACx8E,WAAW,EAAE;AACb;AACA,OAAO,oCAAoC,EAAE;AAC7C,KAAK,sEAAsE;AAC3E,KAAK,iEAAiE;AACtE,KAAK,mEAAmE;AACxE,KAAK,4DAA4D;AACjE,KAAK,sEAAsE;AAC3E,KAAK,mEAAmE;AACxE,KAAK,yDAAyD;AAC9D,KAAK,+DAA+D;AACpE,KAAK,oEAAoE;AACzE,KAAK,6DAA6D;AAClE,KAAK,8DAA8D;AACnE,KAAK,8DAA8D;AACnE,KAAK,sFAAsF;AAC3F,KAAK,4DAA4D;AACjE,KAAK,0DAA0D;AAC/D,KAAK,oEAAoE;AACzE,KAAK,mDAAmD;AACxD,KAAK,oEAAoE;AACzE,KAAK,kEAAkE;AACvE,KAAK,+DAA+D;AACpE,KAAK,0EAA0E;AAC/E,KAAK,iEAAiE;AACtE,KAAK,gEAAgE;AACrE,KAAK,0EAA0E;AAC/E,KAAK,6DAA6D;AAClE,KAAK,4EAA4E;AACjF,KAAK,iEAAiE;AACtE,KAAK,8EAA8E;AACnF,KAAK,iEAAiE;AACtE,KAAK,+DAA+D;AACpE,KAAK,+DAA+D;AACpE,KAAK,+CAA+C;AACpD,KAAK,yDAAyD;AAC9D,KAAK,iEAAiE;AACtE,KAAK,2DAA2D;AAChE,KAAK,qDAAqD;AAC1D,KAAK,uDAAuD;AAC5D,KAAK,6DAA6D;AAClE,KAAK,uDAAuD;AAC5D,KAAK,uDAAuD;AAC5D,KAAK,yDAAyD;AAC9D,KAAK,2DAA2D;AAChE,KAAK,gFAAgF;AACrF,KAAK,uDAAuD;AAC5D,KAAK,uDAAuD;AAC5D,KAAK,4DAA4D;AACjE,KAAK,6DAA6D;AAClE,KAAK,4DAA4D;AACjE,KAAK,2DAA2D;AAChE,KAAK,2DAA2D;AAChE;AACA,KAAK,6CAA6C;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,0BAA0B,4DAAY,kBAAkB,gBAAgB;AACxE,0BAA0B,4DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE22J;AAC32J;;;;;;;;;;;;;ACjumBA;AAAe,2GAA4C,eAAe,2qBAA2qB,yCAAyC,2BAA2B,oCAAoC,4CAA4C,2BAA2B,wkSAAwkS,YAAY,oZAAoZ,YAAY,sFAAsF,kBAAkB,yTAAyT,YAAY,sFAAsF,kBAAkB,uTAAuT,YAAY,sFAAsF,kBAAkB,kTAAkT,YAAY,sFAAsF,kBAAkB,+SAA+S,YAAY,sFAAsF,kBAAkB,0LAA0L,YAAY,6PAA6P,YAAY,qMAAqM,eAAe,iJAAiJ,ifAAif,0xJ","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./demo/$$_lazy_route_resource lazy recursive\";","// NG2\nimport { Component, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n// Vendor\nimport { NovoToastService, NovoModalService } from 'novo-elements';\n\n@Component({\n  selector: 'novo-demo-app',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  menuOpen: boolean = false;\n  designRoutes: Array<any>;\n  componentRoutes: Array<any>;\n  formRoutes: Array<any>;\n  navigationRoutes: Array<any>;\n  layoutRoutes: Array<any>;\n  utilRoutes: Array<any>;\n\n  constructor(router: Router, viewContainerRef: ViewContainerRef, toaster: NovoToastService, modalService: NovoModalService) {\n    toaster.parentViewContainer = viewContainerRef;\n    modalService.parentViewContainer = viewContainerRef;\n\n    this.menuOpen = false;\n\n    this.designRoutes = router.config.filter((r: any) => r.data.section === 'design').sort(this.sortMenu);\n    this.componentRoutes = router.config.filter((r: any) => r.data.section === 'components').sort(this.sortMenu);\n    this.formRoutes = router.config.filter((r: any) => r.data.section === 'form-controls').sort(this.sortMenu);\n    this.layoutRoutes = router.config.filter((r: any) => r.data.section === 'layouts').sort(this.sortMenu);\n    this.utilRoutes = router.config.filter((r: any) => r.data.section === 'utils').sort(this.sortMenu);\n\n    router.events.subscribe(() => {\n      window.scrollTo(0, 0);\n      this.menuOpen = false;\n    });\n  }\n\n  sortMenu(a, b) {\n    if (a.data.title < b.data.title) {\n      return -1;\n    }\n    if (a.data.title > b.data.title) {\n      return 1;\n    }\n    return 0;\n  }\n\n  toggleMenu() {\n    this.menuOpen = !this.menuOpen;\n  }\n}\n","// NG2\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NovoExamplesRoutesModule } from 'novo-examples';\n\n// Vendor\nimport {\n  NovoElementsModule,\n  NovoElementProviders,\n  FormUtils,\n  NovoLabelService,\n  FieldInteractionApi,\n  NovoToastService,\n  NovoModalService,\n  AppBridgeService,\n  DevAppBridgeService,\n  // NovoTemplateService,\n} from 'novo-elements';\n\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\n\nexport function provideFieldInteractionAPI(toast, modal, formUtils, http, labels) {\n  const fieldInteractionApi = new FieldInteractionApi(toast, modal, formUtils, http, labels);\n  fieldInteractionApi.globals = {\n    TEST: 'I AM A GLOBAL!',\n  };\n  return fieldInteractionApi;\n}\n\nexport function provideAppBridgeService(http) {\n  if (!environment.production) {\n    return new DevAppBridgeService(http);\n  }\n  return new AppBridgeService();\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    // NG2\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    // Vendor\n    NovoElementsModule,\n    NovoElementProviders.forRoot(),\n    // APP\n    NovoExamplesRoutesModule,\n  ],\n  providers: [\n    // NovoTemplateService,\n    FormUtils,\n    NovoLabelService,\n    {\n      provide: FieldInteractionApi,\n      useFactory: provideFieldInteractionAPI,\n      deps: [NovoToastService, NovoModalService, FormUtils, HttpClient, NovoLabelService],\n    },\n    {\n      provide: AppBridgeService,\n      useFactory: provideAppBridgeService,\n      deps: [HttpClient],\n    },\n  ],\n  entryComponents: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","import { Pipe, ChangeDetectorRef, Directive, Input, HostBinding, NgModule } from '@angular/core';\nimport { Subject, of, from } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/loader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Loader {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    load(url) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            /** @type {?} */\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onload = (/**\n             * @return {?}\n             */\n            () => {\n                if (xhr.status === 200) {\n                    try {\n                        resolve(JSON.parse(xhr.responseText));\n                    }\n                    catch (e) {\n                        reject(`Parse Error: Invalid JSON`);\n                    }\n                }\n                else {\n                    reject(xhr.statusText);\n                }\n            });\n            xhr.onerror = (/**\n             * @return {?}\n             */\n            () => {\n                reject('Network Error');\n            });\n            xhr.send();\n        }));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-assign-deep.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj) && obj !== null;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n}\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction mergeDeep(...args) {\n    /** @type {?} */\n    const startIndex = 1;\n    /** @type {?} */\n    const output = Object(args[0] || {});\n    // Cycle the source object arguments.\n    for (let a = startIndex; a < args.length; a++) {\n        /** @type {?} */\n        const from = args[a];\n        /** @type {?} */\n        const keys = Object.keys(Object(from));\n        // Cycle the properties.\n        for (let k = 0; k < keys.length; k++) {\n            /** @type {?} */\n            const key = keys[k];\n            // Merge arrays.\n            if (Array.isArray(output[key]) || Array.isArray(from[key])) {\n                /** @type {?} */\n                const o = Array.isArray(output[key]) ? output[key].slice() : [];\n                /** @type {?} */\n                const f = Array.isArray(from[key]) ? from[key].slice() : [];\n                output[key] = o.concat(f);\n            }\n            else if (isFunction(output[key]) || isFunction(from[key])) {\n                // Copy functions references.\n                output[key] = from[key];\n            }\n            else if (isObject(output[key]) || isObject(from[key])) {\n                // Extend objects.\n                output[key] = mergeDeep(output[key], from[key]);\n            }\n            else {\n                // Copy all other types.\n                output[key] = from[key];\n            }\n        }\n    }\n    return output;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/currency-overrides.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst currencyOverridesMap = {\n    PLN: 'zł',\n    SGD: 'S$',\n    HUF: 'Ft',\n    DKK: 'kr.',\n    SEK: 'kr',\n    NOK: 'kr',\n    ZAR: 'R',\n    RUB: '₽',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IFormatDefaults() { }\nif (false) {\n    /** @type {?} */\n    IFormatDefaults.prototype.number;\n    /** @type {?} */\n    IFormatDefaults.prototype.currency;\n    /** @type {?} */\n    IFormatDefaults.prototype.date;\n}\nclass Formats {\n    constructor() {\n        // Format formatDefaults\n        this.defaults = {\n            number: {},\n            currency: {},\n            date: {},\n        };\n        // Initially set the locale to the browser\n        this.setLocale(window.navigator.language);\n    }\n    /**\n     * @param {?} overrides\n     * @return {?}\n     */\n    override(overrides) {\n        if (overrides.locale) {\n            this.setLocale(overrides.locale);\n            delete overrides['locale'];\n        }\n        this.defaults = overrides;\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatNumber(value, format) {\n        /** @type {?} */\n        const _format = mergeDeep({}, this.defaults.number, format);\n        return new Intl.NumberFormat([this.locale, 'en-US'], _format).format(value);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatCurrency(value, format) {\n        /** @type {?} */\n        const _format = typeof format === 'string'\n            ? mergeDeep({}, { currency: format }, this.defaults.currency)\n            : mergeDeep({}, format, this.defaults.currency);\n        /** @type {?} */\n        const options = mergeDeep({ style: 'currency', currency: 'USD' }, _format);\n        if (this.overrideCurrency) {\n            if (this.overrideCurrency === 'None') {\n                return new Intl.NumberFormat([this.locale, 'en-US'], { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(value);\n            }\n            options.currency = this.overrideCurrency;\n        }\n        /** @type {?} */\n        const currencyValue = new Intl.NumberFormat([this.locale, 'en-US'], options).format(value);\n        return currencyOverridesMap[options.currency]\n            ? currencyValue.replace(options.currency, currencyOverridesMap[options.currency])\n            : currencyValue;\n    }\n    /**\n     * @param {?} format\n     * @return {?}\n     */\n    getDateOptions(format) {\n        /** @type {?} */\n        const shortHands = mergeDeep({}, this.defaults.date);\n        /** @type {?} */\n        let options = typeof format === 'string' ? shortHands[format] : format;\n        if (!options || Object.keys(options).length === 0) {\n            options = shortHands.dateShort;\n        }\n        if (this.use24HourTime) {\n            options.hour12 = false;\n        }\n        return options;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatDate(value, format) {\n        /** @type {?} */\n        const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n        /** @type {?} */\n        const options = this.getDateOptions(format);\n        /** @type {?} */\n        const locales = [...(this.overrideDateFormat ? [this.overrideDateFormat] : []), this.locale, 'en-US'];\n        return new Intl.DateTimeFormat(locales, options).format(_value);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatTime(value, format) {\n        /** @type {?} */\n        const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n        /** @type {?} */\n        const options = this.getDateOptions(format);\n        /** @type {?} */\n        const locales = [...(this.overrideDateFormat ? [this.overrideDateFormat] : []), this.locale, 'en-US'];\n        /** @type {?} */\n        let timeParts = Intl.DateTimeFormat(locales, options)\n            .formatToParts(_value)\n            .reduce((/**\n         * @param {?} obj\n         * @param {?} part\n         * @return {?}\n         */\n        (obj, part) => {\n            obj[part.type] = part.value;\n            return obj;\n        }), {});\n        if (this.use24HourTime) {\n            timeParts.hour = timeParts.hour === '24' ? '0' : timeParts.hour;\n        }\n        else {\n            timeParts.hour = timeParts.hour === '0' ? '12' : timeParts.hour;\n        }\n        /** @type {?} */\n        const dayPeriodPropertyName = Object.keys(timeParts).find((/**\n         * @param {?} n\n         * @return {?}\n         */\n        (n) => n.toLowerCase() === 'dayperiod'));\n        /** @type {?} */\n        const dayperiod = timeParts[dayPeriodPropertyName] || '';\n        return `${timeParts.hour}:${timeParts.minute}${dayperiod}`;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    format(value, format) {\n        if (!value) {\n            return value;\n        }\n        switch (format) {\n            case 'uppercase':\n                return value.toUpperCase();\n            case 'lowercase':\n                return value.toLowerCase();\n            case 'title':\n                return value.replace(/\\w\\S*/g, (/**\n                 * @param {?} txt\n                 * @return {?}\n                 */\n                (txt) => {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }));\n            case 'denormalize':\n                return value.replace(/([A-Z])/g, ' $1').replace(/^./, (/**\n                 * @param {?} str\n                 * @return {?}\n                 */\n                (str) => {\n                    return str.toUpperCase();\n                }));\n            default:\n                return value;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Formats.prototype.defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    Formats.prototype.locale;\n    /** @type {?} */\n    Formats.prototype.overrideDateFormat;\n    /** @type {?} */\n    Formats.prototype.overrideCurrency;\n    /** @type {?} */\n    Formats.prototype.use24HourTime;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/dictionary-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DictionaryManager {\n    constructor() {\n        this.dictionaries = {};\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    contains(locale) {\n        return !!this.dictionaries[locale];\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    get(locale) {\n        return this.dictionaries[locale] || this.dictionaries[locale.split('-')[0]];\n    }\n    /**\n     * @param {?} locale\n     * @param {?} translations\n     * @param {?} fallbackTranslations\n     * @return {?}\n     */\n    add(locale, translations, fallbackTranslations) {\n        this.dictionaries[locale] = mergeDeep({}, fallbackTranslations, translations);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DictionaryManager.prototype.dictionaries;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Default formats\n/** @type {?} */\nconst FORMAT_DEFAULTS = {\n    number: {\n        style: 'decimal',\n    },\n    currency: {\n        style: 'currency',\n        currency: 'USD',\n    },\n    date: {\n        short: {\n            // DD/MM/YYYY, HH:MM A - 02/14/2017, 1:17 PM\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n        },\n        medium: {\n            // MMM DD, YYYY, HH:MM A - Feb 14, 2017, 1:17 PM\n            month: 'short',\n            day: '2-digit',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n        },\n        long: {\n            // MMMM DD, YYYY, HH:MM A - Febuary 14, 2017, 1:17 PM\n            month: 'long',\n            day: '2-digit',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n        },\n        dateShort: {\n            // DEFAULT: DD/MM/YYYY - 02/14/2017\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric',\n        },\n        dateMedium: {\n            // MMM DD, YYYY - Feb 14, 2017\n            month: 'short',\n            day: '2-digit',\n            year: 'numeric',\n        },\n        dateLong: {\n            // MMMM DD, YYYY - Febuary 14, 2017\n            month: 'long',\n            day: '2-digit',\n            year: 'numeric',\n        },\n        timeShort: {\n            // HH:MM A - 1:17 PM\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n        },\n        timeLong: {\n            // HH:MM A Z - 1:17 PM CST\n            hour: 'numeric',\n            minute: '2-digit',\n            timeZoneName: 'short',\n            hour12: true,\n        },\n    },\n};\nclass Chomsky {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale) {\n        // Loader to load translations from a JSON file\n        this.loader = new Loader();\n        // Default location for translations\n        this.location = 'i18n/';\n        // Current locale\n        this.currentLocale = window.navigator.language;\n        // Dictionary Manger to handle translations that have been loaded\n        this.dictionaryManager = new DictionaryManager();\n        // Custom formats based on the locale\n        this.formats = new Formats();\n        // Object for default replacements, so users don't have to pass around each time\n        this.defaultReplacements = {};\n        // Handle for when the locale changes\n        this.onLocaleChange = new Subject();\n        if (locale) {\n            this.use(locale);\n        }\n    }\n    /**\n     * @param {?} location\n     * @return {?}\n     */\n    setLocation(location) {\n        this.location = location;\n    }\n    /**\n     * @param {?} defaultReplacements\n     * @return {?}\n     */\n    setDefaultReplacements(defaultReplacements) {\n        this.defaultReplacements = defaultReplacements;\n    }\n    /**\n     * @param {?} currency\n     * @return {?}\n     */\n    overrideCurrency(currency) {\n        this.formats.overrideCurrency = currency;\n    }\n    /**\n     * @param {?} use24HourTime\n     * @return {?}\n     */\n    forceDisplayTo24HourTime(use24HourTime) {\n        this.formats.use24HourTime = use24HourTime;\n    }\n    /**\n     * @param {?} dateFormatString\n     * @return {?}\n     */\n    overrideDateFormat(dateFormatString) {\n        this.formats.overrideDateFormat = dateFormatString;\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    use(locale) {\n        // Capture the pending task\n        /** @type {?} */\n        let pending;\n        // If we don't have the translations, load them\n        if (!this.dictionaryManager.get(locale)) {\n            pending = this.getTranslations(locale);\n        }\n        // Return the pending if we are fetching\n        if (typeof pending !== 'undefined') {\n            return pending;\n        }\n        else {\n            // Split out the language code from the locale\n            /** @type {?} */\n            const languageCode = (locale.split('-')[0] || '').toLowerCase();\n            // Return the translations if they are already loaded\n            /** @type {?} */\n            const currentTranslations = [this.dictionaryManager.get(locale), this.dictionaryManager.get(languageCode)];\n            this.applyLanguage(locale, currentTranslations[0], currentTranslations[1]);\n            return of(currentTranslations);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} interpolation\n     * @return {?}\n     */\n    translate(key, interpolation) {\n        /** @type {?} */\n        let value = this.getValue(key);\n        // Handle pluralization\n        if (value && typeof value === 'object') {\n            if (typeof interpolation === 'object') {\n                /** @type {?} */\n                const gender = interpolation.gender || 'other';\n                if (gender) {\n                    if (interpolation.quantity === 0 || interpolation.quantity) {\n                        if (value[gender].hasOwnProperty(interpolation.quantity)) {\n                            value = value[gender][interpolation.quantity];\n                        }\n                        else {\n                            if (interpolation.quantity === 0) {\n                                value = value[gender].zero;\n                            }\n                            else {\n                                value = value[gender].many;\n                            }\n                        }\n                    }\n                    else {\n                        throw new Error('Missing \"quantity\" property on the replacements!');\n                    }\n                }\n            }\n        }\n        // Handle interpolation\n        if ((interpolation || this.defaultReplacements) && value) {\n            /** @type {?} */\n            const replacements = Object.assign({}, this.defaultReplacements, interpolation);\n            value = value.replace(/{([^}]*)}/gi, (/**\n             * @param {?} m\n             * @param {?} param\n             * @return {?}\n             */\n            (m, param) => {\n                /** @type {?} */\n                const params = param.split(':');\n                if (params.length === 1) {\n                    /** @type {?} */\n                    let match = '';\n                    if (replacements.hasOwnProperty(param)) {\n                        match = replacements[param];\n                    }\n                    else {\n                        match = replacements;\n                    }\n                    return match;\n                }\n                /** @type {?} */\n                const unparsedValue = replacements[params[0]] || interpolation;\n                switch (params[1]) {\n                    case 'date':\n                        return this.formatDate(unparsedValue, params[2]);\n                    case 'currency':\n                        return this.formatCurrency(unparsedValue, params[2]);\n                    case 'number':\n                        return this.formatNumber(unparsedValue, params[2]);\n                    case 'format':\n                        /** @type {?} */\n                        const formats = params[2].split(',');\n                        /** @type {?} */\n                        let formattedString = unparsedValue;\n                        if (formats.length) {\n                            for (const format of formats) {\n                                formattedString = this.format(formattedString, format);\n                            }\n                        }\n                        else {\n                            formattedString = this.format(unparsedValue, params[2]);\n                        }\n                        return formattedString;\n                    default:\n                        return '';\n                }\n            }));\n        }\n        // Return the key if no value is present.\n        return value || key;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    format(value, format) {\n        return this.formats.format(value, format);\n    }\n    /**\n     * @param {?} date\n     * @param {?=} format\n     * @return {?}\n     */\n    formatDate(date, format) {\n        return this.formats.formatDate(date, format);\n    }\n    /**\n     * @param {?} date\n     * @param {?=} format\n     * @return {?}\n     */\n    formatTime(date, format) {\n        return this.formats.formatTime(date, format);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatCurrency(value, format) {\n        return this.formats.formatCurrency(value, format);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} format\n     * @return {?}\n     */\n    formatNumber(value, format) {\n        return this.formats.formatNumber(value, format);\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @return {?}\n     */\n    getValue(key) {\n        /** @type {?} */\n        let value;\n        /** @type {?} */\n        const translations = this.dictionaryManager.get(this.currentLocale);\n        if (translations) {\n            /** @type {?} */\n            const tokens = key.split('.');\n            value = translations[tokens[0]];\n            if (value) {\n                for (let i = 1; i < tokens.length; i++) {\n                    if (!value) {\n                        value = translations[tokens[i]];\n                    }\n                    else {\n                        value = value[tokens[i]];\n                    }\n                }\n            }\n        }\n        return value;\n    }\n    /**\n     * @private\n     * @param {?} locale\n     * @return {?}\n     */\n    getTranslations(locale) {\n        // Split out the language code from the locale\n        /** @type {?} */\n        const languageCode = (locale.split('-')[0] || '').toLowerCase();\n        // Fetch the fallback language first\n        return from(new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            this.translationFetcher(languageCode).then((/**\n             * @param {?} fallbackTranslations\n             * @return {?}\n             */\n            (fallbackTranslations) => {\n                this.translationFetcher(locale).then((/**\n                 * @param {?} translations\n                 * @return {?}\n                 */\n                (translations) => {\n                    this.applyLanguage(locale, translations, fallbackTranslations);\n                    resolve(true);\n                }), (/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (error) => {\n                    console.error(`[Chomsky] - Cannot find the locale translation file! (${locale}):`, error);\n                    this.applyLanguage(locale, {}, fallbackTranslations);\n                    resolve(true);\n                }));\n            }), (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                console.error(`[Chomsky] - Cannot find the base translation file! (${languageCode}):`, error);\n                this.applyLanguage(locale, {}, {});\n                resolve(true);\n            }));\n        })));\n    }\n    /**\n     * @private\n     * @param {?} locale\n     * @param {?} translations\n     * @param {?} fallbackTranslations\n     * @return {?}\n     */\n    applyLanguage(locale, translations, fallbackTranslations) {\n        // Set current locale\n        this.currentLocale = locale;\n        // Set locale on formats too\n        this.formats.setLocale(locale);\n        // Handle overrides\n        /** @type {?} */\n        const overrides = {};\n        if (translations && translations.hasOwnProperty('_defaults_')) {\n            mergeDeep(overrides, translations._defaults_);\n            delete translations['_defaults_'];\n        }\n        if (fallbackTranslations && fallbackTranslations.hasOwnProperty('_defaults_')) {\n            mergeDeep(overrides, fallbackTranslations._defaults_);\n            delete translations['_defaults_'];\n        }\n        this.formats.override(mergeDeep({}, FORMAT_DEFAULTS, overrides));\n        // Add the translations to the DictionaryManager\n        this.dictionaryManager.add(locale, translations, fallbackTranslations);\n        // Emit a change event\n        this.onLocaleChange.next(locale);\n    }\n    /**\n     * @private\n     * @param {?} locale\n     * @return {?}\n     */\n    translationFetcher(locale) {\n        return this.loader.load(`${this.location}${locale}.json`);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.loader;\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.location;\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.currentLocale;\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.dictionaryManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.formats;\n    /**\n     * @type {?}\n     * @private\n     */\n    Chomsky.prototype.defaultReplacements;\n    /** @type {?} */\n    Chomsky.prototype.onLocaleChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: translate/translate.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TranslateService = new Chomsky();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: translate/translate.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TranslatePipe {\n    /**\n     * @param {?=} changeDetector\n     */\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.lastKey = '';\n        this.lastParams = '';\n        this.onLangChange = null;\n        this.changeDetector = changeDetector;\n    }\n    /**\n     * @param {?} objectOne\n     * @param {?} objectTwo\n     * @return {?}\n     */\n    equals(objectOne, objectTwo) {\n        if (objectOne === objectTwo) {\n            return true;\n        }\n        if (objectOne === null || objectTwo === null) {\n            return false;\n        }\n        /** @type {?} */\n        const typeOne = typeof objectOne;\n        /** @type {?} */\n        const typeTwo = typeof objectTwo;\n        /** @type {?} */\n        let length;\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let keySet;\n        if (typeOne === typeTwo && typeOne === 'object') {\n            if (Array.isArray(objectOne)) {\n                // Array checker\n                if (!Array.isArray(objectTwo)) {\n                    return false;\n                }\n                if ((length = objectOne.length) === objectTwo.length) {\n                    for (key = 0; key < length; key++) {\n                        if (!this.equals(objectOne[key], objectTwo[key])) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n            }\n            else {\n                // Object checker\n                if (Array.isArray(objectTwo)) {\n                    return false;\n                }\n                keySet = Object.create(null);\n                for (key in objectOne) {\n                    if (key) {\n                        if (!this.equals(objectOne[key], objectTwo[key])) {\n                            return false;\n                        }\n                        keySet[key] = true;\n                    }\n                }\n                for (key in objectTwo) {\n                    if (!(key in keySet) && typeof objectTwo[key] !== 'undefined') {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n    /**\n     * @param {?} phraseKey\n     * @param {?} dynamicVariables\n     * @return {?}\n     */\n    updateValue(phraseKey, dynamicVariables) {\n        this.value = TranslateService.translate(phraseKey, dynamicVariables);\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * @param {?} phraseKey\n     * @param {?=} dynamicVariables\n     * @return {?}\n     */\n    transform(phraseKey, dynamicVariables) {\n        if (!phraseKey || phraseKey.length === 0) {\n            return null;\n        }\n        if (this.equals(phraseKey, this.lastKey) && this.equals(dynamicVariables, this.lastParams)) {\n            return this.value;\n        }\n        this.lastKey = phraseKey;\n        this.lastParams = dynamicVariables;\n        this.updateValue(phraseKey, dynamicVariables);\n        this.unsubscribe();\n        this.onLangChange = TranslateService.onLocaleChange.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateValue(phraseKey, dynamicVariables);\n        }));\n        return this.value;\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribe() {\n        if (this.onLangChange) {\n            this.onLangChange.unsubscribe();\n            this.onLangChange = undefined;\n        }\n    }\n}\nTranslatePipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'translate',\n                pure: false,\n            },] }\n];\n/** @nocollapse */\nTranslatePipe.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nif (false) {\n    /** @type {?} */\n    TranslatePipe.prototype.lastKey;\n    /** @type {?} */\n    TranslatePipe.prototype.lastParams;\n    /** @type {?} */\n    TranslatePipe.prototype.value;\n    /** @type {?} */\n    TranslatePipe.prototype.onLangChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslatePipe.prototype.changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: translate/translate.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TranslateDirective {\n    /**\n     * @param {?} sanitizer\n     */\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    /**\n     * @return {?}\n     */\n    get innerHTML() {\n        return this.translatedValue;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        TranslateService.onLocaleChange.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.translatedValue = this.renderContent(this.translate, this.dynamicValues);\n        }));\n        this.translatedValue = this.renderContent(this.translate, this.dynamicValues);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        TranslateService.onLocaleChange.unsubscribe();\n    }\n    /**\n     * @param {?} key\n     * @param {?} interpolation\n     * @return {?}\n     */\n    renderContent(key, interpolation) {\n        return this.sanitizer.bypassSecurityTrustHtml(TranslateService.translate(key, interpolation));\n    }\n}\nTranslateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[translate]',\n            },] }\n];\n/** @nocollapse */\nTranslateDirective.ctorParameters = () => [\n    { type: DomSanitizer }\n];\nTranslateDirective.propDecorators = {\n    translate: [{ type: Input }],\n    dynamicValues: [{ type: Input }],\n    innerHTML: [{ type: HostBinding, args: ['innerHTML',] }]\n};\nif (false) {\n    /** @type {?} */\n    TranslateDirective.prototype.translate;\n    /** @type {?} */\n    TranslateDirective.prototype.dynamicValues;\n    /** @type {?} */\n    TranslateDirective.prototype.translatedValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateDirective.prototype.sanitizer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: chomsky.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ChomskyModule {\n}\nChomskyModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [TranslatePipe, TranslateDirective],\n                exports: [TranslatePipe, TranslateDirective],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: chomsky.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ChomskyModule, TranslateDirective, TranslatePipe, TranslateService, Chomsky as ɵa };\n//# sourceMappingURL=chomsky.js.map\n","import { forwardRef, EventEmitter, Component, ElementRef, Input, Output, NgModule, ChangeDetectionStrategy, Directive, ViewContainerRef, HostListener, Pipe, Injectable, Inject, LOCALE_ID, ChangeDetectorRef, Optional, HostBinding, ContentChildren, TemplateRef, Injector, ComponentFactoryResolver, ViewChild, NgZone, isDevMode, Renderer2, ViewChildren, ViewEncapsulation, Host, ContentChild, PLATFORM_ID } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule, Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport 'brace/index';\nimport 'brace/theme/chrome';\nimport 'brace/mode/javascript';\nimport 'brace/ext/language_tools.js';\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { OverlayConfig, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { addDays, addWeeks, addMonths, startOfWeek, endOfWeek, differenceInDays, addMinutes, endOfDay, startOfDay, isSameSecond, setMinutes, setHours, startOfMinute, isAfter, isBefore, isSameDay, getDay, differenceInSeconds, differenceInMinutes, startOfMonth, endOfMonth, isSameMonth, addHours, getYear, getMonth, getDate, setYear, setMonth, setDate, addSeconds, subMonths, startOfToday, endOfToday, isToday, isValid, format, setMilliseconds, setSeconds, getHours, getMinutes, getSeconds, getMilliseconds, isDate, parse, startOfTomorrow } from 'date-fns';\nimport { ReplaySubject, merge, of, fromEvent, from, Subject, Subscription, BehaviorSubject } from 'rxjs';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { filter, first, switchMap, debounceTime, distinctUntilChanged, startWith, map, catchError, take, takeUntil } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DataSource, CdkColumnDef, CdkCell, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkRow, CdkHeaderCell, CdkTableModule, CdkCellDef, CdkHeaderCellDef, CdkHeaderRowDef, CdkRowDef, CdkTable, CDK_TABLE_TEMPLATE } from '@angular/cdk/table';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport * as dragulaImported from '@bullhorn/dragula';\nimport { ESCAPE, ENTER, TAB, SPACE } from '@angular/cdk/keycodes';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport { CdkAccordion, CdkAccordionItem, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, CdkStepper, CdkStepperModule } from '@angular/cdk/stepper';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/Helpers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// @dynamic\nclass Helpers {\n    /**\n     * Swallows an event to stop further execution\n     * @param {?} event\n     * @return {?}\n     */\n    static swallowEvent(event) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} str\n     * @param {?} props\n     * @return {?}\n     */\n    static interpolate(str, props) {\n        if (this.isDate(props)) {\n            props = this.dateToObject(props);\n        }\n        return str.replace(/\\$([\\w\\.]+)/g, (/**\n         * @param {?} original\n         * @param {?} key\n         * @return {?}\n         */\n        (original, key) => {\n            /** @type {?} */\n            const keys = key.split('.');\n            /** @type {?} */\n            let value = props[keys.shift()];\n            while (keys.length && value !== undefined) {\n                /** @type {?} */\n                const k = keys.shift();\n                value = k ? value[k] : `${value}.`;\n            }\n            return value !== undefined ? value : '';\n        }));\n    }\n    /**\n     * @param {?} formatString\n     * @param {?} data\n     * @return {?}\n     */\n    static interpolateWithFallback(formatString, data) {\n        // Format string can be an array, it will attempt to interpolate each item\n        // in the array, if there is a failure to replace it will mark it as such\n        // It will either return the first successful replacement of ALL variables,\n        // or an empty string\n        if (Array.isArray(formatString)) {\n            /** @type {?} */\n            const successes = [];\n            /** @type {?} */\n            const failures = [];\n            formatString.forEach((/**\n             * @param {?} format\n             * @return {?}\n             */\n            (format) => {\n                /** @type {?} */\n                let isSuccess = true;\n                /** @type {?} */\n                const attempt = format.replace(/\\$([\\w\\.]+)/g, (/**\n                 * @param {?} original\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (original, key) => {\n                    /** @type {?} */\n                    const keys = key.split('.');\n                    /** @type {?} */\n                    let value = data[keys.shift()];\n                    while (keys.length && value !== undefined) {\n                        /** @type {?} */\n                        const k = keys.shift();\n                        value = k ? value[k] : `${value}.`;\n                    }\n                    if (isSuccess && Helpers.isEmpty(value)) {\n                        isSuccess = false;\n                    }\n                    return Helpers.isEmpty(value) ? '' : value;\n                }));\n                if (isSuccess) {\n                    successes.push(attempt);\n                }\n                else {\n                    failures.push(attempt);\n                }\n            }));\n            if (successes.length !== 0) {\n                return successes[0];\n            }\n            return '';\n        }\n        else {\n            return Helpers.interpolate(formatString, data);\n        }\n    }\n    /**\n     * Verifies that an object has every property expected by a string to interpolate\n     * @param {?} str   The string to interpolate\n     * @param {?} props The params to replace in string.\n     * @return {?}\n     */\n    static validateInterpolationProps(str, props) {\n        /** @type {?} */\n        const keys = str.match(/\\$([\\w\\.]+)/g);\n        return keys.every((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            return props.hasOwnProperty(key.substr(1));\n        }));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    static isObject(item) {\n        return item && typeof item === 'object' && !Array.isArray(item) && item !== null;\n    }\n    /**\n     * Checks to see if the object is a string\n     * @param {?} obj\n     * @return {?}\n     */\n    static isString(obj) {\n        return typeof obj === 'string';\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    static escapeString(obj) {\n        if (Helpers.isString(obj)) {\n            return obj.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n        return obj;\n    }\n    /**\n     * @param {?} val\n     * @param {?=} includeNegatives\n     * @return {?}\n     */\n    static isNumber(val, includeNegatives = false) {\n        /** @type {?} */\n        const numberRegex = includeNegatives ? /^-{0,1}\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n        if (typeof val === 'string') {\n            return val.length > 0 && val !== '.' && numberRegex.test(val);\n        }\n        else {\n            return !isNaN(parseFloat(val));\n        }\n    }\n    /**\n     * Checks to see if the object is a undefined or null\n     * @param {?} obj\n     * @return {?}\n     */\n    static isBlank(obj) {\n        return obj === undefined || obj === null;\n    }\n    /**\n     * Checks to see if the object is a undefined or null\n     * @param {?} obj\n     * @return {?}\n     */\n    static isEmpty(obj) {\n        return Helpers.isBlank(obj) || obj === '' || (Array.isArray(obj) && obj.length === 0);\n    }\n    /**\n     * Checks to see if the object is a function\n     * @param {?} obj\n     * @return {?}\n     */\n    static isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n    /**\n     * Checks to see if the object is a Date\n     * @param {?} obj\n     * @return {?}\n     */\n    static isDate(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    static convertToArray(obj) {\n        if (obj === undefined) {\n            return [];\n        }\n        else if (!Array.isArray(obj)) {\n            return [obj];\n        }\n        return obj;\n    }\n    /**\n     * @param {?} fields\n     * @param {?=} reverse\n     * @return {?}\n     */\n    static sortByField(fields, reverse = false) {\n        return (/**\n         * @param {?} previous\n         * @param {?} current\n         * @return {?}\n         */\n        (previous, current) => {\n            if (Helpers.isFunction(fields)) {\n                return fields(reverse ? 'desc' : 'asc', previous, current);\n            }\n            if (!Array.isArray(fields)) {\n                fields = [fields];\n            }\n            for (let i = 0; i < fields.length; i++) {\n                /** @type {?} */\n                const field = fields[i];\n                /** @type {?} */\n                let first = previous[field] || '';\n                /** @type {?} */\n                let second = current[field] || '';\n                if (Helpers.isDate(first) && Helpers.isDate(second)) {\n                    // Dates\n                    first = first.getTime();\n                    second = second.getTime();\n                }\n                else if (Helpers.isString(first) && Helpers.isString(second)) {\n                    // Basic strings\n                    first = first.toLowerCase();\n                    second = second.toLowerCase();\n                }\n                else {\n                    // Numbers\n                    first = isNaN(Number(first)) ? first : Number(first);\n                    second = isNaN(Number(second)) ? second : Number(second);\n                }\n                if (first > second) {\n                    return reverse ? -1 : 1;\n                }\n                else if (first < second) {\n                    return reverse ? 1 : -1;\n                }\n            }\n            return 0;\n        });\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    static filterByField(key, value) {\n        return (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            /** @type {?} */\n            const results = [];\n            /** @type {?} */\n            let field = can(item).have(key);\n            if (value instanceof Function) {\n                results.push(value(field, item));\n            }\n            else if (Array.isArray(value)) {\n                results.push(value.includes(field));\n            }\n            else if (value instanceof Object) {\n                if (field instanceof Date) {\n                    field = field.getTime();\n                }\n                if (value.min) {\n                    results.push(field >= value.min);\n                }\n                if (value.max) {\n                    results.push(field <= value.max);\n                }\n                if (value.any && Array.isArray(value.any)) {\n                    if (Array.isArray(field)) {\n                        results.push(value.any.some((/**\n                         * @param {?} v\n                         * @return {?}\n                         */\n                        (v) => field.includes(v))));\n                    }\n                    else {\n                        results.push(value.any.includes(field));\n                    }\n                }\n                if (value.all && Array.isArray(value.all)) {\n                    results.push(value.all.every((/**\n                     * @param {?} v\n                     * @return {?}\n                     */\n                    (v) => field.includes(v))));\n                }\n                if (value.not) {\n                    results.push(!Helpers.filterByField(key, value.not)(item));\n                }\n                for (const subkey in value) {\n                    if (['min', 'max', 'any', 'all', 'not'].indexOf(subkey) < 0) {\n                        /** @type {?} */\n                        const subvalue = value[subkey];\n                        results.push(Helpers.filterByField(`${key}.${subkey}`, subvalue)(item));\n                    }\n                }\n            }\n            else {\n                results.push(JSON.stringify(field).match(new RegExp(value, 'gi')));\n            }\n            return results.every((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => x));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    static findAncestor(element, selector) {\n        while ((element = element.parentElement) && !element.matches.call(element, selector))\n            ; // tslint:disable-line\n        return element;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    static deepClone(item) {\n        if (Array.isArray(item)) {\n            /** @type {?} */\n            const newArr = [];\n            for (let i = item.length; i-- > 0;) {\n                // tslint:disable-line\n                newArr[i] = Helpers.deepClone(item[i]);\n            }\n            return newArr;\n        }\n        if (typeof item === 'function' && !/\\(\\) \\{ \\[native/.test(item.toString())) {\n            /** @type {?} */\n            let obj;\n            for (const k in item) {\n                if (k in item) {\n                    obj[k] = Helpers.deepClone(item[k]);\n                }\n            }\n            return obj;\n        }\n        if (item && typeof item === 'object') {\n            /** @type {?} */\n            const obj = {};\n            for (const k in item) {\n                if (k in item) {\n                    obj[k] = Helpers.deepClone(item[k]);\n                }\n            }\n            return obj;\n        }\n        return item;\n    }\n    /**\n     * @param {...?} objs\n     * @return {?}\n     */\n    static deepAssign(...objs) {\n        if (objs.length < 2) {\n            throw new Error('Need two or more objects to merge');\n        }\n        /** @type {?} */\n        const target = Object.assign({}, objs[0]);\n        for (let i = 1; i < objs.length; i++) {\n            /** @type {?} */\n            const source = Object.assign({}, objs[i]);\n            Object.keys(source).forEach((/**\n             * @param {?} prop\n             * @return {?}\n             */\n            (prop) => {\n                /** @type {?} */\n                const value = source[prop];\n                if (Helpers.isObject(value)) {\n                    if (target.hasOwnProperty(prop) && Helpers.isObject(target[prop])) {\n                        target[prop] = Helpers.deepAssign(target[prop], value);\n                    }\n                    else {\n                        target[prop] = value;\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    if (target.hasOwnProperty(prop) && Array.isArray(target[prop])) {\n                        /** @type {?} */\n                        const targetArray = target[prop];\n                        value.forEach((/**\n                         * @param {?} sourceItem\n                         * @param {?} itemIndex\n                         * @return {?}\n                         */\n                        (sourceItem, itemIndex) => {\n                            if (itemIndex < targetArray.length) {\n                                /** @type {?} */\n                                const targetItem = targetArray[itemIndex];\n                                if (Object.is(targetItem, sourceItem)) {\n                                    return;\n                                }\n                                if (Helpers.isObject(targetItem) && Helpers.isObject(sourceItem)) {\n                                    targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                                }\n                                else if (Array.isArray(targetItem) && Array.isArray(sourceItem)) {\n                                    targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                                }\n                                else {\n                                    targetArray[itemIndex] = sourceItem;\n                                }\n                            }\n                            else {\n                                targetArray.push(sourceItem);\n                            }\n                        }));\n                    }\n                    else {\n                        target[prop] = value;\n                    }\n                }\n                else {\n                    target[prop] = value;\n                }\n            }));\n        }\n        return target;\n    }\n    /**\n     * Workaround for Edge browser since Element:nextElementSibling is undefined inside of template directives\n     * @param {?} element any document element\n     * @return {?} the next sibling node that is of type: Element\n     */\n    static getNextElementSibling(element) {\n        if (element.nextElementSibling) {\n            return element.nextElementSibling;\n        }\n        else {\n            /** @type {?} */\n            let e = element.nextSibling;\n            while (e && 1 !== e.nodeType) {\n                e = e.nextSibling;\n            }\n            return e;\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    static dateToObject(date) {\n        /** @type {?} */\n        const dateObj = {\n            day: '',\n            dayPeriod: '',\n            era: '',\n            hour: '',\n            minute: '',\n            month: '',\n            second: '',\n            weekday: '',\n            year: '',\n        };\n        Intl.DateTimeFormat('en-US', {\n            day: 'numeric',\n            era: 'short',\n            hour: 'numeric',\n            minute: 'numeric',\n            month: 'numeric',\n            second: 'numeric',\n            weekday: 'long',\n            year: 'numeric',\n        })\n            .formatToParts(date)\n            .forEach((/**\n         * @param {?} dateTimeFormatPart\n         * @return {?}\n         */\n        (dateTimeFormatPart) => {\n            if (dateTimeFormatPart.type !== 'literal') {\n                dateObj[dateTimeFormatPart.type] = dateTimeFormatPart.value;\n            }\n        }));\n        return dateObj;\n    }\n}\nclass Can {\n    /**\n     * @param {?} obj\n     */\n    constructor(obj) {\n        this.obj = obj;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    have(key) {\n        /** @type {?} */\n        const props = key.split('.');\n        /** @type {?} */\n        let item = this.obj;\n        for (let i = 0; i < props.length; i++) {\n            item = item[props[i]];\n            if (this.check(item) === false) {\n                return item;\n            }\n        }\n        return item;\n    }\n    /**\n     * @param {?} thing\n     * @return {?}\n     */\n    check(thing) {\n        return thing !== void 0;\n    }\n}\nif (false) {\n    /** @type {?} */\n    Can.prototype.obj;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction can(obj) {\n    return new Can(obj);\n}\n// Assumes data is already sorted\n/**\n * @template T\n * @param {?} item\n * @param {?} array\n * @param {?} compare\n * @return {?}\n */\nfunction binarySearch(item, array, compare) {\n    return search(0, array.length - 1);\n    /**\n     * @param {?} min\n     * @param {?} max\n     * @return {?}\n     */\n    function search(min, max) {\n        if (min > max) {\n            return undefined;\n        }\n        /** @type {?} */\n        const guess = min + Math.floor((max - min) / 2);\n        /** @type {?} */\n        const comparison = compare(item, array[guess]);\n        if (comparison === 0) {\n            return array[guess];\n        }\n        else if (comparison === -1) {\n            return search(min, guess - 1);\n        }\n        else if (comparison === 1) {\n            return search(guess + 1, max);\n        }\n        else {\n            throw new Error(`Input mismatch: ${JSON.stringify(item)} not comparable to ${JSON.stringify(array[guess])}`);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/ace-editor/AceEditor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ACE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoAceEditor)),\n    multi: true,\n};\nclass NovoAceEditor {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this._options = {\n            showPrintMargin: false,\n            displayIndentGuides: true,\n        };\n        this._theme = 'chrome';\n        this._mode = 'javascript';\n        this.text = '';\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} theme\n     * @return {?}\n     */\n    set theme(theme) {\n        this.setTheme(theme);\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    set options(options) {\n        this.setOptions(options);\n    }\n    /**\n     * @param {?} mode\n     * @return {?}\n     */\n    set mode(mode) {\n        this.setMode(mode);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.destroy();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.initializeEditor();\n        this.initializeOptions();\n        this.initializeEvents();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initializeEditor() {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        this.editor = ace.edit(el);\n        this.editor.$blockScrolling = Infinity;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initializeOptions() {\n        this.setOptions(this._options || {});\n        this.setTheme(this._theme);\n        this.setMode(this._mode);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initializeEvents() {\n        this.editor.on('focus', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.focus.emit(event)));\n        this.editor.on('blur', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.focus.emit(event)));\n        this.editor.on('change', (/**\n         * @return {?}\n         */\n        () => this.updateText()));\n        this.editor.on('paste', (/**\n         * @return {?}\n         */\n        () => this.updateText()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateText() {\n        /** @type {?} */\n        const newVal = this.editor.getValue();\n        if (newVal === this.oldText) {\n            return;\n        }\n        this.text = newVal;\n        this.onChange(newVal);\n        this.oldText = newVal;\n    }\n    /**\n     * @private\n     * @param {?} text\n     * @return {?}\n     */\n    setText(text) {\n        if (Helpers.isBlank(text)) {\n            text = '';\n        }\n        if (this.text !== text) {\n            this.text = text;\n            this.editor.setValue(text);\n            this.onChange(text);\n            this.editor.clearSelection();\n        }\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this._options = options;\n        this.editor.setOptions(options || {});\n    }\n    /**\n     * @private\n     * @param {?} theme\n     * @return {?}\n     */\n    setTheme(theme) {\n        this._theme = theme;\n        this.editor.setTheme(`ace/theme/${theme}`);\n    }\n    /**\n     * @private\n     * @param {?} mode\n     * @return {?}\n     */\n    setMode(mode) {\n        this._mode = mode;\n        this.editor.getSession().setMode(`ace/mode/${this._mode}`);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.setText(value);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n}\nNovoAceEditor.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-ace-editor',\n                template: '',\n                providers: [ACE_VALUE_ACCESSOR]\n            }] }\n];\n/** @nocollapse */\nNovoAceEditor.ctorParameters = () => [\n    { type: ElementRef }\n];\nNovoAceEditor.propDecorators = {\n    theme: [{ type: Input }],\n    options: [{ type: Input }],\n    mode: [{ type: Input }],\n    name: [{ type: Input }],\n    blur: [{ type: Output }],\n    focus: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoAceEditor.prototype.name;\n    /** @type {?} */\n    NovoAceEditor.prototype.blur;\n    /** @type {?} */\n    NovoAceEditor.prototype.focus;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype._options;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype._theme;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.text;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.oldText;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.editor;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAceEditor.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/ace-editor/AceEditor.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoAceEditorModule {\n}\nNovoAceEditorModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [NovoAceEditor],\n                exports: [NovoAceEditor],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/button/Button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoButtonElement {\n    constructor() {\n        this.side = 'right';\n    }\n    /**\n     * @param {?} icon\n     * @return {?}\n     */\n    set icon(icon) {\n        if (icon) {\n            this._icon = `bhi-${icon}`;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get icon() {\n        return this._icon;\n    }\n}\nNovoButtonElement.decorators = [\n    { type: Component, args: [{\n                selector: 'button[theme]',\n                host: {\n                    '[attr.theme]': 'theme',\n                    '[attr.color]': 'color',\n                    '[attr.icon]': 'icon',\n                    '[attr.loading]': 'loading',\n                    '[attr.side]': 'side',\n                },\n                template: `\n    <div class=\"flex-wrapper\">\n      <!--Left Icon-->\n      <i *ngIf=\"icon && side === 'left' && !loading\" [ngClass]=\"icon\"></i>\n      <!--Transcluded Content-->\n      <ng-content></ng-content>\n      <!--Right Icon-->\n      <i *ngIf=\"icon && side === 'right' && !loading\" [ngClass]=\"icon\"></i>\n      <!--Loading-->\n      <i *ngIf=\"loading\" class=\"loading\">\n        <svg\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n          x=\"0px\"\n          y=\"0px\"\n          width=\"18.2px\"\n          height=\"18.5px\"\n          viewBox=\"0 0 18.2 18.5\"\n          style=\"enable-background:new 0 0 18.2 18.5;\"\n          xml:space=\"preserve\"\n        >\n          <style type=\"text/css\">\n            .spinner {\n              fill: #ffffff;\n            }\n          </style>\n          <path\n            class=\"spinner\"\n            d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                        c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                        c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"\n          />\n        </svg>\n      </i>\n    </div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nNovoButtonElement.propDecorators = {\n    color: [{ type: Input }],\n    side: [{ type: Input }],\n    theme: [{ type: Input }],\n    loading: [{ type: Input }],\n    icon: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoButtonElement.prototype.color;\n    /** @type {?} */\n    NovoButtonElement.prototype.side;\n    /** @type {?} */\n    NovoButtonElement.prototype.theme;\n    /** @type {?} */\n    NovoButtonElement.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoButtonElement.prototype._icon;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/button/Button.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoButtonModule {\n}\nNovoButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [NovoButtonElement],\n                exports: [NovoButtonElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tooltip/Tooltip.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTooltip {\n}\nNovoTooltip.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tooltip',\n                template: `<div [@state]=\"noAnimate ? 'no-animation' : 'visible'\"\n  [ngClass]=\"[tooltipType, this.rounded ? 'rounded' : '', size ? size : '', this.preline? 'preline' : '', position]\">{{message}}</div>`,\n                animations: [\n                    trigger('state', [\n                        state('initial, void, hidden', style({ opacity: '0' })),\n                        state('visible', style({ opacity: '1' })),\n                        transition('* => visible', [\n                            style({\n                                opacity: 0,\n                                visibility: 'visible',\n                            }),\n                            animate('0.3s ease-in'),\n                        ]),\n                        transition('* => hidden', [\n                            style({\n                                opacity: 1,\n                                visibility: 'hidden',\n                            }),\n                            animate('0.3s ease-in'),\n                        ]),\n                    ]),\n                ],\n                styles: [\"novo-tooltip div{background:#383838;color:#fff;padding:8px 10px;font-size:12px;font-family:\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;line-height:12px;white-space:nowrap;text-shadow:0 -1px 0 #000;box-shadow:4px 4px 8px rgba(0,0,0,.3)}novo-tooltip div.error{background-color:#b34e4d;text-shadow:0 -1px 0 #592726}novo-tooltip div.info{background-color:#3986ac;text-shadow:0 -1px 0 #1a3c4d}novo-tooltip div.warning{background-color:#c09854;text-shadow:0 -1px 0 #6c5328}novo-tooltip div.success{background-color:#458746;text-shadow:0 -1px 0 #1a321a}novo-tooltip div.rounded{border-radius:4px}novo-tooltip div.extra-large,novo-tooltip div.large,novo-tooltip div.medium,novo-tooltip div.small{white-space:normal;line-height:1.4em;word-wrap:break-word}novo-tooltip div.extra-large{width:400px;font-size:1.2vh}novo-tooltip div.large{width:300px}novo-tooltip div.medium{width:150px}novo-tooltip div.small{width:80px}novo-tooltip div.preline{white-space:pre-line}novo-tooltip div.top:before{margin-bottom:-11px;left:calc(50% - 6px);bottom:0;border-top-color:#383838}novo-tooltip div.top.error:before{border-top-color:#b34e4d}novo-tooltip div.top.info:before{border-top-color:#3986ac}novo-tooltip div.top.warning:before{border-top-color:#c09854}novo-tooltip div.top.success:before{border-top-color:#458746}novo-tooltip div.top-left:before{border-top-color:#383838;margin-right:0;margin-bottom:-11px;right:0;bottom:0}novo-tooltip div.top-left.error:before{border-top-color:#b34e4d}novo-tooltip div.top-left.info:before{border-top-color:#3986ac}novo-tooltip div.top-left.warning:before{border-top-color:#c09854}novo-tooltip div.top-left.success:before{border-top-color:#458746}novo-tooltip div.top-right:before{border-top-color:#383838;margin-left:0;margin-bottom:-11px;left:0;bottom:0}novo-tooltip div.top-right.error:before{border-top-color:#b34e4d}novo-tooltip div.top-right.info:before{border-top-color:#3986ac}novo-tooltip div.top-right.warning:before{border-top-color:#c09854}novo-tooltip div.top-right.success:before{border-top-color:#458746}novo-tooltip div.bottom:before{margin-top:-11px;left:calc(50% - 6px);top:0;border-bottom-color:#383838}novo-tooltip div.bottom.error:before{border-top-color:#b34e4d}novo-tooltip div.bottom.info:before{border-top-color:#3986ac}novo-tooltip div.bottom.warning:before{border-top-color:#c09854}novo-tooltip div.bottom.success:before{border-top-color:#458746}novo-tooltip div.bottom-left:before{border-bottom-color:#383838;margin-right:0;margin-top:-11px;right:0;top:0}novo-tooltip div.bottom-left.error:before{border-bottom-color:#b34e4d}novo-tooltip div.bottom-left.info:before{border-bottom-color:#3986ac}novo-tooltip div.bottom-left.warning:before{border-bottom-color:#c09854}novo-tooltip div.bottom-left.success:before{border-bottom-color:#458746}novo-tooltip div.bottom-right:before{border-bottom-color:#383838;margin-left:0;margin-top:-11px;left:0;top:0}novo-tooltip div.bottom-right.error:before{border-bottom-color:#b34e4d}novo-tooltip div.bottom-right.info:before{border-bottom-color:#3986ac}novo-tooltip div.bottom-right.warning:before{border-bottom-color:#c09854}novo-tooltip div.bottom-right.success:before{border-bottom-color:#458746}novo-tooltip div.left:before{border-left-color:#383838;margin-right:-11px;margin-bottom:-6px;right:0;bottom:50%}novo-tooltip div.left.error:before{border-left-color:#b34e4d}novo-tooltip div.left.info:before{border-left-color:#3986ac}novo-tooltip div.left.warning:before{border-left-color:#c09854}novo-tooltip div.left.success:before{border-left-color:#458746}novo-tooltip div.right:before{left:0;bottom:50%;border-right-color:#383838;margin-left:-11px;margin-bottom:-6px}novo-tooltip div.right.error:before{border-right-color:#b34e4d}novo-tooltip div.right.info:before{border-right-color:#3986ac}novo-tooltip div.right.warning:before{border-right-color:#c09854}novo-tooltip div.right.success:before{border-right-color:#458746}novo-tooltip div:before{content:\\\"\\\";position:absolute;background:0 0;border:6px solid transparent;box-sizing:border-box}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    NovoTooltip.prototype.message;\n    /** @type {?} */\n    NovoTooltip.prototype.hidden;\n    /** @type {?} */\n    NovoTooltip.prototype.tooltipType;\n    /** @type {?} */\n    NovoTooltip.prototype.rounded;\n    /** @type {?} */\n    NovoTooltip.prototype.size;\n    /** @type {?} */\n    NovoTooltip.prototype.positionStrategy;\n    /** @type {?} */\n    NovoTooltip.prototype.preline;\n    /** @type {?} */\n    NovoTooltip.prototype.noAnimate;\n    /** @type {?} */\n    NovoTooltip.prototype.position;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tooltip/Tooltip.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TooltipDirective {\n    /**\n     * @param {?} overlay\n     * @param {?} viewContainerRef\n     * @param {?} elementRef\n     */\n    constructor(overlay, viewContainerRef, elementRef) {\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.elementRef = elementRef;\n        this.position = 'top';\n        this.type = 'normal';\n        this.active = true;\n        this.removeArrow = false;\n        this.autoPosition = false;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    isPosition(position) {\n        return position.toLowerCase() === (this.position || '').toLowerCase();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isType(type) {\n        return type.toLowerCase() === (this.type || '').toLowerCase();\n    }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    isSize(size) {\n        return size.toLowerCase() === (this.size || '').toLowerCase();\n    }\n    /**\n     * @return {?}\n     */\n    onMouseEnter() {\n        if (this.tooltip && this.active && !this.always) {\n            this.show();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (this.overlayRef && !this.always) {\n            this.hide();\n            this.overlayRef.dispose();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.tooltip && this.always && this.active) {\n            this.show();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.overlayRef && !this.always) {\n            this.hide();\n            this.overlayRef.dispose();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    show() {\n        /** @type {?} */\n        const overlayState = new OverlayConfig();\n        overlayState.positionStrategy = this.getPosition();\n        if (this.always) {\n            overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n        }\n        else {\n            overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n        }\n        overlayState.scrollStrategy.enable();\n        this.overlayRef = this.overlay.create(overlayState);\n        this.overlayRef.detach();\n        this.portal = this.portal || new ComponentPortal(NovoTooltip, this.viewContainerRef);\n        /** @type {?} */\n        const tooltipInstance = this.overlayRef.attach(this.portal).instance;\n        tooltipInstance.message = this.tooltip;\n        tooltipInstance.tooltipType = this.type;\n        tooltipInstance.rounded = this.rounded;\n        tooltipInstance.size = this.size;\n        tooltipInstance.preline = this.preline;\n        tooltipInstance.noAnimate = this.noAnimate;\n        tooltipInstance.position = this.removeArrow ? 'no-arrow' : this.position;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hide() {\n        if (this.overlayRef) {\n            this.overlayRef.detach();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getPosition() {\n        /** @type {?} */\n        let strategy;\n        /** @type {?} */\n        let originPosition;\n        /** @type {?} */\n        let overlayPosition;\n        /** @type {?} */\n        let offsetX;\n        /** @type {?} */\n        let offsetY;\n        switch (this.position) {\n            case 'right':\n                originPosition = { originX: 'end', originY: 'center' };\n                overlayPosition = { overlayX: 'start', overlayY: 'center' };\n                offsetX = 8;\n                offsetY = 0;\n                break;\n            case 'bottom':\n                originPosition = { originX: 'center', originY: 'bottom' };\n                overlayPosition = { overlayX: 'center', overlayY: 'top' };\n                offsetX = 0;\n                offsetY = 8;\n                break;\n            case 'top':\n                originPosition = { originX: 'center', originY: 'top' };\n                overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n                offsetX = 0;\n                offsetY = -8;\n                break;\n            case 'left':\n                originPosition = { originX: 'start', originY: 'center' };\n                overlayPosition = { overlayX: 'end', overlayY: 'center' };\n                offsetX = -8;\n                offsetY = 0;\n                break;\n            case 'top-left':\n                originPosition = { originX: 'start', originY: 'top' };\n                overlayPosition = { overlayX: 'end', overlayY: 'bottom' };\n                offsetX = 8;\n                offsetY = -8;\n                break;\n            case 'bottom-left':\n                originPosition = { originX: 'start', originY: 'bottom' };\n                overlayPosition = { overlayX: 'end', overlayY: 'top' };\n                offsetX = 8;\n                offsetY = 8;\n                break;\n            case 'top-right':\n                originPosition = { originX: 'end', originY: 'top' };\n                overlayPosition = { overlayX: 'start', overlayY: 'bottom' };\n                offsetX = -8;\n                offsetY = -8;\n                break;\n            case 'bottom-right':\n                originPosition = { originX: 'end', originY: 'bottom' };\n                overlayPosition = { overlayX: 'start', overlayY: 'top' };\n                offsetX = -8;\n                offsetY = 8;\n                break;\n            default:\n                break;\n        }\n        strategy = this.overlay\n            .position()\n            .connectedTo(this.elementRef, originPosition, overlayPosition)\n            .withOffsetX(offsetX)\n            .withOffsetY(offsetY);\n        return this.autoPosition ? this.withFallbackStrategy(strategy) : strategy;\n    }\n    /**\n     * @private\n     * @param {?} strategy\n     * @return {?}\n     */\n    withFallbackStrategy(strategy) {\n        strategy\n            .withFallbackPosition({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }, 0, 8)\n            .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 0, 8)\n            .withFallbackPosition({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }, 8, 0)\n            .withFallbackPosition({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }, -8, 0)\n            .withFallbackPosition({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }, 0, -8)\n            .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, 0, 8)\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, 0, -8)\n            .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 0, -8)\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 8, -8)\n            .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 8, 8)\n            .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, -8, -8)\n            .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, -8, 8);\n        return strategy;\n    }\n}\nTooltipDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[tooltip]',\n                host: {\n                    '[attr.data-hint]': 'tooltip',\n                },\n            },] }\n];\n/** @nocollapse */\nTooltipDirective.ctorParameters = () => [\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\nTooltipDirective.propDecorators = {\n    tooltip: [{ type: Input }],\n    position: [{ type: Input, args: ['tooltipPosition',] }],\n    type: [{ type: Input, args: ['tooltipType',] }],\n    size: [{ type: Input, args: ['tooltipSize',] }],\n    bounce: [{ type: Input, args: ['tooltipBounce',] }],\n    noAnimate: [{ type: Input, args: ['tooltipNoAnimate',] }],\n    rounded: [{ type: Input, args: ['tooltipRounded',] }],\n    always: [{ type: Input, args: ['tooltipAlways',] }],\n    active: [{ type: Input, args: ['tooltipActive',] }],\n    preline: [{ type: Input, args: ['tooltipPreline',] }],\n    removeArrow: [{ type: Input, args: ['removeTooltipArrow',] }],\n    autoPosition: [{ type: Input, args: ['tooltipAutoPosition',] }],\n    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]\n};\nif (false) {\n    /** @type {?} */\n    TooltipDirective.prototype.tooltip;\n    /** @type {?} */\n    TooltipDirective.prototype.position;\n    /** @type {?} */\n    TooltipDirective.prototype.type;\n    /** @type {?} */\n    TooltipDirective.prototype.size;\n    /** @type {?} */\n    TooltipDirective.prototype.bounce;\n    /** @type {?} */\n    TooltipDirective.prototype.noAnimate;\n    /** @type {?} */\n    TooltipDirective.prototype.rounded;\n    /** @type {?} */\n    TooltipDirective.prototype.always;\n    /** @type {?} */\n    TooltipDirective.prototype.active;\n    /** @type {?} */\n    TooltipDirective.prototype.preline;\n    /** @type {?} */\n    TooltipDirective.prototype.removeArrow;\n    /** @type {?} */\n    TooltipDirective.prototype.autoPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype.tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype.portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype.overlayRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype.overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype.viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tooltip/Tooltip.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTooltipModule {\n}\nNovoTooltipModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [TooltipDirective, NovoTooltip],\n                exports: [TooltipDirective],\n                entryComponents: [NovoTooltip],\n                imports: [CommonModule],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: pipes/plural/Plural.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Rule storage - pluralize and singularize need to be run sequentially,\n// while other rules can be optimized using an object for instant lookups.\n/** @type {?} */\nconst pluralRules = [];\n/** @type {?} */\nconst singularRules = [];\n/** @type {?} */\nconst uncountables = {};\n/** @type {?} */\nconst irregularPlurals = {};\n/** @type {?} */\nconst irregularSingles = {};\n/**\n * Title case a string.\n * @param {?} str\n * @return {?}\n */\nfunction toTitleCase(str) {\n    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n}\n/**\n * Sanitize a pluralization rule to a usable regular expression.\n * @param {?} rule\n * @return {?}\n */\nfunction sanitizeRule(rule) {\n    if (typeof rule === 'string') {\n        return new RegExp('^' + rule + '$', 'i');\n    }\n    return rule;\n}\n/**\n * Pass in a word token to produce a function that can replicate the case on\n * another word.\n * @param {?} word\n * @param {?} token\n * @return {?}\n */\nfunction restoreCase(word, token) {\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) {\n        return token.toUpperCase();\n    }\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n        return toTitleCase(token);\n    }\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n}\n/**\n * Interpolate a regexp string.\n * @param {?} str\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, (/**\n     * @param {?} match\n     * @param {?} index\n     * @return {?}\n     */\n    (match, index) => {\n        return args[index] || '';\n    }));\n}\n/**\n * Sanitize a word by passing in the word and sanitization rules.\n * @param {?} token\n * @param {?} word\n * @param {?} collection\n * @return {?}\n */\nfunction sanitizeWord(token, word, collection) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n        return word;\n    }\n    /** @type {?} */\n    let len = collection.length;\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n        /** @type {?} */\n        const rule = collection[len];\n        // If the rule passes, return the replacement.\n        if (rule[0].test(word)) {\n            return word.replace(rule[0], (/**\n             * @param {?} match\n             * @param {?} index\n             * @param {?} words\n             * @return {?}\n             */\n            (match, index, words) => {\n                /** @type {?} */\n                const result = interpolate(rule[1], [match, index, words]);\n                if (match === '') {\n                    return restoreCase(words[index - 1], result);\n                }\n                return restoreCase(match, result);\n            }));\n        }\n    }\n    return word;\n}\n/**\n * Replace a word with the updated word.\n * @param {?} replaceMap\n * @param {?} keepMap\n * @param {?} rules\n * @return {?}\n */\nfunction replaceWord(replaceMap, keepMap, rules) {\n    return (/**\n     * @param {?} word\n     * @return {?}\n     */\n    (word) => {\n        // Get the correct token and case restoration functions.\n        /** @type {?} */\n        const token = word.toLowerCase();\n        // Check against the keep object map.\n        if (keepMap.hasOwnProperty(token)) {\n            return restoreCase(word, token);\n        }\n        // Check against the replacement map for a direct word replacement.\n        if (replaceMap.hasOwnProperty(token)) {\n            return restoreCase(word, replaceMap[token]);\n        }\n        // Run all the rules against the word.\n        return sanitizeWord(token, word, rules);\n    });\n}\nclass Pluralize {\n    /**\n     * @param {?} word\n     * @param {?=} count\n     * @param {?=} inclusive\n     * @return {?}\n     */\n    static pluralize(word, count = 1, inclusive) {\n        /** @type {?} */\n        const pluralized = count === 1 ? Pluralize.singular(word) : Pluralize.plural(word);\n        return (inclusive ? `${count} ` : '') + pluralized;\n    }\n    /**\n     * @param {?} word\n     * @return {?}\n     */\n    static singular(word) {\n        return replaceWord(irregularSingles, irregularPlurals, pluralRules)(word);\n    }\n    /**\n     * @param {?} word\n     * @return {?}\n     */\n    static plural(word) {\n        return replaceWord(irregularPlurals, irregularSingles, singularRules)(word);\n    }\n    /**\n     * @param {?} rule\n     * @param {?} replacement\n     * @return {?}\n     */\n    static addPluralRule(rule, replacement) {\n        pluralRules.push([sanitizeRule(rule), replacement]);\n    }\n    /**\n     * @param {?} rule\n     * @param {?} replacement\n     * @return {?}\n     */\n    static addSingularRule(rule, replacement) {\n        singularRules.push([sanitizeRule(rule), replacement]);\n    }\n    /**\n     * @param {?} word\n     * @return {?}\n     */\n    static addUncountableRule(word) {\n        if (typeof word === 'string') {\n            uncountables[word.toLowerCase()] = true;\n            return;\n        }\n        // Set singular and plural references for the word.\n        Pluralize.addPluralRule(word, '$0');\n        Pluralize.addSingularRule(word, '$0');\n    }\n    /**\n     * @param {?} single\n     * @param {?} plural\n     * @return {?}\n     */\n    static addIrregularRule(single, plural) {\n        /** @type {?} */\n        const one = plural.toLowerCase();\n        /** @type {?} */\n        const many = single.toLowerCase();\n        irregularSingles[one] = many;\n        irregularPlurals[many] = one;\n    }\n}\n/**\n * Irregular rules.\n */\n[\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['thief', 'thieves'],\n    ['genie', 'genies'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies'],\n].forEach((/**\n * @param {?} rule\n * @return {?}\n */\n(rule) => {\n    return Pluralize.addIrregularRule(rule[0], rule[1]);\n}));\n/**\n * Pluralization rules.\n */\n[\n    [/s?$/i, 's'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you'],\n].forEach((/**\n * @param {?} rule\n * @return {?}\n */\n(rule) => {\n    return Pluralize.addPluralRule(rule[0], rule[1]);\n}));\n/**\n * Singularization rules.\n */\n[\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, '$1sis'],\n    [/(^analy)(?:sis|ses)$/i, '$1sis'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/([^aeiouy]|qu)ies$/i, '$1y'],\n    [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, '$1ie'],\n    [/(\\b(?:mon|smil))ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(e[mn]u)s?$/i, '$1'],\n    [/(movie|twelve)s$/i, '$1'],\n    [/(cris|test|diagnos)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man'],\n].forEach((/**\n * @param {?} rule\n * @return {?}\n */\n(rule) => {\n    return Pluralize.addSingularRule(rule[0], rule[1]);\n}));\n/**\n * Uncountable rules.\n */\n[\n    // Singular words with no plurals.\n    'advice',\n    'adulthood',\n    'agenda',\n    'aid',\n    'alcohol',\n    'ammo',\n    'athletics',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'commerce',\n    'cod',\n    'cooperation',\n    'corps',\n    'digestion',\n    'debris',\n    'diabetes',\n    'energy',\n    'equipment',\n    'elk',\n    'excretion',\n    'expertise',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'trout',\n    'traffic',\n    'transporation',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /pox$/i,\n    /ois$/i,\n    /deer$/i,\n    /fish$/i,\n    /sheep$/i,\n    /measles$/i,\n    /[^aeiou]ese$/i,\n].forEach(Pluralize.addUncountableRule);\nclass PluralPipe {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    transform(value) {\n        return Pluralize.pluralize(value);\n    }\n}\nPluralPipe.decorators = [\n    { type: Pipe, args: [{ name: 'plural' },] },\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: pipes/decode-uri/DecodeURI.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DecodeURIPipe {\n    /**\n     * @param {?} encodedString\n     * @return {?}\n     */\n    transform(encodedString) {\n        /** @type {?} */\n        let decodedString = '';\n        if (!Helpers.isBlank(encodedString) && typeof encodedString === 'string') {\n            decodedString = decodeURIComponent(encodedString);\n        }\n        return decodedString;\n    }\n}\nDecodeURIPipe.decorators = [\n    { type: Pipe, args: [{ name: 'decodeURI' },] },\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: pipes/group-by/GroupBy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GroupByPipe {\n    /**\n     * @param {?} input\n     * @param {?} prop\n     * @return {?}\n     */\n    transform(input, prop) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        /** @type {?} */\n        const arr = {};\n        for (const value of input) {\n            /** @type {?} */\n            const field = can(value).have(prop);\n            if (Helpers.isBlank(arr[field])) {\n                arr[field] = [];\n            }\n            arr[field].push(value);\n        }\n        return Object.keys(arr).map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => ({ key, value: arr[key] })));\n    }\n}\nGroupByPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'groupBy',\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: pipes/Pipes.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoPipesModule {\n}\nNovoPipesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [PluralPipe, DecodeURIPipe, GroupByPipe],\n                exports: [PluralPipe, DecodeURIPipe, GroupByPipe],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/common/EventTypeLegend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoEventTypeLegendElement {\n    constructor() {\n        this.eventTypeClicked = new EventEmitter();\n    }\n}\nNovoEventTypeLegendElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-event-type-legend',\n                template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-event-legend\">\n        <div class=\"cal-event-type\"\n          *ngFor=\"let type of events | groupBy : 'type'\"\n          (click)=\"$event.stopPropagation(); eventTypeClicked.emit({event:type?.key})\">\n          <div class=\"cal-event-type-swatch\"></div><div>{{type?.key}}</div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{events: events, eventTypeClicked: eventTypeClicked}\">\n    </ng-template>\n  `\n            }] }\n];\nNovoEventTypeLegendElement.propDecorators = {\n    events: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    eventTypeClicked: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoEventTypeLegendElement.prototype.events;\n    /** @type {?} */\n    NovoEventTypeLegendElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoEventTypeLegendElement.prototype.eventTypeClicked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/common/CalendarDateChange.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarDateChangeElement {\n    /**\n     * @param {?} locale\n     */\n    constructor(locale) {\n        /**\n         * Called when the view date is changed\n         */\n        this.viewDateChange = new EventEmitter();\n        this.locale = locale;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    subtractDate() {\n        this.changeDate(-1);\n    }\n    /**\n     * @return {?}\n     */\n    addDate() {\n        this.changeDate(1);\n    }\n    /**\n     * @param {?} unit\n     * @return {?}\n     */\n    changeDate(unit) {\n        /** @type {?} */\n        const addFn = {\n            day: addDays,\n            week: addWeeks,\n            month: addMonths,\n        }[this.view];\n        this.viewDateChange.emit(addFn(this.viewDate, unit));\n    }\n    /**\n     * @return {?}\n     */\n    get startOfWeek() {\n        return startOfWeek(this.viewDate);\n    }\n    /**\n     * @return {?}\n     */\n    get endOfWeek() {\n        return endOfWeek(this.viewDate);\n    }\n}\nNovoCalendarDateChangeElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-date-change',\n                template: `\n    <div class=\"cal-date-change\">\n        <i class=\"bhi-arrow-left\" (click)=\"subtractDate()\" ></i>\n        <span [ngSwitch]=\"view\">\n            <span *ngSwitchCase=\"'month'\">{{ ( viewDate | month:locale ) + ' ' + ( viewDate | year:locale ) }}</span>\n            <span *ngSwitchCase=\"'week'\">{{ ( startOfWeek | monthday:locale:'long' ) + ' - ' + ( endOfWeek | endofweekdisplay:startOfWeek:locale:'long' ) }}</span>\n            <span *ngSwitchCase=\"'day'\">{{ ( viewDate | weekday:locale:'long' ) + ', ' + ( viewDate | month:locale ) + ' ' + ( viewDate | dayofmonth:locale ) }}</span>\n        </span>\n        <i class=\"bhi-arrow-right\" (click)=\"addDate()\"></i>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoCalendarDateChangeElement.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nNovoCalendarDateChangeElement.propDecorators = {\n    view: [{ type: Input }],\n    viewDate: [{ type: Input }],\n    locale: [{ type: Input }],\n    viewDateChange: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The current view\n     * @type {?}\n     */\n    NovoCalendarDateChangeElement.prototype.view;\n    /**\n     * The current view date\n     * @type {?}\n     */\n    NovoCalendarDateChangeElement.prototype.viewDate;\n    /** @type {?} */\n    NovoCalendarDateChangeElement.prototype.locale;\n    /**\n     * Called when the view date is changed\n     * @type {?}\n     */\n    NovoCalendarDateChangeElement.prototype.viewDateChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/calendar-utils/CalendarUtils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst WEEKEND_DAY_NUMBERS = [0, 6];\n/** @type {?} */\nconst DAYS_IN_WEEK = 7;\n/** @type {?} */\nconst HOURS_IN_DAY = 24;\n/** @type {?} */\nconst MINUTES_IN_HOUR = 60;\n/** @enum {number} */\nconst CalendarEventResponse = {\n    Maybe: 0,\n    Accepted: 1,\n    Rejected: 2,\n};\nCalendarEventResponse[CalendarEventResponse.Maybe] = 'Maybe';\nCalendarEventResponse[CalendarEventResponse.Accepted] = 'Accepted';\nCalendarEventResponse[CalendarEventResponse.Rejected] = 'Rejected';\n/**\n * @record\n */\nfunction CalendarEventTimesChangedEvent() { }\nif (false) {\n    /** @type {?} */\n    CalendarEventTimesChangedEvent.prototype.event;\n    /** @type {?} */\n    CalendarEventTimesChangedEvent.prototype.newStart;\n    /** @type {?|undefined} */\n    CalendarEventTimesChangedEvent.prototype.newEnd;\n}\n/**\n * @record\n */\nfunction WeekDay() { }\nif (false) {\n    /** @type {?} */\n    WeekDay.prototype.date;\n    /** @type {?} */\n    WeekDay.prototype.isPast;\n    /** @type {?} */\n    WeekDay.prototype.isToday;\n    /** @type {?} */\n    WeekDay.prototype.isFuture;\n    /** @type {?} */\n    WeekDay.prototype.isWeekend;\n}\n/**\n * @record\n */\nfunction EventColor() { }\nif (false) {\n    /** @type {?} */\n    EventColor.prototype.primary;\n    /** @type {?} */\n    EventColor.prototype.secondary;\n}\n/**\n * @record\n */\nfunction EventAction() { }\nif (false) {\n    /** @type {?} */\n    EventAction.prototype.label;\n    /** @type {?|undefined} */\n    EventAction.prototype.cssClass;\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    EventAction.prototype.onClick = function (__0) { };\n}\n/**\n * @record\n */\nfunction CalendarEvent() { }\nif (false) {\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.id;\n    /** @type {?} */\n    CalendarEvent.prototype.start;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.end;\n    /** @type {?} */\n    CalendarEvent.prototype.title;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.description;\n    /** @type {?} */\n    CalendarEvent.prototype.color;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.type;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.response;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.actions;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.allDay;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.cssClass;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.resizable;\n    /** @type {?|undefined} */\n    CalendarEvent.prototype.draggable;\n}\n/**\n * @record\n */\nfunction WeekViewEvent() { }\nif (false) {\n    /** @type {?} */\n    WeekViewEvent.prototype.event;\n    /** @type {?} */\n    WeekViewEvent.prototype.offset;\n    /** @type {?} */\n    WeekViewEvent.prototype.span;\n    /** @type {?} */\n    WeekViewEvent.prototype.startsBeforeWeek;\n    /** @type {?} */\n    WeekViewEvent.prototype.endsAfterWeek;\n    /** @type {?|undefined} */\n    WeekViewEvent.prototype.top;\n    /** @type {?|undefined} */\n    WeekViewEvent.prototype.height;\n}\n/**\n * @record\n */\nfunction WeekViewEventRow() { }\nif (false) {\n    /** @type {?} */\n    WeekViewEventRow.prototype.row;\n}\n/**\n * @record\n */\nfunction MonthViewDay() { }\nif (false) {\n    /** @type {?} */\n    MonthViewDay.prototype.inMonth;\n    /** @type {?} */\n    MonthViewDay.prototype.events;\n    /** @type {?|undefined} */\n    MonthViewDay.prototype.backgroundColor;\n    /** @type {?|undefined} */\n    MonthViewDay.prototype.cssClass;\n    /** @type {?} */\n    MonthViewDay.prototype.badgeTotal;\n}\n/**\n * @record\n */\nfunction MonthView() { }\nif (false) {\n    /** @type {?} */\n    MonthView.prototype.rowOffsets;\n    /** @type {?} */\n    MonthView.prototype.days;\n    /** @type {?} */\n    MonthView.prototype.totalDaysVisibleInWeek;\n}\n/**\n * @record\n */\nfunction DayViewEvent() { }\nif (false) {\n    /** @type {?} */\n    DayViewEvent.prototype.event;\n    /** @type {?} */\n    DayViewEvent.prototype.height;\n    /** @type {?} */\n    DayViewEvent.prototype.width;\n    /** @type {?} */\n    DayViewEvent.prototype.top;\n    /** @type {?} */\n    DayViewEvent.prototype.left;\n    /** @type {?} */\n    DayViewEvent.prototype.startsBeforeDay;\n    /** @type {?} */\n    DayViewEvent.prototype.endsAfterDay;\n}\n/**\n * @record\n */\nfunction DayView() { }\nif (false) {\n    /** @type {?} */\n    DayView.prototype.events;\n    /** @type {?} */\n    DayView.prototype.width;\n    /** @type {?} */\n    DayView.prototype.allDayEvents;\n}\n/**\n * @record\n */\nfunction DayViewHourSegment() { }\nif (false) {\n    /** @type {?} */\n    DayViewHourSegment.prototype.isStart;\n    /** @type {?} */\n    DayViewHourSegment.prototype.date;\n    /** @type {?|undefined} */\n    DayViewHourSegment.prototype.cssClass;\n}\n/**\n * @record\n */\nfunction DayViewHour() { }\nif (false) {\n    /** @type {?} */\n    DayViewHour.prototype.segments;\n}\n/**\n * @record\n */\nfunction IsEventInPeriodArgs() { }\nif (false) {\n    /** @type {?} */\n    IsEventInPeriodArgs.prototype.event;\n    /** @type {?} */\n    IsEventInPeriodArgs.prototype.periodStart;\n    /** @type {?} */\n    IsEventInPeriodArgs.prototype.periodEnd;\n}\n/**\n * @record\n */\nfunction GetEventsInPeriodArgs() { }\nif (false) {\n    /** @type {?} */\n    GetEventsInPeriodArgs.prototype.events;\n    /** @type {?} */\n    GetEventsInPeriodArgs.prototype.periodStart;\n    /** @type {?} */\n    GetEventsInPeriodArgs.prototype.periodEnd;\n}\n/**\n * @record\n */\nfunction GetDayViewArgs() { }\nif (false) {\n    /** @type {?|undefined} */\n    GetDayViewArgs.prototype.events;\n    /** @type {?} */\n    GetDayViewArgs.prototype.viewDate;\n    /** @type {?} */\n    GetDayViewArgs.prototype.hourSegments;\n    /** @type {?} */\n    GetDayViewArgs.prototype.dayStart;\n    /** @type {?} */\n    GetDayViewArgs.prototype.dayEnd;\n    /** @type {?} */\n    GetDayViewArgs.prototype.eventWidth;\n    /** @type {?} */\n    GetDayViewArgs.prototype.segmentHeight;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getExcludedDays({ startDate, days, excluded }) {\n    if (excluded.length < 1) {\n        return 0;\n    }\n    /** @type {?} */\n    let day = startDate.getDay();\n    /** @type {?} */\n    let reduce = 0;\n    for (let i = 0; i < days; i++) {\n        if (day === DAYS_IN_WEEK) {\n            day = 0;\n        }\n        if (excluded.some((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => e === day))) {\n            reduce++;\n        }\n        day++;\n    }\n    return reduce;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekViewEventSpan({ event, offset, startOfWeek, excluded, }) {\n    /** @type {?} */\n    const begin = event.start < startOfWeek ? startOfWeek : event.start;\n    /** @type {?} */\n    let span = 1;\n    if (event.end) {\n        span = differenceInDays(addMinutes(endOfDay(event.end), 1), startOfDay(begin));\n    }\n    /** @type {?} */\n    const totalLength = offset + span;\n    if (totalLength > DAYS_IN_WEEK) {\n        span = DAYS_IN_WEEK - offset;\n    }\n    return span - getExcludedDays({ startDate: begin, days: span, excluded });\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekViewEventOffset({ event, startOfWeek, excluded = [], }) {\n    if (event.start < startOfWeek) {\n        return 0;\n    }\n    /** @type {?} */\n    const distance = differenceInDays(event.start, startOfWeek);\n    return distance - getExcludedDays({ startDate: startOfWeek, days: distance, excluded });\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isEventIsPeriod({ event, periodStart, periodEnd }) {\n    /** @type {?} */\n    const eventStart = event.start;\n    /** @type {?} */\n    const eventEnd = event.end || event.start;\n    if (eventStart > periodStart && eventStart < periodEnd) {\n        return true;\n    }\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\n        return true;\n    }\n    if (eventStart < periodStart && eventEnd > periodEnd) {\n        return true;\n    }\n    if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {\n        return true;\n    }\n    if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getEventsInPeriod({ events, periodStart, periodEnd }) {\n    return events.filter((/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => isEventIsPeriod({ event, periodStart, periodEnd })));\n}\n/**\n * @param {?} events\n * @param {?} dayStart\n * @param {?} dayEnd\n * @return {?}\n */\nfunction getEventsInTimeRange(events, dayStart, dayEnd) {\n    return events.filter((/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        /** @type {?} */\n        const eventStart = event.start;\n        /** @type {?} */\n        const eventEnd = event.end || eventStart;\n        /** @type {?} */\n        const startOfView = setMinutes(setHours(startOfDay(eventStart), dayStart.hour), dayStart.minute);\n        /** @type {?} */\n        const endOfView = setMinutes(setHours(startOfMinute(eventStart), dayEnd.hour), dayEnd.minute);\n        return isAfter(eventEnd, startOfView) && isBefore(eventStart, endOfView);\n    }));\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekDay({ date }) {\n    /** @type {?} */\n    const today = startOfDay(new Date());\n    return {\n        date,\n        isPast: date < today,\n        isToday: isSameDay(date, today),\n        isFuture: date > today,\n        isWeekend: WEEKEND_DAY_NUMBERS.indexOf(getDay(date)) > -1,\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekViewHeader({ viewDate, weekStartsOn, excluded = [], }) {\n    /** @type {?} */\n    const start = startOfWeek(viewDate, { weekStartsOn });\n    /** @type {?} */\n    const days = [];\n    for (let i = 0; i < DAYS_IN_WEEK; i++) {\n        /** @type {?} */\n        const date = addDays(start, i);\n        if (!excluded.some((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => date.getDay() === e))) {\n            days.push(getWeekDay({ date }));\n        }\n    }\n    return days;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekView({ events = [], viewDate, weekStartsOn, excluded = [], hourSegments, segmentHeight, dayStart, dayEnd, }) {\n    if (!events) {\n        events = [];\n    }\n    /** @type {?} */\n    const startOfViewWeek = startOfWeek(viewDate, { weekStartsOn });\n    /** @type {?} */\n    const endOfViewWeek = endOfWeek(viewDate, { weekStartsOn });\n    /** @type {?} */\n    const maxRange = DAYS_IN_WEEK - excluded.length;\n    /** @type {?} */\n    const eventsMapped = getEventsInTimeRange(getEventsInPeriod({ events, periodStart: startOfViewWeek, periodEnd: endOfViewWeek }), dayStart, dayEnd)\n        .map((/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        /** @type {?} */\n        const offset = getWeekViewEventOffset({ event, startOfWeek: startOfViewWeek, excluded });\n        /** @type {?} */\n        const span = 1;\n        return { event, offset, span };\n    }))\n        .filter((/**\n     * @param {?} e\n     * @return {?}\n     */\n    (e) => e.offset < maxRange))\n        .filter((/**\n     * @param {?} e\n     * @return {?}\n     */\n    (e) => e.span > 0))\n        .map((/**\n     * @param {?} entry\n     * @return {?}\n     */\n    (entry) => ({\n        event: entry.event,\n        offset: entry.offset,\n        span: entry.span,\n        startsBeforeWeek: entry.event.start < startOfViewWeek,\n        endsAfterWeek: (entry.event.end || entry.event.start) > endOfViewWeek,\n        top: 0,\n    })))\n        .sort((/**\n     * @param {?} itemA\n     * @param {?} itemB\n     * @return {?}\n     */\n    (itemA, itemB) => {\n        /** @type {?} */\n        const startSecondsDiff = differenceInSeconds(itemA.event.start, itemB.event.start);\n        if (startSecondsDiff === 0) {\n            return differenceInSeconds(itemB.event.end || itemB.event.start, itemA.event.end || itemA.event.start);\n        }\n        return startSecondsDiff;\n    }))\n        .map((/**\n     * @param {?} entry\n     * @return {?}\n     */\n    (entry) => {\n        /** @type {?} */\n        const startOfView = setMinutes(setHours(startOfDay(entry.event.start), dayStart.hour), dayStart.minute);\n        /** @type {?} */\n        const endOfView = setMinutes(setHours(startOfMinute(endOfDay(entry.event.start)), dayEnd.hour), dayEnd.minute);\n        /** @type {?} */\n        const eventStart = entry.event.start;\n        /** @type {?} */\n        const eventEnd = entry.event.end || eventStart;\n        /** @type {?} */\n        const hourHeightModifier = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n        if (eventStart > startOfView) {\n            entry.top += differenceInMinutes(eventStart, startOfView);\n        }\n        entry.top *= hourHeightModifier;\n        /** @type {?} */\n        const startsBeforeDay = eventStart < startOfView;\n        /** @type {?} */\n        const endsAfterDay = eventEnd > endOfView;\n        /** @type {?} */\n        const startDate = startsBeforeDay ? startOfView : eventStart;\n        /** @type {?} */\n        const endDate = endsAfterDay ? endOfView : eventEnd;\n        /** @type {?} */\n        let height = differenceInMinutes(endDate, startDate);\n        if (!entry.event.end) {\n            height = segmentHeight;\n        }\n        else {\n            height *= hourHeightModifier;\n        }\n        entry.height = height;\n        return entry;\n    }));\n    /** @type {?} */\n    const eventRows = [];\n    /** @type {?} */\n    const allocatedEvents = [];\n    eventsMapped.forEach((/**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    (event, index) => {\n        if (allocatedEvents.indexOf(event) === -1) {\n            allocatedEvents.push(event);\n            /** @type {?} */\n            const otherRowEvents = eventsMapped.slice(index + 1).filter((/**\n             * @param {?} nextEvent\n             * @return {?}\n             */\n            (nextEvent) => {\n                return nextEvent.top === event.top && nextEvent.offset === event.offset;\n            }));\n            if (otherRowEvents.length > 0) {\n                /** @type {?} */\n                const totalEventsForRow = otherRowEvents.length + 1;\n                event.span = 1 / totalEventsForRow;\n                /** @type {?} */\n                let nextOffset = event.span + event.offset;\n                otherRowEvents.forEach((/**\n                 * @param {?} nextEvent\n                 * @return {?}\n                 */\n                (nextEvent) => {\n                    nextEvent.offset = nextOffset;\n                    nextEvent.span = event.span;\n                    nextOffset = nextEvent.span + nextEvent.offset;\n                }));\n                allocatedEvents.push(...otherRowEvents);\n            }\n            eventRows.push({\n                row: [event, ...otherRowEvents],\n            });\n        }\n    }));\n    return eventRows;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getMonthView({ events = [], viewDate, weekStartsOn, excluded = [], }) {\n    if (!events) {\n        events = [];\n    }\n    /** @type {?} */\n    const start = startOfWeek(startOfMonth(viewDate), { weekStartsOn });\n    /** @type {?} */\n    const end = endOfWeek(endOfMonth(viewDate), { weekStartsOn });\n    /** @type {?} */\n    const eventsInMonth = getEventsInPeriod({\n        events,\n        periodStart: start,\n        periodEnd: end,\n    });\n    /** @type {?} */\n    const days = [];\n    for (let i = 0; i < differenceInDays(end, start) + 1; i++) {\n        /** @type {?} */\n        const date = addDays(start, i);\n        if (!excluded.some((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => date.getDay() === e))) {\n            /** @type {?} */\n            const day = (/** @type {?} */ (getWeekDay({ date })));\n            /** @type {?} */\n            const calEvents = getEventsInPeriod({\n                events: eventsInMonth,\n                periodStart: startOfDay(date),\n                periodEnd: endOfDay(date),\n            });\n            day.inMonth = isSameMonth(date, viewDate);\n            day.events = calEvents;\n            day.badgeTotal = calEvents.length;\n            days.push(day);\n        }\n    }\n    /** @type {?} */\n    const totalDaysVisibleInWeek = DAYS_IN_WEEK - excluded.length;\n    /** @type {?} */\n    const rows = Math.floor(days.length / totalDaysVisibleInWeek);\n    /** @type {?} */\n    const rowOffsets = [];\n    for (let i = 0; i < rows; i++) {\n        rowOffsets.push(i * totalDaysVisibleInWeek);\n    }\n    return {\n        rowOffsets,\n        totalDaysVisibleInWeek,\n        days,\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getDayView({ events = [], viewDate, hourSegments, dayStart, dayEnd, eventWidth, segmentHeight }) {\n    if (!events) {\n        events = [];\n    }\n    /** @type {?} */\n    const startOfView = setMinutes(setHours(startOfDay(viewDate), dayStart.hour), dayStart.minute);\n    /** @type {?} */\n    const endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\n    /** @type {?} */\n    const previousDayEvents = [];\n    /** @type {?} */\n    const dayViewEvents = getEventsInTimeRange(getEventsInPeriod({\n        events: events.filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => !event.allDay)),\n        periodStart: startOfView,\n        periodEnd: endOfView,\n    }), dayStart, dayEnd)\n        .sort((/**\n     * @param {?} eventA\n     * @param {?} eventB\n     * @return {?}\n     */\n    (eventA, eventB) => {\n        return eventA.start.valueOf() - eventB.start.valueOf();\n    }))\n        .map((/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        /** @type {?} */\n        const eventStart = event.start;\n        /** @type {?} */\n        const eventEnd = event.end || eventStart;\n        /** @type {?} */\n        const startsBeforeDay = eventStart < startOfView;\n        /** @type {?} */\n        const endsAfterDay = eventEnd > endOfView;\n        /** @type {?} */\n        const hourHeightModifier = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n        /** @type {?} */\n        let top = 0;\n        if (eventStart > startOfView) {\n            top += differenceInMinutes(eventStart, startOfView);\n        }\n        top *= hourHeightModifier;\n        /** @type {?} */\n        const startDate = startsBeforeDay ? startOfView : eventStart;\n        /** @type {?} */\n        const endDate = endsAfterDay ? endOfView : eventEnd;\n        /** @type {?} */\n        let height = differenceInMinutes(endDate, startDate);\n        if (!event.end) {\n            height = segmentHeight;\n        }\n        else {\n            height *= hourHeightModifier;\n        }\n        /** @type {?} */\n        const bottom = top + height;\n        /** @type {?} */\n        const overlappingPreviousEvents = previousDayEvents.filter((/**\n         * @param {?} previousEvent\n         * @return {?}\n         */\n        (previousEvent) => {\n            /** @type {?} */\n            const previousEventTop = previousEvent.top;\n            /** @type {?} */\n            const previousEventBottom = previousEvent.top + previousEvent.height;\n            if (top < previousEventBottom && previousEventBottom < bottom) {\n                return true;\n            }\n            else if (previousEventTop <= top && bottom <= previousEventBottom) {\n                return true;\n            }\n            return false;\n        }));\n        /** @type {?} */\n        let left = 0;\n        while (overlappingPreviousEvents.some((/**\n         * @param {?} previousEvent\n         * @return {?}\n         */\n        (previousEvent) => previousEvent.left === left))) {\n            left += eventWidth;\n        }\n        /** @type {?} */\n        const dayEvent = {\n            event,\n            height,\n            width: eventWidth,\n            top,\n            left,\n            startsBeforeDay,\n            endsAfterDay,\n        };\n        if (height > 0) {\n            previousDayEvents.push(dayEvent);\n        }\n        return dayEvent;\n    }))\n        .filter((/**\n     * @param {?} dayEvent\n     * @return {?}\n     */\n    (dayEvent) => dayEvent.height > 0));\n    /** @type {?} */\n    const width = Math.max(...dayViewEvents.map((/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => event.left + event.width)));\n    /** @type {?} */\n    const allDayEvents = getEventsInPeriod({\n        events: events.filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.allDay)),\n        periodStart: startOfDay(startOfView),\n        periodEnd: endOfDay(endOfView),\n    });\n    return {\n        events: dayViewEvents,\n        width,\n        allDayEvents,\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getDayViewHourGrid({ viewDate, hourSegments, dayStart, dayEnd, }) {\n    /** @type {?} */\n    const hours = [];\n    /** @type {?} */\n    const startOfView = setMinutes(setHours(startOfDay(viewDate), dayStart.hour), dayStart.minute);\n    /** @type {?} */\n    const endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\n    /** @type {?} */\n    const segmentDuration = MINUTES_IN_HOUR / hourSegments;\n    /** @type {?} */\n    const startOfViewDay = startOfDay(viewDate);\n    for (let i = 0; i < HOURS_IN_DAY; i++) {\n        /** @type {?} */\n        const segments = [];\n        for (let j = 0; j < hourSegments; j++) {\n            /** @type {?} */\n            const date = addMinutes(addHours(startOfViewDay, i), j * segmentDuration);\n            if (date >= startOfView && date < endOfView) {\n                segments.push({\n                    date,\n                    isStart: j === 0,\n                });\n            }\n        }\n        if (segments.length > 0) {\n            hours.push({ segments });\n        }\n    }\n    return hours;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/month/CalendarMonthView.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```\n * &lt;novo-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-month-view&gt;\n * ```\n */\nclass NovoCalendarMonthViewElement {\n    /**\n     * @hidden\n     * @param {?} cdr\n     * @param {?} locale\n     */\n    constructor(cdr, locale) {\n        this.cdr = cdr;\n        /**\n         * An array of events to display on view\n         */\n        this.events = [];\n        /**\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n         */\n        this.excludeDays = [];\n        /**\n         * The locale used to format dates\n         */\n        this.locale = 'en-US';\n        /**\n         * The placement of the event tooltip\n         */\n        this.tooltipPosition = 'top';\n        /**\n         * Called when the day cell is clicked\n         */\n        this.dayClicked = new EventEmitter();\n        /**\n         * Called when the event title is clicked\n         */\n        this.eventClicked = new EventEmitter();\n        /**\n         * Called when an event is dragged and dropped\n         */\n        this.eventTimesChanged = new EventEmitter();\n        this.viewDateChange = new EventEmitter();\n        this.locale = locale;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.refreshAll();\n                this.cdr.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.viewDate || changes.excludeDays) {\n            this.refreshHeader();\n        }\n        if (changes.viewDate || changes.events || changes.excludeDays) {\n            this.refreshBody();\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     * @param {?} day\n     * @param {?} event\n     * @return {?}\n     */\n    eventDropped(day, event) {\n        /** @type {?} */\n        const year = getYear(day.date);\n        /** @type {?} */\n        const month = getMonth(day.date);\n        /** @type {?} */\n        const date = getDate(day.date);\n        /** @type {?} */\n        const newStart = setYear(setMonth(setDate(event.start, date), month), year);\n        /** @type {?} */\n        let newEnd;\n        if (event.end) {\n            /** @type {?} */\n            const secondsDiff = differenceInSeconds(newStart, event.start);\n            newEnd = addSeconds(event.end, secondsDiff);\n        }\n        this.eventTimesChanged.emit({ event, newStart, newEnd });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshHeader() {\n        this.columnHeaders = getWeekViewHeader({\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshBody() {\n        this.view = getMonthView({\n            events: this.events,\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n        });\n        if (this.dayModifier) {\n            this.view.days.forEach((/**\n             * @param {?} day\n             * @return {?}\n             */\n            (day) => this.dayModifier(day)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    refreshAll() {\n        this.refreshHeader();\n        this.refreshBody();\n        this.viewDateChange.emit(this.viewDate);\n    }\n}\nNovoCalendarMonthViewElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-month',\n                template: `\n    <div class=\"calendar-month-view\">\n       <novo-calendar-month-header\n         [(viewDate)]=\"viewDate\"\n         [days]=\"columnHeaders\"\n         [locale]=\"locale\"\n         [customTemplate]=\"headerTemplate\"\n         (viewDateChange)=\"refreshAll()\">\n       </novo-calendar-month-header>\n      <div class=\"calendar-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets\">\n          <div class=\"calendar-cell-row\">\n            <novo-calendar-month-day\n              *ngFor=\"let day of view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)\"\n              [day]=\"day\"\n              [locale]=\"locale\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"dayClicked.emit({day: day})\"\n              (eventClicked)=\"eventClicked.emit({ day: day, event: $event.event})\">\n            </novo-calendar-month-day>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoCalendarMonthViewElement.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nNovoCalendarMonthViewElement.propDecorators = {\n    viewDate: [{ type: Input }],\n    events: [{ type: Input }],\n    excludeDays: [{ type: Input }],\n    dayModifier: [{ type: Input }],\n    refresh: [{ type: Input }],\n    locale: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    weekStartsOn: [{ type: Input }],\n    headerTemplate: [{ type: Input }],\n    cellTemplate: [{ type: Input }],\n    dayClicked: [{ type: Output }],\n    eventClicked: [{ type: Output }],\n    eventTimesChanged: [{ type: Output }],\n    viewDateChange: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The current view date\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.viewDate;\n    /**\n     * An array of events to display on view\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.events;\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.excludeDays;\n    /**\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.dayModifier;\n    /**\n     * An observable that when emitted on will re-render the current view\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.refresh;\n    /**\n     * The locale used to format dates\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.locale;\n    /**\n     * The placement of the event tooltip\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.tooltipPosition;\n    /**\n     * The start number of the week\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.weekStartsOn;\n    /**\n     * A custom template to use to replace the header\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.headerTemplate;\n    /**\n     * A custom template to use to replace the day cell\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.cellTemplate;\n    /**\n     * Called when the day cell is clicked\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.dayClicked;\n    /**\n     * Called when the event title is clicked\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.eventClicked;\n    /**\n     * Called when an event is dragged and dropped\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.eventTimesChanged;\n    /** @type {?} */\n    NovoCalendarMonthViewElement.prototype.viewDateChange;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.columnHeaders;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.view;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarMonthViewElement.prototype.refreshSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoCalendarMonthViewElement.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/month/CalendarMonthHeader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarMonthHeaderElement {\n    constructor() {\n        /**\n         * Called when the view date is changed\n         */\n        this.viewDateChange = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    prevMonth(event) {\n        this.viewDateChange.emit(subMonths(this.viewDate, 1));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    nextMonth(event) {\n        this.viewDateChange.emit(addMonths(this.viewDate, 1));\n    }\n}\nNovoCalendarMonthHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-month-header',\n                template: `\n    <ng-template #defaultTemplate>\n      <div class=\"calendar-header\">\n        <div class=\"calendar-header-top\">\n          <button theme=\"icon\" icon=\"previous\" (click)=\"prevMonth($event)\"></button>\n          <div class=\"calendar-month\">{{ viewDate | month:locale }}</div>\n          <button theme=\"icon\" icon=\"next\" (click)=\"nextMonth($event)\"></button>\n        </div>\n        <div class=\"calendar-weekdays\">\n          <div\n            class=\"calendar-weekday\"\n            *ngFor=\"let day of days\"\n            [class.calendar-past]=\"day.isPast\"\n            [class.calendar-today]=\"day.isToday\"\n            [class.calendar-future]=\"day.isFuture\"\n            [class.calendar-weekend]=\"day.isWeekend\">\n            {{ day.date | weekday:locale }}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, viewDate: viewDate}\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarMonthHeaderElement.propDecorators = {\n    viewDate: [{ type: Input }],\n    days: [{ type: Input }],\n    locale: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    viewDateChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarMonthHeaderElement.prototype.viewDate;\n    /** @type {?} */\n    NovoCalendarMonthHeaderElement.prototype.days;\n    /** @type {?} */\n    NovoCalendarMonthHeaderElement.prototype.locale;\n    /** @type {?} */\n    NovoCalendarMonthHeaderElement.prototype.customTemplate;\n    /**\n     * Called when the view date is changed\n     * @type {?}\n     */\n    NovoCalendarMonthHeaderElement.prototype.viewDateChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/month/CalendarMonthDay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarMonthDayElement {\n    constructor() {\n        this.eventClicked = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get accepted() {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((/**\n         * @param {?} evt\n         * @return {?}\n         */\n        (evt) => {\n            return evt.response === CalendarEventResponse.Accepted;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get rejected() {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((/**\n         * @param {?} evt\n         * @return {?}\n         */\n        (evt) => {\n            return evt.response === CalendarEventResponse.Rejected;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get maybes() {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((/**\n         * @param {?} evt\n         * @return {?}\n         */\n        (evt) => {\n            return evt.response === CalendarEventResponse.Maybe;\n        }));\n    }\n}\nNovoCalendarMonthDayElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-month-day',\n                template: `\n    <ng-template #defaultTemplate>\n      <div class=\"calendar-day-top\">\n        <span class=\"calendar-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"calendar-day-number\">{{ day.date | dayofmonth:locale }}</span>\n      </div>\n      <div class=\"calendar-events\">\n        <div\n          class=\"calendar-event\"\n          *ngFor=\"let type of day.events | groupBy : 'type'\"\n          [style.backgroundColor]=\"type?.value[0]?.color.primary\"\n          [ngClass]=\"type?.value[0]?.cssClass\"\n          (click)=\"$event.stopPropagation(); eventClicked.emit({event:type?.value[0]})\">\n          {{type?.value.length}}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        locale: locale,\n        tooltipPosition: tooltipPosition,\n        eventClicked: eventClicked,\n        accepted: accepted,\n        rejected: rejected,\n        maybes: maybes\n      }\">\n    </ng-template>\n  `,\n                host: {\n                    '[class]': '\"calendar-cell calendar-day-cell \" + day?.cssClass',\n                    '[class.calendar-day-accepted]': 'accepted.length',\n                    '[class.calendar-day-rejected]': 'rejected.length',\n                    '[class.calendar-past]': 'day.isPast',\n                    '[class.calendar-today]': 'day.isToday',\n                    '[class.calendar-future]': 'day.isFuture',\n                    '[class.calendar-weekend]': 'day.isWeekend',\n                    '[class.calendar-in-month]': 'day.inMonth',\n                    '[class.calendar-out-month]': '!day.inMonth',\n                    '[class.calendar-has-events]': 'day.events.length > 0',\n                    '[style.backgroundColor]': 'day.backgroundColor',\n                }\n            }] }\n];\nNovoCalendarMonthDayElement.propDecorators = {\n    day: [{ type: Input }],\n    locale: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    eventClicked: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarMonthDayElement.prototype.day;\n    /** @type {?} */\n    NovoCalendarMonthDayElement.prototype.locale;\n    /** @type {?} */\n    NovoCalendarMonthDayElement.prototype.tooltipPosition;\n    /** @type {?} */\n    NovoCalendarMonthDayElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoCalendarMonthDayElement.prototype.eventClicked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/week/CalendarWeekView.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @hidden\n * @type {?}\n */\nconst SEGMENT_HEIGHT = 30;\n/**\n * @hidden\n * @type {?}\n */\nconst MINUTES_IN_HOUR$1 = 60;\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * &lt;novo-calendar-week\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-week&gt;\n * ```\n */\nclass NovoCalendarWeekViewElement {\n    /**\n     * @hidden\n     * @param {?} cdr\n     * @param {?} locale\n     */\n    constructor(cdr, locale) {\n        this.cdr = cdr;\n        /**\n         * An array of events to display on view\n         */\n        this.events = [];\n        /**\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n         */\n        this.excludeDays = [];\n        /**\n         * The placement of the event tooltip\n         */\n        this.tooltipPosition = 'bottom';\n        /**\n         * The precision to display events.\n         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n         */\n        this.precision = 'days';\n        /**\n         * The number of segments in an hour. Must be <= 6\n         */\n        this.hourSegments = 2;\n        /**\n         * The day start hours in 24 hour time. Must be 0-23\n         */\n        this.dayStartHour = 0;\n        /**\n         * The day start minutes. Must be 0-59\n         */\n        this.dayStartMinute = 0;\n        /**\n         * The day end hours in 24 hour time. Must be 0-23\n         */\n        this.dayEndHour = 23;\n        /**\n         * The day end minutes. Must be 0-59\n         */\n        this.dayEndMinute = 59;\n        /**\n         * Called when an hour segment is clicked\n         */\n        this.hourSegmentClicked = new EventEmitter();\n        /**\n         * Called when a header week day is clicked\n         */\n        this.dayClicked = new EventEmitter();\n        /**\n         * Called when the event title is clicked\n         */\n        this.eventClicked = new EventEmitter();\n        /**\n         * Called when an event is resized or dragged and dropped\n         */\n        this.eventTimesChanged = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.hours = [];\n        /**\n         * @hidden\n         */\n        this.eventRows = [];\n        this.locale = locale;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.refreshAll();\n                this.cdr.detectChanges();\n            }));\n        }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.viewDate || changes.excludeDays) {\n            this.refreshHeader();\n        }\n        if (changes.events || changes.viewDate || changes.excludeDays) {\n            this.refreshBody();\n        }\n        if (changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute) {\n            this.refreshHourGrid();\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n    /*\n        resizeStarted(weekViewContainer: HTMLElement, weekEvent: WeekViewEvent, resizeEvent: ResizeEvent): void {\n          this.currentResize = {\n            originalOffset: weekEvent.offset,\n            originalSpan: weekEvent.span,\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n          };\n          const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(weekViewContainer, this.getDayColumnWidth(weekViewContainer));\n          this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\n          this.cdr.detectChanges();\n        }\n    \n        resizing(weekEvent: WeekViewEvent, resizeEvent: ResizeEvent, dayWidth: number): void {\n          if (resizeEvent.edges.left) {\n            const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n            weekEvent.offset = this.currentResize.originalOffset + diff;\n            weekEvent.span = this.currentResize.originalSpan - diff;\n          } else if (resizeEvent.edges.right) {\n            const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n            weekEvent.span = this.currentResize.originalSpan + diff;\n          }\n        }\n    \n        resizeEnded(weekEvent: WeekViewEvent): void {\n    \n          let daysDiff: number;\n          if (this.currentResize.edge === 'left') {\n            daysDiff = weekEvent.offset - this.currentResize.originalOffset;\n          } else {\n            daysDiff = weekEvent.span - this.currentResize.originalSpan;\n          }\n    \n          weekEvent.offset = this.currentResize.originalOffset;\n          weekEvent.span = this.currentResize.originalSpan;\n    \n          let newStart: Date = weekEvent.event.start;\n          let newEnd: Date = weekEvent.event.end;\n          if (this.currentResize.edge === 'left') {\n            newStart = addDays(newStart, daysDiff);\n          } else if (newEnd) {\n            newEnd = addDays(newEnd, daysDiff);\n          }\n    \n          this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n          this.currentResize = null;\n    \n        }\n    \n        eventDragged(weekEvent: WeekViewEvent, draggedByPx: number, dayWidth: number): void {\n    \n          const daysDragged: number = draggedByPx / dayWidth;\n          const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n          let newEnd: Date;\n          if (weekEvent.event.end) {\n            newEnd = addDays(weekEvent.event.end, daysDragged);\n          }\n    \n          this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n    \n        }\n    \n        dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n          const dragHelper: CalendarDragHelper = new CalendarDragHelper(weekViewContainer, event);\n          this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\n          this.cdr.detectChanges();\n        }\n        */\n    /**\n     * @param {?} eventRowContainer\n     * @return {?}\n     */\n    getDayColumnWidth(eventRowContainer) {\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshHeader() {\n        this.days = getWeekViewHeader({\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshBody() {\n        this.eventRows = getWeekView({\n            events: this.events,\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n            hourSegments: this.hourSegments,\n            segmentHeight: SEGMENT_HEIGHT,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute,\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute,\n            },\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshHourGrid() {\n        this.hours = getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute,\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute,\n            },\n        });\n        // if (this.hourSegmentModifier) {\n        //   this.hours.forEach(hour => {\n        //     hour.segments.forEach(segment => this.hourSegmentModifier(segment));\n        //   });\n        // }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshAll() {\n        this.refreshHeader();\n        this.refreshHourGrid();\n        this.refreshBody();\n    }\n}\nNovoCalendarWeekViewElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-week',\n                template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <novo-calendar-week-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayClicked)=\"dayClicked.emit($event)\">\n      </novo-calendar-week-header>\n      <div *ngFor=\"let eventRow of eventRows\" #eventRowContainer>\n        <div\n          class=\"cal-event-container\"\n          #event\n          *ngFor=\"let weekEvent of eventRow.row\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginTop.px]=\"weekEvent.top\"\n          [style.height.px]=\"weekEvent.height\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\">\n          <novo-calendar-week-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPosition]=\"tooltipPosition\"\n            [customTemplate]=\"eventTemplate\"\n            (eventClicked)=\"eventClicked.emit($event)\">\n          </novo-calendar-week-event>\n        </div>\n      </div>\n      <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"70\">\n        <novo-calendar-day-hour-segment\n          *ngFor=\"let segment of hour.segments\"\n          [segment]=\"segment\"\n          [locale]=\"locale\"\n          [customTemplate]=\"hourSegmentTemplate\"\n          (click)=\"hourSegmentClicked.emit({date: segment.date})\">\n        </novo-calendar-day-hour-segment>\n      </div>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoCalendarWeekViewElement.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nNovoCalendarWeekViewElement.propDecorators = {\n    viewDate: [{ type: Input }],\n    events: [{ type: Input }],\n    excludeDays: [{ type: Input }],\n    refresh: [{ type: Input }],\n    locale: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    weekStartsOn: [{ type: Input }],\n    headerTemplate: [{ type: Input }],\n    eventTemplate: [{ type: Input }],\n    precision: [{ type: Input }],\n    hourSegments: [{ type: Input }],\n    dayStartHour: [{ type: Input }],\n    dayStartMinute: [{ type: Input }],\n    dayEndHour: [{ type: Input }],\n    dayEndMinute: [{ type: Input }],\n    hourSegmentTemplate: [{ type: Input }],\n    hourSegmentClicked: [{ type: Output }],\n    dayClicked: [{ type: Output }],\n    eventClicked: [{ type: Output }],\n    eventTimesChanged: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The current view date\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.viewDate;\n    /**\n     * An array of events to display on view\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.events;\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.excludeDays;\n    /**\n     * An observable that when emitted on will re-render the current view\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.refresh;\n    /**\n     * The locale used to format dates\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.locale;\n    /**\n     * The placement of the event tooltip\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.tooltipPosition;\n    /**\n     * The start number of the week\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.weekStartsOn;\n    /**\n     * A custom template to use to replace the header\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.headerTemplate;\n    /**\n     * A custom template to use for week view events\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.eventTemplate;\n    /**\n     * The precision to display events.\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.precision;\n    /**\n     * The number of segments in an hour. Must be <= 6\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.hourSegments;\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.dayStartHour;\n    /**\n     * The day start minutes. Must be 0-59\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.dayStartMinute;\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.dayEndHour;\n    /**\n     * The day end minutes. Must be 0-59\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.dayEndMinute;\n    /**\n     * A custom template to use to replace the hour segment\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.hourSegmentTemplate;\n    /**\n     * Called when an hour segment is clicked\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.hourSegmentClicked;\n    /**\n     * Called when a header week day is clicked\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.dayClicked;\n    /**\n     * Called when the event title is clicked\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.eventClicked;\n    /**\n     * Called when an event is resized or dragged and dropped\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.eventTimesChanged;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.days;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.hours;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.eventRows;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.refreshSubscription;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.currentResize;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.validateDrag;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarWeekViewElement.prototype.validateResize;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoCalendarWeekViewElement.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/week/CalendarWeekHeader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarWeekHeaderElement {\n    constructor() {\n        this.dayClicked = new EventEmitter();\n        this.eventDropped = new EventEmitter();\n    }\n}\nNovoCalendarWeekHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-week-header',\n                template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          (click)=\"dayClicked.emit({date: day.date})\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | weekday:locale:'long'}}</b><br>\n          <span>{{ day.date | monthday:locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayClicked: dayClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarWeekHeaderElement.propDecorators = {\n    days: [{ type: Input }],\n    locale: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    dayClicked: [{ type: Output }],\n    eventDropped: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarWeekHeaderElement.prototype.days;\n    /** @type {?} */\n    NovoCalendarWeekHeaderElement.prototype.locale;\n    /** @type {?} */\n    NovoCalendarWeekHeaderElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoCalendarWeekHeaderElement.prototype.dayClicked;\n    /** @type {?} */\n    NovoCalendarWeekHeaderElement.prototype.eventDropped;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/week/CalendarWeekEvent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarWeekEventElement {\n    constructor() {\n        this.eventClicked = new EventEmitter();\n    }\n}\nNovoCalendarWeekEventElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-week-event',\n                template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n        [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n        [ngClass]=\"weekEvent.event?.cssClass\"\n        [tooltip]=\"weekEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({event: weekEvent.event})\">\n        <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"weekEvent.event.color.primary\"></div>\n        <div class=\"cal-event-title\">{{weekEvent.event?.title}}</div>\n        <div class=\"cal-event-description\">{{weekEvent.event?.description}}</div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{weekEvent: weekEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked}\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarWeekEventElement.propDecorators = {\n    weekEvent: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    eventClicked: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarWeekEventElement.prototype.weekEvent;\n    /** @type {?} */\n    NovoCalendarWeekEventElement.prototype.tooltipPosition;\n    /** @type {?} */\n    NovoCalendarWeekEventElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoCalendarWeekEventElement.prototype.eventClicked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/day/CalendarDayView.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @hidden\n * @type {?}\n */\nconst SEGMENT_HEIGHT$1 = 30;\n/**\n * @hidden\n * @type {?}\n */\nconst MINUTES_IN_HOUR$2 = 60;\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * &lt;novo-calendar-day\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-day&gt;\n * ```\n */\nclass NovoCalendarDayViewElement {\n    /**\n     * @hidden\n     * @param {?} cdr\n     * @param {?} locale\n     */\n    constructor(cdr, locale) {\n        this.cdr = cdr;\n        /**\n         * An array of events to display on view\n         */\n        this.events = [];\n        /**\n         * The number of segments in an hour. Must be <= 6\n         */\n        this.hourSegments = 2;\n        /**\n         * The day start hours in 24 hour time. Must be 0-23\n         */\n        this.dayStartHour = 0;\n        /**\n         * The day start minutes. Must be 0-59\n         */\n        this.dayStartMinute = 0;\n        /**\n         * The day end hours in 24 hour time. Must be 0-23\n         */\n        this.dayEndHour = 23;\n        /**\n         * The day end minutes. Must be 0-59\n         */\n        this.dayEndMinute = 59;\n        /**\n         * The width in pixels of each event on the view\n         */\n        this.eventWidth = 150;\n        /**\n         * The grid size to snap resizing and dragging of events to\n         */\n        this.eventSnapSize = 30;\n        /**\n         * The placement of the event tooltip\n         */\n        this.tooltipPosition = 'top';\n        /**\n         * Called when an event title is clicked\n         */\n        this.eventClicked = new EventEmitter();\n        /**\n         * Called when an hour segment is clicked\n         */\n        this.hourSegmentClicked = new EventEmitter();\n        /**\n         * Called when an event is resized or dragged and dropped\n         */\n        this.eventTimesChanged = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.hours = [];\n        /**\n         * @hidden\n         */\n        this.width = 0;\n        this.locale = locale;\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.refreshAll();\n                this.cdr.detectChanges();\n            }));\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute) {\n            this.refreshHourGrid();\n        }\n        if (changes.viewDate ||\n            changes.events ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute ||\n            changes.eventWidth) {\n            this.refreshView();\n        }\n    }\n    /*\n        eventDropped(dropEvent: {dropData?: {event?: CalendarEvent}}, segment: DayViewHourSegment): void {\n          if (dropEvent.dropData && dropEvent.dropData.event) {\n            this.eventTimesChanged.emit({event: dropEvent.dropData.event, newStart: segment.date});\n          }\n        }\n    \n        resizeStarted(event: DayViewEvent, resizeEvent: ResizeEvent, dayViewContainer: HTMLElement): void {\n          this.currentResize = {\n            originalTop: event.top,\n            originalHeight: event.height,\n            edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n          };\n          const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(dayViewContainer);\n          this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\n          this.cdr.detectChanges();\n        }\n    \n        resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n          if (resizeEvent.edges.top) {\n            event.top = this.currentResize.originalTop + +resizeEvent.edges.top;\n            event.height = this.currentResize.originalHeight - +resizeEvent.edges.top;\n          } else if (resizeEvent.edges.bottom) {\n            event.height = this.currentResize.originalHeight + +resizeEvent.edges.bottom;\n          }\n        }\n    \n        resizeEnded(dayEvent: DayViewEvent): void {\n    \n          let pixelsMoved: number;\n          if (this.currentResize.edge === 'top') {\n            pixelsMoved = (dayEvent.top - this.currentResize.originalTop);\n          } else {\n            pixelsMoved = (dayEvent.height - this.currentResize.originalHeight);\n          }\n    \n          dayEvent.top = this.currentResize.originalTop;\n          dayEvent.height = this.currentResize.originalHeight;\n    \n          const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\n          const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n          let newStart: Date = dayEvent.event.start;\n          let newEnd: Date = dayEvent.event.end;\n          if (this.currentResize.edge === 'top') {\n            newStart = addMinutes(newStart, minutesMoved);\n          } else if (newEnd) {\n            newEnd = addMinutes(newEnd, minutesMoved);\n          }\n    \n          this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n          this.currentResize = null;\n    \n        }\n    \n        dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n          const dragHelper: CalendarDragHelper = new CalendarDragHelper(dayViewContainer, event);\n          this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\n          this.cdr.detectChanges();\n        }\n    \n        eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n          const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\n          const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n          const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n          let newEnd: Date;\n          if (dayEvent.event.end) {\n            newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n          }\n          this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n        }\n        */\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshHourGrid() {\n        this.hours = getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute,\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute,\n            },\n        });\n        if (this.hourSegmentModifier) {\n            this.hours.forEach((/**\n             * @param {?} hour\n             * @return {?}\n             */\n            (hour) => {\n                hour.segments.forEach((/**\n                 * @param {?} segment\n                 * @return {?}\n                 */\n                (segment) => this.hourSegmentModifier(segment)));\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshView() {\n        this.view = getDayView({\n            events: this.events,\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute,\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute,\n            },\n            eventWidth: this.eventWidth,\n            segmentHeight: SEGMENT_HEIGHT$1,\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refreshAll() {\n        this.refreshHourGrid();\n        this.refreshView();\n    }\n}\nNovoCalendarDayViewElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-day',\n                template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <novo-calendar-all-day-event\n        *ngFor=\"let event of view.allDayEvents\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        (eventClicked)=\"eventClicked.emit({event: event})\">\n      </novo-calendar-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events\"\n            class=\"cal-event-container\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <novo-calendar-day-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPosition]=\"tooltipPosition\"\n              [customTemplate]=\"eventTemplate\"\n              (eventClicked)=\"eventClicked.emit($event)\">\n            </novo-calendar-day-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"view?.width + 70\">\n          <novo-calendar-day-hour-segment\n            *ngFor=\"let segment of hour.segments\"\n            [segment]=\"segment\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({date: segment.date})\">\n          </novo-calendar-day-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoCalendarDayViewElement.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nNovoCalendarDayViewElement.propDecorators = {\n    viewDate: [{ type: Input }],\n    events: [{ type: Input }],\n    hourSegments: [{ type: Input }],\n    dayStartHour: [{ type: Input }],\n    dayStartMinute: [{ type: Input }],\n    dayEndHour: [{ type: Input }],\n    dayEndMinute: [{ type: Input }],\n    eventWidth: [{ type: Input }],\n    refresh: [{ type: Input }],\n    locale: [{ type: Input }],\n    hourSegmentModifier: [{ type: Input }],\n    eventSnapSize: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    hourSegmentTemplate: [{ type: Input }],\n    allDayEventTemplate: [{ type: Input }],\n    eventTemplate: [{ type: Input }],\n    eventClicked: [{ type: Output }],\n    hourSegmentClicked: [{ type: Output }],\n    eventTimesChanged: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The current view date\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.viewDate;\n    /**\n     * An array of events to display on view\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.events;\n    /**\n     * The number of segments in an hour. Must be <= 6\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.hourSegments;\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.dayStartHour;\n    /**\n     * The day start minutes. Must be 0-59\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.dayStartMinute;\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.dayEndHour;\n    /**\n     * The day end minutes. Must be 0-59\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.dayEndMinute;\n    /**\n     * The width in pixels of each event on the view\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.eventWidth;\n    /**\n     * An observable that when emitted on will re-render the current view\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.refresh;\n    /**\n     * The locale used to format dates\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.locale;\n    /**\n     * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\n     * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.hourSegmentModifier;\n    /**\n     * The grid size to snap resizing and dragging of events to\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.eventSnapSize;\n    /**\n     * The placement of the event tooltip\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.tooltipPosition;\n    /**\n     * A custom template to use to replace the hour segment\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.hourSegmentTemplate;\n    /**\n     * A custom template to use for all day events\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.allDayEventTemplate;\n    /**\n     * A custom template to use for day view events\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.eventTemplate;\n    /**\n     * Called when an event title is clicked\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.eventClicked;\n    /**\n     * Called when an hour segment is clicked\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.hourSegmentClicked;\n    /**\n     * Called when an event is resized or dragged and dropped\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.eventTimesChanged;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.hours;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.view;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.width;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.refreshSubscription;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.currentResize;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.validateDrag;\n    /**\n     * @hidden\n     * @type {?}\n     */\n    NovoCalendarDayViewElement.prototype.validateResize;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoCalendarDayViewElement.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/day/CalendarDayEvent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarDayEventElement {\n    constructor() {\n        this.eventClicked = new EventEmitter();\n    }\n}\nNovoCalendarDayEventElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-day-event',\n                template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [style.borderColor]=\"dayEvent.event.color.secondary\"\n        [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n        [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n        [ngClass]=\"dayEvent.event.cssClass\"\n        [tooltip]=\"dayEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({event: dayEvent.event})\">\n          <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"dayEvent.event.color.primary\"></div>\n          <div class=\"cal-event-group\">\n            <div class=\"cal-event-title\">{{dayEvent.event.title}}</div>\n            <div class=\"cal-event-description\">{{dayEvent.event?.description}}</div>\n          </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{dayEvent: dayEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked}\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarDayEventElement.propDecorators = {\n    dayEvent: [{ type: Input }],\n    tooltipPosition: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    eventClicked: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarDayEventElement.prototype.dayEvent;\n    /** @type {?} */\n    NovoCalendarDayEventElement.prototype.tooltipPosition;\n    /** @type {?} */\n    NovoCalendarDayEventElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoCalendarDayEventElement.prototype.eventClicked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/day/CalendarHourSegment.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarHourSegmentElement {\n}\nNovoCalendarHourSegmentElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-day-hour-segment',\n                template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-hour-segment\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | hours:locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarHourSegmentElement.propDecorators = {\n    segment: [{ type: Input }],\n    locale: [{ type: Input }],\n    customTemplate: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarHourSegmentElement.prototype.segment;\n    /** @type {?} */\n    NovoCalendarHourSegmentElement.prototype.locale;\n    /** @type {?} */\n    NovoCalendarHourSegmentElement.prototype.customTemplate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/day/CalendarAllDayEvent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarAllDayEventElement {\n    constructor() {\n        this.eventClicked = new EventEmitter();\n    }\n}\nNovoCalendarAllDayEventElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-calendar-all-day-event',\n                template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-all-day-event\"\n        [style.backgroundColor]=\"event.color.secondary\"\n        [style.borderColor]=\"event.color.primary\">\n        {{event.title}}\n        <!--<novo-calendar-event-title\n          [event]=\"event\"\n          view=\"day\"\n          (click)=\"eventClicked.emit()\">\n        </novo-calendar-event-title>\n        <novo-calendar-event-actions [event]=\"event\"></novo-calendar-event-actions>-->\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `\n            }] }\n];\nNovoCalendarAllDayEventElement.propDecorators = {\n    event: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    eventClicked: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCalendarAllDayEventElement.prototype.event;\n    /** @type {?} */\n    NovoCalendarAllDayEventElement.prototype.customTemplate;\n    /** @type {?} */\n    NovoCalendarAllDayEventElement.prototype.eventClicked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/Weekday.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass WeekdayPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'short') {\n        return new Intl.DateTimeFormat(locale, { weekday: method }).format(date);\n    }\n}\nWeekdayPipe.decorators = [\n    { type: Pipe, args: [{ name: 'weekday' },] }\n];\n/** @nocollapse */\nWeekdayPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    WeekdayPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/Month.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MonthPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'long') {\n        return new Intl.DateTimeFormat(locale, { month: method }).format(date);\n    }\n}\nMonthPipe.decorators = [\n    { type: Pipe, args: [{ name: 'month' },] }\n];\n/** @nocollapse */\nMonthPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MonthPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/MonthDay.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MonthDayPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'short') {\n        return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(date);\n    }\n}\nMonthDayPipe.decorators = [\n    { type: Pipe, args: [{ name: 'monthday' },] }\n];\n/** @nocollapse */\nMonthDayPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MonthDayPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/Year.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass YearPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'numeric') {\n        return new Intl.DateTimeFormat(locale, { year: method }).format(date);\n    }\n}\nYearPipe.decorators = [\n    { type: Pipe, args: [{ name: 'year' },] }\n];\n/** @nocollapse */\nYearPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    YearPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/Hours.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HoursPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'numeric') {\n        return new Intl.DateTimeFormat(locale, { hour: method }).format(date);\n    }\n}\nHoursPipe.decorators = [\n    { type: Pipe, args: [{ name: 'hours' },] }\n];\n/** @nocollapse */\nHoursPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HoursPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/DayOfMonth.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DayOfMonthPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(date, locale = this.locale, method = 'numeric') {\n        return new Intl.DateTimeFormat(locale, { day: method }).format(date);\n    }\n}\nDayOfMonthPipe.decorators = [\n    { type: Pipe, args: [{ name: 'dayofmonth' },] }\n];\n/** @nocollapse */\nDayOfMonthPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DayOfMonthPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/pipe/EndOfWeekDisplayPipe.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass EndOfWeekDisplayPipe {\n    /**\n     * @param {?=} locale\n     */\n    constructor(locale = 'en-US') {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} endOfWeek\n     * @param {?} startOfWeek\n     * @param {?=} locale\n     * @param {?=} method\n     * @return {?}\n     */\n    transform(endOfWeek, startOfWeek, locale = this.locale, method = 'short') {\n        if (endOfWeek.getMonth() === startOfWeek.getMonth()) {\n            return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(endOfWeek);\n        }\n        return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(endOfWeek);\n    }\n}\nEndOfWeekDisplayPipe.decorators = [\n    { type: Pipe, args: [{ name: 'endofweekdisplay' },] }\n];\n/** @nocollapse */\nEndOfWeekDisplayPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    EndOfWeekDisplayPipe.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/calendar/Calendar.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCalendarModule {\n}\nNovoCalendarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule, NovoTooltipModule, NovoPipesModule],\n                declarations: [\n                    NovoEventTypeLegendElement,\n                    NovoCalendarMonthViewElement,\n                    NovoCalendarMonthHeaderElement,\n                    NovoCalendarMonthDayElement,\n                    NovoCalendarWeekViewElement,\n                    NovoCalendarWeekHeaderElement,\n                    NovoCalendarWeekEventElement,\n                    NovoCalendarDayViewElement,\n                    NovoCalendarDayEventElement,\n                    NovoCalendarHourSegmentElement,\n                    NovoCalendarAllDayEventElement,\n                    NovoCalendarDateChangeElement,\n                    WeekdayPipe,\n                    DayOfMonthPipe,\n                    MonthPipe,\n                    MonthDayPipe,\n                    YearPipe,\n                    HoursPipe,\n                    EndOfWeekDisplayPipe,\n                ],\n                exports: [\n                    NovoEventTypeLegendElement,\n                    NovoCalendarMonthViewElement,\n                    NovoCalendarMonthHeaderElement,\n                    NovoCalendarMonthDayElement,\n                    NovoCalendarWeekViewElement,\n                    NovoCalendarWeekHeaderElement,\n                    NovoCalendarWeekEventElement,\n                    NovoCalendarDayViewElement,\n                    NovoCalendarDayEventElement,\n                    NovoCalendarHourSegmentElement,\n                    NovoCalendarAllDayEventElement,\n                    NovoCalendarDateChangeElement,\n                    WeekdayPipe,\n                    DayOfMonthPipe,\n                    MonthPipe,\n                    MonthDayPipe,\n                    YearPipe,\n                    HoursPipe,\n                    EndOfWeekDisplayPipe,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/novo-label-service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction TimeFormatParts() { }\nif (false) {\n    /** @type {?} */\n    TimeFormatParts.prototype.hour;\n    /** @type {?} */\n    TimeFormatParts.prototype.minute;\n    /** @type {?|undefined} */\n    TimeFormatParts.prototype.dayPeriod;\n}\n/**\n * @record\n */\nfunction BigDecimalFormatOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    BigDecimalFormatOptions.prototype.useAccountingFormat;\n}\nclass NovoLabelService {\n    /**\n     * @param {?=} userLocale\n     */\n    constructor(userLocale = 'en-US') {\n        this.userLocale = userLocale;\n        this.filters = 'Filter';\n        this.clear = 'Clear';\n        this.sort = 'Sort';\n        this.distributionListOwner = 'Owner';\n        this.dateAdded = 'Date Added';\n        this.emptyTableMessage = 'No Records to display...';\n        this.noMatchingRecordsMessage = 'No Matching Records';\n        this.erroredTableMessage = 'Oops! An error occurred.';\n        this.pickerError = 'Oops! An error occurred.';\n        this.pickerTextFieldEmpty = 'Begin typing to see results.';\n        this.pickerEmpty = 'No results to display...';\n        this.tabbedGroupPickerEmpty = 'No results found';\n        this.quickNoteError = 'Oops! An error occurred.';\n        this.quickNoteEmpty = 'No results to display...';\n        this.required = 'Required';\n        this.numberTooLarge = 'Number is too large';\n        this.save = 'Save';\n        this.cancel = 'Cancel';\n        this.next = 'Next';\n        this.itemsPerPage = 'Items per page:';\n        this.select = 'Select...';\n        this.selected = 'Selected';\n        this.selectAllOnPage = 'Select all on page';\n        this.deselectAll = 'Deselect all';\n        this.refresh = 'Refresh';\n        this.close = 'Close';\n        this.move = 'Move';\n        this.startDate = 'Start Date';\n        this.endDate = 'End Date';\n        this.rate = 'Rate';\n        this.more = 'more';\n        this.clearAll = 'CLEAR ALL';\n        this.clearAllNormalCase = 'Clear All';\n        this.clearSort = 'Clear Sort';\n        this.clearFilter = 'Clear Filter';\n        this.today = 'Today';\n        this.now = 'Now';\n        this.isRequired = 'is required';\n        this.notValidYear = 'is not a valid year';\n        this.isTooLarge = 'is too large';\n        this.invalidAddress = 'requires at least one field filled out';\n        this.invalidEmail = 'requires a valid email (ex. abc@123.com)';\n        this.minLength = 'is required to be a minimum length of';\n        this.past1Day = 'Past 1 Day';\n        this.past7Days = 'Past 7 Days';\n        this.past30Days = 'Past 30 Days';\n        this.past90Days = 'Past 90 Days';\n        this.past1Year = 'Past 1 Year';\n        this.next1Day = 'Next 1 Day';\n        this.next7Days = 'Next 7 Days';\n        this.next30Days = 'Next 30 Days';\n        this.next90Days = 'Next 90 Days';\n        this.next1Year = 'Next 1 Year';\n        this.customDateRange = 'Custom Date Range';\n        this.backToPresetFilters = 'Back to Preset Filters';\n        this.okGotIt = 'Ok, Got it';\n        this.address = 'Address';\n        this.address1 = 'Address';\n        this.apt = 'Apt'; // TODO delete\n        // TODO delete\n        this.address2 = 'Apt';\n        this.city = 'City / Locality';\n        this.state = 'State / Region';\n        this.zip = 'Postal Code';\n        this.zipCode = 'Postal Code'; // TODO delete\n        // TODO delete\n        this.country = 'Country';\n        this.or = 'or';\n        this.clickToBrowse = 'click to browse';\n        this.chooseAFile = 'Choose a file';\n        this.no = 'No';\n        this.yes = 'Yes';\n        this.search = 'SEARCH';\n        this.noItems = 'There are no items';\n        this.dateFormat = 'MM/dd/yyyy';\n        this.dateFormatPlaceholder = 'MM/DD/YYYY';\n        this.timeFormatPlaceholderAM = 'hh:mm AM';\n        this.timeFormatPlaceholder24Hour = 'HH:mm';\n        this.timeFormatAM = 'AM';\n        this.timeFormatPM = 'PM';\n        this.confirmChangesModalMessage = 'Are you sure you want to change this field?';\n        this.promptModalMessage = 'Do you want to perform the following changes?';\n        this.asyncFailure = 'Async validation was not called within the 10s threshold, you might want to reload the page to try again';\n        this.previous = 'Previous';\n        this.actions = 'Actions';\n        this.all = 'All';\n        this.groupedMultiPickerEmpty = 'No items to display';\n        this.groupedMultiPickerSelectCategory = 'Select a category from the right to get started';\n        this.add = 'Add';\n        this.encryptedFieldTooltip = 'This data has been stored at the highest level of security';\n        this.noStatesForCountry = 'No states available for the selected country';\n        this.selectCountryFirst = 'Please select a country before selecting a state';\n        this.invalidIntegerInput = 'Special characters are not allowed for';\n        this.maxRecordsReached = 'Sorry, you have reached the maximum number of records allowed for this field';\n        this.selectFilterOptions = 'Please select one or more filter options below.';\n    }\n    /**\n     * @param {?} field\n     * @param {?} maxlength\n     * @return {?}\n     */\n    maxlengthMetWithField(field, maxlength) {\n        return `Sorry, you have reached the maximum character count of ${maxlength} for ${field}.`;\n    }\n    /**\n     * @param {?} maxlength\n     * @return {?}\n     */\n    maxlengthMet(maxlength) {\n        return `Sorry, you have reached the maximum character count of ${maxlength} for this field.`;\n    }\n    /**\n     * @param {?} field\n     * @param {?} maxlength\n     * @return {?}\n     */\n    invalidMaxlengthWithField(field, maxlength) {\n        return `Sorry, you have exceeded the maximum character count of ${maxlength} for ${field}.`;\n    }\n    /**\n     * @param {?} maxlength\n     * @return {?}\n     */\n    invalidMaxlength(maxlength) {\n        return `Sorry, you have exceeded the maximum character count of ${maxlength} for this field.`;\n    }\n    /**\n     * @param {?} toMany\n     * @return {?}\n     */\n    getToManyPlusMore(toMany) {\n        return `+${toMany.quantity} more`;\n    }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    selectedRecords(selected) {\n        return `${selected} records are selected.`;\n    }\n    /**\n     * @param {?} shown\n     * @param {?} total\n     * @return {?}\n     */\n    showingXofXResults(shown, total) {\n        return `Showing ${shown} of ${total} Results.`;\n    }\n    /**\n     * @param {?} total\n     * @param {?=} select\n     * @return {?}\n     */\n    totalRecords(total, select = false) {\n        return select ? `Select all ${total} records.` : `De-select remaining ${total} records.`;\n    }\n    /**\n     * @return {?}\n     */\n    dateFormatString() {\n        return this.dateFormat;\n    }\n    /**\n     * @param {?} tabLabelPlural\n     * @return {?}\n     */\n    tabbedGroupClearSuggestion(tabLabelPlural) {\n        return `Clear your search to see all ${tabLabelPlural}.`;\n    }\n    /**\n     * @param {?} value\n     * @param {?} format\n     * @return {?}\n     */\n    formatDateWithFormat(value, format) {\n        /** @type {?} */\n        const date = value instanceof Date ? value : new Date(value);\n        if (date.getTime() !== date.getTime()) {\n            return value;\n        }\n        return new Intl.DateTimeFormat(this.userLocale, format).format(date);\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    formatToTimeOnly(param) { }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    formatToDateOnly(param) { }\n    /**\n     * @param {?} value\n     * @param {?} format\n     * @return {?}\n     */\n    formatTimeWithFormat(value, format) {\n        /** @type {?} */\n        const date = value instanceof Date ? value : new Date(value);\n        if (date.getTime() !== date.getTime()) {\n            return value;\n        }\n        /** @type {?} */\n        const timeParts = Intl.DateTimeFormat(this.userLocale, format)\n            .formatToParts(date)\n            .reduce((/**\n         * @param {?} obj\n         * @param {?} part\n         * @return {?}\n         */\n        (obj, part) => {\n            obj[part.type] = part.value;\n            return obj;\n        }), {});\n        /** @type {?} */\n        const dayperiod = timeParts.dayperiod ? timeParts.dayperiod : '';\n        return `${timeParts.hour}:${timeParts.minute}${dayperiod}`;\n    }\n    /**\n     * @return {?}\n     */\n    getWeekdays() {\n        /**\n         * @param {?} dayOfWeek\n         * @return {?}\n         */\n        function getDay(dayOfWeek) {\n            /** @type {?} */\n            const dt = new Date();\n            return dt.setDate(dt.getDate() - dt.getDay() + dayOfWeek);\n        }\n        return [getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5), getDay(6)].reduce((/**\n         * @param {?} weekdays\n         * @param {?} dt\n         * @return {?}\n         */\n        (weekdays, dt) => {\n            weekdays.push(new Intl.DateTimeFormat(this.userLocale, { weekday: 'long' }).format(dt));\n            return weekdays;\n        }), []);\n    }\n    /**\n     * @return {?}\n     */\n    getMonths() {\n        /**\n         * @param {?} month\n         * @return {?}\n         */\n        function getMonth(month) {\n            /** @type {?} */\n            const dt = new Date();\n            return dt.setMonth(month, 1);\n        }\n        return [\n            getMonth(0),\n            getMonth(1),\n            getMonth(2),\n            getMonth(3),\n            getMonth(4),\n            getMonth(5),\n            getMonth(6),\n            getMonth(7),\n            getMonth(8),\n            getMonth(9),\n            getMonth(10),\n            getMonth(11),\n        ].reduce((/**\n         * @param {?} months\n         * @param {?} dt\n         * @return {?}\n         */\n        (months, dt) => {\n            months.push(new Intl.DateTimeFormat(this.userLocale, { month: 'long' }).format(dt));\n            return months;\n        }), []);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getProperty(value) {\n        return this[value];\n    }\n    /**\n     * @param {?} page\n     * @param {?} pageSize\n     * @param {?} length\n     * @param {?} short\n     * @return {?}\n     */\n    getRangeText(page, pageSize, length, short) {\n        if (length === 0 || pageSize === 0) {\n            return `Displaying 0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        /** @type {?} */\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        /** @type {?} */\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return short ? `${startIndex + 1} - ${endIndex}/${length}` : `Displaying ${startIndex + 1} - ${endIndex} of ${length}`;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatCurrency(value) {\n        /** @type {?} */\n        const options = { style: 'currency', currency: 'USD' };\n        return new Intl.NumberFormat(this.userLocale, options).format(value);\n    }\n    /**\n     * Extends the Intl.numberFormat capability with two extra features:\n     *  - Does NOT round values, but instead truncates to maximumFractionDigits\n     *  - By default uses accounting format for negative numbers: (3.14) instead of -3.14.\n     *\n     * @param {?} value           The number value to convert to string\n     * @param {?=} overrideOptions Allows for overriding options used and passed to Intl.NumberFormat()\n     * @return {?}\n     */\n    formatBigDecimal(value, overrideOptions) {\n        /** @type {?} */\n        const defaultOptions = {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n            useAccountingFormat: true,\n        };\n        /** @type {?} */\n        const options = Object.assign(defaultOptions, overrideOptions);\n        /** @type {?} */\n        const truncatedValue = this.truncateToPrecision(value, options.maximumFractionDigits);\n        /** @type {?} */\n        let _value = new Intl.NumberFormat(this.userLocale, options).format(truncatedValue);\n        if (value < 0) {\n            _value = options.useAccountingFormat ? `(${_value.slice(1)})` : `-${_value.slice(1)}`;\n        }\n        return _value;\n    }\n    /**\n     * Performs a string-based truncating of a number with no rounding\n     * @param {?} value\n     * @param {?} precision\n     * @return {?}\n     */\n    truncateToPrecision(value, precision) {\n        /** @type {?} */\n        let valueAsString = value ? value.toString() : '0';\n        /** @type {?} */\n        const decimalIndex = valueAsString.indexOf('.');\n        if (decimalIndex > -1 && decimalIndex + precision + 1 < valueAsString.length) {\n            valueAsString = valueAsString.substring(0, valueAsString.indexOf('.') + precision + 1);\n        }\n        return Number(valueAsString);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    formatNumber(value, options) {\n        return new Intl.NumberFormat(this.userLocale, options).format(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatDateShort(value) {\n        /** @type {?} */\n        const options = {\n            // DD/MM/YYYY, HH:MM A - 02/14/2017, 1:17 PM\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n        };\n        /** @type {?} */\n        const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n        return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatTime(value) {\n        /** @type {?} */\n        const options = {\n            // HH:MM A - 1:17 PM\n            hour: 'numeric',\n            minute: '2-digit',\n        };\n        /** @type {?} */\n        const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n        return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatDate(value) {\n        /** @type {?} */\n        const options = {\n            // DD/MM/YYYY - 02/14/2017\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric',\n        };\n        /** @type {?} */\n        const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n        return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n    }\n}\nNovoLabelService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNovoLabelService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID,] }] }\n];\nif (false) {\n    /** @type {?} */\n    NovoLabelService.prototype.filters;\n    /** @type {?} */\n    NovoLabelService.prototype.clear;\n    /** @type {?} */\n    NovoLabelService.prototype.sort;\n    /** @type {?} */\n    NovoLabelService.prototype.distributionListOwner;\n    /** @type {?} */\n    NovoLabelService.prototype.dateAdded;\n    /** @type {?} */\n    NovoLabelService.prototype.emptyTableMessage;\n    /** @type {?} */\n    NovoLabelService.prototype.noMatchingRecordsMessage;\n    /** @type {?} */\n    NovoLabelService.prototype.erroredTableMessage;\n    /** @type {?} */\n    NovoLabelService.prototype.pickerError;\n    /** @type {?} */\n    NovoLabelService.prototype.pickerTextFieldEmpty;\n    /** @type {?} */\n    NovoLabelService.prototype.pickerEmpty;\n    /** @type {?} */\n    NovoLabelService.prototype.tabbedGroupPickerEmpty;\n    /** @type {?} */\n    NovoLabelService.prototype.quickNoteError;\n    /** @type {?} */\n    NovoLabelService.prototype.quickNoteEmpty;\n    /** @type {?} */\n    NovoLabelService.prototype.required;\n    /** @type {?} */\n    NovoLabelService.prototype.numberTooLarge;\n    /** @type {?} */\n    NovoLabelService.prototype.save;\n    /** @type {?} */\n    NovoLabelService.prototype.cancel;\n    /** @type {?} */\n    NovoLabelService.prototype.next;\n    /** @type {?} */\n    NovoLabelService.prototype.itemsPerPage;\n    /** @type {?} */\n    NovoLabelService.prototype.select;\n    /** @type {?} */\n    NovoLabelService.prototype.selected;\n    /** @type {?} */\n    NovoLabelService.prototype.selectAllOnPage;\n    /** @type {?} */\n    NovoLabelService.prototype.deselectAll;\n    /** @type {?} */\n    NovoLabelService.prototype.refresh;\n    /** @type {?} */\n    NovoLabelService.prototype.close;\n    /** @type {?} */\n    NovoLabelService.prototype.move;\n    /** @type {?} */\n    NovoLabelService.prototype.startDate;\n    /** @type {?} */\n    NovoLabelService.prototype.endDate;\n    /** @type {?} */\n    NovoLabelService.prototype.rate;\n    /** @type {?} */\n    NovoLabelService.prototype.more;\n    /** @type {?} */\n    NovoLabelService.prototype.clearAll;\n    /** @type {?} */\n    NovoLabelService.prototype.clearAllNormalCase;\n    /** @type {?} */\n    NovoLabelService.prototype.clearSort;\n    /** @type {?} */\n    NovoLabelService.prototype.clearFilter;\n    /** @type {?} */\n    NovoLabelService.prototype.today;\n    /** @type {?} */\n    NovoLabelService.prototype.now;\n    /** @type {?} */\n    NovoLabelService.prototype.isRequired;\n    /** @type {?} */\n    NovoLabelService.prototype.notValidYear;\n    /** @type {?} */\n    NovoLabelService.prototype.isTooLarge;\n    /** @type {?} */\n    NovoLabelService.prototype.invalidAddress;\n    /** @type {?} */\n    NovoLabelService.prototype.invalidEmail;\n    /** @type {?} */\n    NovoLabelService.prototype.minLength;\n    /** @type {?} */\n    NovoLabelService.prototype.past1Day;\n    /** @type {?} */\n    NovoLabelService.prototype.past7Days;\n    /** @type {?} */\n    NovoLabelService.prototype.past30Days;\n    /** @type {?} */\n    NovoLabelService.prototype.past90Days;\n    /** @type {?} */\n    NovoLabelService.prototype.past1Year;\n    /** @type {?} */\n    NovoLabelService.prototype.next1Day;\n    /** @type {?} */\n    NovoLabelService.prototype.next7Days;\n    /** @type {?} */\n    NovoLabelService.prototype.next30Days;\n    /** @type {?} */\n    NovoLabelService.prototype.next90Days;\n    /** @type {?} */\n    NovoLabelService.prototype.next1Year;\n    /** @type {?} */\n    NovoLabelService.prototype.customDateRange;\n    /** @type {?} */\n    NovoLabelService.prototype.backToPresetFilters;\n    /** @type {?} */\n    NovoLabelService.prototype.okGotIt;\n    /** @type {?} */\n    NovoLabelService.prototype.address;\n    /** @type {?} */\n    NovoLabelService.prototype.address1;\n    /** @type {?} */\n    NovoLabelService.prototype.apt;\n    /** @type {?} */\n    NovoLabelService.prototype.address2;\n    /** @type {?} */\n    NovoLabelService.prototype.city;\n    /** @type {?} */\n    NovoLabelService.prototype.state;\n    /** @type {?} */\n    NovoLabelService.prototype.zip;\n    /** @type {?} */\n    NovoLabelService.prototype.zipCode;\n    /** @type {?} */\n    NovoLabelService.prototype.country;\n    /** @type {?} */\n    NovoLabelService.prototype.or;\n    /** @type {?} */\n    NovoLabelService.prototype.clickToBrowse;\n    /** @type {?} */\n    NovoLabelService.prototype.chooseAFile;\n    /** @type {?} */\n    NovoLabelService.prototype.no;\n    /** @type {?} */\n    NovoLabelService.prototype.yes;\n    /** @type {?} */\n    NovoLabelService.prototype.search;\n    /** @type {?} */\n    NovoLabelService.prototype.noItems;\n    /** @type {?} */\n    NovoLabelService.prototype.dateFormat;\n    /** @type {?} */\n    NovoLabelService.prototype.dateFormatPlaceholder;\n    /** @type {?} */\n    NovoLabelService.prototype.timeFormatPlaceholderAM;\n    /** @type {?} */\n    NovoLabelService.prototype.timeFormatPlaceholder24Hour;\n    /** @type {?} */\n    NovoLabelService.prototype.timeFormatAM;\n    /** @type {?} */\n    NovoLabelService.prototype.timeFormatPM;\n    /** @type {?} */\n    NovoLabelService.prototype.confirmChangesModalMessage;\n    /** @type {?} */\n    NovoLabelService.prototype.promptModalMessage;\n    /** @type {?} */\n    NovoLabelService.prototype.asyncFailure;\n    /** @type {?} */\n    NovoLabelService.prototype.previous;\n    /** @type {?} */\n    NovoLabelService.prototype.actions;\n    /** @type {?} */\n    NovoLabelService.prototype.all;\n    /** @type {?} */\n    NovoLabelService.prototype.groupedMultiPickerEmpty;\n    /** @type {?} */\n    NovoLabelService.prototype.groupedMultiPickerSelectCategory;\n    /** @type {?} */\n    NovoLabelService.prototype.add;\n    /** @type {?} */\n    NovoLabelService.prototype.encryptedFieldTooltip;\n    /** @type {?} */\n    NovoLabelService.prototype.noStatesForCountry;\n    /** @type {?} */\n    NovoLabelService.prototype.selectCountryFirst;\n    /** @type {?} */\n    NovoLabelService.prototype.invalidIntegerInput;\n    /** @type {?} */\n    NovoLabelService.prototype.maxRecordsReached;\n    /** @type {?} */\n    NovoLabelService.prototype.selectFilterOptions;\n    /** @type {?} */\n    NovoLabelService.prototype.userLocale;\n}\n/** @type {?} */\nconst NOVO_ELEMENTS_LABELS_PROVIDERS = [{ provide: NovoLabelService, useClass: NovoLabelService }];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/card/Card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CardActionsElement {\n}\nCardActionsElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-card-actions',\n                template: '<ng-content></ng-content>'\n            }] }\n];\nclass CardElement {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.padding = true;\n        this.config = {};\n        this.onClose = new EventEmitter();\n        this.onRefresh = new EventEmitter();\n        this.labels = labels;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.config = this.config || {};\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.config = this.config || {};\n        this.cardAutomationId = `${(this.title || this.config.title || 'no-title').toLowerCase().replace(/\\s/g, '-')}-card`;\n        /** @type {?} */\n        const newIcon = this.icon || this.config.icon;\n        /** @type {?} */\n        const newMessageIcon = this.messageIcon || this.config.messageIcon;\n        this.iconClass = newIcon ? `bhi-${newIcon}` : null;\n        this.messageIconClass = newMessageIcon ? `bhi-${newMessageIcon}` : null;\n    }\n    /**\n     * @return {?}\n     */\n    toggleClose() {\n        if (!this.config.onClose) {\n            this.onClose.next();\n        }\n        else {\n            this.config.onClose();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toggleRefresh() {\n        if (!this.config.onRefresh) {\n            this.onRefresh.next();\n        }\n        else {\n            this.config.onRefresh();\n        }\n    }\n}\nCardElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-card',\n                template: `\n        <div class=\"novo-card\" [attr.data-automation-id]=\"cardAutomationId\" [ngClass]=\"{'no-padding': !padding}\" [class.loading]=\"loading || config.loading\">\n            <!--Loading-->\n            <div class=\"card-loading-container\" *ngIf=\"loading || config.loading\">\n                <novo-loading theme=\"line\" [attr.data-automation-id]=\"cardAutomationId + '-loading'\"></novo-loading>\n            </div>\n            <!--Card Header-->\n            <header>\n                <div class=\"title\">\n                    <!--Grabber Icon-->\n                    <span tooltip=\"{{ labels.move }}\" tooltipPosition=\"bottom-right\"><i *ngIf=\"move || config.move\" class=\"bhi-move\" [attr.data-automation-id]=\"cardAutomationId + '-move'\"></i></span>\n                    <!--Card Title-->\n                    <h3 [attr.data-automation-id]=\"cardAutomationId + '-title'\"><span [tooltip]=\"iconTooltip\" tooltipPosition=\"right\"><i *ngIf=\"icon\" [ngClass]=\"iconClass\"></i></span> {{title || config.title}}</h3>\n                </div>\n                <!--Card Actions-->\n                <div class=\"actions\" [attr.data-automation-id]=\"cardAutomationId + '-actions'\">\n                    <ng-content select=\"novo-card-actions\"></ng-content>\n                    <button theme=\"icon\" icon=\"refresh\"  (click)=\"toggleRefresh()\" *ngIf=\"refresh || config.refresh\" [attr.data-automation-id]=\"cardAutomationId + '-refresh'\" tooltip=\"{{ labels.refresh }}\" tooltipPosition=\"bottom-left\"></button>\n                    <button theme=\"icon\" icon=\"close-o\" (click)=\"toggleClose()\" *ngIf=\"close || config.close\" [attr.data-automation-id]=\"cardAutomationId + '-close'\" tooltip=\"{{ labels.close }}\" tooltipPosition=\"bottom-left\"></button>\n                </div>\n            </header>\n            <!--Card Main-->\n            <main>\n                <!--Content (transcluded)-->\n                <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\"></ng-content>\n                <!--Error/Empty Message-->\n                <p class=\"card-message\" *ngIf=\"!(loading || config.loading) && (message || config.message)\" [attr.data-automation-id]=\"cardAutomationId + '-message'\"><i *ngIf=\"messageIconClass\" [ngClass]=\"messageIconClass\"></i> <span [innerHtml]=\"message || config.message\"></span></p>\n            </main>\n            <!--Card Footer-->\n            <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\" select=\"footer\"></ng-content>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nCardElement.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nCardElement.propDecorators = {\n    padding: [{ type: Input }],\n    config: [{ type: Input }],\n    title: [{ type: Input }],\n    message: [{ type: Input }],\n    messageIcon: [{ type: Input }],\n    icon: [{ type: Input }],\n    iconTooltip: [{ type: Input }],\n    refresh: [{ type: Input }],\n    close: [{ type: Input }],\n    move: [{ type: Input }],\n    loading: [{ type: Input }],\n    onClose: [{ type: Output }],\n    onRefresh: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    CardElement.prototype.padding;\n    /** @type {?} */\n    CardElement.prototype.config;\n    /** @type {?} */\n    CardElement.prototype.title;\n    /** @type {?} */\n    CardElement.prototype.message;\n    /** @type {?} */\n    CardElement.prototype.messageIcon;\n    /** @type {?} */\n    CardElement.prototype.icon;\n    /** @type {?} */\n    CardElement.prototype.iconTooltip;\n    /** @type {?} */\n    CardElement.prototype.refresh;\n    /** @type {?} */\n    CardElement.prototype.close;\n    /** @type {?} */\n    CardElement.prototype.move;\n    /** @type {?} */\n    CardElement.prototype.loading;\n    /** @type {?} */\n    CardElement.prototype.onClose;\n    /** @type {?} */\n    CardElement.prototype.onRefresh;\n    /** @type {?} */\n    CardElement.prototype.cardAutomationId;\n    /** @type {?} */\n    CardElement.prototype.labels;\n    /** @type {?} */\n    CardElement.prototype.iconClass;\n    /** @type {?} */\n    CardElement.prototype.messageIconClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/loading/Loading.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoLoadingElement {\n}\nNovoLoadingElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-loading',\n                host: {\n                    '[class]': 'theme || \"\"',\n                },\n                template: `\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n    `\n            }] }\n];\nNovoLoadingElement.propDecorators = {\n    theme: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoLoadingElement.prototype.theme;\n}\nclass NovoSpinnerElement {\n}\nNovoSpinnerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-spinner',\n                template: `\n        <svg class=\"bullhornSpinner\" [ngClass]=\"theme\" height=\"100\" width=\"100\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.inverse]=\"inverse\">\n            <title>Bullhorn Spinner Animation</title>\n            <desc>Spinner animation indicating loading</desc>\n            <defs>\n                <style>\n                    .bullhornSpinner g.circleGroup {\n                        -webkit-filter: url(\"{{baseHref || ''}}#gooEffect\");\n                        filter: url(\"{{baseHref || ''}}#gooEffect\");\n                    }\n                    _:-webkit-full-screen:not(:root:root), .bullhornSpinner g.circleGroup {\n                        -webkit-filter: none;\n                        filter: none;\n                    }\n                    @supports (-webkit-text-size-adjust:none) and (not (-ms-accelerator:true)) and (not (-moz-appearance:none)) {\n                        .bullhornSpinner g.circleGroup {\n                            -webkit-filter: none;\n                            filter: none;\n                        }\n                    }\n                    @supports (-webkit-text-size-adjust:none) and (not (-ms-accelerator:true)) and (not (-moz-appearance:none)) {\n                        .bullhornSpinner g.circleGroup {\n                            -webkit-filter: none;\n                            filter: none;\n                        }\n                    }\n                </style>\n                <filter id=\"gooEffect\">\n                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"5\" result=\"blur\" />\n                    <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"\n                            1.3 0 0 0 0\n                            0 1.3 0 0 0\n                            0 0 1.3 0 0\n                            0 0 0 19 -7\" result=\"gooEffect\" />\n                    <feComposite in=\"SourceGraphic\" in2=\"gooEffect\" operator=\"atop\" />\n                </filter>\n            </defs>\n            <path d=\"M 43 43 L 54 45 L 80 40 L 43 43\" stroke=\"none\" fill=\"none\" id=\"firstLinePath\"/>\n            <path d=\"M 43 43 L 48 41 L 48 18 L 43 43\" stroke=\"none\" fill=\"none\" id=\"secondLinePath\"/>\n            <path d=\"M 43 43 L 42 45 L 15 40 L 43 43\" stroke=\"none\" fill=\"none\" id=\"thirdLinePath\"/>\n            <path d=\"M 43 43 L 44 52 L 29 78 L 43 43\" stroke=\"none\" fill=\"none\" id=\"fourthLinePath\"/>\n            <path d=\"M 43 43 L 52 52 L 68 78 L 43 43\" stroke=\"none\" fill=\"none\" id=\"fifthLinePath\"/>\n            <g class=\"circleGroup\" transform=\"translate(7, 7)\">\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#firstLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#secondLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#thirdLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#fourthLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#fifthLinePath\"/>\n                    </animateMotion>\n                </circle>\n            </g>\n        </svg>\n    `\n            }] }\n];\nNovoSpinnerElement.propDecorators = {\n    theme: [{ type: Input }],\n    inverse: [{ type: Input }],\n    baseHref: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSpinnerElement.prototype.theme;\n    /** @type {?} */\n    NovoSpinnerElement.prototype.inverse;\n    /** @type {?} */\n    NovoSpinnerElement.prototype.baseHref;\n}\nclass NovoSkeletonDirective {\n    constructor() {\n        this.skeleton = true;\n    }\n}\nNovoSkeletonDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[skeleton]',\n            },] }\n];\nNovoSkeletonDirective.propDecorators = {\n    skeleton: [{ type: HostBinding, args: ['class.skeleton',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSkeletonDirective.prototype.skeleton;\n}\nclass NovoLoadedDirective {\n}\nNovoLoadedDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[loaded]',\n            },] }\n];\nclass NovoIsLoadingDirective {\n    /**\n     * @param {?} viewContainer\n     */\n    constructor(viewContainer) {\n        this.viewContainer = viewContainer;\n        this.hasView = false;\n        this.skeletonViews = [];\n        this.loadedViews = [];\n    }\n    /**\n     * @param {?} condition\n     * @return {?}\n     */\n    set isLoading(condition) {\n        if (!condition && !this.hasView) {\n            this.destroyViews(this.loadedViews);\n            this.skeletonViews = this.createViews(this.skeletonTemplates);\n            this.hasView = true;\n        }\n        else if (condition && this.hasView) {\n            this.destroyViews(this.skeletonViews);\n            this.loadedViews = this.createViews(this.loadedTemplates);\n            this.hasView = false;\n        }\n    }\n    /**\n     * @param {?} templates\n     * @return {?}\n     */\n    createViews(templates) {\n        return templates && templates.map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        (v) => this.viewContainer.createEmbeddedView(v)));\n    }\n    /**\n     * @param {?} views\n     * @return {?}\n     */\n    destroyViews(views) {\n        if (views) {\n            for (const view of views) {\n                view.destroy();\n            }\n        }\n    }\n}\nNovoIsLoadingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[isLoading]',\n            },] }\n];\n/** @nocollapse */\nNovoIsLoadingDirective.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNovoIsLoadingDirective.propDecorators = {\n    skeletonTemplates: [{ type: ContentChildren, args: [NovoSkeletonDirective, { read: TemplateRef },] }],\n    loadedTemplates: [{ type: ContentChildren, args: [NovoLoadedDirective, { read: TemplateRef },] }],\n    isLoading: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoIsLoadingDirective.prototype.skeletonTemplates;\n    /** @type {?} */\n    NovoIsLoadingDirective.prototype.loadedTemplates;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoIsLoadingDirective.prototype.hasView;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoIsLoadingDirective.prototype.skeletonViews;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoIsLoadingDirective.prototype.loadedViews;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoIsLoadingDirective.prototype.viewContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/loading/Loading.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoLoadingModule {\n}\nNovoLoadingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n                exports: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/card/Card.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCardModule {\n}\nNovoCardModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule, NovoLoadingModule, NovoTooltipModule],\n                declarations: [CardElement, CardActionsElement],\n                exports: [CardElement, CardActionsElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/outside-click/OutsideClick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outside click helper, makes to set the element as inactive when clicking outside of it\n */\nclass OutsideClick {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.active = false;\n        this.onActiveChange = new EventEmitter();\n        // Component element\n        this.element = element;\n        // Outside click handler\n        // Property because `this.func.bind(this)` returns a new function each time\n        this.onOutsideClick = this.handleOutsideClick.bind(this);\n    }\n    /**\n     * When the element is destroyed, make sure to remove the handler\n     * @return {?}\n     */\n    ngOnDestroy() {\n        window.removeEventListener('click', this.onOutsideClick);\n    }\n    /**\n     * Toggles the element as active and adds/removes the outside click handler\n     * @param {?=} event\n     * @param {?=} forceValue\n     * @return {?}\n     */\n    toggleActive(event, forceValue) {\n        // Reverse the active property (if forceValue, use that)\n        this.active = !Helpers.isBlank(forceValue) ? forceValue : !this.active;\n        // Bind window click events to hide on outside click\n        if (this.active) {\n            window.addEventListener('click', this.onOutsideClick);\n        }\n        else {\n            window.removeEventListener('click', this.onOutsideClick);\n        }\n        // Fire the active change event\n        this.onActiveChange.emit(this.active);\n    }\n    /**\n     * When clicking outside, checks the element and closes if outside\n     * @param {?} event\n     * @return {?}\n     */\n    handleOutsideClick(event) {\n        // If the elements doesn't contain the target element, it is an outside click\n        /** @type {?} */\n        let outsideClick = !this.element.nativeElement.contains(event.target);\n        if (this.otherElement && outsideClick) {\n            outsideClick = !this.otherElement.nativeElement.contains(event.target);\n        }\n        if (outsideClick) {\n            this.toggleActive(event, false);\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    OutsideClick.prototype.element;\n    /** @type {?} */\n    OutsideClick.prototype.otherElement;\n    /** @type {?} */\n    OutsideClick.prototype.active;\n    /** @type {?} */\n    OutsideClick.prototype.onOutsideClick;\n    /** @type {?} */\n    OutsideClick.prototype.onActiveChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/key-codes/KeyCodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Helper to keep track of key codes\n/** @type {?} */\nconst KeyCodes = {\n    BACKSPACE: 8,\n    TAB: 9,\n    NUM_CENTER: 12,\n    ENTER: 13,\n    RETURN: 13,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAUSE: 19,\n    CAPS_LOCK: 20,\n    ESC: 27,\n    SPACE: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HASH_SYMBOL: 35,\n    HOME: 36,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    PRINT_SCREEN: 44,\n    INSERT: 45,\n    DELETE: 46,\n    ZERO: 48,\n    ONE: 49,\n    TWO: 50,\n    THREE: 51,\n    FOUR: 52,\n    FIVE: 53,\n    SIX: 54,\n    SEVEN: 55,\n    EIGHT: 56,\n    NINE: 57,\n    AT_SYMBOL: 64,\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    CONTEXT_MENU: 93,\n    NUM_ZERO: 96,\n    NUM_ONE: 97,\n    NUM_TWO: 98,\n    NUM_THREE: 99,\n    NUM_FOUR: 100,\n    NUM_FIVE: 101,\n    NUM_SIX: 102,\n    NUM_SEVEN: 103,\n    NUM_EIGHT: 104,\n    NUM_NINE: 105,\n    NUM_MULTIPLY: 106,\n    NUM_PLUS: 107,\n    NUM_MINUS: 109,\n    NUM_PERIOD: 110,\n    NUM_DIVISION: 111,\n    F1: 112,\n    F2: 113,\n    F3: 114,\n    F4: 115,\n    F5: 116,\n    F6: 117,\n    F7: 118,\n    F8: 119,\n    F9: 120,\n    F10: 121,\n    F11: 122,\n    F12: 123,\n    DASH: 189,\n    PERIOD: 190,\n    FORWARD_SLASH: 191,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/category-dropdown/CategoryDropdown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCategoryDropdownElement extends OutsideClick {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     */\n    constructor(element, labels) {\n        super(element);\n        this.labels = labels;\n        this._query = '';\n        this._categoryMap = {};\n        this._categories = [];\n        // Boolean to keep the selection persist when closing the dropdown\n        this.persistSelection = false;\n        // Boolean to close the dropdown on selection\n        this.closeOnSelect = false;\n        // Event that is emitted whenever an item is selected\n        this._select = new EventEmitter();\n        // Event that is emitted whenever a category is selected\n        this.categorySelected = new EventEmitter();\n        this.clickHandler = this.toggleActive.bind(this);\n    }\n    /**\n     * @param {?} categories\n     * @return {?}\n     */\n    set categories(categories) {\n        this._masterCategoryMap = Object.assign({}, categories);\n        this._categoryMap = Object.assign({}, categories);\n        this._categories = Object.keys(categories);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const button = this.element.nativeElement.querySelector('button');\n        button.addEventListener('click', this.clickHandler);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const button = this.element.nativeElement.querySelector('button');\n        if (button) {\n            button.removeEventListener('click', this.clickHandler);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        if (this.active && (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.ENTER)) {\n            this.toggleActive();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearSelection() {\n        this._categories.forEach((/**\n         * @param {?} category\n         * @return {?}\n         */\n        (category) => {\n            this._categoryMap[category].forEach((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                item.selected = false;\n            }));\n        }));\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    select(event, item) {\n        Helpers.swallowEvent(event);\n        // If we persist the selection, clear and show a check\n        if (this.persistSelection) {\n            this.clearSelection();\n            item.selected = true;\n        }\n        // Emit the item\n        this._select.emit(item);\n        // Close, if input is set\n        if (this.closeOnSelect) {\n            this.toggleActive();\n        }\n    }\n    /**\n     * @param {?} category\n     * @return {?}\n     */\n    onCategorySelected(category) {\n        this.categorySelected.emit(category);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    clearQuery(event) {\n        Helpers.swallowEvent(event);\n        this._query = '';\n        // Reset the categories\n        this._categories.forEach((/**\n         * @param {?} category\n         * @return {?}\n         */\n        (category) => {\n            this._categoryMap[category] = this._masterCategoryMap[category];\n        }));\n    }\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n    queryCategories(query) {\n        // Save the query\n        this._query = query;\n        // Check timeout\n        if (this._queryTimeout) {\n            clearTimeout(this._queryTimeout);\n        }\n        // Store a timeout, to debounce user input\n        this._queryTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._categories.forEach((/**\n             * @param {?} category\n             * @return {?}\n             */\n            (category) => {\n                if (this.search.compare) {\n                    this._categoryMap[category] = this._masterCategoryMap[category].filter((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => this.search.compare(query, item)));\n                }\n                else {\n                    this._categoryMap[category] = this._masterCategoryMap[category].filter((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => ~item.label.toLowerCase().indexOf(query.toLowerCase())));\n                }\n            }));\n        }), this.search.debounce || 300);\n    }\n    /**\n     * @param {?} event\n     * @param {?} link\n     * @return {?}\n     */\n    executeClickCallback(event, link) {\n        link.callback(event);\n        // Close, if input is set\n        if (this.closeOnSelect) {\n            this.toggleActive();\n        }\n    }\n}\nNovoCategoryDropdownElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-category-dropdown',\n                template: `\n        <ng-content select=\"button\"></ng-content>\n        <div class=\"dropdown-container\" *ngIf=\"active\">\n            <div class=\"novo-category-dropdown-search\" *ngIf=\"search\" data-automation-id=\"novo-category-dropdown-search\">\n                <input type=\"text\" [placeholder]=\"search.placeholder || labels.search\" [value]=\"_query\" (input)=\"queryCategories($event.target.value)\"/>\n                <i class=\"bhi-search\" *ngIf=\"!_query\"></i>\n                <i class=\"bhi-times\" *ngIf=\"_query\" (click)=\"clearQuery($event)\"></i>\n            </div>\n            <novo-nav theme=\"white\" [outlet]=\"novoCategoryDropdownOutlet\" direction=\"vertical\">\n                <novo-tab *ngFor=\"let category of _categories\" [attr.data-automation-id]=\"category\" (activeChange)=\"onCategorySelected(category)\">\n                    <span>{{ category }} ({{ _categoryMap[category].length }})</span>\n                </novo-tab>\n            </novo-nav>\n            <novo-nav-outlet #novoCategoryDropdownOutlet>\n                <novo-nav-content *ngFor=\"let category of _categories\">\n                    <novo-list direction=\"vertical\">\n                        <novo-list-item *ngFor=\"let item of _categoryMap[category]\" (click)=\"select($event, item)\" [attr.data-automation-id]=\"item.label\">\n                            <item-content>{{ item.label }}</item-content>\n                            <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverText && !item.selected\">{{ item.hoverText }}</item-end>\n                            <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverIcon && !item.selected\"><i class=\"bhi-{{ item.hoverIcon }}\"></i></item-end>\n                            <item-end *ngIf=\"item.selected\"><i class=\"bhi-check\"></i></item-end>\n                        </novo-list-item>\n                        <novo-list-item *ngIf=\"_categoryMap[category].length === 0 && search\" class=\"novo-category-dropdown-empty-item\">\n                            <item-content>{{ search.emptyMessage || labels.noItems }}</item-content>\n                        </novo-list-item>\n                    </novo-list>\n                </novo-nav-content>\n            </novo-nav-outlet>\n            <footer *ngIf=\"footer\" class=\"novo-category-dropdown-footer-align-{{ footer.align || 'right' }}\">\n                <a *ngFor=\"let link of footer.links\" (click)=\"executeClickCallback($event, link)\">{{ link.label }}</a>\n            </footer>\n        </div>\n    `,\n                host: {\n                    '(keydown)': 'onKeyDown($event)',\n                    '[class.active]': 'active',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoCategoryDropdownElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService }\n];\nNovoCategoryDropdownElement.propDecorators = {\n    persistSelection: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    search: [{ type: Input }],\n    footer: [{ type: Input }],\n    _select: [{ type: Output, args: ['itemSelected',] }],\n    categorySelected: [{ type: Output }],\n    categories: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._query;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._categoryMap;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._categories;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.clickHandler;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._masterCategoryMap;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._queryTimeout;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.persistSelection;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.search;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.footer;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype._select;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.categorySelected;\n    /** @type {?} */\n    NovoCategoryDropdownElement.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tabs/Tabs.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoNavElement {\n    constructor() {\n        this.theme = '';\n        this.direction = '';\n        this.condensed = false;\n        this.items = [];\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) {\n        /**\n         * Deactivate all other tabs\n         * @param {?} items\n         * @return {?}\n         */\n        function _deactivateAllItems(items) {\n            items.forEach((/**\n             * @param {?} t\n             * @return {?}\n             */\n            (t) => {\n                if (t.active === true) {\n                    // t.deselected.next();\n                }\n                t.active = false;\n            }));\n        }\n        _deactivateAllItems(this.items);\n        item.active = true;\n        if (this.outlet) {\n            this.outlet.show(this.items.indexOf(item));\n        }\n        // TODO - remove hack to make DOM rerender - jgodi\n        /** @type {?} */\n        const element = (/** @type {?} */ (document.querySelector('novo-tab-link.active span.indicator')));\n        if (element) {\n            element.style.opacity = 0.99;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                element.style.opacity = 1;\n            }), 10);\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    add(item) {\n        if (this.items.length === 0) {\n            item.active = true;\n            // item.selected.next();\n        }\n        this.items.push(item);\n    }\n}\nNovoNavElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-nav',\n                template: '<ng-content></ng-content>'\n            }] }\n];\nNovoNavElement.propDecorators = {\n    theme: [{ type: Input }],\n    direction: [{ type: Input }],\n    outlet: [{ type: Input }],\n    router: [{ type: Input }],\n    condensed: [{ type: HostBinding, args: ['class.condensed',] }, { type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoNavElement.prototype.theme;\n    /** @type {?} */\n    NovoNavElement.prototype.direction;\n    /** @type {?} */\n    NovoNavElement.prototype.outlet;\n    /** @type {?} */\n    NovoNavElement.prototype.router;\n    /** @type {?} */\n    NovoNavElement.prototype.condensed;\n    /** @type {?} */\n    NovoNavElement.prototype.items;\n}\nclass NovoTabElement {\n    /**\n     * @param {?} nav\n     */\n    constructor(nav) {\n        this.active = false;\n        this.disabled = false;\n        this.activeChange = new EventEmitter();\n        this.nav = nav;\n        this.nav.add(this);\n    }\n    /**\n     * @return {?}\n     */\n    select() {\n        if (!this.disabled) {\n            this.activeChange.emit(true);\n            this.nav.select(this);\n        }\n    }\n}\nNovoTabElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tab',\n                host: {\n                    '(click)': 'select()',\n                    '[class.active]': 'active',\n                    '[class.disabled]': 'disabled',\n                },\n                template: `\n        <div class=\"novo-tab-link\">\n            <ng-content></ng-content>\n        </div>\n        <span class=\"indicator\"></span>\n   `\n            }] }\n];\n/** @nocollapse */\nNovoTabElement.ctorParameters = () => [\n    { type: NovoNavElement }\n];\nNovoTabElement.propDecorators = {\n    active: [{ type: Input }],\n    disabled: [{ type: Input }],\n    activeChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTabElement.prototype.active;\n    /** @type {?} */\n    NovoTabElement.prototype.disabled;\n    /** @type {?} */\n    NovoTabElement.prototype.activeChange;\n    /** @type {?} */\n    NovoTabElement.prototype.nav;\n}\nclass NovoTabButtonElement {\n    /**\n     * @param {?} nav\n     */\n    constructor(nav) {\n        this.active = false;\n        this.disabled = false;\n        this.nav = nav;\n        this.nav.add(this);\n    }\n    /**\n     * @return {?}\n     */\n    select() {\n        if (!this.disabled) {\n            this.nav.select(this);\n        }\n    }\n}\nNovoTabButtonElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tab-button',\n                host: {\n                    '(click)': 'select()',\n                    '[class.active]': 'active',\n                    '[class.disabled]': 'disabled',\n                },\n                template: '<ng-content></ng-content>'\n            }] }\n];\n/** @nocollapse */\nNovoTabButtonElement.ctorParameters = () => [\n    { type: NovoNavElement }\n];\nNovoTabButtonElement.propDecorators = {\n    active: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTabButtonElement.prototype.active;\n    /** @type {?} */\n    NovoTabButtonElement.prototype.disabled;\n    /** @type {?} */\n    NovoTabButtonElement.prototype.nav;\n}\nclass NovoTabLinkElement {\n    /**\n     * @param {?} nav\n     */\n    constructor(nav) {\n        this.active = false;\n        this.disabled = false;\n        this.nav = nav;\n        this.nav.add(this);\n    }\n    /**\n     * @return {?}\n     */\n    select() {\n        if (!this.disabled) {\n            this.nav.select(this);\n        }\n    }\n}\nNovoTabLinkElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tab-link',\n                host: {\n                    '(click)': 'select()',\n                    '[class.active]': 'active',\n                    '[class.disabled]': 'disabled',\n                },\n                template: `\n        <div class=\"novo-tab-link\">\n            <ng-content></ng-content>\n        </div>\n        <span class=\"indicator\"></span>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoTabLinkElement.ctorParameters = () => [\n    { type: NovoNavElement }\n];\nNovoTabLinkElement.propDecorators = {\n    active: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTabLinkElement.prototype.active;\n    /** @type {?} */\n    NovoTabLinkElement.prototype.disabled;\n    /** @type {?} */\n    NovoTabLinkElement.prototype.nav;\n}\nclass NovoNavOutletElement {\n    constructor() {\n        this.items = [];\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    show(index) {\n        /** @type {?} */\n        const item = this.items[index];\n        /**\n         * Deactivates other tab items\n         * @param {?} items - deactivated items\n         * @return {?}\n         */\n        function _deactivateAllItems(items) {\n            items.forEach((/**\n             * @param {?} t\n             * @return {?}\n             */\n            (t) => {\n                if (t.active === true) {\n                    // t.deselected.next();\n                }\n                t.active = false;\n            }));\n        }\n        _deactivateAllItems(this.items);\n        item.active = true;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    add(item) {\n        if (this.items.length === 0) {\n            item.active = true;\n        }\n        this.items.push(item);\n    }\n}\nNovoNavOutletElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-nav-outlet',\n                template: '<ng-content></ng-content>'\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    NovoNavOutletElement.prototype.items;\n}\nclass NovoNavContentElement {\n    /**\n     * @param {?} outlet\n     */\n    constructor(outlet) {\n        this.active = false;\n        outlet.add(this);\n    }\n}\nNovoNavContentElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-nav-content',\n                host: {\n                    '[class.active]': 'active',\n                },\n                template: '<ng-content></ng-content>'\n            }] }\n];\n/** @nocollapse */\nNovoNavContentElement.ctorParameters = () => [\n    { type: NovoNavOutletElement }\n];\nNovoNavContentElement.propDecorators = {\n    active: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoNavContentElement.prototype.active;\n}\nclass NovoNavHeaderElement {\n    /**\n     * @param {?} outlet\n     */\n    constructor(outlet) {\n        this.active = false;\n        this.active = this.active || false;\n        this.outlet = outlet;\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    show(event) {\n        try {\n            /** @type {?} */\n            const INDEX = this.outlet.items.indexOf(this.forElement);\n            if (INDEX > -1) {\n                this.outlet.show(INDEX);\n            }\n        }\n        catch (err) {\n            // do nothing\n        }\n    }\n}\nNovoNavHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-nav-header',\n                host: {\n                    '[class.active]': 'active',\n                    '(click)': 'show($event)',\n                },\n                template: '<ng-content></ng-content>'\n            }] }\n];\n/** @nocollapse */\nNovoNavHeaderElement.ctorParameters = () => [\n    { type: NovoNavOutletElement }\n];\nNovoNavHeaderElement.propDecorators = {\n    active: [{ type: Input }],\n    forElement: [{ type: Input, args: ['for',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoNavHeaderElement.prototype.active;\n    /** @type {?} */\n    NovoNavHeaderElement.prototype.forElement;\n    /** @type {?} */\n    NovoNavHeaderElement.prototype.outlet;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tabs/Tabs.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTabModule {\n}\nNovoTabModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [\n                    NovoNavElement,\n                    NovoTabElement,\n                    NovoTabButtonElement,\n                    NovoTabLinkElement,\n                    NovoNavOutletElement,\n                    NovoNavContentElement,\n                    NovoNavHeaderElement,\n                ],\n                exports: [\n                    NovoNavElement,\n                    NovoTabElement,\n                    NovoTabButtonElement,\n                    NovoTabLinkElement,\n                    NovoNavOutletElement,\n                    NovoNavContentElement,\n                    NovoNavHeaderElement,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/list/List.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoListElement {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n    }\n}\nNovoListElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-list',\n                host: {\n                    '[class.vertical-list]': 'direction === \"vertical\"',\n                    '[class.horizontal-list]': 'direction === \"horizontal\"',\n                    '[attr.theme]': 'theme',\n                },\n                template: `\n        <ng-content></ng-content>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoListElement.ctorParameters = () => [\n    { type: ElementRef }\n];\nNovoListElement.propDecorators = {\n    theme: [{ type: Input }],\n    direction: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoListElement.prototype.theme;\n    /** @type {?} */\n    NovoListElement.prototype.direction;\n    /** @type {?} */\n    NovoListElement.prototype.element;\n}\nclass NovoListItemElement {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n        this.avatar = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.avatar = !!this.element.nativeElement.querySelector('item-avatar');\n    }\n}\nNovoListItemElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-list-item',\n                template: `\n        <div class=\"list-item\" [ngClass]=\"{'avatar': avatar}\">\n            <ng-content select=\"item-header\"></ng-content>\n            <ng-content select=\"item-content\"></ng-content>\n        </div>\n        <ng-content></ng-content>\n        <ng-content select=\"item-end\"></ng-content>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoListItemElement.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /** @type {?} */\n    NovoListItemElement.prototype.avatar;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoListItemElement.prototype.element;\n}\nclass NovoItemAvatarElement {\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.iconClass = this.icon ? `bhi-${this.icon}` : null;\n        this.classMap = [this.iconClass, this.icon];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ngOnChanges();\n    }\n}\nNovoItemAvatarElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-avatar',\n                template: `\n        <i *ngIf=\"iconClass\" [ngClass]=\"classMap\" theme=\"contained\"></i>\n    `\n            }] }\n];\nNovoItemAvatarElement.propDecorators = {\n    icon: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoItemAvatarElement.prototype.icon;\n    /** @type {?} */\n    NovoItemAvatarElement.prototype.iconClass;\n    /** @type {?} */\n    NovoItemAvatarElement.prototype.classMap;\n}\nclass NovoItemTitleElement {\n}\nNovoItemTitleElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-title',\n                template: `\n        <h6><ng-content></ng-content></h6>\n    `\n            }] }\n];\nclass NovoItemHeaderElement {\n}\nNovoItemHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-header',\n                template: `\n        <ng-content select=\"item-avatar\"></ng-content>\n        <ng-content select=\"item-title\"></ng-content>\n        <ng-content select=\"item-header-end\"></ng-content>\n    `\n            }] }\n];\nclass NovoItemDateElement {\n}\nNovoItemDateElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-header-end',\n                template: `\n        <ng-content></ng-content>\n    `\n            }] }\n];\nclass NovoItemContentElement {\n}\nNovoItemContentElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-content',\n                host: {\n                    '[class.vertical-list]': 'direction === \"vertical\"',\n                    '[class.horizontal-list]': 'direction === \"horizontal\"',\n                },\n                template: `\n        <ng-content></ng-content>\n    `\n            }] }\n];\nNovoItemContentElement.propDecorators = {\n    direction: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoItemContentElement.prototype.direction;\n}\nclass NovoItemEndElement {\n}\nNovoItemEndElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item-end',\n                template: `\n        <ng-content></ng-content>\n    `\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/list/List.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoListModule {\n}\nNovoListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [\n                    NovoListElement,\n                    NovoListItemElement,\n                    NovoItemAvatarElement,\n                    NovoItemTitleElement,\n                    NovoItemContentElement,\n                    NovoItemEndElement,\n                    NovoItemHeaderElement,\n                    NovoItemDateElement,\n                ],\n                exports: [\n                    NovoListElement,\n                    NovoListItemElement,\n                    NovoItemAvatarElement,\n                    NovoItemTitleElement,\n                    NovoItemHeaderElement,\n                    NovoItemContentElement,\n                    NovoItemEndElement,\n                    NovoItemDateElement,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/category-dropdown/CategoryDropdown.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCategoryDropdownModule {\n}\nNovoCategoryDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoTabModule, NovoListModule],\n                declarations: [NovoCategoryDropdownElement],\n                exports: [NovoCategoryDropdownElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/component-utils/ComponentUtils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ComponentUtils {\n    /**\n     * @param {?} componentFactoryResolver\n     */\n    constructor(componentFactoryResolver) {\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n    /**\n     * @template T\n     * @param {?} ComponentClass\n     * @param {?} location\n     * @param {?=} providers\n     * @param {?=} onTop\n     * @return {?}\n     */\n    append(ComponentClass, location, providers, onTop) {\n        /** @type {?} */\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ComponentClass);\n        /** @type {?} */\n        const parent = location.injector;\n        /** @type {?} */\n        const index = onTop ? 0 : location.length;\n        return location.createComponent(componentFactory, index, Injector.create({ providers, parent }));\n    }\n}\nComponentUtils.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nComponentUtils.ctorParameters = () => [\n    { type: ComponentFactoryResolver }\n];\nif (false) {\n    /** @type {?} */\n    ComponentUtils.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/chips/Chips.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CHIPS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoChipsElement)),\n    multi: true,\n};\nclass NovoChipElement {\n    constructor() {\n        this.disabled = false;\n        this.select = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.deselect = new EventEmitter();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    set type(type) {\n        this._type = type ? type.toLowerCase() : null;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onRemove(e) {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        this.remove.emit(e);\n        return false;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onSelect(e) {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        this.select.emit(e);\n        return false;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onDeselect(e) {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        this.deselect.emit(e);\n        return false;\n    }\n}\nNovoChipElement.decorators = [\n    { type: Component, args: [{\n                selector: 'chip,novo-chip',\n                template: `\n        <span (click)=\"onSelect($event)\" (mouseenter)=\"onSelect($event)\" (mouseleave)=\"onDeselect($event)\" [ngClass]=\"_type\">\n            <i *ngIf=\"_type\" class=\"bhi-circle\"></i>\n            <span><ng-content></ng-content></span>\n        </span>\n        <i class=\"bhi-close\" *ngIf=\"!disabled\" (click)=\"onRemove($event)\"></i>\n    `\n            }] }\n];\nNovoChipElement.propDecorators = {\n    type: [{ type: Input }],\n    disabled: [{ type: Input }],\n    select: [{ type: Output }],\n    remove: [{ type: Output }],\n    deselect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoChipElement.prototype.disabled;\n    /** @type {?} */\n    NovoChipElement.prototype.select;\n    /** @type {?} */\n    NovoChipElement.prototype.remove;\n    /** @type {?} */\n    NovoChipElement.prototype.deselect;\n    /** @type {?} */\n    NovoChipElement.prototype.entity;\n    /** @type {?} */\n    NovoChipElement.prototype._type;\n}\nclass NovoChipsElement {\n    /**\n     * @param {?} element\n     * @param {?} componentUtils\n     * @param {?} labels\n     */\n    constructor(element, componentUtils, labels) {\n        this.element = element;\n        this.componentUtils = componentUtils;\n        this.labels = labels;\n        this.closeOnSelect = false;\n        this.placeholder = '';\n        this._disablePickerInput = false;\n        this.changed = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.typing = new EventEmitter();\n        this.items = [];\n        this.selected = null;\n        this.config = {};\n        // private data model\n        this._value = '';\n        this._items = new ReplaySubject(1);\n        // Placeholders for the callbacks\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disablePickerInput(v) {\n        this._disablePickerInput = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get disablePickerInput() {\n        return this._disablePickerInput;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setItems();\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set value(selected) {\n        this.itemToAdd = '';\n        if (selected !== this._value) {\n            this._value = selected;\n            this.changed.emit({ value: selected, rawValue: this.items });\n            this.onModelChange(selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearValue() {\n        this.items = [];\n        this._items.next(this.items);\n        this.value = null;\n        this.changed.emit({ value: this.value, rawValue: this.items });\n        this.onModelChange(this.value);\n    }\n    /**\n     * @return {?}\n     */\n    setItems() {\n        this.items = [];\n        if (this.model && Array.isArray(this.model)) {\n            /** @type {?} */\n            const noLabels = [];\n            for (const value of this.model) {\n                /** @type {?} */\n                let label;\n                if (this.source && this.source.format && Helpers.validateInterpolationProps(this.source.format, value)) {\n                    label = Helpers.interpolate(this.source.format, value);\n                }\n                if (this.source && label && label !== this.source.format) {\n                    this.items.push({\n                        value,\n                        label,\n                    });\n                }\n                else if (this.source.getLabels && typeof this.source.getLabels === 'function') {\n                    noLabels.push(value);\n                }\n                else if (this.source.options && Array.isArray(this.source.options)) {\n                    this.items.push(this.getLabelFromOptions(value));\n                }\n                else if (this.source.categoryMap && this.source.categoryMap.size) {\n                    this.items.push(value);\n                }\n                else {\n                    this.items.push({\n                        value,\n                        label: value,\n                    });\n                }\n            }\n            if (noLabels.length > 0 && this.source && this.source.getLabels && typeof this.source.getLabels === 'function') {\n                this.source.getLabels(noLabels).then((/**\n                 * @param {?} result\n                 * @return {?}\n                 */\n                (result) => {\n                    for (const value of result) {\n                        if (value.hasOwnProperty('label')) {\n                            this.items.push({\n                                value,\n                                label: value.label,\n                            });\n                        }\n                        else if (this.source.options && Array.isArray(this.source.options)) {\n                            this.items.push(this.getLabelFromOptions(value));\n                        }\n                        else {\n                            this.items.push(value);\n                        }\n                    }\n                    this._items.next(this.items);\n                }));\n            }\n        }\n        this.changed.emit({ value: this.model, rawValue: this.items });\n        this._items.next(this.items);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getLabelFromOptions(value) {\n        /** @type {?} */\n        let id = value;\n        /** @type {?} */\n        let optLabel = this.source.options.find((/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => val.value === value));\n        if (!optLabel && value.hasOwnProperty('id')) {\n            optLabel = this.source.options.find((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val.value === value.id));\n            id = value.id;\n        }\n        return {\n            value: id,\n            label: optLabel ? optLabel.label : value,\n        };\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    deselectAll(event) {\n        this.selected = null;\n        this.hidePreview();\n    }\n    /**\n     * @param {?=} event\n     * @param {?=} item\n     * @return {?}\n     */\n    select(event, item) {\n        this.blur.emit(event);\n        this.deselectAll();\n        this.selected = item;\n        this.showPreview();\n    }\n    /**\n     * @param {?=} event\n     * @param {?=} item\n     * @return {?}\n     */\n    deselect(event, item) {\n        this.blur.emit(event);\n        this.deselectAll();\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onTyping(event) {\n        this.typing.emit(event);\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onFocus(event) {\n        this.deselectAll();\n        this.element.nativeElement.classList.add('selected');\n        this.focus.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    add(event) {\n        if (event && !(event instanceof Event)) {\n            this.items.push(event);\n            this.value = this.source && this.source.valueFormatter ? this.source.valueFormatter(this.items) : this.items.map((/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => i.value));\n            // Set focus on the picker\n            /** @type {?} */\n            const input = this.element.nativeElement.querySelector('novo-picker > input');\n            if (input) {\n                input.focus();\n            }\n        }\n        this._items.next(this.items);\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    remove(event, item) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        this.items.splice(this.items.indexOf(item), 1);\n        this.deselectAll();\n        this.value = this.source && this.source.valueFormatter ? this.source.valueFormatter(this.items) : this.items.map((/**\n         * @param {?} i\n         * @return {?}\n         */\n        (i) => i.value));\n        this.changed.emit({ value: this.value.length ? this.value : '', rawValue: this.items });\n        this.onModelChange(this.value.length ? this.value : '');\n        this._items.next(this.items);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        if (event.keyCode === KeyCodes.BACKSPACE) {\n            if (event.target && event.target.value.length === 0 && this.items.length) {\n                if (event) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                if (this.selected) {\n                    this.remove(event, this.selected);\n                }\n                else {\n                    this.select(event, this.items[this.items.length - 1]);\n                }\n            }\n        }\n    }\n    // Set touched on blur\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onTouched(e) {\n        this.element.nativeElement.classList.remove('selected');\n        this.onModelTouched();\n        this.blur.emit(e);\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        this.setItems();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this._disablePickerInput = disabled;\n    }\n    /**\n     * \\@description This method creates an instance of the preview (called popup) and adds all the bindings to that\n     * instance. Will reuse the popup or create a new one if it does not already exist. Will only work if there is\n     * a previewTemplate given in the config.\n     * @return {?}\n     */\n    showPreview() {\n        if (this.source.previewTemplate) {\n            if (!this.popup) {\n                this.popup = this.componentUtils.append(this.source.previewTemplate, this.preview);\n            }\n            this.popup.instance.match = this.selected;\n        }\n    }\n    /**\n     * \\@description - This method deletes the preview popup from the DOM.\n     * @return {?}\n     */\n    hidePreview() {\n        if (this.popup) {\n            this.popup.destroy();\n            this.popup = null;\n        }\n    }\n}\nNovoChipsElement.decorators = [\n    { type: Component, args: [{\n                selector: 'chips,novo-chips',\n                providers: [CHIPS_VALUE_ACCESSOR],\n                template: `\n        <div class=\"novo-chip-container\">\n          <novo-chip\n              *ngFor=\"let item of _items | async\"\n              [type]=\"type || item?.value?.searchEntity\"\n              [class.selected]=\"item == selected\"\n              [disabled]=\"disablePickerInput\"\n              (remove)=\"remove($event, item)\"\n              (select)=\"select($event, item)\"\n              (deselect)=\"deselect($event, item)\">\n              {{ item.label }}\n          </novo-chip>\n        </div>\n        <div class=\"chip-input-container\" *ngIf=\"!maxlength || (maxlength && items.length < maxlength)\">\n            <novo-picker\n                clearValueOnSelect=\"true\"\n                [closeOnSelect]=\"closeOnSelect\"\n                [config]=\"source\"\n                [disablePickerInput]=\"disablePickerInput\"\n                [placeholder]=\"placeholder\"\n                [(ngModel)]=\"itemToAdd\"\n                (select)=\"add($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onFocus($event)\"\n                (typing)=\"onTyping($event)\"\n                (blur)=\"onTouched($event)\"\n                [selected]=\"items\"\n                [overrideElement]=\"element\">\n            </novo-picker>\n        </div>\n        <div class=\"preview-container\">\n            <span #preview></span>\n        </div>\n        <i class=\"bhi-search\" [class.has-value]=\"items.length\" *ngIf=\"!disablePickerInput\"></i>\n        <label class=\"clear-all\" *ngIf=\"items.length && !disablePickerInput\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n   `,\n                host: {\n                    '[class.with-value]': 'items.length > 0',\n                    '[class.disabled]': 'disablePickerInput',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoChipsElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ComponentUtils },\n    { type: NovoLabelService }\n];\nNovoChipsElement.propDecorators = {\n    closeOnSelect: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    source: [{ type: Input }],\n    maxlength: [{ type: Input }],\n    type: [{ type: Input }],\n    disablePickerInput: [{ type: Input }],\n    changed: [{ type: Output }],\n    focus: [{ type: Output }],\n    blur: [{ type: Output }],\n    typing: [{ type: Output }],\n    preview: [{ type: ViewChild, args: ['preview', { read: ViewContainerRef, static: false },] }],\n    value: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoChipsElement.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoChipsElement.prototype.placeholder;\n    /** @type {?} */\n    NovoChipsElement.prototype.source;\n    /** @type {?} */\n    NovoChipsElement.prototype.maxlength;\n    /** @type {?} */\n    NovoChipsElement.prototype.type;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoChipsElement.prototype._disablePickerInput;\n    /** @type {?} */\n    NovoChipsElement.prototype.changed;\n    /** @type {?} */\n    NovoChipsElement.prototype.focus;\n    /** @type {?} */\n    NovoChipsElement.prototype.blur;\n    /** @type {?} */\n    NovoChipsElement.prototype.typing;\n    /** @type {?} */\n    NovoChipsElement.prototype.preview;\n    /** @type {?} */\n    NovoChipsElement.prototype.items;\n    /** @type {?} */\n    NovoChipsElement.prototype.selected;\n    /** @type {?} */\n    NovoChipsElement.prototype.config;\n    /** @type {?} */\n    NovoChipsElement.prototype.model;\n    /** @type {?} */\n    NovoChipsElement.prototype.itemToAdd;\n    /** @type {?} */\n    NovoChipsElement.prototype.popup;\n    /** @type {?} */\n    NovoChipsElement.prototype._value;\n    /** @type {?} */\n    NovoChipsElement.prototype._items;\n    /** @type {?} */\n    NovoChipsElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoChipsElement.prototype.onModelTouched;\n    /** @type {?} */\n    NovoChipsElement.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoChipsElement.prototype.componentUtils;\n    /** @type {?} */\n    NovoChipsElement.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/overlay/Overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoOverlayTemplateComponent {\n    /**\n     * @param {?} overlay\n     * @param {?} viewContainerRef\n     * @param {?} zone\n     * @param {?} changeDetectorRef\n     * @param {?} document\n     */\n    constructor(overlay, viewContainerRef, zone, changeDetectorRef, document) {\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.zone = zone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.document = document;\n        this.id = `novo-overlay-${Date.now()}`;\n        this.position = 'default';\n        this.scrollStrategy = 'reposition';\n        this.closeOnSelect = true;\n        this.select = new EventEmitter();\n        this.closing = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyOverlay();\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlayRef && this.overlayRef.hasAttached();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set parent(value) {\n        this._parent = value;\n        this.checkSizes();\n    }\n    /**\n     * @return {?}\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * @return {?}\n     */\n    openPanel() {\n        if (!this.overlayRef) {\n            this.createOverlay(this.template);\n        }\n        else {\n            this.checkSizes();\n        }\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n            this.overlayRef.attach(this.portal);\n            this.closingActionsSubscription = this.subscribeToClosingActions();\n        }\n        this.changeDetectorRef.markForCheck();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.overlayRef) {\n                this.overlayRef.updatePosition();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this.overlayRef.detach();\n                this.closingActionsSubscription.unsubscribe();\n            }\n            this.closing.emit(true);\n            if (this.panelOpen) {\n                this.changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClosingAction(event) {\n        this.closePanel();\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(\n        // this.overlayTemplate._keyManager.tabOut,\n        this.outsideClickStream);\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @protected\n     * @return {?}\n     */\n    get outsideClickStream() {\n        if (!this.document) {\n            return of();\n        }\n        return merge(fromEvent(this.document, 'mousedown'), fromEvent(this.document, 'touchend')).pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ (event.target));\n            /** @type {?} */\n            const clicked = this.panelOpen &&\n                clickTarget !== this.getConnectedElement().nativeElement &&\n                !this.getConnectedElement().nativeElement.contains(clickTarget) &&\n                (!!this.overlayRef && !this.overlayRef.overlayElement.contains(clickTarget));\n            if (this.panelOpen && !!this.overlayRef && this.overlayRef.overlayElement.contains(clickTarget) && this.closeOnSelect) {\n                this.select.emit(event);\n            }\n            return clicked;\n        })));\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @protected\n     * @return {?}\n     */\n    subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this.zone.onStable.asObservable().pipe(first());\n        // const valueChanges = Observable.from(this.value);\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        first())\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.onClosingAction(event))));\n    }\n    /**\n     * @protected\n     * @param {?} template\n     * @return {?}\n     */\n    createOverlay(template) {\n        this.portal = new TemplatePortal(template, this.viewContainerRef);\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        this.overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => this.closePanel()));\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    destroyOverlay() {\n        if (this.overlayRef) {\n            this.closePanel();\n            this.overlayRef.dispose();\n            this.overlayRef = undefined;\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    getOverlayConfig() {\n        /** @type {?} */\n        const config = new OverlayConfig();\n        if (!this.width) {\n            config.width = this.getHostWidth();\n        }\n        else {\n            config.width = this.width;\n        }\n        if (this.height) {\n            config.height = this.height;\n        }\n        config.positionStrategy = this.getPosition();\n        config.hasBackdrop = false;\n        config.direction = 'ltr';\n        config.scrollStrategy = this.getScrollStrategy();\n        return config;\n    }\n    /**\n     * Supports the following position strategies:\n     * 'default', 'right', 'bottom', 'center', 'bottom-left', 'bottom-right', 'top-left', 'top-right'\n     * @protected\n     * @return {?}\n     */\n    getPosition() {\n        if (this.position === 'center') {\n            return this.overlay\n                .position()\n                .connectedTo(this.getConnectedElement(), { originX: 'start', originY: 'center' }, { overlayX: 'start', overlayY: 'center' })\n                .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'top' })\n                .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' });\n        }\n        const [originX, fallbackX] = this.position.includes('right') ? ['end', 'start'] : ['start', 'end'];\n        const [originY, overlayY] = this.position.includes('top') ? ['top', 'bottom'] : ['bottom', 'top'];\n        /** @type {?} */\n        let strategy = this.overlay\n            .position()\n            .connectedTo(this.getConnectedElement(), { originX, originY }, { overlayX: originX, overlayY })\n            .withDirection('ltr');\n        if (this.position === 'bottom') {\n            strategy = strategy.withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' });\n        }\n        else if (this.position === 'right' || this.position === 'default' || this.position.includes('above-below')) {\n            strategy = strategy\n                .withFallbackPosition({ originX, originY: 'top' }, { overlayX: originX, overlayY: 'bottom' })\n                .withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' })\n                .withFallbackPosition({ originX: fallbackX, originY: 'top' }, { overlayX: fallbackX, overlayY: 'bottom' });\n            if (!this.position.includes('above-below')) {\n                strategy = strategy\n                    .withFallbackPosition({ originX, originY: 'center' }, { overlayX: originX, overlayY: 'center' })\n                    .withFallbackPosition({ originX: fallbackX, originY: 'center' }, { overlayX: fallbackX, overlayY: 'center' });\n            }\n        }\n        return strategy;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    getScrollStrategy() {\n        switch (this.scrollStrategy) {\n            case 'block':\n                return this.overlay.scrollStrategies.block();\n            case 'reposition':\n                return this.overlay.scrollStrategies.reposition();\n            default:\n                return this.overlay.scrollStrategies.close();\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    checkSizes() {\n        if (this.overlayRef) {\n            if (!this.width) {\n                this.overlayRef.getConfig().width = this.getHostWidth();\n            }\n            if (this.height) {\n                this.overlayRef.getConfig().height = this.height;\n            }\n            this.overlayRef.updateSize(this.overlayRef.getConfig());\n            this.overlayRef.updatePosition();\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    getConnectedElement() {\n        return this.parent;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    getHostWidth() {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n}\nNovoOverlayTemplateComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-overlay-template',\n                template: `\n    <ng-template>\n      <div class=\"novo-overlay-panel\" role=\"listbox\" [id]=\"id\" #panel><ng-content></ng-content></div>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoOverlayTemplateComponent.ctorParameters = () => [\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNovoOverlayTemplateComponent.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    position: [{ type: Input }],\n    scrollStrategy: [{ type: Input }],\n    width: [{ type: Input }],\n    height: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    select: [{ type: Output }],\n    closing: [{ type: Output }],\n    parent: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.id;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.template;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.panel;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.position;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.scrollStrategy;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.width;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.height;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.select;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.closing;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.overlayRef;\n    /** @type {?} */\n    NovoOverlayTemplateComponent.prototype.portal;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoOverlayTemplateComponent.prototype._parent;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.overlay;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.viewContainerRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.zone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoOverlayTemplateComponent.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/overlay/Overlay.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoOverlayModule {\n}\nNovoOverlayModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, OverlayModule, ScrollingModule],\n                declarations: [NovoOverlayTemplateComponent],\n                exports: [NovoOverlayTemplateComponent, ScrollingModule],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/switch/Switch.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst SWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoSwitchElement)),\n    multi: true,\n};\nclass NovoSwitchElement {\n    /**\n     * @param {?} ref\n     */\n    constructor(ref) {\n        this.ref = ref;\n        this.onChange = new EventEmitter();\n        this._disabled = false;\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = !value;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeydown(event) {\n        if (event.keyCode === KeyCodes.SPACE) {\n            event.preventDefault();\n            this.toggle(event);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    toggle(event) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        if (this.disabled) {\n            return;\n        }\n        this.model = !this.model;\n        this.onChange.next(this.model);\n        this.onModelChange(this.model);\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n}\nNovoSwitchElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-switch',\n                providers: [SWITCH_VALUE_ACCESSOR],\n                template: `\n        <div (click)=\"toggle($event)\">\n            <div class=\"novo-switch-container\">\n                <div class=\"novo-switch-bar\"></div>\n                <div class=\"novo-switch-thumb-container\">\n                    <div class=\"novo-switch-thumb\"></div>\n                </div>\n            </div>\n            <div class=\"novo-switch-label\"><ng-content></ng-content></div>\n        </div>\n    `,\n                host: {\n                    role: 'checkbox',\n                    '[attr.aria-checked]': 'model',\n                    '[attr.aria-disabled]': 'disabled',\n                    '(keydown)': 'onKeydown($event)',\n                    '[class]': 'theme',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoSwitchElement.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNovoSwitchElement.propDecorators = {\n    theme: [{ type: Input }],\n    onChange: [{ type: Output }],\n    disabled: [{ type: Input, args: ['disabled',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSwitchElement.prototype.theme;\n    /** @type {?} */\n    NovoSwitchElement.prototype.onChange;\n    /** @type {?} */\n    NovoSwitchElement.prototype._disabled;\n    /** @type {?} */\n    NovoSwitchElement.prototype.model;\n    /** @type {?} */\n    NovoSwitchElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoSwitchElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSwitchElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/switch/Switch.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSwitchModule {\n}\nNovoSwitchModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [NovoSwitchElement],\n                exports: [NovoSwitchElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/base-picker-results/BasePickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description This is the actual list of matches that gets injected into the DOM. It's also the piece that can be\n * overwritten if custom list options are needed.\n */\nclass BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} ref\n     */\n    constructor(element, ref) {\n        this._term = '';\n        this.selected = [];\n        this.matches = [];\n        this.hasError = false;\n        this.isLoading = false;\n        this.isStatic = true;\n        this.page = 0;\n        this.lastPage = false;\n        this.autoSelectFirstOption = true;\n        this.optionsFunctionHasChanged = false;\n        this.selectingMatches = false;\n        this.element = element;\n        this.ref = ref;\n        this.scrollHandler = this.onScrollDown.bind(this);\n    }\n    /**\n     * @return {?}\n     */\n    cleanUp() {\n        /** @type {?} */\n        const element = this.getListElement();\n        if (element && element.hasAttribute('scrollListener')) {\n            element.removeAttribute('scrollListener');\n            element.removeEventListener('scroll', this.scrollHandler);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onScrollDown(event) {\n        /** @type {?} */\n        const element = event.target;\n        if (element) {\n            /** @type {?} */\n            const offset = element.offsetHeight + element.scrollTop;\n            /** @type {?} */\n            const bottom = element.scrollHeight - 300;\n            if (offset >= bottom) {\n                event.stopPropagation();\n                if (!this.lastPage && !this.isLoading) {\n                    this.processSearch();\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get term() {\n        return this._term;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set term(value) {\n        if (this.shouldSearch(value)) {\n            this._term = value;\n            this.page = 0;\n            this.optionsFunctionHasChanged = false;\n            this.matches = [];\n            this.processSearch(true);\n        }\n        else {\n            this.addScrollListener();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set config(value) {\n        if (this.config && this.config.options !== value.options) {\n            this.optionsFunctionHasChanged = true; // reset page so that new options call is used to search\n        }\n        this._config = value;\n    }\n    /**\n     * @return {?}\n     */\n    get config() {\n        return this._config;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    shouldSearch(value) {\n        /** @type {?} */\n        const termHasChanged = value !== this._term;\n        /** @type {?} */\n        const optionsNotYetCalled = this.page === 0;\n        return termHasChanged || optionsNotYetCalled || this.optionsFunctionHasChanged;\n    }\n    /**\n     * @return {?}\n     */\n    addScrollListener() {\n        if (this.config.enableInfiniteScroll) {\n            /** @type {?} */\n            const element = this.getListElement();\n            if (element && !element.hasAttribute('scrollListener')) {\n                element.setAttribute('scrollListener', 'true');\n                element.addEventListener('scroll', this.scrollHandler);\n            }\n        }\n    }\n    /**\n     * @param {?=} shouldReset\n     * @return {?}\n     */\n    processSearch(shouldReset) {\n        this.hasError = false;\n        this.isLoading = true;\n        this.ref.markForCheck();\n        this.search(this.term).subscribe((/**\n         * @param {?} results\n         * @return {?}\n         */\n        (results) => {\n            if (shouldReset) {\n                this.matches = [];\n            }\n            if (this.isStatic) {\n                this.matches = this.filterData(results);\n            }\n            else {\n                this.matches = this.matches.concat(results);\n                this.lastPage = results && !results.length;\n            }\n            if (this.matches.length > 0 && this.autoSelectFirstOption && !this.selectingMatches) {\n                this.nextActiveMatch();\n            }\n            this.isLoading = false;\n            this.ref.markForCheck();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.overlay.updatePosition();\n                this.addScrollListener();\n            })); // @bkimball: This was added for Dylan Schulte, 9.18.2017 4:14PM EST, you're welcome!\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        (err) => {\n            this.hasError = this.term && this.term.length !== 0;\n            this.isLoading = false;\n            this.lastPage = true;\n            if (this.term && this.term.length !== 0) {\n                console.error(err); // tslint:disable-lineno\n            }\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @param {?} term\n     * @param {?=} mode\n     * @return {?}\n     */\n    search(term, mode) {\n        /** @type {?} */\n        const options = this.config.options;\n        return from(new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            // Check if there is match data\n            if (options) {\n                // Resolve the data\n                if (Array.isArray(options)) {\n                    this.isStatic = true;\n                    // Arrays are returned immediately\n                    resolve(this.structureArray(options));\n                }\n                else if (this.shouldCallOptionsFunction(term)) {\n                    if ((options.hasOwnProperty('reject') && options.hasOwnProperty('resolve')) ||\n                        Object.getPrototypeOf(options).hasOwnProperty('then')) {\n                        this.isStatic = false;\n                        // Promises (ES6 or Deferred) are resolved whenever they resolve\n                        options.then(this.structureArray.bind(this)).then(resolve, reject);\n                    }\n                    else if (typeof options === 'function') {\n                        this.isStatic = false;\n                        // Promises (ES6 or Deferred) are resolved whenever they resolve\n                        options(term, ++this.page)\n                            .then(this.structureArray.bind(this))\n                            .then(resolve, reject);\n                    }\n                    else {\n                        // All other kinds of data are rejected\n                        reject('The data provided is not an array or a promise');\n                        throw new Error('The data provided is not an array or a promise');\n                    }\n                }\n                else {\n                    if (this.config.defaultOptions) {\n                        this.isStatic = false;\n                        if (typeof this.config.defaultOptions === 'function') {\n                            /** @type {?} */\n                            const defaultOptions = this.config.defaultOptions(term, ++this.page);\n                            if (Object.getPrototypeOf(defaultOptions).hasOwnProperty('then')) {\n                                defaultOptions.then(this.structureArray.bind(this)).then(resolve, reject);\n                            }\n                            else {\n                                resolve(this.structureArray(defaultOptions));\n                            }\n                        }\n                        else {\n                            resolve(this.structureArray(this.config.defaultOptions));\n                        }\n                    }\n                    else {\n                        // No search term gets rejected\n                        reject('No search term');\n                    }\n                }\n            }\n            else {\n                // No data gets rejected\n                reject('error');\n            }\n        })));\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    shouldCallOptionsFunction(term) {\n        if (this.config && 'minSearchLength' in this.config && Number.isInteger(this.config.minSearchLength)) {\n            return typeof term === 'string' && term.length >= this.config.minSearchLength;\n        }\n        else {\n            return !!(term && term.length);\n        }\n    }\n    /**\n     * \\@description This function structures an array of nodes into an array of objects with a\n     * 'name' field by default.\n     * @param {?} collection - the data once getData resolves it\n     *\n     * @return {?}\n     */\n    structureArray(collection) {\n        /** @type {?} */\n        const dataArray = collection.data ? collection.data : collection;\n        if (dataArray && (typeof dataArray[0] === 'string' || typeof dataArray[0] === 'number')) {\n            return collection.map((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                return {\n                    value: item,\n                    label: item,\n                };\n            }));\n        }\n        return dataArray.map((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            /** @type {?} */\n            let value = this.config.field ? data[this.config.field] : data.value || data;\n            if (this.config.valueFormat) {\n                value = Helpers.interpolate(this.config.valueFormat, data);\n            }\n            /** @type {?} */\n            const label = this.config.format ? Helpers.interpolate(this.config.format, data) : data.label || String(value);\n            return { value, label, data };\n        }));\n    }\n    /**\n     * \\@description This function loops through the picker options and creates a filtered list of objects that contain\n     * the newSearch.\n     * @param {?} matches - Collection of objects=\n     *\n     * @return {?}\n     */\n    filterData(matches) {\n        if (this.term && matches) {\n            return matches.filter((/**\n             * @param {?} match\n             * @return {?}\n             */\n            (match) => {\n                return ~String(match.label)\n                    .toLowerCase()\n                    .indexOf(this.term.toLowerCase());\n            }));\n        }\n        // Show no recent results template\n        return matches;\n    }\n    /**\n     * \\@description This function is called when the user presses the enter key to call the selectMatch method.\n     * @return {?}\n     */\n    selectActiveMatch() {\n        this.selectMatch();\n    }\n    /**\n     * \\@description This function sets activeMatch to the match before the current node.\n     * @return {?}\n     */\n    prevActiveMatch() {\n        /** @type {?} */\n        const index = this.matches.indexOf(this.activeMatch);\n        this.activeMatch = this.matches[index - 1 < 0 ? this.matches.length - 1 : index - 1];\n        this.scrollToActive();\n        this.ref.markForCheck();\n    }\n    /**\n     * \\@description This function sets activeMatch to the match after the current node.\n     * @return {?}\n     */\n    nextActiveMatch() {\n        /** @type {?} */\n        const index = this.matches.indexOf(this.activeMatch);\n        this.activeMatch = this.matches[index + 1 > this.matches.length - 1 ? 0 : index + 1];\n        this.scrollToActive();\n        this.ref.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    getChildrenOfListElement() {\n        /** @type {?} */\n        let children = [];\n        if (this.getListElement()) {\n            children = this.getListElement().children;\n        }\n        return children;\n    }\n    /**\n     * @return {?}\n     */\n    scrollToActive() {\n        /** @type {?} */\n        const list = this.getListElement();\n        /** @type {?} */\n        const items = this.getChildrenOfListElement();\n        /** @type {?} */\n        const index = this.matches.indexOf(this.activeMatch);\n        /** @type {?} */\n        const item = items[index];\n        if (item) {\n            list.scrollTop = item.offsetTop;\n        }\n    }\n    /**\n     * \\@description\n     * @param {?} match\n     * @return {?}\n     */\n    selectActive(match) {\n        this.activeMatch = match;\n    }\n    /**\n     * \\@description\n     * @param {?} match\n     * @return {?}\n     */\n    isActive(match) {\n        return this.activeMatch === match;\n    }\n    /**\n     * \\@description\n     * @param {?=} event\n     * @param {?=} item\n     * @return {?}\n     */\n    selectMatch(event, item) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        /** @type {?} */\n        const selected = this.activeMatch;\n        if (selected && this.parent) {\n            this.parent.value = selected;\n            this.selectingMatches = true;\n            if (this.parent.closeOnSelect) {\n                this.parent.hideResults();\n                this.selectingMatches = false;\n            }\n        }\n        this.ref.markForCheck();\n        return false;\n    }\n    /**\n     * \\@description This function captures the whole query string and replace it with the string that will be used to\n     * match.\n     * @param {?} queryToEscape\n     * @return {?}\n     */\n    escapeRegexp(queryToEscape) {\n        // Ex: if the capture is \"a\" the result will be \\a\n        return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n    /**\n     * \\@description This function should return a <strong>-tag wrapped HTML string.\n     * @param {?} match\n     * @param {?} query\n     * @return {?}\n     */\n    highlight(match, query) {\n        // Replaces the capture string with a the same string inside of a \"strong\" tag\n        return query ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n    }\n    /**\n     * @param {?} match\n     * @return {?}\n     */\n    preselected(match) {\n        if (this.config.preselected) {\n            /** @type {?} */\n            const preselectedFunc = this.config.preselected;\n            return (this.selected.findIndex((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                return preselectedFunc(match, item);\n            })) !== -1);\n        }\n        return (this.selected.findIndex((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            /** @type {?} */\n            let isPreselected = false;\n            if (item && item.value && match && match.value) {\n                if (item.value.id && match.value.id) {\n                    isPreselected = item.value.id === match.value.id;\n                }\n                else if (item.value instanceof Object && item.value.hasOwnProperty('value')) {\n                    isPreselected = item.value.value === match.value;\n                }\n                else {\n                    isPreselected = item.value === match.value;\n                }\n            }\n            return isPreselected;\n        })) !== -1);\n    }\n}\nBasePickerResults.propDecorators = {\n    matches: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    BasePickerResults.prototype._term;\n    /** @type {?} */\n    BasePickerResults.prototype.selected;\n    /** @type {?} */\n    BasePickerResults.prototype.matches;\n    /** @type {?} */\n    BasePickerResults.prototype.hasError;\n    /** @type {?} */\n    BasePickerResults.prototype.isLoading;\n    /** @type {?} */\n    BasePickerResults.prototype.isStatic;\n    /** @type {?} */\n    BasePickerResults.prototype._config;\n    /** @type {?} */\n    BasePickerResults.prototype.activeMatch;\n    /** @type {?} */\n    BasePickerResults.prototype.parent;\n    /** @type {?} */\n    BasePickerResults.prototype.element;\n    /** @type {?} */\n    BasePickerResults.prototype.ref;\n    /** @type {?} */\n    BasePickerResults.prototype.page;\n    /** @type {?} */\n    BasePickerResults.prototype.lastPage;\n    /** @type {?} */\n    BasePickerResults.prototype.autoSelectFirstOption;\n    /** @type {?} */\n    BasePickerResults.prototype.overlay;\n    /** @type {?} */\n    BasePickerResults.prototype.optionsFunctionHasChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasePickerResults.prototype.selectingMatches;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasePickerResults.prototype.scrollHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/picker-results/PickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, labels, ref) {\n        super(element, ref);\n        this.labels = labels;\n    }\n    /**\n     * @return {?}\n     */\n    get hasNonErrorMessage() {\n        return !this.isLoading && !this.matches.length && !this.hasError;\n    }\n    /**\n     * @return {?}\n     */\n    getEmptyMessage() {\n        if (this.shouldShowMessageForZeroLengthSearch()) {\n            // this property comes from Field Interactions\n            return this.config.emptyPickerMessage;\n        }\n        else {\n            return this.term === '' ? this.labels.pickerTextFieldEmpty : this.labels.pickerEmpty;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    shouldShowMessageForZeroLengthSearch() {\n        return this.config && this.config.minSearchLength === 0 && this.term === '' && this.config.emptyPickerMessage;\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n}\nPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'picker-results',\n                host: {\n                    class: 'active',\n                },\n                template: `\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-content> <span [innerHtml]=\"highlight(match.label, term)\"></span> </item-content>\n      </novo-list-item>\n      <novo-loading *ngIf=\"isLoading && matches.length > 0\" theme=\"line\"></novo-loading>\n    </novo-list>\n    <div class=\"picker-loader\" *ngIf=\"isLoading && matches.length === 0\"><novo-loading theme=\"line\"></novo-loading></div>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage\">{{ getEmptyMessage() }}</p>\n  `\n            }] }\n];\n/** @nocollapse */\nPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nif (false) {\n    /** @type {?} */\n    PickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/notifier/notifier.util.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst notifications = {};\n/**\n * @param {?} message\n * @return {?}\n */\nfunction notify(message) {\n    if (!isDevMode() || message in notifications) {\n        return;\n    }\n    notifications[message] = true;\n    console.warn(message); // tslint:disable-line\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/Picker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoPickerElement)),\n    multi: true,\n};\n/**\n * \\@description This class is the directive definition of the Picker. If you add and attribute of `picker` to an input,\n * it will create an instance of the picker which wraps the input in all of the picker HTML elements and functionality.\n * Picker should be added as a two-way bound ngModel instance `[(picker)]=\"\"` in order to have the picker options\n * dynamically populate.\n */\nclass NovoPickerElement {\n    /**\n     * @param {?} element\n     * @param {?} componentUtils\n     * @param {?} ref\n     */\n    constructor(element, componentUtils, ref) {\n        this.element = element;\n        this.componentUtils = componentUtils;\n        this.ref = ref;\n        this.closeOnSelect = true;\n        this.selected = [];\n        // Deprecated\n        this.appendToBody = false;\n        // Deprecated\n        this.parentScrollAction = 'close';\n        // Side the dropdown will open\n        this.side = 'left';\n        // Autoselects the first option in the results\n        this.autoSelectFirstOption = true;\n        this._disablePickerInput = false;\n        // Emitter for selects\n        this.changed = new EventEmitter();\n        this.select = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.typing = new EventEmitter();\n        this.term = '';\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    // Disable from typing into the picker (result template does everything)\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disablePickerInput(v) {\n        this._disablePickerInput = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get disablePickerInput() {\n        return this._disablePickerInput;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.overrideElement) {\n            this.element = this.overrideElement;\n        }\n        if (this.appendToBody) {\n            notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n        }\n        // Custom results template\n        this.resultsComponent = this.config.resultsTemplate || PickerResults;\n        // Get all distinct key up events from the input and only fire if long enough and distinct\n        // let input = this.element.nativeElement.querySelector('input');\n        /** @type {?} */\n        const pasteObserver = fromEvent(this.input.nativeElement, 'paste').pipe(debounceTime(250), distinctUntilChanged());\n        pasteObserver.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.onDebouncedKeyup(event)), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        (err) => this.hideResults(err)));\n        /** @type {?} */\n        const keyboardObserver = fromEvent(this.input.nativeElement, 'keyup').pipe(debounceTime(250), distinctUntilChanged());\n        keyboardObserver.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.onDebouncedKeyup(event)), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        (err) => this.hideResults(err)));\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onDebouncedKeyup(event) {\n        if ([KeyCodes.ESC, KeyCodes.UP, KeyCodes.DOWN, KeyCodes.ENTER, KeyCodes.TAB].includes(event['keyCode'])) {\n            return;\n        }\n        this.show(((/** @type {?} */ (event.target))).value);\n    }\n    /**\n     * @return {?}\n     */\n    openPanel() {\n        this.container.openPanel();\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.container.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.container && this.container.panelOpen;\n    }\n    /**\n     * @private\n     * @param {?=} term\n     * @return {?}\n     */\n    show(term) {\n        this.openPanel();\n        // Show the results inside\n        this.showResults(term);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        if (this.disablePickerInput) {\n            Helpers.swallowEvent(event);\n            return;\n        }\n        if (this.panelOpen && !this.disablePickerInput) {\n            if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.TAB) {\n                this.hideResults();\n                return;\n            }\n            if (event.keyCode === KeyCodes.UP) {\n                this.popup.instance.prevActiveMatch();\n                this.ref.markForCheck();\n                return;\n            }\n            if (event.keyCode === KeyCodes.DOWN) {\n                this.popup.instance.nextActiveMatch();\n                this.ref.markForCheck();\n                return;\n            }\n            if (event.keyCode === KeyCodes.ENTER) {\n                /** @type {?} */\n                const activeMatch = this.popup.instance.activeMatch;\n                if (!this.selected.find((/**\n                 * @param {?} selected\n                 * @return {?}\n                 */\n                (selected) => activeMatch && activeMatch.value && selected.value === activeMatch.value))) {\n                    this.popup.instance.selectActiveMatch();\n                    this.ref.markForCheck();\n                }\n                return;\n            }\n            if ((event.keyCode === KeyCodes.BACKSPACE || event.keyCode === KeyCodes.DELETE) && !Helpers.isBlank(this._value)) {\n                this.clearValue(false);\n                this.closePanel();\n            }\n            if (event.keyCode === KeyCodes.DELETE && Helpers.isBlank(this._value)) {\n                this.clearValue(true);\n            }\n        }\n    }\n    /**\n     * @param {?} wipeTerm\n     * @return {?}\n     */\n    clearValue(wipeTerm) {\n        this._value = null;\n        this.select.emit(this._value);\n        this.changed.emit({ value: this._value, rawValue: { label: '', value: this._value } });\n        this.onModelChange(this._value);\n        if (wipeTerm) {\n            this.term = '';\n            this.hideResults();\n        }\n        this.ref.markForCheck();\n    }\n    /**\n     * \\@description When the input's focus event is called this method calls the debounced function that displays the\n     * results.\n     * @param {?} event\n     * @return {?}\n     */\n    onFocus(event) {\n        if (!this.panelOpen) {\n            this.show();\n        }\n        this.focus.emit(event);\n    }\n    // Creates an instance of the results (called popup) and adds all the bindings to that instance.\n    /**\n     * @param {?=} term\n     * @return {?}\n     */\n    showResults(term) {\n        // Update Matches\n        if (this.popup) {\n            // Update existing list or create the DOM element\n            this.popup.instance.config = this.config;\n            this.popup.instance.term = this.term;\n            this.popup.instance.selected = this.selected;\n            this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n            this.ref.markForCheck();\n        }\n        else {\n            this.popup = this.componentUtils.append(this.resultsComponent, this.results);\n            this.popup.instance.parent = this;\n            this.popup.instance.config = this.config;\n            this.popup.instance.term = this.term;\n            this.popup.instance.selected = this.selected;\n            this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n            this.popup.instance.overlay = this.container.overlayRef;\n            this.ref.markForCheck();\n        }\n    }\n    // Tells the overlay component to hide the picker results from the DOM without deleting the dynamically allocated popup instance created in\n    // showResults. The popup instance will remain in memory from the first time the results are shown until this component is destroyed.\n    /**\n     * @param {?=} err\n     * @return {?}\n     */\n    hideResults(err) {\n        this.closePanel();\n        this.ref.markForCheck();\n    }\n    // Cleans up listeners for the popup - will get executed no matter how the popup is closed.\n    /**\n     * @return {?}\n     */\n    onOverlayClosed() {\n        if (this.popup && this.popup.instance && this.popup.instance.cleanUp) {\n            this.popup.instance.cleanUp();\n        }\n    }\n    // get accessor\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    // set accessor including call the onchange callback\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set value(selected) {\n        if (!selected) {\n            this.term = '';\n            this._value = null;\n            this.onModelChange(this._value);\n        }\n        else if (selected.value !== this._value) {\n            this.term = this.clearValueOnSelect ? '' : selected.label;\n            this._value = selected.value;\n            this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: selected.value } });\n            this.select.emit(selected);\n            this.onModelChange(selected.value);\n            if (this.popup) {\n                this.popup.instance.selected = this.selected;\n            }\n        }\n        else {\n            this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: this._value } });\n            this.select.emit(selected);\n        }\n        this.ref.markForCheck();\n    }\n    // Makes sure to clear the model if the user clears the text box\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    checkTerm(event) {\n        this.typing.emit(event);\n        if (!event || !event.length) {\n            this._value = null;\n            this.onModelChange(this._value);\n        }\n        this.ref.markForCheck();\n    }\n    // Set touched on blur\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onTouched(event) {\n        this.onModelTouched();\n        this.blur.emit(event);\n    }\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.clearValueOnSelect) {\n            this.term = '';\n        }\n        else {\n            if (typeof value === 'string' && !this.config.useGetLabels) {\n                this.term = value;\n            }\n            else if (value && value.label) {\n                this.term = value.label;\n            }\n            else if (value && value.firstName) {\n                this.term = `${value.firstName} ${value.lastName}`;\n            }\n            else if (value && value.name) {\n                this.term = value.name;\n            }\n            else if (typeof this.config.getLabels === 'function') {\n                this.config.getLabels(value).then((/**\n                 * @param {?} result\n                 * @return {?}\n                 */\n                (result) => {\n                    if (result) {\n                        this.term = result.length ? result[0].label || '' : result.label || '';\n                    }\n                    else {\n                        this.term = value;\n                    }\n                    this.ref.markForCheck();\n                }));\n            }\n            else if (value && value.title) {\n                this.term = value.title;\n            }\n            else {\n                this.term = value || '';\n            }\n        }\n        this._value = value;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this._disablePickerInput = disabled;\n    }\n}\nNovoPickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-picker',\n                providers: [PICKER_VALUE_ACCESSOR],\n                template: `\n    <i class=\"bhi-more\" *ngIf=\"config?.entityIcon && !_value\"></i>\n    <i class=\"bhi-{{ config?.entityIcon }} entity-icon {{ config?.entityIcon }}\" *ngIf=\"config?.entityIcon && _value\"></i>\n    <input\n      type=\"text\"\n      class=\"picker-input\"\n      [(ngModel)]=\"term\"\n      [class.entity-picker]=\"config?.entityIcon\"\n      [class.entity-selected]=\"config?.entityIcon && _value\"\n      (ngModelChange)=\"checkTerm($event)\"\n      [placeholder]=\"placeholder\"\n      (keydown)=\"onKeyDown($event)\"\n      (focus)=\"onFocus($event)\"\n      (click)=\"onFocus($event)\"\n      (blur)=\"onTouched($event)\"\n      autocomplete=\"off\"\n      #input\n      [disabled]=\"disablePickerInput\"\n    />\n    <i class=\"bhi-search\" *ngIf=\"(!_value || clearValueOnSelect) && !disablePickerInput\"></i>\n    <i\n      class=\"bhi-times\"\n      [class.entity-selected]=\"config?.entityIcon && _value\"\n      *ngIf=\"_value && !clearValueOnSelect && !disablePickerInput\"\n      (click)=\"clearValue(true)\"\n    ></i>\n    <novo-overlay-template class=\"picker-results-container\" [parent]=\"element\" position=\"above-below\" (closing)=\"onOverlayClosed()\">\n      <span #results></span>\n      <ng-content></ng-content>\n    </novo-overlay-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoPickerElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ComponentUtils },\n    { type: ChangeDetectorRef }\n];\nNovoPickerElement.propDecorators = {\n    results: [{ type: ViewChild, args: ['results', { read: ViewContainerRef, static: true },] }],\n    config: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    clearValueOnSelect: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    selected: [{ type: Input }],\n    appendToBody: [{ type: Input }],\n    parentScrollSelector: [{ type: Input }],\n    parentScrollAction: [{ type: Input }],\n    containerClass: [{ type: Input }],\n    side: [{ type: Input }],\n    autoSelectFirstOption: [{ type: Input }],\n    overrideElement: [{ type: Input }],\n    disablePickerInput: [{ type: Input }],\n    changed: [{ type: Output }],\n    select: [{ type: Output }],\n    focus: [{ type: Output }],\n    blur: [{ type: Output }],\n    typing: [{ type: Output }],\n    container: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: true },] }],\n    input: [{ type: ViewChild, args: ['input', { static: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoPickerElement.prototype.results;\n    /** @type {?} */\n    NovoPickerElement.prototype.config;\n    /** @type {?} */\n    NovoPickerElement.prototype.placeholder;\n    /** @type {?} */\n    NovoPickerElement.prototype.clearValueOnSelect;\n    /** @type {?} */\n    NovoPickerElement.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoPickerElement.prototype.selected;\n    /** @type {?} */\n    NovoPickerElement.prototype.appendToBody;\n    /** @type {?} */\n    NovoPickerElement.prototype.parentScrollSelector;\n    /** @type {?} */\n    NovoPickerElement.prototype.parentScrollAction;\n    /** @type {?} */\n    NovoPickerElement.prototype.containerClass;\n    /** @type {?} */\n    NovoPickerElement.prototype.side;\n    /** @type {?} */\n    NovoPickerElement.prototype.autoSelectFirstOption;\n    /** @type {?} */\n    NovoPickerElement.prototype.overrideElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoPickerElement.prototype._disablePickerInput;\n    /** @type {?} */\n    NovoPickerElement.prototype.changed;\n    /** @type {?} */\n    NovoPickerElement.prototype.select;\n    /** @type {?} */\n    NovoPickerElement.prototype.focus;\n    /** @type {?} */\n    NovoPickerElement.prototype.blur;\n    /** @type {?} */\n    NovoPickerElement.prototype.typing;\n    /** @type {?} */\n    NovoPickerElement.prototype.container;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoPickerElement.prototype.input;\n    /** @type {?} */\n    NovoPickerElement.prototype.term;\n    /** @type {?} */\n    NovoPickerElement.prototype.resultsComponent;\n    /** @type {?} */\n    NovoPickerElement.prototype.popup;\n    /** @type {?} */\n    NovoPickerElement.prototype._value;\n    /** @type {?} */\n    NovoPickerElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoPickerElement.prototype.onModelTouched;\n    /** @type {?} */\n    NovoPickerElement.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoPickerElement.prototype.componentUtils;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoPickerElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/entity-picker-results/EntityPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass EntityPickerResult {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * \\@description This function captures the whole query string and replace it with the string that will be used to\n     * match.\n     * @param {?} queryToEscape\n     * @return {?}\n     */\n    escapeRegexp(queryToEscape) {\n        // Ex: if the capture is \"a\" the result will be \\a\n        return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n    /**\n     * \\@description This function should return a <strong>-tag wrapped HTML string.\n     * @param {?} match\n     * @param {?} query\n     * @return {?}\n     */\n    highlight(match, query) {\n        // Replaces the capture string with a the same string inside of a \"strong\" tag\n        return query && match ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n    }\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n    getIconForResult(result) {\n        if (result) {\n            switch (result.searchEntity) {\n                case 'ClientContact':\n                    return 'person contact';\n                case 'ClientCorporation':\n                    return 'company';\n                case 'Opportunity':\n                    return 'opportunity';\n                case 'Candidate':\n                    return 'candidate';\n                case 'Lead':\n                    return 'lead';\n                case 'JobOrder':\n                    return 'job';\n                case 'Placement':\n                    return 'star placement';\n                case 'CorporateUser':\n                    return 'user';\n                case 'CorporationDepartment':\n                    return 'department';\n                default:\n                    return '';\n            }\n        }\n        return '';\n    }\n    /**\n     * @param {?=} date\n     * @return {?}\n     */\n    renderTimestamp(date) {\n        /** @type {?} */\n        let timestamp = '';\n        if (date) {\n            timestamp = this.labels.formatDateWithFormat(date, { year: 'numeric', month: 'numeric', day: 'numeric' });\n        }\n        return timestamp;\n    }\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n    getNameForResult(result) {\n        if (result) {\n            switch (result.searchEntity) {\n                case 'Lead':\n                case 'CorporateUser':\n                case 'ClientContact':\n                case 'Candidate':\n                case 'Person':\n                    if ('firstName' in result) {\n                        return `${result.firstName} ${result.lastName}`.trim();\n                    }\n                    return `${result.name || ''}`.trim();\n                case 'ClientCorporation':\n                    return `${result.name || ''}`.trim();\n                case 'Opportunity':\n                case 'JobOrder':\n                    return `${result.id} | ${result.title || ''}`.trim();\n                case 'Placement':\n                    /** @type {?} */\n                    let label = `${result.id}`;\n                    if (result.candidate || result.jobOrder) {\n                        if (result.candidate && result.jobOrder) {\n                            label = `${label} | ${result.candidate.firstName} ${result.candidate.lastName} - ${result.jobOrder.title}`.trim();\n                        }\n                        else if (result.jobOrder) {\n                            label = `${label} | ${result.jobOrder.title}`.trim();\n                        }\n                        else {\n                            label = `${label} | ${result.candidate.firstName} ${result.candidate.lastName}`.trim();\n                        }\n                    }\n                    return label;\n                default:\n                    return `${result.name || ''}`.trim();\n            }\n        }\n        return '';\n    }\n}\nEntityPickerResult.decorators = [\n    { type: Component, args: [{\n                selector: 'entity-picker-result',\n                template: `\n    <novo-list-item *ngIf=\"match.data\">\n      <item-header>\n        <item-avatar [icon]=\"getIconForResult(match.data)\"></item-avatar>\n        <item-title> <span [innerHtml]=\"highlight(getNameForResult(match.data), term)\"></span> </item-title>\n      </item-header>\n      <item-content direction=\"horizontal\">\n        <!-- COMPANY 1 -->\n        <p class=\"company\" *ngIf=\"match.data.companyName || match.data?.clientCorporation?.name\">\n          <i class=\"bhi-company\"></i>\n          <span [innerHtml]=\"highlight(match.data.companyName || match.data?.clientCorporation?.name, term)\"></span>\n        </p>\n        <!-- CLIENT CONTACT -->\n        <p class=\"contact\" *ngIf=\"match.data?.clientContact?.firstName\">\n          <i class=\"bhi-person contact person\"></i>\n          <span [innerHtml]=\"highlight(match.data.clientContact.firstName + ' ' + match.data.clientContact.lastName, term)\"></span>\n        </p>\n        <!-- CANDIDATE -->\n        <p class=\"candidate\" *ngIf=\"match.data.candidate && match.data.searchEntity === 'Placement'\">\n          <i class=\"bhi-candidate\"></i>\n          <span [innerHtml]=\"highlight(match.data.candidate.firstName + ' ' + match.data.candidate.lastName, term)\"></span>\n        </p>\n        <!-- START & END DATE -->\n        <p class=\"start-date\" *ngIf=\"match.data.dateBegin && match.data.searchEntity === 'Placement'\">\n          <i class=\"bhi-calendar\"></i>\n          <span [innerHtml]=\"renderTimestamp(match.data.dateBegin) + ' - ' + renderTimestamp(match.data.dateEnd)\"></span>\n        </p>\n        <!-- EMAIL -->\n        <p class=\"email\" *ngIf=\"match.data.email\">\n          <i class=\"bhi-email\"></i> <span [innerHtml]=\"highlight(match.data.email, term)\"></span>\n        </p>\n        <!-- PHONE -->\n        <p class=\"phone\" *ngIf=\"match.data.phone\">\n          <i class=\"bhi-phone\"></i> <span [innerHtml]=\"highlight(match.data.phone, term)\"></span>\n        </p>\n        <!-- ADDRESS -->\n        <p class=\"location\" *ngIf=\"match.data.address && (match.data.address.city || match.data.address.state)\">\n          <i class=\"bhi-location\"></i> <span *ngIf=\"match.data.address.city\" [innerHtml]=\"highlight(match.data.address.city, term)\"></span>\n          <span *ngIf=\"match.data.address.city && match.data.address.state\">, </span>\n          <span *ngIf=\"match.data.address.state\" [innerHtml]=\"highlight(match.data.address.state, term)\"></span>\n        </p>\n        <!-- STATUS -->\n        <p class=\"status\" *ngIf=\"match.data.status\">\n          <i class=\"bhi-info\"></i> <span [innerHtml]=\"highlight(match.data.status, term)\"></span>\n        </p>\n        <!-- OWNER -->\n        <p class=\"owner\" *ngIf=\"match.data.owner && match.data.owner.name && match.data.searchEntity === 'Candidate'\">\n          <i class=\"bhi-person\"></i> <span [innerHtml]=\"highlight(match.data.owner.name, term)\"></span>\n        </p>\n        <!-- PRIMARY DEPARTMENT -->\n        <p\n          class=\"primary-department\"\n          *ngIf=\"match.data.primaryDepartment && match.data.primaryDepartment.name && match.data.searchEntity === 'CorporateUser'\"\n        >\n          <i class=\"bhi-department\"></i> <span [innerHtml]=\"highlight(match.data.primaryDepartment.name, term)\"></span>\n        </p>\n        <!-- OCCUPATION -->\n        <p class=\"occupation\" *ngIf=\"match.data.occupation && match.data.searchEntity === 'CorporateUser'\">\n          <i class=\"bhi-occupation\"></i> <span [innerHtml]=\"highlight(match.data.occupation, term)\"></span>\n        </p>\n      </item-content>\n    </novo-list-item>\n  `\n            }] }\n];\n/** @nocollapse */\nEntityPickerResult.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nEntityPickerResult.propDecorators = {\n    match: [{ type: Input }],\n    term: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    EntityPickerResult.prototype.match;\n    /** @type {?} */\n    EntityPickerResult.prototype.term;\n    /** @type {?} */\n    EntityPickerResult.prototype.labels;\n}\nclass EntityPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, labels, ref) {\n        super(element, ref);\n        this.labels = labels;\n        this.select = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get hasNonErrorMessage() {\n        return !this.isLoading && !this.matches.length && !this.hasError;\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n    /**\n     * @param {?=} event\n     * @param {?=} item\n     * @return {?}\n     */\n    selectMatch(event, item) {\n        this.select.next(item);\n        return super.selectMatch(event, item);\n    }\n}\nEntityPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'entity-picker-results',\n                template: `\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <entity-picker-result\n        *ngFor=\"let match of matches\"\n        [match]=\"match\"\n        [term]=\"term\"\n        (click)=\"selectMatch($event, match)\"\n        [ngClass]=\"{ active: isActive(match) }\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n      </entity-picker-result>\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n    </novo-list>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage && term !== ''\">{{ labels.pickerEmpty }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage && term === ''\">{{ labels.pickerTextFieldEmpty }}</p>\n  `\n            }] }\n];\n/** @nocollapse */\nEntityPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nEntityPickerResults.propDecorators = {\n    select: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    EntityPickerResults.prototype.select;\n    /** @type {?} */\n    EntityPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/checklist-picker-results/ChecklistPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description This is the actual list of matches that gets injected into the DOM.\n */\nclass ChecklistPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, labels, ref) {\n        super(element, ref);\n        this.labels = labels;\n    }\n    /**\n     * @return {?}\n     */\n    search() {\n        /** @type {?} */\n        const options = this.config.options;\n        // only set this the first time\n        return from(new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            // Check if there is match data\n            if (options) {\n                // Resolve the data\n                if (Array.isArray(options)) {\n                    this.isStatic = true;\n                    // Arrays are returned immediately\n                    resolve(options);\n                }\n                else {\n                    // All other kinds of data are rejected\n                    reject('The data provided is not an array or a promise');\n                    throw new Error('The data provided is not an array or a promise');\n                }\n            }\n            else {\n                // No data gets rejected\n                reject('error');\n            }\n        })));\n    }\n    /**\n     * \\@description This function loops through the picker options and creates a filtered list of objects that contain\n     * the newSearch.\n     * @param {?} matches - Collection of objects=\n     *\n     * @return {?}\n     */\n    filterData(matches) {\n        if (this.term && matches) {\n            this.filteredMatches = matches.map((/**\n             * @param {?} section\n             * @return {?}\n             */\n            (section) => {\n                /** @type {?} */\n                const items = section.originalData.filter((/**\n                 * @param {?} match\n                 * @return {?}\n                 */\n                (match) => {\n                    return ~String(match.label)\n                        .toLowerCase()\n                        .indexOf(this.term.toLowerCase());\n                }));\n                section.data = items;\n                return section;\n            }), this);\n            return this.filteredMatches;\n        }\n        else if (this.term === '') {\n            matches.forEach((/**\n             * @param {?} section\n             * @return {?}\n             */\n            (section) => {\n                section.data = section.originalData;\n            }));\n            return matches;\n        }\n        // Show no recent results template\n        return matches;\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    selectMatch(event, item) {\n        Helpers.swallowEvent(event);\n        if (item.indeterminate) {\n            item.indeterminate = false;\n            item.checked = true;\n        }\n        else {\n            item.checked = !item.checked;\n        }\n        /** @type {?} */\n        const selected = this.activeMatch;\n        if (selected) {\n            this.parent.value = selected;\n        }\n        this.ref.markForCheck();\n        return false;\n    }\n}\nChecklistPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'checklist-picker-results',\n                host: {\n                    class: 'active picker-results',\n                },\n                template: `\n    <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n    <ul *ngIf=\"matches.length > 0\">\n      <span *ngFor=\"let section of matches; let i = index\">\n        <li class=\"header caption\" *ngIf=\"section.data.length > 0\">{{ section.label || section.type }}</li>\n        <li\n          *ngFor=\"let match of section.data; let i = index\"\n          [ngClass]=\"{ checked: match.checked }\"\n          (click)=\"selectMatch($event, match)\"\n          [class.active]=\"match === activeMatch\"\n          (mouseenter)=\"selectActive(match)\"\n        >\n          <label>\n            <i\n              [ngClass]=\"{\n                'bhi-checkbox-empty': !match.checked,\n                'bhi-checkbox-filled': match.checked,\n                'bhi-checkbox-indeterminate': match.indeterminate\n              }\"\n            ></i>\n            {{ match.label }}\n          </label>\n        </li>\n      </span>\n    </ul>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"!isLoading && !matches.length && !hasError && term !== ''\">{{ labels.pickerEmpty }}</p>\n  `\n            }] }\n];\n/** @nocollapse */\nChecklistPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nif (false) {\n    /** @type {?} */\n    ChecklistPickerResults.prototype.filteredMatches;\n    /** @type {?} */\n    ChecklistPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/grouped-multi-picker-results/GroupedMultiPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GroupedMultiPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, renderer, labels, ref) {\n        super(element, ref);\n        this.renderer = renderer;\n        this.labels = labels;\n        this.customFilterEnabled = false;\n        this.placeholder = '';\n        this.internalMap = new Map();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set term(value) {\n        // Display all only will work for static categories\n        if (this.config.displayAll && this.config.getItemsForCategoryAsync) {\n            throw new Error('[GroupedMultiPickerResults] - you can only have `displayAll` with a static `categoryMap`. Not available with `getItemsForCategoryAsync`');\n        }\n        // Custom filter\n        if (this.config.customFilter) {\n            this.customFilterEnabled = true;\n            this.customFilterLabel = this.config.customFilter.label;\n            this.customFilterValue = !!this.config.customFilter.defaultFilterValue;\n            this.ref.markForCheck();\n            if (!this.customFilterLabel || !this.config.customFilter.matchFunction) {\n                throw new Error('[GroupedMultiPickerResults] - custom filter/matchFunction set no label was provided!');\n            }\n        }\n        else {\n            this.customFilterEnabled = false;\n        }\n        // Configure ALL\n        if (this.config.displayAll && !this.selectedCategory) {\n            this.setAllCategory();\n        }\n        // Placeholder\n        if (this.config.placeholder) {\n            this.placeholder = this.config.placeholder;\n        }\n        // Focus\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.inputElement.nativeElement.focus();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get categories() {\n        if (this.config.categories || this.config.categoryMap) {\n            return (this.config.categories ||\n                Array.from(this.config.categoryMap.values()).filter((/**\n                 * @param {?} category\n                 * @return {?}\n                 */\n                (category) => {\n                    return category.value !== 'all';\n                })));\n        }\n        return [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Subscribe to keyboard events and debounce\n        this.keyboardSubscription = fromEvent(this.inputElement.nativeElement, 'keyup')\n            .pipe(debounceTime(350), distinctUntilChanged())\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.searchTerm = event.target['value'];\n            this.matches = this.filterData();\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Cleanup\n        this.keyboardSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    setAllCategory() {\n        // If we have display all, set the all categories up\n        if (this.config.displayAll) {\n            this.selectedCategory = { value: 'all', label: 'all' };\n            /** @type {?} */\n            const allItems = [];\n            Array.from(this.config.categoryMap.values())\n                .filter((/**\n             * @param {?} category\n             * @return {?}\n             */\n            (category) => {\n                return category.value !== 'all';\n            }))\n                .forEach((/**\n             * @param {?} v\n             * @return {?}\n             */\n            (v) => allItems.push(...v.items)));\n            this.matches = this.filter(allItems);\n            this.config.categoryMap.set('all', { value: 'all', label: 'All', items: allItems });\n            this.ref.markForCheck();\n        }\n    }\n    /**\n     * @param {?} category\n     * @return {?}\n     */\n    selectCategory(category) {\n        // Scroll to top\n        this.renderer.setProperty(this.listElement.element.nativeElement, 'scrollTop', 0);\n        // Set focus\n        this.inputElement.nativeElement.focus();\n        // Find new items\n        /** @type {?} */\n        const key = category.value;\n        this.selectedCategory = category;\n        // Clear\n        this.matches = [];\n        this.ref.markForCheck();\n        // New matches\n        this.getNewMatches(category, key);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    clearSearchTerm(event) {\n        Helpers.swallowEvent(event);\n        this.searchTerm = '';\n        this.selectCategory({ value: this.selectedCategory.value, label: this.selectedCategory.label });\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?=} event\n     * @param {?=} item\n     * @return {?}\n     */\n    selectMatch(event, item) {\n        // Set focus\n        this.inputElement.nativeElement.focus();\n        return super.selectMatch(event);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    fireCustomFilter(value) {\n        this.customFilterValue = value;\n        // Clear cache map\n        this.internalMap.clear();\n        // Only fire if we have a selected category\n        if (this.selectCategory) {\n            // Find new items\n            /** @type {?} */\n            const key = this.selectedCategory.value;\n            // Get new matches\n            this.getNewMatches(this.selectedCategory, key);\n            this.ref.markForCheck();\n        }\n        // Focus\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.inputElement.nativeElement.focus();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    filterData() {\n        if (this.selectedCategory) {\n            if (this.config.categoryMap) {\n                return this.filter(this.config.categoryMap.get(this.selectedCategory.value).items);\n            }\n            else {\n                return this.filter(this.internalMap.get(this.selectedCategory.value).items);\n            }\n        }\n        return [];\n    }\n    /**\n     * @private\n     * @param {?} category\n     * @param {?} key\n     * @return {?}\n     */\n    getNewMatches(category, key) {\n        // Get new matches\n        if (this.config.categoryMap) {\n            this.matches = this.filter(this.config.categoryMap.get(key).items);\n            this.ref.markForCheck();\n        }\n        else {\n            if (!this.config.getItemsForCategoryAsync) {\n                throw new Error('The \"config\" for the Chips must include a function \"getItemsForCategoryAsync(categoryKey: string)\" to retrieve the items by category. Or if you have static data provide a \"categoryMap\"');\n            }\n            if (!this.internalMap.get(key)) {\n                this.isLoading = true;\n                this.config.getItemsForCategoryAsync(key, this.customFilterValue).then((/**\n                 * @param {?} items\n                 * @return {?}\n                 */\n                (items) => {\n                    this.internalMap.set(key, { value: category.value, label: category.label, items });\n                    this.matches = this.filter(items, true);\n                    this.isLoading = false;\n                    this.ref.markForCheck();\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.inputElement.nativeElement.focus();\n                    }));\n                }));\n            }\n            else {\n                this.matches = this.filter(this.internalMap.get(key).items);\n                this.ref.markForCheck();\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} array\n     * @param {?=} ignoreCustomFilter\n     * @return {?}\n     */\n    filter(array, ignoreCustomFilter = false) {\n        /** @type {?} */\n        let matches = array;\n        if (this.searchTerm && this.searchTerm.length !== 0 && this.selectedCategory) {\n            matches = matches.filter((/**\n             * @param {?} match\n             * @return {?}\n             */\n            (match) => {\n                /** @type {?} */\n                const searchTerm = this.searchTerm.toLowerCase();\n                return match.label.toLowerCase().indexOf(searchTerm) > -1 || match.value.toLowerCase().indexOf(searchTerm) > -1;\n            }));\n        }\n        if (this.customFilterEnabled && this.config.customFilter.matchFunction && !ignoreCustomFilter) {\n            matches = matches.filter((/**\n             * @param {?} match\n             * @return {?}\n             */\n            (match) => this.config.customFilter.matchFunction(match, this.customFilterValue)));\n        }\n        return matches;\n    }\n}\nGroupedMultiPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'grouped-multi-picker-results',\n                template: `\n        <div class=\"grouped-multi-picker-groups\">\n            <novo-list direction=\"vertical\">\n                <novo-list-item\n                    *ngIf=\"config.displayAll\"\n                    (click)=\"selectCategory({ value: 'all', label: 'all' })\"\n                    [class.active]=\"selectedCategory?.value === 'all'\"\n                    data-automation-id=\"display-all\"\n                    [class.disabled]=\"isLoading\">\n                    <item-content>\n                        <span data-automation-id=\"label\">{{ labels.all }}</span>\n                    </item-content>\n                    <item-end>\n                        <i class=\"bhi-next\"></i>\n                    </item-end>\n                </novo-list-item>\n                <novo-list-item\n                    *ngFor=\"let category of categories\"\n                    (click)=\"selectCategory(category)\"\n                    [class.active]=\"selectedCategory?.value === category.value\"\n                    [attr.data-automation-id]=\"category.label\"\n                    [class.disabled]=\"isLoading\">\n                    <item-content>\n                        <i *ngIf=\"category.iconClass\" [class]=\"category.iconClass\"></i>\n                        <span data-automation-id=\"label\">{{ category.label }}</span>\n                    </item-content>\n                    <item-end>\n                        <i class=\"bhi-next\"></i>\n                    </item-end>\n                </novo-list-item>\n            </novo-list>\n            <footer class=\"grouped-multi-picker-groups-footer\" *ngIf=\"customFilterEnabled\" data-automation-id=\"footer\" [class.disabled]=\"isLoading\">\n                <novo-switch [(ngModel)]=\"customFilterValue\" (onChange)=\"fireCustomFilter($event)\" data-automation-id=\"switch\"></novo-switch>\n                <label data-automation-id=\"label\">{{ customFilterLabel }}</label>\n            </footer>\n        </div>\n        <div class=\"grouped-multi-picker-matches\">\n            <div class=\"grouped-multi-picker-input-container\" [hidden]=\"!selectedCategory\" data-automation-id=\"input-container\">\n                <input autofocus #input [(ngModel)]=\"searchTerm\" [disabled]=\"isLoading\" data-automation-id=\"input\" [placeholder]=\"placeholder\"/>\n                <i class=\"bhi-search\" *ngIf=\"!searchTerm\" [class.disabled]=\"isLoading\" data-automation-id=\"seach-icon\"></i>\n                <i class=\"bhi-times\" *ngIf=\"searchTerm\" (click)=\"clearSearchTerm($event)\" [class.disabled]=\"isLoading\" data-automation-id=\"remove-icon\"></i>\n            </div>\n            <div class=\"grouped-multi-picker-list-container\">\n                <novo-list direction=\"vertical\" #list>\n                    <novo-list-item\n                        *ngFor=\"let match of matches\"\n                        (click)=\"selectMatch($event)\"\n                        [class.active]=\"match === activeMatch\"\n                        (mouseenter)=\"selectActive(match)\"\n                        [class.disabled]=\"preselected(match) || isLoading\"\n                        [attr.data-automation-id]=\"match.label\">\n                        <item-content>\n                            <span>{{ match.label }}</span>\n                        </item-content>\n                    </novo-list-item>\n                </novo-list>\n                <div class=\"grouped-multi-picker-no-results\" *ngIf=\"matches.length === 0 && !isLoading && selectedCategory\" data-automation-id=\"empty-message\">\n                    {{ labels.groupedMultiPickerEmpty }}\n                </div>\n                <div class=\"grouped-multi-picker-no-category\" *ngIf=\"matches.length === 0 && !isLoading && !selectedCategory\" data-automation-id=\"select-category-message\">\n                    {{ labels.groupedMultiPickerSelectCategory }}\n                </div>\n                <div class=\"grouped-multi-picker-loading\" *ngIf=\"isLoading\" data-automation-id=\"loading-message\">\n                    <novo-loading theme=\"line\"></novo-loading>\n                </div>\n            </div>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nGroupedMultiPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nGroupedMultiPickerResults.propDecorators = {\n    inputElement: [{ type: ViewChild, args: ['input', { static: true },] }],\n    listElement: [{ type: ViewChild, args: ['list', { static: false },] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    GroupedMultiPickerResults.prototype.inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    GroupedMultiPickerResults.prototype.listElement;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.selectedCategory;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.searchTerm;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.customFilterEnabled;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.customFilterLabel;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.placeholder;\n    /**\n     * @type {?}\n     * @private\n     */\n    GroupedMultiPickerResults.prototype.keyboardSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    GroupedMultiPickerResults.prototype.internalMap;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.customFilterValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    GroupedMultiPickerResults.prototype.renderer;\n    /** @type {?} */\n    GroupedMultiPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/skills-picker-results/SkillsSpecialtyPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SkillsSpecialtyPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, labels, ref) {\n        super(element, ref);\n        this.element = element;\n        this.labels = labels;\n        this.active = true;\n        this.limitedTo = false;\n        this.limit = 200;\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n    /**\n     * \\@name structureArray\n     * \\@description This function structures an array of nodes into an array of objects with a\n     * 'name' field by default.\n     * @param {?} collection - the data once getData resolves it\n     *\n     * @return {?}\n     */\n    structureArray(collection) {\n        /** @type {?} */\n        let data = collection;\n        if (collection.hasOwnProperty('data')) {\n            this.limitedTo = collection.limitedTo200;\n            this.total = collection.total;\n            data = collection.data;\n        }\n        else if (data.length > this.limit) {\n            this.limitedTo = true;\n            this.total = data.length;\n            data = data.slice(0, this.limit);\n        }\n        return super.structureArray(data);\n    }\n}\nSkillsSpecialtyPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'skill-specialty-picker-results',\n                template: `\n    <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\"><novo-loading theme=\"line\"></novo-loading></section>\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-content>\n          <h6><span [innerHtml]=\"highlight(match.label, term)\"></span></h6>\n          <div class=\"category\">\n            <i class=\"bhi-category-tags\"></i\n            ><span [innerHtml]=\"highlight(match.data.categories || match.data.parentCategory.name, term)\"></span>\n          </div>\n        </item-content>\n      </novo-list-item>\n      <novo-list-item *ngIf=\"limitedTo\"\n        ><div>{{ labels.showingXofXResults(limit, total) }}</div></novo-list-item\n      >\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n    </novo-list>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n  `\n            }] }\n];\n/** @nocollapse */\nSkillsSpecialtyPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nSkillsSpecialtyPickerResults.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }]\n};\nif (false) {\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.active;\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.limitedTo;\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.limit;\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.total;\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.element;\n    /** @type {?} */\n    SkillsSpecialtyPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/distributionlist-picker-results/DistributionListPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DistributionListPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} sanitizer\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, sanitizer, labels, ref) {\n        super(element, ref);\n        this.sanitizer = sanitizer;\n        this.labels = labels;\n        this.active = true;\n        this.sanitizer = sanitizer;\n    }\n    /**\n     * @return {?}\n     */\n    get isHidden() {\n        return this.matches.length === 0;\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    sanitizeHTML(html) {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n}\nDistributionListPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'distribution-list-picker-results',\n                template: `\n        <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n            <novo-loading theme=\"line\"></novo-loading>\n        </section>\n        <novo-list direction=\"vertical\" *ngIf=\"matches?.length > 0 && !hasError\">\n            <novo-list-item *ngFor=\"let match of matches\" (click)=\"selectMatch($event)\" [class.active]=\"match === activeMatch\" (mouseenter)=\"selectActive(match)\" [class.disabled]=\"preselected(match)\">\n                <item-header>\n                    <item-title>\n                        <span [innerHtml]=\"sanitizeHTML(match.label)\"></span>\n                    </item-title>\n                </item-header>\n                <item-content direction=\"horizontal\">\n                    <p>\n                        <span class='label'>{{ labels.distributionListOwner }}: </span><span>{{ match?.data?.owner?.name }}</span>\n                    </p>\n                    <p>\n                        <span class='label'>{{ labels.dateAdded }}: </span><span>{{ labels.formatDateWithFormat(match?.data?.dateAdded, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n                    </p>\n                </item-content>\n            </novo-list-item>\n            <novo-loading theme=\"line\" *ngIf=\"isLoading && matches?.length > 0\"></novo-loading>\n        </novo-list>\n    `\n            }] }\n];\n/** @nocollapse */\nDistributionListPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nDistributionListPickerResults.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }],\n    isHidden: [{ type: HostBinding, args: ['hidden',] }]\n};\nif (false) {\n    /** @type {?} */\n    DistributionListPickerResults.prototype.active;\n    /**\n     * @type {?}\n     * @private\n     */\n    DistributionListPickerResults.prototype.sanitizer;\n    /** @type {?} */\n    DistributionListPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/extras/workers-comp-codes-picker-results/WorkersCompCodesPickerResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass WorkersCompCodesPickerResults extends BasePickerResults {\n    /**\n     * @param {?} element\n     * @param {?} sanitizer\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, sanitizer, labels, ref) {\n        super(element, ref);\n        this.sanitizer = sanitizer;\n        this.labels = labels;\n        this.active = true;\n        this.sanitizer = sanitizer;\n    }\n    /**\n     * @return {?}\n     */\n    get isHidden() {\n        return this.matches.length === 0;\n    }\n    /**\n     * @return {?}\n     */\n    getListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n    /**\n     * @param {?} compCode\n     * @param {?} name\n     * @return {?}\n     */\n    sanitizeHTML(compCode, name) {\n        return this.sanitizer.bypassSecurityTrustHtml(`${compCode} | ${name}`);\n    }\n}\nWorkersCompCodesPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'workers-comp-codes-picker-results',\n                template: `\n    <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n      <novo-loading theme=\"line\"></novo-loading>\n    </section>\n    <novo-list direction=\"vertical\" *ngIf=\"matches?.length > 0 && !hasError\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-header>\n          <item-title>\n            <span [innerHtml]=\"sanitizeHTML(match?.data?.compensation?.code, match?.data?.compensation?.name)\"></span>\n          </item-title>\n        </item-header>\n        <item-content direction=\"horizontal\">\n          <p>\n            <span class=\"label\">{{ labels.state }}: </span><span>{{ match?.data?.compensation?.state }}</span>\n          </p>\n          <p>\n            <span class=\"label\">{{ labels.rate }}: </span><span>{{ labels.formatCurrency(match?.data?.rate) }}</span>\n          </p>\n        </item-content>\n        <item-content direction=\"horizontal\">\n          <p>\n            <span class=\"label\">{{ labels.startDate }}: </span\n            ><span>{{ labels.formatDateWithFormat(match?.data?.startDate, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n          </p>\n          <p>\n            <span class=\"label\">{{ labels.endDate }}: </span\n            ><span>{{ labels.formatDateWithFormat(match?.data?.endDate, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n          </p>\n        </item-content>\n      </novo-list-item>\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches?.length > 0\"></novo-loading>\n    </novo-list>\n  `\n            }] }\n];\n/** @nocollapse */\nWorkersCompCodesPickerResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nWorkersCompCodesPickerResults.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }],\n    isHidden: [{ type: HostBinding, args: ['hidden',] }]\n};\nif (false) {\n    /** @type {?} */\n    WorkersCompCodesPickerResults.prototype.active;\n    /**\n     * @type {?}\n     * @private\n     */\n    WorkersCompCodesPickerResults.prototype.sanitizer;\n    /** @type {?} */\n    WorkersCompCodesPickerResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/picker/Picker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoPickerModule {\n}\nNovoPickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoLoadingModule, NovoListModule, NovoOverlayModule, NovoSwitchModule],\n                declarations: [\n                    NovoPickerElement,\n                    PickerResults,\n                    EntityPickerResult,\n                    EntityPickerResults,\n                    ChecklistPickerResults,\n                    GroupedMultiPickerResults,\n                    DistributionListPickerResults,\n                    WorkersCompCodesPickerResults,\n                    SkillsSpecialtyPickerResults,\n                ],\n                exports: [\n                    NovoPickerElement,\n                    PickerResults,\n                    EntityPickerResult,\n                    EntityPickerResults,\n                    ChecklistPickerResults,\n                    GroupedMultiPickerResults,\n                    DistributionListPickerResults,\n                    WorkersCompCodesPickerResults,\n                    SkillsSpecialtyPickerResults,\n                ],\n                entryComponents: [\n                    PickerResults,\n                    EntityPickerResult,\n                    EntityPickerResults,\n                    ChecklistPickerResults,\n                    GroupedMultiPickerResults,\n                    DistributionListPickerResults,\n                    WorkersCompCodesPickerResults,\n                    SkillsSpecialtyPickerResults,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/chips/RowChips.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CHIPS_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoRowChipsElement)),\n    multi: true,\n};\nclass NovoRowChipElement extends NovoChipElement {\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onSelect(e) {\n        return false;\n    }\n}\nNovoRowChipElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-row-chip',\n                template: `<div class=\"novo-row-chips-columns\"><ng-content></ng-content><i class=\"bhi-delete-o\" *ngIf=\"!disabled\" (click)=\"onRemove($event)\"></i></div>`\n            }] }\n];\nclass NovoRowChipsElement extends NovoChipsElement {\n    /**\n     * @param {?} element\n     * @param {?} componentUtils\n     * @param {?} labels\n     */\n    constructor(element, componentUtils, labels) {\n        super(element, componentUtils, labels);\n        this.closeOnSelect = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        return;\n    }\n}\nNovoRowChipsElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-row-chips',\n                providers: [CHIPS_VALUE_ACCESSOR$1],\n                host: {\n                    '[class.with-value]': 'items.length > 0',\n                },\n                template: `\n        <div class=\"novo-row-chips-columns\" *ngIf=\"items.length > 0\">\n          <div class=\"column-label\" *ngFor=\"let column of source.columns\">{{ column.label }}</div>\n        </div>\n        <div class=\"novo-row-chips-empty-message\" *ngIf=\"source.emptyReadOnlyMessage && disablePickerInput && items.length === 0\">{{source.emptyReadOnlyMessage}}</div>\n        <novo-row-chip\n          *ngFor=\"let item of _items | async\"\n          [type]=\"type || item?.value?.searchEntity\"\n          [class.selected]=\"item == selected\"\n          [disabled]=\"disablePickerInput\"\n          (remove)=\"remove($event, item)\"\n          (select)=\"select($event, item)\">\n          <div class=\"column-data\" *ngFor=\"let column of source.columns\"><span>{{ column.data(item) }}</span></div>\n        </novo-row-chip>\n        <novo-picker\n            clearValueOnSelect=\"true\"\n            [closeOnSelect]=\"closeOnSelect\"\n            [config]=\"source\"\n            [disablePickerInput]=\"disablePickerInput\"\n            [hidden]=\"disablePickerInput\"\n            [placeholder]=\"placeholder\"\n            [(ngModel)]=\"itemToAdd\"\n            (select)=\"add($event)\"\n            (keydown)=\"onKeyDown($event)\"\n            (focus)=\"onFocus($event)\"\n            (typing)=\"onTyping($event)\"\n            (blur)=\"onTouched($event)\"\n            [selected]=\"items\"\n            [overrideElement]=\"element\"\n            *ngIf=\"!maxlength || (maxlength && items.length < maxlength)\">\n        </novo-picker>\n        <div class=\"preview-container\">\n            <span #preview></span>\n        </div>\n   `\n            }] }\n];\n/** @nocollapse */\nNovoRowChipsElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ComponentUtils },\n    { type: NovoLabelService }\n];\nNovoRowChipsElement.propDecorators = {\n    closeOnSelect: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoRowChipsElement.prototype.closeOnSelect;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/chips/Chips.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoChipsModule {\n}\nNovoChipsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoPickerModule],\n                declarations: [NovoChipElement, NovoChipsElement, NovoRowChipElement, NovoRowChipsElement],\n                exports: [NovoChipElement, NovoChipsElement, NovoRowChipElement, NovoRowChipsElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/ckeditor/CKEditor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CKEDITOR_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoCKEditorElement)),\n    multi: true,\n};\n/**\n * CKEditor component\n * Usage :\n *  <novo-editor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></novo-editor>\n */\nclass NovoCKEditorElement {\n    /**\n     * @param {?} zone\n     */\n    constructor(zone) {\n        this.zone = zone;\n        this.startupFocus = false;\n        this.fileBrowserImageUploadUrl = '';\n        this.disabled = false;\n        this.change = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.paste = new EventEmitter();\n        this.loaded = new EventEmitter();\n        this._value = '';\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            this._value = v;\n            this.onChange(v);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.instance) {\n            this.instance.focusManager.blur(true); // Remove focus from editor\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.instance.removeAllListeners();\n                /** @type {?} */\n                const aInstance = CKEDITOR.instances[this.instance.name];\n                if (aInstance) {\n                    aInstance.destroy();\n                }\n                this.instance.destroy();\n                this.instance = null;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const config = Object.assign(this.getBaseConfig(), this.config);\n        if (this.startupFocus) {\n            config.startupFocus = true;\n        }\n        if (this.disabled) {\n            config.readOnly = true;\n        }\n        this.ckeditorInit(config);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    updateValue(value) {\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            this.value = value;\n            this.onChange(value);\n            this.onTouched();\n            this.change.emit(value);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    ckeditorInit(config) {\n        if (!CKEDITOR) {\n            console.error('Make sure to include CKEditor sources in your dependencies!');\n            return;\n        }\n        // CKEditor replace textarea\n        this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n        // Set initial value\n        this.instance.setData(this.value);\n        // listen for instanceReady event\n        this.instance.on('instanceReady', (/**\n         * @param {?} evt\n         * @return {?}\n         */\n        (evt) => {\n            // send the evt to the EventEmitter\n            this.ready.emit(evt);\n        }));\n        // CKEditor change event\n        this.instance.on('change', (/**\n         * @return {?}\n         */\n        () => {\n            this.onTouched();\n            /** @type {?} */\n            const value = this.instance.getData();\n            // Debounce update\n            if (this.debounce) {\n                if (this.debounceTimeout) {\n                    clearTimeout(this.debounceTimeout);\n                }\n                this.debounceTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.updateValue(value);\n                    this.debounceTimeout = null;\n                }), parseInt(this.debounce, 10));\n            }\n            else {\n                this.updateValue(value);\n            }\n        }));\n        this.instance.on('blur', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.blur.emit(event);\n        }));\n        this.instance.on('focus', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.focus.emit(event);\n        }));\n        this.instance.on('paste', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.paste.emit(event);\n        }));\n        this.instance.on('loaded', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.loaded.emit(event);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getBaseConfig() {\n        /** @type {?} */\n        const baseConfig = {\n            enterMode: CKEDITOR.ENTER_BR,\n            shiftEnterMode: CKEDITOR.ENTER_P,\n            disableNativeSpellChecker: false,\n            removePlugins: 'liststyle,tabletools,contextmenu',\n            // allows browser based spell checking\n            extraAllowedContent: '*(*){*};table tbody tr td th[*];',\n            // allows class names (*) and inline styles {*} for all and attributes [*] on tables\n            font_names: 'Arial/Arial, Helvetica, sans-serif;' +\n                'Calibri/Calibri, Verdana, Geneva, sans-serif;' +\n                'Comic Sans MS/Comic Sans MS, cursive;' +\n                'Courier New/Courier New, Courier, monospace;' +\n                'Georgia/Georgia, serif;' +\n                'Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;' +\n                'Tahoma/Tahoma, Geneva, sans-serif;' +\n                'Times New Roman/Times New Roman, Times, serif;' +\n                'Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;' +\n                'Verdana/Verdana, Geneva, sans-serif',\n        };\n        /** @type {?} */\n        const minimalConfig = {\n            toolbar: [\n                {\n                    name: 'basicstyles',\n                    items: [\n                        'Styles',\n                        'FontSize',\n                        'Bold',\n                        'Italic',\n                        'Underline',\n                        'TextColor',\n                        '-',\n                        'NumberedList',\n                        'BulletedList',\n                        'Outdent',\n                        'Indent',\n                        'Link',\n                    ],\n                },\n            ],\n        };\n        /** @type {?} */\n        const extendedConfig = {\n            toolbar: [\n                { name: 'clipboard', items: ['Paste', 'PasteText', 'PasteFromWord', 'Undo', 'Redo'] },\n                {\n                    name: 'paragraph',\n                    items: [\n                        'NumberedList',\n                        'BulletedList',\n                        'Outdent',\n                        'Indent',\n                        'Blockquote',\n                        'JustifyLeft',\n                        'JustifyCenter',\n                        'JustifyRight',\n                        'JustifyBlock',\n                        'BidiLtr',\n                        'BidiRtl',\n                    ],\n                },\n                { name: 'links', items: ['Link'] },\n                { name: 'insert', items: ['Image', 'Table', 'HorizontalRule'] },\n                { name: 'tools', items: ['Maximize', 'Source'] },\n                '/',\n                { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'] },\n                { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n                { name: 'colors', items: ['TextColor', 'BGColor'] },\n            ],\n            filebrowserImageUploadUrl: this.fileBrowserImageUploadUrl,\n        };\n        return Object.assign(baseConfig, this.minimal ? minimalConfig : extendedConfig);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._value = value;\n        if (this.instance) {\n            this.instance.setData(value);\n        }\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    onChange(value) { }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onTouched(event) { }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n        if (this.instance) {\n            CKEDITOR.instances[this.instance.name].setReadOnly(disabled);\n        }\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    insertText(text) {\n        /** @type {?} */\n        const trimmedText = text.trim();\n        this.instance.insertText(trimmedText);\n    }\n}\nNovoCKEditorElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-editor',\n                providers: [CKEDITOR_CONTROL_VALUE_ACCESSOR],\n                template: '<textarea [name]=\"name\" [id]=\"name\" #host></textarea>'\n            }] }\n];\n/** @nocollapse */\nNovoCKEditorElement.ctorParameters = () => [\n    { type: NgZone }\n];\nNovoCKEditorElement.propDecorators = {\n    config: [{ type: Input }],\n    debounce: [{ type: Input }],\n    name: [{ type: Input }],\n    minimal: [{ type: Input }],\n    startupFocus: [{ type: Input }],\n    fileBrowserImageUploadUrl: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }],\n    ready: [{ type: Output }],\n    blur: [{ type: Output }],\n    focus: [{ type: Output }],\n    paste: [{ type: Output }],\n    loaded: [{ type: Output }],\n    host: [{ type: ViewChild, args: ['host', { static: false },] }],\n    value: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCKEditorElement.prototype.config;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.debounce;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.name;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.minimal;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.startupFocus;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.fileBrowserImageUploadUrl;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.disabled;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.change;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.ready;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.blur;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.focus;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.paste;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.loaded;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.host;\n    /** @type {?} */\n    NovoCKEditorElement.prototype._value;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.instance;\n    /** @type {?} */\n    NovoCKEditorElement.prototype.debounceTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoCKEditorElement.prototype.zone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/ckeditor/CKEditor.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoNovoCKEditorModule {\n}\nNovoNovoCKEditorModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [NovoCKEditorElement],\n                exports: [NovoCKEditorElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/common/novo-template/novo-template.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTemplate {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n    /**\n     * @return {?}\n     */\n    getType() {\n        return this.name;\n    }\n}\nNovoTemplate.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoTemplate]',\n            },] }\n];\n/** @nocollapse */\nNovoTemplate.ctorParameters = () => [\n    { type: TemplateRef }\n];\nNovoTemplate.propDecorators = {\n    type: [{ type: Input }],\n    name: [{ type: Input, args: ['novoTemplate',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTemplate.prototype.type;\n    /** @type {?} */\n    NovoTemplate.prototype.name;\n    /** @type {?} */\n    NovoTemplate.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/common/common.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoCommonModule {\n}\nNovoCommonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                exports: [NovoTemplate],\n                declarations: [NovoTemplate],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/services/data-table-filter-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDataTableFilterUtils {\n    /**\n     * @param {?=} filter\n     * @param {?=} type\n     * @param {?=} multiSelect\n     * @return {?}\n     */\n    static constructFilter(filter, type, multiSelect) {\n        /** @type {?} */\n        let actualFilter = filter;\n        if (filter) {\n            if (type && type === 'date') {\n                if (filter.startDate && filter.endDate) {\n                    actualFilter = {\n                        min: startOfDay(filter.startDate.date),\n                        max: startOfDay(addDays(startOfDay(filter.endDate.date), 1)),\n                    };\n                }\n                else {\n                    actualFilter = {\n                        min: filter.min ? addDays(startOfToday(), filter.min) : startOfToday(),\n                        max: filter.max ? addDays(endOfToday(), filter.max) : endOfToday(),\n                    };\n                }\n            }\n            if (multiSelect && Array.isArray(filter)) {\n                actualFilter = filter.map((/**\n                 * @param {?} filterItem\n                 * @return {?}\n                 */\n                (filterItem) => {\n                    if (filterItem && filterItem.hasOwnProperty('value')) {\n                        return filterItem.value;\n                    }\n                    return filterItem;\n                }));\n            }\n            else if (actualFilter && actualFilter.hasOwnProperty('value')) {\n                actualFilter = filter.value;\n            }\n        }\n        return actualFilter;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/state/data-table-state.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass DataTableState {\n    constructor() {\n        this.selectionSource = new Subject();\n        this.paginationSource = new Subject();\n        this.sortFilterSource = new Subject();\n        this.resetSource = new Subject();\n        this.expandSource = new Subject();\n        this.dataLoaded = new Subject();\n        this.sort = undefined;\n        this.filter = undefined;\n        this.page = 0;\n        this.pageSize = undefined;\n        this.globalSearch = undefined;\n        this.selectedRows = new Map();\n        this.expandedRows = new Set();\n        this.isForceRefresh = false;\n        this.updates = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get userFiltered() {\n        return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n    }\n    /**\n     * @return {?}\n     */\n    get userFilteredInternal() {\n        return !!(this.filter || this.sort || this.globalSearch);\n    }\n    /**\n     * @return {?}\n     */\n    get selected() {\n        return Array.from(this.selectedRows.values());\n    }\n    /**\n     * @param {?=} fireUpdate\n     * @param {?=} persistUserFilters\n     * @return {?}\n     */\n    reset(fireUpdate = true, persistUserFilters) {\n        if (!persistUserFilters) {\n            this.sort = undefined;\n            this.globalSearch = undefined;\n            this.filter = undefined;\n        }\n        this.page = 0;\n        this.selectedRows.clear();\n        this.resetSource.next();\n        this.onSortFilterChange();\n        if (fireUpdate) {\n            this.updates.emit({\n                sort: this.sort,\n                filter: this.filter,\n                globalSearch: this.globalSearch,\n            });\n        }\n    }\n    /**\n     * @param {?=} fireUpdate\n     * @return {?}\n     */\n    clearSort(fireUpdate = true) {\n        this.sort = undefined;\n        this.page = 0;\n        this.selectedRows.clear();\n        this.resetSource.next();\n        this.onSortFilterChange();\n        if (fireUpdate) {\n            this.updates.emit({\n                sort: this.sort,\n                filter: this.filter,\n                globalSearch: this.globalSearch,\n            });\n        }\n    }\n    /**\n     * @param {?=} fireUpdate\n     * @return {?}\n     */\n    clearFilter(fireUpdate = true) {\n        this.filter = undefined;\n        this.globalSearch = undefined;\n        this.page = 0;\n        this.selectedRows.clear();\n        this.resetSource.next();\n        this.onSortFilterChange();\n        if (fireUpdate) {\n            this.updates.emit({\n                sort: this.sort,\n                filter: this.filter,\n                globalSearch: this.globalSearch,\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onSelectionChange() {\n        this.selectionSource.next();\n    }\n    /**\n     * @param {?=} targetId\n     * @return {?}\n     */\n    onExpandChange(targetId) {\n        this.expandSource.next(targetId);\n    }\n    /**\n     * @param {?} isPageSizeChange\n     * @param {?} pageSize\n     * @return {?}\n     */\n    onPaginationChange(isPageSizeChange, pageSize) {\n        this.paginationSource.next({ isPageSizeChange, pageSize });\n    }\n    /**\n     * @return {?}\n     */\n    onSortFilterChange() {\n        this.sortFilterSource.next({\n            sort: this.sort,\n            filter: this.filter,\n            globalSearch: this.globalSearch,\n        });\n    }\n    /**\n     * @param {?} preferences\n     * @return {?}\n     */\n    setInitialSortFilter(preferences) {\n        if (preferences) {\n            if (preferences.sort) {\n                this.sort = preferences.sort;\n            }\n            if (preferences.filter) {\n                /** @type {?} */\n                const filters = Helpers.convertToArray(preferences.filter);\n                filters.forEach((/**\n                 * @param {?} filter\n                 * @return {?}\n                 */\n                (filter) => {\n                    filter.value =\n                        filter.selectedOption && filter.type\n                            ? NovoDataTableFilterUtils.constructFilter(filter.selectedOption, filter.type)\n                            : filter.value;\n                }));\n                this.filter = filters;\n            }\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    DataTableState.prototype.selectionSource;\n    /** @type {?} */\n    DataTableState.prototype.paginationSource;\n    /** @type {?} */\n    DataTableState.prototype.sortFilterSource;\n    /** @type {?} */\n    DataTableState.prototype.resetSource;\n    /** @type {?} */\n    DataTableState.prototype.expandSource;\n    /** @type {?} */\n    DataTableState.prototype.dataLoaded;\n    /** @type {?} */\n    DataTableState.prototype.sort;\n    /** @type {?} */\n    DataTableState.prototype.filter;\n    /** @type {?} */\n    DataTableState.prototype.page;\n    /** @type {?} */\n    DataTableState.prototype.pageSize;\n    /** @type {?} */\n    DataTableState.prototype.globalSearch;\n    /** @type {?} */\n    DataTableState.prototype.selectedRows;\n    /** @type {?} */\n    DataTableState.prototype.expandedRows;\n    /** @type {?} */\n    DataTableState.prototype.outsideFilter;\n    /** @type {?} */\n    DataTableState.prototype.isForceRefresh;\n    /** @type {?} */\n    DataTableState.prototype.updates;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table-clear-button.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableClearButton {\n    /**\n     * @param {?} state\n     * @param {?} ref\n     * @param {?} labels\n     */\n    constructor(state, ref, labels) {\n        this.state = state;\n        this.ref = ref;\n        this.labels = labels;\n        this.sortClear = new EventEmitter();\n        this.filterClear = new EventEmitter();\n        this.allClear = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    clearSort() {\n        this.state.clearSort();\n        this.sortClear.emit(true);\n    }\n    /**\n     * @return {?}\n     */\n    clearFilter() {\n        this.state.clearFilter();\n        this.filterClear.emit(true);\n    }\n    /**\n     * @return {?}\n     */\n    clearAll() {\n        this.state.reset();\n        this.allClear.emit(true);\n        this.sortClear.emit(true);\n        this.filterClear.emit(true);\n    }\n}\nNovoDataTableClearButton.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-clear-button',\n                template: `\n    <novo-dropdown side=\"bottom-right\" class=\"novo-data-table-clear-button\" data-automation-id=\"novo-data-table-clear-dropdown\">\n      <button type=\"button\" theme=\"primary\" color=\"negative\" icon=\"collapse\" data-automation-id=\"novo-data-table-clear-dropdown-btn\">{{ labels.clear }}</button>\n      <list>\n          <item *ngIf=\"state.sort\" (click)=\"clearSort()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-sort\">{{ labels.clearSort }}</item>\n          <item *ngIf=\"state.filter\" (click)=\"clearFilter()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-filter\">{{ labels.clearFilter }}</item>\n          <item *ngIf=\"state.sort && state.filter\" (click)=\"clearAll()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-all\">{{ labels.clearAllNormalCase }}</item>\n      </list>\n    </novo-dropdown>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableClearButton.ctorParameters = () => [\n    { type: DataTableState },\n    { type: ChangeDetectorRef },\n    { type: NovoLabelService }\n];\nNovoDataTableClearButton.propDecorators = {\n    sortClear: [{ type: Output }],\n    filterClear: [{ type: Output }],\n    allClear: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableClearButton.prototype.sortClear;\n    /** @type {?} */\n    NovoDataTableClearButton.prototype.filterClear;\n    /** @type {?} */\n    NovoDataTableClearButton.prototype.allClear;\n    /** @type {?} */\n    NovoDataTableClearButton.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableClearButton.prototype.ref;\n    /** @type {?} */\n    NovoDataTableClearButton.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table.source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass DataTableSource extends DataSource {\n    /**\n     * @param {?} tableService\n     * @param {?} state\n     * @param {?} ref\n     */\n    constructor(tableService, state, ref) {\n        super();\n        this.tableService = tableService;\n        this.state = state;\n        this.ref = ref;\n        this.total = 0;\n        this.currentTotal = 0;\n        this.current = 0;\n        this.loading = false;\n        this.pristine = true;\n        this.totalSet = false;\n    }\n    /**\n     * @return {?}\n     */\n    get totallyEmpty() {\n        return this.total === 0;\n    }\n    /**\n     * @return {?}\n     */\n    get currentlyEmpty() {\n        return this.current === 0;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        /** @type {?} */\n        const displayDataChanges = [this.state.updates];\n        return merge(...displayDataChanges).pipe(startWith(null), switchMap((/**\n         * @return {?}\n         */\n        () => {\n            this.pristine = false;\n            this.loading = true;\n            return this.tableService.getTableResults(this.state.sort, this.state.filter, this.state.page, this.state.pageSize, this.state.globalSearch, this.state.outsideFilter);\n        })), map((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (!this.totalSet || this.state.isForceRefresh) {\n                this.total = data.total;\n                this.totalSet = true;\n                this.state.isForceRefresh = false;\n            }\n            else if (data.total > this.total) {\n                this.total = data.total;\n            }\n            this.currentTotal = data.total;\n            this.current = data.results.length;\n            this.data = data.results;\n            // Clear selection\n            this.state.selectedRows.clear();\n            this.state.onSelectionChange();\n            // Mark changes\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.ref.markForCheck();\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.loading = false;\n                    this.state.dataLoaded.next();\n                    this.ref.markForCheck();\n                }));\n            }));\n            return data.results;\n        })), catchError((/**\n         * @param {?} err\n         * @param {?} caught\n         * @return {?}\n         */\n        (err, caught) => {\n            console.error(err, caught); // tslint: disable-line\n            this.loading = false;\n            return of(null);\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /** @type {?} */\n    DataTableSource.prototype.total;\n    /** @type {?} */\n    DataTableSource.prototype.currentTotal;\n    /** @type {?} */\n    DataTableSource.prototype.current;\n    /** @type {?} */\n    DataTableSource.prototype.loading;\n    /** @type {?} */\n    DataTableSource.prototype.pristine;\n    /** @type {?} */\n    DataTableSource.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableSource.prototype.totalSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableSource.prototype.tableService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableSource.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableSource.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/services/static-data-table.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass StaticDataTableService {\n    /**\n     * @param {?=} currentData\n     */\n    constructor(currentData = []) {\n        this.currentData = currentData;\n        this.originalData = [...currentData];\n    }\n    /**\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?=} page\n     * @param {?=} pageSize\n     * @param {?=} globalSearch\n     * @param {?=} outsideFilter\n     * @return {?}\n     */\n    getTableResults(sort, filter, page = 0, pageSize, globalSearch, outsideFilter) {\n        this.currentData = [...this.originalData];\n        /** @type {?} */\n        let total = this.originalData.length;\n        if (this.currentData.length !== 0) {\n            if (globalSearch) {\n                this.currentData = this.currentData.filter((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => Object.keys(item).some((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())))));\n                total = this.currentData.length;\n            }\n            if (filter) {\n                this.currentData = this.filterData(this.currentData, filter);\n                total = this.currentData.length;\n            }\n            if (sort) {\n                this.currentData = this.currentData.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n                total = this.currentData.length;\n            }\n            if (!sort && !filter && !globalSearch && !outsideFilter) {\n                this.currentData = [...this.originalData];\n            }\n            if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n                this.currentData = this.currentData.slice(page * pageSize, (page + 1) * pageSize);\n            }\n        }\n        return of({ results: this.currentData, total });\n    }\n    /**\n     * @param {?} currentData\n     * @param {?} filter\n     * @return {?}\n     */\n    filterData(currentData, filter) {\n        /** @type {?} */\n        const filters = Helpers.convertToArray(filter);\n        filters.forEach((/**\n         * @param {?} aFilter\n         * @return {?}\n         */\n        (aFilter) => {\n            if (Array.isArray(aFilter.value)) {\n                /** @type {?} */\n                const values = Helpers.convertToArray(aFilter.value).map(Helpers.escapeString);\n                currentData = currentData.filter(Helpers.filterByField(aFilter.id, values));\n            }\n            else {\n                /** @type {?} */\n                const value = Helpers.escapeString(aFilter.value);\n                currentData = currentData.filter(Helpers.filterByField(aFilter.id, value));\n            }\n        }));\n        return currentData;\n    }\n}\nif (false) {\n    /** @type {?} */\n    StaticDataTableService.prototype.originalData;\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticDataTableService.prototype.currentData;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/dropdown/Dropdown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDropdownElement {\n    /**\n     * @param {?} element\n     * @param {?} ref\n     */\n    constructor(element, ref) {\n        this.element = element;\n        this.ref = ref;\n        this.parentScrollAction = 'close';\n        this.side = 'default';\n        this.scrollStrategy = 'reposition';\n        this.width = -1; // Defaults to dynamic width (no hardcoded width value and no host width lookup)\n        // Defaults to dynamic width (no hardcoded width value and no host width lookup)\n        this.appendToBody = false; // Deprecated\n        // Deprecated\n        this.toggled = new EventEmitter();\n        this.activeIndex = -1;\n        this.filterTerm = '';\n        this.clickHandler = this.togglePanel.bind(this);\n        this.closeHandler = this.closePanel.bind(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.appendToBody) {\n            notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n        }\n        // Add a click handler to the button to toggle the menu\n        /** @type {?} */\n        const button = this.element.nativeElement.querySelector('button');\n        button.addEventListener('click', this.clickHandler);\n        if (this.parentScrollSelector) {\n            this.parentScrollElement = Helpers.findAncestor(this.element.nativeElement, this.parentScrollSelector);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Remove listener\n        /** @type {?} */\n        const button = this.element.nativeElement.querySelector('button');\n        if (button) {\n            button.removeEventListener('click', this.clickHandler);\n        }\n        if (this.parentScrollElement && this.parentScrollAction === 'close') {\n            this.parentScrollElement.removeEventListener('scroll', this.closeHandler);\n        }\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    set items(items) {\n        this._items = items;\n        this.activeIndex = -1;\n        // Get the innerText of all the items to allow for searching\n        this._textItems = items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            return item.element.nativeElement.innerText;\n        }));\n    }\n    /**\n     * BEGIN: Convenient Panel Methods.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlay && this.overlay.panelOpen;\n    }\n    /**\n     * @return {?}\n     */\n    openPanel() {\n        this.overlay.openPanel();\n        if (this.parentScrollElement && this.parentScrollAction === 'close') {\n            this.parentScrollElement.addEventListener('scroll', this.closeHandler);\n        }\n        this.toggled.emit(true);\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.overlay.closePanel();\n        if (this.parentScrollElement && this.parentScrollAction === 'close') {\n            this.parentScrollElement.removeEventListener('scroll', this.closeHandler);\n        }\n        // Clear active index\n        if (this.activeIndex !== -1) {\n            this._items.toArray()[this.activeIndex].active = false;\n        }\n        this.activeIndex = -1;\n        this.ref.markForCheck();\n        this.toggled.emit(false);\n    }\n    /**\n     * @return {?}\n     */\n    togglePanel() {\n        this.panelOpen ? this.closePanel() : this.openPanel();\n    }\n    /**\n     * END: Convenient Panel Methods.\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        if (this.panelOpen && event.keyCode === KeyCodes.ESC) {\n            Helpers.swallowEvent(event);\n            // active & esc hit -- close\n            this.closePanel();\n        }\n        else if (event.keyCode === KeyCodes.ENTER) {\n            Helpers.swallowEvent(event);\n            // enter -- perform the \"click\"\n            this._items.toArray()[this.activeIndex].onClick(event);\n        }\n        else if (event.keyCode === KeyCodes.DOWN) {\n            Helpers.swallowEvent(event);\n            // down - navigate through the list ignoring disabled ones\n            if (this.activeIndex !== -1) {\n                this._items.toArray()[this.activeIndex].active = false;\n            }\n            this.activeIndex++;\n            if (this.activeIndex === this._items.length) {\n                this.activeIndex = 0;\n            }\n            while (this._items.toArray()[this.activeIndex].disabled) {\n                this.activeIndex++;\n                if (this.activeIndex === this._items.length) {\n                    this.activeIndex = 0;\n                }\n            }\n            this._items.toArray()[this.activeIndex].active = true;\n            this.scrollToActive();\n        }\n        else if (event.keyCode === KeyCodes.UP) {\n            Helpers.swallowEvent(event);\n            // up -- navigate through the list ignoring disabled ones\n            if (this.activeIndex !== -1) {\n                this._items.toArray()[this.activeIndex].active = false;\n            }\n            this.activeIndex--;\n            if (this.activeIndex < 0) {\n                this.activeIndex = this._items.length - 1;\n            }\n            while (this._items.toArray()[this.activeIndex].disabled) {\n                this.activeIndex--;\n                if (this.activeIndex < 0) {\n                    this.activeIndex = this._items.length - 1;\n                }\n            }\n            this._items.toArray()[this.activeIndex].active = true;\n            this.scrollToActive();\n        }\n        else if ((event.keyCode >= 65 && event.keyCode <= 90) ||\n            (event.keyCode >= 96 && event.keyCode <= 105) ||\n            (event.keyCode >= 48 && event.keyCode <= 57) ||\n            event.keyCode === KeyCodes.SPACE) {\n            Helpers.swallowEvent(event);\n            // A-Z, 0-9, space -- filter the list and scroll to active filter\n            // filter has hard reset after 2s\n            clearTimeout(this.filterTermTimeout);\n            this.filterTermTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.filterTerm = '';\n            }), 2000);\n            /** @type {?} */\n            const char = event.key;\n            this.filterTerm = this.filterTerm.concat(char);\n            /** @type {?} */\n            const index = this._textItems.findIndex((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => {\n                return new RegExp(`^${this.filterTerm.toLowerCase()}`).test(value.trim().toLowerCase());\n            }));\n            if (index !== -1) {\n                if (this.activeIndex !== -1) {\n                    this._items.toArray()[this.activeIndex].active = false;\n                }\n                this.activeIndex = index;\n                this._items.toArray()[this.activeIndex].active = true;\n                this.scrollToActive();\n            }\n        }\n        else if ([KeyCodes.BACKSPACE, KeyCodes.DELETE].includes(event.keyCode)) {\n            Helpers.swallowEvent(event);\n            // backspace, delete -- remove partial filters\n            clearTimeout(this.filterTermTimeout);\n            this.filterTermTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.filterTerm = '';\n            }), 2000);\n            this.filterTerm = this.filterTerm.slice(0, -1);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onOverlayKeyDown(event) {\n        if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.ENTER) {\n            Helpers.swallowEvent(event);\n            this.closePanel();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    scrollToActive() {\n        /** @type {?} */\n        const container = this.overlay.overlayRef.overlayElement.querySelector('.dropdown-container');\n        /** @type {?} */\n        const item = this._items.toArray()[this.activeIndex];\n        if (container && item) {\n            container.scrollTop = item.element.nativeElement.offsetTop;\n        }\n    }\n}\nNovoDropdownElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-dropdown',\n                template: `\n    <ng-content select=\"button\" #trigger></ng-content>\n    <novo-overlay-template [parent]=\"element\" [width]=\"width\" [position]=\"side\" [scrollStrategy]=\"scrollStrategy\">\n      <div\n        class=\"dropdown-container {{ containerClass }}\"\n        [style.height.px]=\"height\"\n        [class.has-height]=\"!!height\"\n        (keydown)=\"onOverlayKeyDown($event)\"\n      >\n        <ng-content></ng-content>\n      </div>\n    </novo-overlay-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoDropdownElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNovoDropdownElement.propDecorators = {\n    parentScrollSelector: [{ type: Input }],\n    parentScrollAction: [{ type: Input }],\n    containerClass: [{ type: Input }],\n    side: [{ type: Input }],\n    scrollStrategy: [{ type: Input }],\n    height: [{ type: Input }],\n    width: [{ type: Input }],\n    appendToBody: [{ type: Input }],\n    toggled: [{ type: Output }],\n    overlay: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: false },] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDropdownElement.prototype.parentScrollSelector;\n    /** @type {?} */\n    NovoDropdownElement.prototype.parentScrollAction;\n    /** @type {?} */\n    NovoDropdownElement.prototype.containerClass;\n    /** @type {?} */\n    NovoDropdownElement.prototype.side;\n    /** @type {?} */\n    NovoDropdownElement.prototype.scrollStrategy;\n    /** @type {?} */\n    NovoDropdownElement.prototype.height;\n    /** @type {?} */\n    NovoDropdownElement.prototype.width;\n    /** @type {?} */\n    NovoDropdownElement.prototype.appendToBody;\n    /** @type {?} */\n    NovoDropdownElement.prototype.toggled;\n    /** @type {?} */\n    NovoDropdownElement.prototype.overlay;\n    /** @type {?} */\n    NovoDropdownElement.prototype.clickHandler;\n    /** @type {?} */\n    NovoDropdownElement.prototype.closeHandler;\n    /** @type {?} */\n    NovoDropdownElement.prototype.parentScrollElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype._textItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype.activeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype.filterTerm;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype.filterTermTimeout;\n    /** @type {?} */\n    NovoDropdownElement.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownElement.prototype.ref;\n}\nclass NovoItemElement {\n    /**\n     * @param {?} dropdown\n     * @param {?} element\n     */\n    constructor(dropdown, element) {\n        this.dropdown = dropdown;\n        this.element = element;\n        this.keepOpen = false;\n        this.action = new EventEmitter();\n        this.active = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        // Poor man's disable\n        if (!this.disabled) {\n            // Close if keepOpen is false\n            if (!this.keepOpen) {\n                this.dropdown.closePanel();\n            }\n            // Emit the action\n            this.action.emit({ originalEvent: event });\n        }\n    }\n}\nNovoItemElement.decorators = [\n    { type: Component, args: [{\n                selector: 'item',\n                template: '<ng-content></ng-content>',\n                host: {\n                    '[class.disabled]': 'disabled',\n                    '[class.active]': 'active',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoItemElement.ctorParameters = () => [\n    { type: NovoDropdownElement },\n    { type: ElementRef }\n];\nNovoItemElement.propDecorators = {\n    disabled: [{ type: Input }],\n    keepOpen: [{ type: Input }],\n    action: [{ type: Output }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoItemElement.prototype.disabled;\n    /** @type {?} */\n    NovoItemElement.prototype.keepOpen;\n    /** @type {?} */\n    NovoItemElement.prototype.action;\n    /** @type {?} */\n    NovoItemElement.prototype.active;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoItemElement.prototype.dropdown;\n    /** @type {?} */\n    NovoItemElement.prototype.element;\n}\nclass NovoDropdownListElement {\n    /**\n     * @param {?} dropdown\n     */\n    constructor(dropdown) {\n        this.dropdown = dropdown;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.dropdown.items = this.items;\n        this.items.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.dropdown.items = this.items;\n        }));\n    }\n}\nNovoDropdownListElement.decorators = [\n    { type: Component, args: [{\n                selector: 'list',\n                template: '<ng-content></ng-content>'\n            }] }\n];\n/** @nocollapse */\nNovoDropdownListElement.ctorParameters = () => [\n    { type: NovoDropdownElement }\n];\nNovoDropdownListElement.propDecorators = {\n    items: [{ type: ContentChildren, args: [NovoItemElement,] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDropdownListElement.prototype.items;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDropdownListElement.prototype.dropdown;\n}\nclass NovoDropDownItemHeaderElement {\n}\nNovoDropDownItemHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'dropdown-item-header',\n                template: '<ng-content></ng-content>'\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/sort-filter/sort-filter.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableSortFilter {\n    /**\n     * @param {?} state\n     */\n    constructor(state) {\n        this.state = state;\n    }\n    /**\n     * @param {?} id\n     * @param {?} type\n     * @param {?} value\n     * @param {?} transform\n     * @param {?=} allowMultipleFilters\n     * @param {?=} selectedOption\n     * @return {?}\n     */\n    filter(id, type, value, transform, allowMultipleFilters = false, selectedOption) {\n        /** @type {?} */\n        let filter;\n        if (allowMultipleFilters) {\n            filter = this.resolveMultiFilter(id, type, value, transform, selectedOption);\n        }\n        else {\n            if (!Helpers.isBlank(value)) {\n                filter = Object.assign({ id, type, value, transform }, (selectedOption && { selectedOption }));\n            }\n            else {\n                filter = undefined;\n            }\n        }\n        this.state.filter = filter;\n        this.state.reset(false, true);\n        this.state.updates.next({ filter, sort: this.state.sort });\n        this.state.onSortFilterChange();\n    }\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @param {?} transform\n     * @return {?}\n     */\n    sort(id, value, transform) {\n        /** @type {?} */\n        const sort = { id, value, transform };\n        this.state.sort = sort;\n        this.state.reset(false, true);\n        this.state.updates.next({ sort, filter: this.state.filter });\n        this.state.onSortFilterChange();\n    }\n    /**\n     * @param {?} id\n     * @param {?} type\n     * @param {?} value\n     * @param {?} transform\n     * @param {?} selectedOption\n     * @return {?}\n     */\n    resolveMultiFilter(id, type, value, transform, selectedOption) {\n        /** @type {?} */\n        let filter;\n        filter = Helpers.convertToArray(this.state.filter);\n        /** @type {?} */\n        const filterIndex = filter.findIndex((/**\n         * @param {?} aFilter\n         * @return {?}\n         */\n        (aFilter) => aFilter && aFilter.id === id));\n        if (filterIndex > -1) {\n            filter.splice(filterIndex, 1);\n        }\n        if (!Helpers.isBlank(value)) {\n            filter = [...filter, Object.assign({ id, type, value, transform }, (selectedOption && { selectedOption }))];\n        }\n        if (filter.length < 1) {\n            filter = undefined;\n        }\n        return filter;\n    }\n}\nNovoDataTableSortFilter.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoDataTableSortFilter]',\n            },] }\n];\n/** @nocollapse */\nNovoDataTableSortFilter.ctorParameters = () => [\n    { type: DataTableState }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableSortFilter.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cell-headers/data-table-header-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableCellHeader {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} labels\n     * @param {?} state\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} _sort\n     * @param {?} _cdkColumnDef\n     */\n    constructor(changeDetectorRef, labels, state, renderer, elementRef, _sort, _cdkColumnDef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.labels = labels;\n        this.state = state;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this._sort = _sort;\n        this._cdkColumnDef = _cdkColumnDef;\n        this.allowMultipleFilters = false;\n        this.icon = 'sortable';\n        this.filterActive = false;\n        this.sortActive = false;\n        this.showCustomRange = false;\n        this.multiSelect = false;\n        this.multiSelectedOptions = [];\n        this.multiSelectedOptionIsHidden = [];\n        this.optionFilter = '';\n        this.error = false;\n        this.subscriptions = [];\n        this._rerenderSubscription = state.updates.subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => this.checkSortFilterState(change)));\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    set column(column) {\n        this._column = column;\n        this.label = column.type === 'action' ? '' : column.label;\n        this.labelIcon = column.labelIcon;\n        this.config = {\n            sortable: !!column.sortable,\n            filterable: !!column.filterable,\n            resizable: !!column.resizable,\n        };\n        this.resizable = this.config.resizable;\n        /** @type {?} */\n        const transforms = {};\n        if (column.filterable && Helpers.isObject(column.filterable)) {\n            this.config.filterConfig = (/** @type {?} */ (column.filterable));\n            if (!this.config.filterConfig.type) {\n                this.config.filterConfig = { type: 'text' };\n            }\n            if (((/** @type {?} */ (column.filterable))).transform) {\n                transforms.filter = ((/** @type {?} */ (column.filterable))).transform;\n            }\n        }\n        else {\n            this.config.filterConfig = { type: 'text' };\n        }\n        if (column.sortable && Helpers.isObject(column.sortable)) {\n            if (((/** @type {?} */ (column.sortable))).transform) {\n                transforms.sort = ((/** @type {?} */ (column.sortable))).transform;\n            }\n        }\n        if (this.config.filterConfig.type === 'date' && !this.config.filterConfig.options) {\n            this.config.filterConfig.options = this.getDefaultDateFilterOptions();\n        }\n        this.config.transforms = transforms;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._cdkColumnDef) {\n            this.id = this._cdkColumnDef.name;\n        }\n        this.setupFilterOptions();\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    setupFilterOptions() {\n        this.checkSortFilterState({ filter: this.state.filter, sort: this.state.sort }, true);\n        this.multiSelect = this.config.filterConfig && this.config.filterConfig.type ? this.config.filterConfig.type === 'multi-select' : false;\n        if (this.multiSelect) {\n            this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n        this.subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        (subscription) => {\n            subscription.unsubscribe();\n        }));\n    }\n    /**\n     * @param {?} sortFilterState\n     * @param {?=} initialConfig\n     * @return {?}\n     */\n    checkSortFilterState(sortFilterState, initialConfig = false) {\n        if (sortFilterState.sort && sortFilterState.sort.id === this.id) {\n            this.icon = `sort-${sortFilterState.sort.value}`;\n            this.sortActive = true;\n        }\n        else {\n            this.icon = 'sortable';\n            this.sortActive = false;\n        }\n        /** @type {?} */\n        const tableFilter = Helpers.convertToArray(sortFilterState.filter);\n        /** @type {?} */\n        const thisFilter = tableFilter.find((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => filter && filter.id === this.id));\n        if (thisFilter) {\n            this.filterActive = true;\n            if (initialConfig && thisFilter.type === 'date' && thisFilter.selectedOption) {\n                this.activeDateFilter = thisFilter.selectedOption.label || this.labels.customDateRange;\n            }\n            this.filter = thisFilter.value;\n        }\n        else {\n            this.filterActive = false;\n            this.filter = undefined;\n            this.activeDateFilter = undefined;\n            this.multiSelectedOptions = [];\n        }\n        if (this.defaultSort && this.id === this.defaultSort.id) {\n            this.icon = `sort-${this.defaultSort.value}`;\n            this.sortActive = true;\n        }\n        this.multiSelect = this.config.filterConfig && this.config.filterConfig.type ? this.config.filterConfig.type === 'multi-select' : false;\n        if (this.multiSelect) {\n            this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n            if (this.config.filterConfig.options) {\n                if (typeof this.config.filterConfig.options[0] === 'string') {\n                    this.multiSelectedOptionIsHidden = ((/** @type {?} */ (this.config.filterConfig.options))).map((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    (option) => ({ option, hidden: false })));\n                }\n                else {\n                    this.multiSelectedOptionIsHidden = ((/** @type {?} */ (this.config.filterConfig.options))).map((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    (option) => ({\n                        option,\n                        hidden: false,\n                    })));\n                }\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * @param {?} option\n     * @param {?} optionsList\n     * @return {?}\n     */\n    isSelected(option, optionsList) {\n        if (optionsList) {\n            /** @type {?} */\n            const optionValue = option.hasOwnProperty('value') ? option.value : option;\n            /** @type {?} */\n            const found = optionsList.find((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => this.optionPresentCheck(item, optionValue)));\n            return found !== undefined;\n        }\n        return false;\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n    toggleSelection(option) {\n        /** @type {?} */\n        const optionValue = option.hasOwnProperty('value') ? option.value : option;\n        /** @type {?} */\n        const optionIndex = this.multiSelectedOptions.findIndex((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => this.optionPresentCheck(item, optionValue)));\n        this.error = false;\n        if (optionIndex > -1) {\n            this.multiSelectedOptions.splice(optionIndex, 1);\n            if (this.optionFilter &&\n                !this.getOptionText(option)\n                    .toLowerCase()\n                    .startsWith(this.optionFilter.toLowerCase())) {\n                this.multiSelectedOptionIsHidden[this.multiSelectedOptionIsHidden.findIndex((/**\n                 * @param {?} record\n                 * @return {?}\n                 */\n                (record) => record.option === option))].hidden = true;\n            }\n        }\n        else {\n            this.multiSelectedOptions.push(optionValue);\n        }\n    }\n    /**\n     * @param {?} item\n     * @param {?} optionValue\n     * @return {?}\n     */\n    optionPresentCheck(item, optionValue) {\n        if (item.hasOwnProperty('value')) {\n            return item.value === optionValue;\n        }\n        else {\n            return item === optionValue;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n        this.dropdown.closePanel();\n        this.clearOptionFilter();\n    }\n    /**\n     * @return {?}\n     */\n    filterMultiSelect() {\n        if (this.multiSelectedOptions.length === 0 && !this.filter) {\n            this.multiSelectHasVisibleOptions() && this.dropdown ? (this.error = true) : null;\n        }\n        else {\n            this.clearOptionFilter();\n            /** @type {?} */\n            const actualFilter = this.multiSelectedOptions.length > 0 ? [...this.multiSelectedOptions] : undefined;\n            this.filterData(actualFilter);\n            this.dropdown.closePanel();\n        }\n    }\n    /**\n     * @param {?} optionFilter\n     * @return {?}\n     */\n    multiSelectOptionFilter(optionFilter) {\n        this.multiSelectedOptionIsHidden.forEach((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            if (record.option) {\n                record.hidden = !(this.getOptionText(record.option)\n                    .toLowerCase()\n                    .startsWith(optionFilter.toLowerCase()) || this.isSelected(record.option, this.multiSelectedOptions));\n            }\n        }));\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n    multiSelectOptionIsHidden(option) {\n        return this.multiSelectedOptionIsHidden.find((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => record.option === option)).hidden;\n    }\n    /**\n     * @return {?}\n     */\n    multiSelectHasVisibleOptions() {\n        return this.multiSelectedOptionIsHidden.some((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => !record.hidden));\n    }\n    /**\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    getOptionText(option) {\n        if (typeof option !== 'object') {\n            return option.toString();\n        }\n        else {\n            /** @type {?} */\n            const opt = (/** @type {?} */ (option));\n            return (opt.label.length > 0 ? opt.label : opt.value).toString();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    multiSelectOptionFilterHandleKeydown(event) {\n        if (this.multiSelect) {\n            this.error = false;\n            if (this.dropdown.panelOpen && event.keyCode === KeyCodes.ESC) {\n                // escape = clear text box and close\n                Helpers.swallowEvent(event);\n                this.clearOptionFilter();\n                this.dropdown.closePanel();\n            }\n            else if (event.keyCode === KeyCodes.ENTER) {\n                Helpers.swallowEvent(event);\n                this.filterMultiSelect();\n            }\n            else if ((event.keyCode >= 65 && event.keyCode <= 90) ||\n                (event.keyCode >= 96 && event.keyCode <= 105) ||\n                (event.keyCode >= 48 && event.keyCode <= 57)) {\n                this.optionFilterInput.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    clearOptionFilter() {\n        this.error = false;\n        if (this.optionFilter.length > 0) {\n            this.optionFilter = '';\n            this.multiSelectedOptionIsHidden.forEach((/**\n             * @param {?} record\n             * @return {?}\n             */\n            (record) => {\n                record.hidden = false;\n            }));\n        }\n    }\n    /**\n     * @param {?} mouseDownEvent\n     * @return {?}\n     */\n    startResize(mouseDownEvent) {\n        mouseDownEvent.preventDefault();\n        /** @type {?} */\n        const minimumWidth = 60 + (this.config.filterable ? 30 : 0) + (this.config.sortable ? 30 : 0);\n        /** @type {?} */\n        const startingWidth = this.elementRef.nativeElement.getBoundingClientRect().width;\n        /** @type {?} */\n        const mouseMoveSubscription = fromEvent(window.document, 'mousemove').subscribe((/**\n         * @param {?} middleMouseEvent\n         * @return {?}\n         */\n        (middleMouseEvent) => {\n            /** @type {?} */\n            const differenceWidth = middleMouseEvent.clientX - mouseDownEvent.clientX;\n            /** @type {?} */\n            let width = startingWidth + differenceWidth;\n            if (width < minimumWidth) {\n                width = minimumWidth;\n            }\n            this._column.width = width;\n            this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this._column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this._column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this._column.width}px`);\n            this.changeDetectorRef.markForCheck();\n            this.resized.next(this._column);\n        }));\n        /** @type {?} */\n        const mouseUpSubscription = fromEvent(window.document, 'mouseup').subscribe((/**\n         * @return {?}\n         */\n        () => {\n            mouseUpSubscription.unsubscribe();\n            mouseMoveSubscription.unsubscribe();\n            this.changeDetectorRef.markForCheck();\n        }));\n        this.subscriptions.push(mouseMoveSubscription);\n        this.subscriptions.push(mouseUpSubscription);\n    }\n    /**\n     * @param {?} event\n     * @param {?} value\n     * @return {?}\n     */\n    toggleCustomRange(event, value) {\n        Helpers.swallowEvent(event);\n        this.showCustomRange = value;\n        this.changeDetectorRef.markForCheck();\n        this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n    }\n    /**\n     * @return {?}\n     */\n    focusInput() {\n        if (this.filterInput && this.filterInput.nativeElement) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.filterInput.nativeElement.focus()), 0);\n        }\n        if (this.multiSelect && this.dropdown) {\n            this.dropdown.onKeyDown = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                this.multiSelectOptionFilterHandleKeydown(event);\n            });\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.optionFilterInput.nativeElement.focus()), 0);\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    sort() {\n        if (this.changeTimeout) {\n            clearTimeout(this.changeTimeout);\n        }\n        this.changeTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.direction = this.getNextSortDirection(this.direction);\n            this._sort.sort(this.id, this.direction, this.config.transforms.sort);\n            this.changeDetectorRef.markForCheck();\n        }), 300);\n    }\n    /**\n     * @param {?=} filter\n     * @return {?}\n     */\n    filterData(filter) {\n        /** @type {?} */\n        let actualFilter = NovoDataTableFilterUtils.constructFilter(filter, this.config.filterConfig.type, this.multiSelect);\n        /** @type {?} */\n        const selectedOption = this.config.filterConfig.type === 'date' && filter ? filter : undefined;\n        if (this.changeTimeout) {\n            clearTimeout(this.changeTimeout);\n        }\n        this.changeTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (actualFilter === '') {\n                actualFilter = undefined;\n            }\n            this._sort.filter(this.id, this.config.filterConfig.type, actualFilter, this.config.transforms.filter, this.allowMultipleFilters, selectedOption);\n            this.changeDetectorRef.markForCheck();\n        }), 300);\n    }\n    /**\n     * @return {?}\n     */\n    clearFilter() {\n        this.filter = undefined;\n        this.multiSelectedOptions = [];\n        this.activeDateFilter = undefined;\n        this.filterData(undefined);\n        this.clearOptionFilter();\n        this.dropdown.closePanel();\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    getNextSortDirection(direction) {\n        if (!direction) {\n            return 'asc';\n        }\n        if (direction === 'asc') {\n            return 'desc';\n        }\n        return 'asc';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDefaultDateFilterOptions() {\n        /** @type {?} */\n        const opts = [\n            { label: this.labels.past1Day, min: -1, max: 0 },\n            { label: this.labels.past7Days, min: -7, max: 0 },\n            { label: this.labels.past30Days, min: -30, max: 0 },\n            { label: this.labels.past90Days, min: -90, max: 0 },\n            { label: this.labels.past1Year, min: -366, max: 0 },\n            { label: this.labels.next1Day, min: 0, max: 1 },\n            { label: this.labels.next7Days, min: 0, max: 7 },\n            { label: this.labels.next30Days, min: 0, max: 30 },\n            { label: this.labels.next90Days, min: 0, max: 90 },\n            { label: this.labels.next1Year, min: 0, max: 366 },\n        ];\n        return opts;\n    }\n}\nNovoDataTableCellHeader.decorators = [\n    { type: Component, args: [{\n                selector: '[novo-data-table-cell-config]',\n                template: `\n    <i class=\"bhi-{{ labelIcon }} label-icon\" *ngIf=\"labelIcon\" data-automation-id=\"novo-data-table-header-icon\"></i>\n    <label data-automation-id=\"novo-data-table-label\">{{ label }}</label>\n    <div>\n      <button\n        *ngIf=\"config.sortable\"\n        tooltipPosition=\"right\"\n        [tooltip]=\"labels.sort\"\n        theme=\"icon\"\n        [icon]=\"icon\"\n        (click)=\"sort()\"\n        [class.active]=\"sortActive\"\n        data-automation-id=\"novo-data-table-sort\"\n        [attr.data-feature-id]=\"'novo-data-table-sort-' + this.id\"\n      ></button>\n      <novo-dropdown\n        *ngIf=\"config.filterable\"\n        side=\"right\"\n        parentScrollSelector=\".novo-data-table-container\"\n        containerClass=\"data-table-dropdown\"\n        data-automation-id=\"novo-data-table-filter\"\n      >\n        <button\n          type=\"button\"\n          theme=\"icon\"\n          icon=\"filter\"\n          [class.active]=\"filterActive\"\n          (click)=\"focusInput()\"\n          tooltipPosition=\"right\"\n          [tooltip]=\"labels.filters\"\n          [attr.data-feature-id]=\"'novo-data-table-filter-' + this.id\"\n        ></button>\n        <div class=\"header\">\n          <span>{{ labels.filters }}</span>\n          <button\n            theme=\"dialogue\"\n            color=\"negative\"\n            icon=\"times\"\n            (click)=\"clearFilter()\"\n            *ngIf=\"filter !== null && filter !== undefined && filter !== ''\"\n            data-automation-id=\"novo-data-table-filter-clear\"\n          >\n            {{ labels.clear }}\n          </button>\n        </div>\n        <ng-container [ngSwitch]=\"config.filterConfig.type\">\n          <list *ngSwitchCase=\"'date'\">\n            <ng-container *ngIf=\"!showCustomRange\">\n              <item\n                [class.active]=\"activeDateFilter === option.label\"\n                *ngFor=\"let option of config.filterConfig.options\"\n                (click)=\"filterData(option)\"\n                [attr.data-automation-id]=\"'novo-data-table-filter-' + option.label\"\n              >\n                {{ option.label }} <i class=\"bhi-check\" *ngIf=\"activeDateFilter === option.label\"></i>\n              </item>\n            </ng-container>\n            <item\n              [class.active]=\"labels.customDateRange === activeDateFilter\"\n              (click)=\"toggleCustomRange($event, true)\"\n              *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\"\n              [keepOpen]=\"true\"\n            >\n              {{ labels.customDateRange }} <i class=\"bhi-check\" *ngIf=\"labels.customDateRange === activeDateFilter\"></i>\n            </item>\n            <div class=\"calendar-container\" *ngIf=\"showCustomRange\">\n              <div (click)=\"toggleCustomRange($event, false)\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n              <novo-date-picker (onSelect)=\"filterData($event)\" [(ngModel)]=\"filter\" range=\"true\"></novo-date-picker>\n            </div>\n          </list>\n          <list *ngSwitchCase=\"'select'\">\n            <item\n              [class.active]=\"filter === option\"\n              *ngFor=\"let option of config.filterConfig.options\"\n              (click)=\"filterData(option)\"\n              [attr.data-automation-id]=\"'novo-data-table-filter-' + (option?.label || option)\"\n            >\n              <span>{{ option?.label || option }}</span>\n              <i class=\"bhi-check\" *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"></i>\n            </item>\n          </list>\n          <list *ngSwitchCase=\"'multi-select'\">\n            <div class=\"dropdown-list-filter\" (keydown)=\"multiSelectOptionFilterHandleKeydown($event)\">\n              <item class=\"filter-search\" keepOpen=\"true\">\n                <input\n                  [(ngModel)]=\"optionFilter\"\n                  (ngModelChange)=\"multiSelectOptionFilter($event)\"\n                  #optionFilterInput\n                  data-automation-id=\"novo-data-table-multi-select-option-filter-input\"\n                />\n                <i class=\"bhi-search\"></i>\n                <span class=\"error-text\" [hidden]=\"!error || !multiSelectHasVisibleOptions()\">{{ labels.selectFilterOptions }}</span>\n              </item>\n            </div>\n            <div class=\"dropdown-list-options\">\n              <item\n                *ngFor=\"let option of config.filterConfig.options\"\n                [hidden]=\"multiSelectOptionIsHidden(option)\"\n                (click)=\"toggleSelection(option)\"\n                [attr.data-automation-id]=\"'novo-data-table-filter-' + (option?.label || option)\"\n                [keepOpen]=\"true\"\n              >\n                <span>{{ option?.label || option }}</span>\n                <i\n                  [class.bhi-checkbox-empty]=\"!isSelected(option, multiSelectedOptions)\"\n                  [class.bhi-checkbox-filled]=\"isSelected(option, multiSelectedOptions)\"\n                ></i>\n              </item>\n            </div>\n            <p class=\"filter-null-results\" [hidden]=\"multiSelectHasVisibleOptions()\">{{ labels.pickerEmpty }}</p>\n          </list>\n          <list *ngSwitchCase=\"'custom'\">\n            <item class=\"filter-search\" keepOpen=\"true\">\n              <ng-container *ngTemplateOutlet=\"filterTemplate; context: { $implicit: config }\"></ng-container>\n            </item>\n          </list>\n          <list *ngSwitchDefault>\n            <item class=\"filter-search\" keepOpen=\"true\">\n              <input\n                [type]=\"config.filterConfig.type\"\n                [(ngModel)]=\"filter\"\n                (ngModelChange)=\"filterData($event)\"\n                #filterInput\n                data-automation-id=\"novo-data-table-filter-input\"\n              />\n            </item>\n          </list>\n        </ng-container>\n        <div class=\"footer\" *ngIf=\"multiSelect\">\n          <button theme=\"dialogue\" color=\"dark\" (click)=\"cancel()\" data-automation-id=\"novo-data-table-multi-select-cancel\">\n            {{ labels.cancel }}\n          </button>\n          <button theme=\"dialogue\" color=\"positive\" (click)=\"filterMultiSelect()\" data-automation-id=\"novo-data-table-multi-select-filter\">\n            {{ labels.filters }}\n          </button>\n        </div>\n      </novo-dropdown>\n    </div>\n    <div class=\"spacer\"></div>\n    <div class=\"data-table-header-resizable\" *ngIf=\"config.resizable\"><span (mousedown)=\"startResize($event)\">&nbsp;</span></div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableCellHeader.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoLabelService },\n    { type: DataTableState },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NovoDataTableSortFilter, decorators: [{ type: Optional }] },\n    { type: CdkColumnDef, decorators: [{ type: Optional }] }\n];\nNovoDataTableCellHeader.propDecorators = {\n    filterInput: [{ type: ViewChild, args: ['filterInput', { static: false },] }],\n    dropdown: [{ type: ViewChild, args: [NovoDropdownElement, { static: false },] }],\n    optionFilterInput: [{ type: ViewChild, args: ['optionFilterInput', { static: false },] }],\n    defaultSort: [{ type: Input }],\n    allowMultipleFilters: [{ type: Input }],\n    resized: [{ type: Input }],\n    filterTemplate: [{ type: Input }],\n    resizable: [{ type: HostBinding, args: ['class.resizable',] }],\n    column: [{ type: Input, args: ['novo-data-table-cell-config',] }],\n    multiSelectOptionFilterHandleKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.filterInput;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.dropdown;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.optionFilterInput;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.defaultSort;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.allowMultipleFilters;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.resized;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.filterTemplate;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.resizable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.changeTimeout;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.label;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.icon;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.labelIcon;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.id;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.filter;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.direction;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.filterActive;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.sortActive;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.showCustomRange;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.activeDateFilter;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.config;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.multiSelect;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.multiSelectedOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.multiSelectedOptionIsHidden;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.optionFilter;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.error;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.subscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype._column;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.changeDetectorRef;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCellHeader.prototype.elementRef;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype._sort;\n    /** @type {?} */\n    NovoDataTableCellHeader.prototype._cdkColumnDef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTable {\n    /**\n     * @param {?} labels\n     * @param {?} ref\n     * @param {?} state\n     */\n    constructor(labels, ref, state) {\n        this.labels = labels;\n        this.ref = ref;\n        this.state = state;\n        this.globalSearchHiddenClassToggle = false;\n        this.resized = new EventEmitter();\n        this.name = 'novo-data-table';\n        this.allowMultipleFilters = false;\n        this.rowIdentifier = 'id';\n        this.activeRowIdentifier = '';\n        // prettier-ignore\n        this.trackByFn = (/**\n         * @param {?} index\n         * @param {?} item\n         * @return {?}\n         */\n        (index, item) => item.id);\n        this.templates = {};\n        this.fixedHeader = false;\n        this._hideGlobalSearch = true;\n        this.preferencesChanged = new EventEmitter();\n        this.loading = true;\n        this.columnToTemplate = {};\n        this.columnsLoaded = false;\n        this.selection = new Set();\n        this.scrollLeft = 0;\n        this.expandable = false;\n        this.initialized = false;\n        this.scrollListenerHandler = this.scrollListener.bind(this);\n        this.sortFilterSubscription = this.state.sortFilterSource.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this.name !== 'novo-data-table') {\n                this.preferencesChanged.emit({ name: this.name, sort: event.sort, filter: event.filter, globalSearch: event.globalSearch });\n                this.performInteractions('change');\n            }\n            else {\n                notify('Must have [name] set on data-table to use preferences!');\n            }\n        }));\n        this.paginationSubscription = this.state.paginationSource.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this.name !== 'novo-data-table') {\n                if (event.isPageSizeChange) {\n                    this.preferencesChanged.emit({ name: this.name, pageSize: event.pageSize });\n                }\n            }\n            else {\n                notify('Must have [name] set on data-table to use preferences!');\n            }\n        }));\n        this.resetSubscription = this.state.resetSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.ref.detectChanges();\n            }), 300);\n        }));\n    }\n    /**\n     * @param {?} displayedColumns\n     * @return {?}\n     */\n    set displayedColumns(displayedColumns) {\n        if (this.displayedColumns && this.displayedColumns.length !== 0) {\n            if (this.name !== 'novo-data-table') {\n                this.preferencesChanged.emit({\n                    name: this.name,\n                    displayedColumns,\n                });\n            }\n            else {\n                notify('Must have [name] set on data-table to use preferences!');\n            }\n        }\n        this._disabledColumns = displayedColumns;\n        this.configureLastDisplayedColumn();\n        if (this.initialized) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.scrollListener();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get displayedColumns() {\n        return this._disabledColumns;\n    }\n    /**\n     * @param {?} service\n     * @return {?}\n     */\n    set dataTableService(service) {\n        this.loading = false;\n        if (!service) {\n            service = new StaticDataTableService([]);\n        }\n        this.dataSource = new DataTableSource(service, this.state, this.ref);\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} rows\n     * @return {?}\n     */\n    set rows(rows) {\n        this.loading = false;\n        /** @type {?} */\n        const service = new StaticDataTableService(rows);\n        this.dataSource = new DataTableSource(service, this.state, this.ref);\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} outsideFilter\n     * @return {?}\n     */\n    set outsideFilter(outsideFilter) {\n        // Unsubscribe\n        if (this.outsideFilterSubscription) {\n            this.outsideFilterSubscription.unsubscribe();\n        }\n        if (outsideFilter) {\n            // Re-subscribe\n            this.outsideFilterSubscription = outsideFilter.subscribe((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => {\n                this.state.outsideFilter = filter;\n                this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n                this.ref.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @param {?} refreshSubject\n     * @return {?}\n     */\n    set refreshSubject(refreshSubject) {\n        // Unsubscribe\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n        if (refreshSubject) {\n            // Re-subscribe\n            this.refreshSubscription = refreshSubject.subscribe((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => {\n                this.state.isForceRefresh = true;\n                this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n                this.ref.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @param {?} columns\n     * @return {?}\n     */\n    set columns(columns) {\n        this._columns = columns;\n        this.configureColumns();\n        this.performInteractions('init');\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set customFilter(v) {\n        this._customFilter = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get customFilter() {\n        return this._customFilter;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set hasExandedRows(v) {\n        this._hasExandedRows = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get hasExandedRows() {\n        return this._hasExandedRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set forceShowHeader(v) {\n        this._forceShowHeader = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get forceShowHeader() {\n        return this._forceShowHeader;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set hideGlobalSearch(v) {\n        this._hideGlobalSearch = coerceBooleanProperty(v);\n        this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n    }\n    /**\n     * @return {?}\n     */\n    get hideGlobalSearch() {\n        return this._hideGlobalSearch;\n    }\n    /**\n     * @return {?}\n     */\n    get empty() {\n        return this.dataSource && this.dataSource.totallyEmpty;\n    }\n    /**\n     * @return {?}\n     */\n    get loadingClass() {\n        return this.loading || (this.dataSource && this.dataSource.loading);\n    }\n    /**\n     * @param {?} column\n     * @param {?} newOptions\n     * @return {?}\n     */\n    modifyCellHeaderMultiSelectFilterOptions(column, newOptions) {\n        /** @type {?} */\n        const header = this.cellHeaders.find((/**\n         * @param {?} cellHeader\n         * @return {?}\n         */\n        (cellHeader) => cellHeader.id === column));\n        if (header && header.config && header.config.filterConfig && header.config.filterConfig.options) {\n            /** @type {?} */\n            const filterOptions = header.config.filterConfig.options;\n            /** @type {?} */\n            const optionsToKeep = filterOptions.filter((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            (opt) => header.isSelected(opt, header.multiSelectedOptions) &&\n                !newOptions.find((/**\n                 * @param {?} newOpt\n                 * @return {?}\n                 */\n                (newOpt) => opt.value && newOpt.value && newOpt.value === opt.value))));\n            header.config.filterConfig.options = [...optionsToKeep, ...newOptions];\n        }\n        else {\n            header.config.filterConfig['options'] = newOptions;\n        }\n        header.setupFilterOptions();\n        header.changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.outsideFilterSubscription) {\n            this.outsideFilterSubscription.unsubscribe();\n        }\n        if (this.novoDataTableContainer) {\n            ((/** @type {?} */ (this.novoDataTableContainer.nativeElement))).removeEventListener('scroll', this.scrollListenerHandler);\n        }\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n        if (this.sortFilterSubscription) {\n            this.sortFilterSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.displayedColumns && this.displayedColumns.length) {\n            this.expandable = this.displayedColumns.includes('expand');\n        }\n        // Default templates defined here\n        this.defaultTemplates.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            // Only override if it doesn't already exist\n            if (!this.templates[item.getType()]) {\n                this.templates[item.getType()] = item.template;\n            }\n        }));\n        // Custom templates passed in\n        this.customTemplates.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            // Override anything that is custom and in HTML\n            this.templates[item.getType()] = item.template;\n        }));\n        // Load columns\n        this.configureColumns();\n        // State\n        if (this.paginationOptions && !this.paginationOptions.page) {\n            this.paginationOptions.page = 0;\n        }\n        if (this.paginationOptions && !this.paginationOptions.pageSize) {\n            this.paginationOptions.pageSize = 50;\n        }\n        if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n            this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n        }\n        this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n        this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n        // Scrolling inside table\n        ((/** @type {?} */ (this.novoDataTableContainer.nativeElement))).addEventListener('scroll', this.scrollListenerHandler);\n        this.initialized = true;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    onSearchChange(term) {\n        this.state.globalSearch = term;\n        this.state.reset(false, true);\n        this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n    }\n    /**\n     * @param {?} index\n     * @param {?} item\n     * @return {?}\n     */\n    trackColumnsBy(index, item) {\n        return item.id;\n    }\n    /**\n     * @param {?} check\n     * @param {?} row\n     * @return {?}\n     */\n    isDisabled(check, row) {\n        if (check.disabled === true) {\n            return true;\n        }\n        if (check.disabledFunc) {\n            return check.disabledFunc(row);\n        }\n        return false;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    isExpanded(row) {\n        if (!row) {\n            return false;\n        }\n        return this.state.expandedRows.has(`${row[this.rowIdentifier]}`);\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    expandRow(row) {\n        /** @type {?} */\n        const expanded = this.isExpanded(row);\n        if (expanded) {\n            this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n        }\n        else {\n            this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n        }\n        this.state.onExpandChange(((/** @type {?} */ (((/** @type {?} */ (row)))))).id);\n    }\n    /**\n     * @param {?} expand\n     * @return {?}\n     */\n    expandRows(expand) {\n        (this.dataSource.data || []).forEach((/**\n         * @param {?} row\n         * @return {?}\n         */\n        (row) => {\n            if (!expand) {\n                this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n            }\n            else {\n                this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n            }\n        }));\n        this.state.onExpandChange();\n    }\n    /**\n     * @return {?}\n     */\n    allCurrentRowsExpanded() {\n        for (let i = 0; i < (this.dataSource.data || []).length; i++) {\n            if (!this.isExpanded((this.dataSource.data || [])[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    isSelected(row) {\n        if (!row) {\n            return false;\n        }\n        return this.state.selectedRows.has(`${row[this.rowIdentifier]}`);\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    selectRow(row) {\n        /** @type {?} */\n        const selected = this.isSelected(row);\n        if (selected) {\n            this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n        }\n        else {\n            this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n        }\n        this.state.onSelectionChange();\n    }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    selectRows(selected) {\n        (this.dataSource.data || []).forEach((/**\n         * @param {?} row\n         * @return {?}\n         */\n        (row) => {\n            if (!selected) {\n                this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n            }\n            else {\n                this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n            }\n        }));\n        this.state.onSelectionChange();\n    }\n    /**\n     * @return {?}\n     */\n    allCurrentRowsSelected() {\n        for (let i = 0; i < (this.dataSource.data || []).length; i++) {\n            if (!this.isSelected((this.dataSource.data || [])[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    configureLastDisplayedColumn() {\n        if (this.columns && this.displayedColumns && 0 !== this.columns.length && 0 !== this.displayedColumns.length) {\n            this.columns.forEach((/**\n             * @param {?} column\n             * @return {?}\n             */\n            (column) => {\n                if (column.initialResizable) {\n                    column.resizable = column.initialResizable.resizable;\n                    column.width = column.initialResizable.width;\n                    column.initialResizable = undefined;\n                }\n            }));\n            /** @type {?} */\n            const resizableColumns = this.displayedColumns.filter((/**\n             * @param {?} name\n             * @return {?}\n             */\n            (name) => {\n                return (this.columns.findIndex((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                (column) => {\n                    return column.resizable && column.id === name;\n                })) !== -1);\n            }));\n            if (resizableColumns && resizableColumns.length > 0) {\n                /** @type {?} */\n                const lastResizableColumn = this.columns.find((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                (column) => {\n                    return column.id === resizableColumns[resizableColumns.length - 1];\n                }));\n                lastResizableColumn.initialResizable = {\n                    resizable: lastResizableColumn.resizable,\n                    width: lastResizableColumn.width,\n                };\n                lastResizableColumn.width = undefined;\n                lastResizableColumn.resizable = false;\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    configureColumns() {\n        if (this.columns && this.columns.length !== 0 && Object.keys(this.templates).length !== 0) {\n            // Figure the column templates\n            this.columns.forEach((/**\n             * @param {?} column\n             * @return {?}\n             */\n            (column) => {\n                // Figure the template\n                /** @type {?} */\n                let templateName;\n                if (column.template) {\n                    // Pass it in as template\n                    templateName = column.template;\n                }\n                else if (!!this.templates[column.id]) {\n                    // Custom template for the column id\n                    templateName = column.id;\n                }\n                else {\n                    // Default to the defaulCellTemplate\n                    if (column.type === 'action') {\n                        if (column.action && column.action.options) {\n                            if (!column.action.icon) {\n                                column.action.icon = 'collapse';\n                            }\n                            templateName = 'dropdownCellTemplate';\n                        }\n                        else {\n                            templateName = 'buttonCellTemplate';\n                        }\n                    }\n                    else {\n                        if (column.type === 'link:tel' || column.type === 'link:mailto') {\n                            templateName = `${column.type.split(':')[1]}CellTemplate`;\n                        }\n                        else {\n                            templateName = `${column.type}CellTemplate`;\n                        }\n                    }\n                }\n                this.columnToTemplate[column.id] = this.templates[templateName];\n            }));\n            this.configureLastDisplayedColumn();\n            this.columnsLoaded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    scrollListener() {\n        /** @type {?} */\n        const target = (/** @type {?} */ (this.novoDataTableContainer.nativeElement));\n        /** @type {?} */\n        const left = target.scrollLeft;\n        if (left !== this.scrollLeft) {\n            this.scrollLeft = target.scrollLeft;\n        }\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    performInteractions(event) {\n        if (this.listInteractions) {\n            for (const column of this.columns) {\n                /** @type {?} */\n                const allListColumnInteractions = this.listInteractions[column.id];\n                /** @type {?} */\n                const listColumnInteraction = allListColumnInteractions && allListColumnInteractions.find((/**\n                 * @param {?} int\n                 * @return {?}\n                 */\n                (int) => int.event.includes(event)));\n                if (listColumnInteraction) {\n                    listColumnInteraction.script(this, column.id);\n                }\n            }\n        }\n    }\n}\nNovoDataTable.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table',\n                animations: [\n                    trigger('expand', [\n                        state('void', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\n                        state('*', style({ height: '*', visibility: 'visible' })),\n                        transition('void <=> *', animate('70ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n                    ]),\n                ],\n                template: `\n    <header\n      *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\"\n      [class.empty]=\"hideGlobalSearch && !paginationOptions && !templates['customActions']\"\n    >\n      <ng-container *ngTemplateOutlet=\"templates['customHeader']\"></ng-container>\n      <novo-search\n        alwaysOpen=\"true\"\n        (searchChanged)=\"onSearchChange($event)\"\n        [(ngModel)]=\"state.globalSearch\"\n        *ngIf=\"!hideGlobalSearch\"\n        [placeholder]=\"searchOptions?.placeholder\"\n        [hint]=\"searchOptions?.tooltip\"\n      >\n      </novo-search>\n      <novo-data-table-pagination\n        *ngIf=\"paginationOptions\"\n        [theme]=\"paginationOptions.theme\"\n        [length]=\"dataSource?.currentTotal\"\n        [page]=\"paginationOptions.page\"\n        [pageSize]=\"paginationOptions.pageSize\"\n        [pageSizeOptions]=\"paginationOptions.pageSizeOptions\"\n        [dataFeatureId]=\"paginatorDataFeatureId\"\n      >\n      </novo-data-table-pagination>\n      <div class=\"novo-data-table-actions\" *ngIf=\"templates['customActions']\">\n        <ng-container *ngTemplateOutlet=\"templates['customActions']\"></ng-container>\n      </div>\n    </header>\n    <div class=\"novo-data-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-data-table-loading\">\n      <novo-loading></novo-loading>\n    </div>\n    <div class=\"novo-data-table-outside-container\" [ngClass]=\"{ 'novo-data-table-outside-container-fixed': fixedHeader }\">\n      <div class=\"novo-data-table-custom-filter\" *ngIf=\"customFilter\">\n        <ng-container *ngTemplateOutlet=\"templates['customFilter']\"></ng-container>\n      </div>\n      <div\n        #novoDataTableContainer\n        class=\"novo-data-table-container\"\n        [ngClass]=\"{ 'novo-data-table-container-fixed': fixedHeader }\"\n        [class.empty-user-filtered]=\"dataSource?.currentlyEmpty && state.userFiltered\"\n        [class.empty]=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\"\n      >\n        <cdk-table\n          *ngIf=\"columns?.length > 0 && columnsLoaded && dataSource\"\n          [dataSource]=\"dataSource\"\n          [trackBy]=\"trackByFn\"\n          novoDataTableSortFilter\n          [class.expandable]=\"expandable\"\n          [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\"\n          [hidden]=\"dataSource?.totallyEmpty && !state.userFiltered\"\n        >\n          <ng-container cdkColumnDef=\"selection\">\n            <novo-data-table-checkbox-header-cell *cdkHeaderCellDef></novo-data-table-checkbox-header-cell>\n            <novo-data-table-checkbox-cell *cdkCellDef=\"let row; let i = index\" [row]=\"row\"></novo-data-table-checkbox-cell>\n          </ng-container>\n          <ng-container cdkColumnDef=\"expand\">\n            <novo-data-table-expand-header-cell *cdkHeaderCellDef></novo-data-table-expand-header-cell>\n            <novo-data-table-expand-cell *cdkCellDef=\"let row; let i = index\" [row]=\"row\"></novo-data-table-expand-cell>\n          </ng-container>\n          <ng-container *ngFor=\"let column of columns; trackBy: trackColumnsBy\" [cdkColumnDef]=\"column.id\">\n            <novo-data-table-header-cell\n              *cdkHeaderCellDef\n              [column]=\"column\"\n              [filterTemplate]=\"templates['column-filter-' + column.id]\"\n              [novo-data-table-cell-config]=\"column\"\n              [resized]=\"resized\"\n              [defaultSort]=\"defaultSort\"\n              [allowMultipleFilters]=\"allowMultipleFilters\"\n              [class.empty]=\"column?.type === 'action' && !column?.label\"\n              [class.button-header-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\"\n              [class.dropdown-header-cell]=\"column?.type === 'action' && column?.action?.options\"\n              [class.fixed-header]=\"fixedHeader\"\n            ></novo-data-table-header-cell>\n            <novo-data-table-cell\n              *cdkCellDef=\"let row\"\n              [resized]=\"resized\"\n              [column]=\"column\"\n              [row]=\"row\"\n              [template]=\"columnToTemplate[column.id]\"\n              [class.empty]=\"column?.type === 'action' && !column?.label\"\n              [class.button-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\"\n              [class.dropdown-cell]=\"column?.type === 'action' && column?.action?.options\"\n            ></novo-data-table-cell>\n          </ng-container>\n          <novo-data-table-header-row\n            *cdkHeaderRowDef=\"displayedColumns\"\n            [fixedHeader]=\"fixedHeader\"\n            data-automation-id=\"novo-data-table-header-row\"\n          ></novo-data-table-header-row>\n          <novo-data-table-row\n            *cdkRowDef=\"let row; columns: displayedColumns\"\n            [ngClass]=\"{ active: row[rowIdentifier] == activeRowIdentifier }\"\n            [novoDataTableExpand]=\"detailRowTemplate\"\n            [row]=\"row\"\n            [id]=\"name + '-' + row[rowIdentifier]\"\n            [dataAutomationId]=\"row[rowIdentifier]\"\n          ></novo-data-table-row>\n        </cdk-table>\n        <div class=\"novo-data-table-footer\" *ngIf=\"templates['footer']\">\n          <ng-container *ngTemplateOutlet=\"templates['footer']; context: { $implicit: columns, data: dataSource.data }\"></ng-container>\n        </div>\n        <div\n          class=\"novo-data-table-no-results-container\"\n          [style.left.px]=\"scrollLeft\"\n          *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\"\n        >\n          <div class=\"novo-data-table-empty-message\">\n            <ng-container *ngTemplateOutlet=\"templates['noResultsMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"novo-data-table-empty-container\"\n        *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\"\n      >\n        <div class=\"novo-data-table-empty-message\">\n          <ng-container *ngTemplateOutlet=\"templates['emptyMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n        </div>\n      </div>\n    </div>\n    <!-- DEFAULT CELL TEMPLATE -->\n    <ng-template novoTemplate=\"textCellTemplate\" let-row let-col=\"col\">\n      <span [style.width.px]=\"col?.width\" [style.min-width.px]=\"col?.width\" [style.max-width.px]=\"col?.width\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"dateCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableDateRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"datetimeCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableDateTimeRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"timeCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableTimeRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"currencyCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableCurrencyRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"bigdecimalCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableBigDecimalRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"numberCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableNumberRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"percentCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableNumberRenderer: col:true }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"linkCellTemplate\" let-row let-col=\"col\">\n      <a\n        [attr.data-feature-id]=\"col?.attributes?.dataFeatureId\"\n        (click)=\"col.handlers?.click({ originalEvent: $event, row: row })\"\n        [style.width.px]=\"col?.width\"\n        [style.min-width.px]=\"col?.width\"\n        [style.max-width.px]=\"col?.width\"\n        >{{ row[col.id] | dataTableInterpolate: col }}</a\n      >\n    </ng-template>\n    <ng-template novoTemplate=\"telCellTemplate\" let-row let-col=\"col\">\n      <a href=\"tel:{{ row[col.id] | dataTableInterpolate: col }}\" [target]=\"col?.attributes?.target\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"mailtoCellTemplate\" let-row let-col=\"col\">\n      <a href=\"mailto:{{ row[col.id] | dataTableInterpolate: col }}\" [target]=\"col?.attributes?.target\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"buttonCellTemplate\" let-row let-col=\"col\">\n      <p [tooltip]=\"col?.action?.tooltip\" tooltipPosition=\"right\" [attr.data-feature-id]=\"col?.attributes?.dataFeatureId\">\n        <i\n          class=\"bhi-{{ col?.action?.icon }} data-table-icon\"\n          (click)=\"col.handlers?.click({ originalEvent: $event, row: row })\"\n          [class.disabled]=\"isDisabled(col, row)\"\n        ></i>\n      </p>\n    </ng-template>\n    <ng-template novoTemplate=\"dropdownCellTemplate\" let-row let-col=\"col\">\n      <novo-dropdown parentScrollSelector=\".novo-data-table-container\" containerClass=\"novo-data-table-dropdown\">\n        <button type=\"button\" theme=\"dialogue\" [icon]=\"col.action.icon\" inverse>{{ col.label }}</button>\n        <list>\n          <item\n            *ngFor=\"let option of col?.action?.options\"\n            (action)=\"option.handlers.click({ originalEvent: $event?.originalEvent, row: row })\"\n            [disabled]=\"isDisabled(option, row)\"\n          >\n            <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n          </item>\n        </list>\n      </novo-dropdown>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultNoResultsMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultEmptyMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"expandedRow\"> You did not provide an \"expandedRow\" template! </ng-template>\n    <ng-template #detailRowTemplate let-row>\n      <div class=\"novo-data-table-detail-row\" [@expand] style=\"overflow: hidden\">\n        <ng-container *ngTemplateOutlet=\"templates['expandedRow']; context: { $implicit: row }\"></ng-container>\n      </div>\n    </ng-template>\n    <!-- CUSTOM CELLS PASSED IN -->\n    <ng-content></ng-content>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [DataTableState]\n            }] }\n];\n/** @nocollapse */\nNovoDataTable.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef },\n    { type: DataTableState }\n];\nNovoDataTable.propDecorators = {\n    globalSearchHiddenClassToggle: [{ type: HostBinding, args: ['class.global-search-hidden',] }],\n    customTemplates: [{ type: ContentChildren, args: [NovoTemplate,] }],\n    defaultTemplates: [{ type: ViewChildren, args: [NovoTemplate,] }],\n    cellHeaders: [{ type: ViewChildren, args: [NovoDataTableCellHeader,] }],\n    novoDataTableContainer: [{ type: ViewChild, args: ['novoDataTableContainer', { static: false },] }],\n    resized: [{ type: Output }],\n    displayedColumns: [{ type: Input }],\n    paginationOptions: [{ type: Input }],\n    searchOptions: [{ type: Input }],\n    defaultSort: [{ type: Input }],\n    name: [{ type: Input }],\n    allowMultipleFilters: [{ type: Input }],\n    rowIdentifier: [{ type: Input }],\n    activeRowIdentifier: [{ type: Input }],\n    trackByFn: [{ type: Input }],\n    templates: [{ type: Input }],\n    fixedHeader: [{ type: Input }],\n    paginatorDataFeatureId: [{ type: Input }],\n    dataTableService: [{ type: Input }],\n    rows: [{ type: Input }],\n    outsideFilter: [{ type: Input }],\n    refreshSubject: [{ type: Input }],\n    columns: [{ type: Input }],\n    customFilter: [{ type: Input }],\n    hasExandedRows: [{ type: Input }],\n    forceShowHeader: [{ type: Input }],\n    hideGlobalSearch: [{ type: Input }],\n    preferencesChanged: [{ type: Output }],\n    empty: [{ type: HostBinding, args: ['class.empty',] }],\n    loadingClass: [{ type: HostBinding, args: ['class.loading',] }],\n    listInteractions: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTable.prototype.globalSearchHiddenClassToggle;\n    /** @type {?} */\n    NovoDataTable.prototype.customTemplates;\n    /** @type {?} */\n    NovoDataTable.prototype.defaultTemplates;\n    /** @type {?} */\n    NovoDataTable.prototype.cellHeaders;\n    /** @type {?} */\n    NovoDataTable.prototype.novoDataTableContainer;\n    /** @type {?} */\n    NovoDataTable.prototype.resized;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._disabledColumns;\n    /** @type {?} */\n    NovoDataTable.prototype.paginationOptions;\n    /** @type {?} */\n    NovoDataTable.prototype.searchOptions;\n    /** @type {?} */\n    NovoDataTable.prototype.defaultSort;\n    /** @type {?} */\n    NovoDataTable.prototype.name;\n    /** @type {?} */\n    NovoDataTable.prototype.allowMultipleFilters;\n    /** @type {?} */\n    NovoDataTable.prototype.rowIdentifier;\n    /** @type {?} */\n    NovoDataTable.prototype.activeRowIdentifier;\n    /** @type {?} */\n    NovoDataTable.prototype.trackByFn;\n    /** @type {?} */\n    NovoDataTable.prototype.templates;\n    /** @type {?} */\n    NovoDataTable.prototype.fixedHeader;\n    /** @type {?} */\n    NovoDataTable.prototype.paginatorDataFeatureId;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._customFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._hasExandedRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._forceShowHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._hideGlobalSearch;\n    /** @type {?} */\n    NovoDataTable.prototype.preferencesChanged;\n    /** @type {?} */\n    NovoDataTable.prototype.dataSource;\n    /** @type {?} */\n    NovoDataTable.prototype.loading;\n    /** @type {?} */\n    NovoDataTable.prototype.columnToTemplate;\n    /** @type {?} */\n    NovoDataTable.prototype.columnsLoaded;\n    /** @type {?} */\n    NovoDataTable.prototype.selection;\n    /** @type {?} */\n    NovoDataTable.prototype.scrollLeft;\n    /** @type {?} */\n    NovoDataTable.prototype.expandable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.outsideFilterSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.refreshSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.resetSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.paginationSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.sortFilterSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype._columns;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.scrollListenerHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.initialized;\n    /** @type {?} */\n    NovoDataTable.prototype.listInteractions;\n    /** @type {?} */\n    NovoDataTable.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTable.prototype.ref;\n    /** @type {?} */\n    NovoDataTable.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/dropdown/Dropdown.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDropdownModule {\n}\nNovoDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NovoOverlayModule],\n                declarations: [NovoDropdownElement, NovoItemElement, NovoDropdownListElement, NovoDropDownItemHeaderElement],\n                exports: [NovoDropdownElement, NovoItemElement, NovoDropdownListElement, NovoDropDownItemHeaderElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/select/Select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoSelectElement)),\n    multi: true,\n};\nclass NovoSelectElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     * @param {?} focusMonitor\n     * @param {?} ngZone\n     */\n    constructor(element, labels, ref, focusMonitor, ngZone) {\n        this.element = element;\n        this.labels = labels;\n        this.ref = ref;\n        this.focusMonitor = focusMonitor;\n        this.ngZone = ngZone;\n        this.placeholder = 'Select...';\n        this.onSelect = new EventEmitter();\n        this.selectedIndex = -1;\n        this.empty = true;\n        this.header = {\n            open: false,\n            valid: true,\n            value: '',\n        };\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.filterTerm = '';\n        this.disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.focusMonitor.monitor(this.dropdown.nativeElement).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        (origin) => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            if (origin === 'keyboard' && !this.disabled) {\n                this.openPanel();\n            }\n        }))));\n        this.ngOnChanges();\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.readonly = this.readonly === true;\n        if (this.options && this.options.length && typeof this.options[0] === 'string') {\n            this.filteredOptions = this.options.map((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                return { value: item, label: item };\n            }));\n        }\n        else {\n            this.filteredOptions = (this.options || [])\n                .filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                return !item.readOnly;\n            }))\n                .map((/**\n             * @param {?} element\n             * @return {?}\n             */\n            (element) => {\n                return Object.assign({}, element, { active: false });\n            }));\n        }\n        if (!this.model && !this.createdItem) {\n            this.clear();\n        }\n        else if (this.createdItem) {\n            /** @type {?} */\n            const item = this.options.find((/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => i.label === this.createdItem));\n            /** @type {?} */\n            const index = this.options.indexOf(item);\n            this.select(item, index);\n        }\n        else {\n            this.writeValue(this.model);\n        }\n        if (this.panelOpen) {\n            this.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.dropdown.nativeElement);\n    }\n    /**\n     * BEGIN: Convienient Panel Methods.\n     * @return {?}\n     */\n    openPanel() {\n        this.overlay.openPanel();\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.overlay.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    togglePanel() {\n        if (this.panelOpen) {\n            this.closePanel();\n        }\n        else {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.dropdown.nativeElement.focus();\n            }));\n            this.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlay && this.overlay.panelOpen;\n    }\n    /** END: Convenient Panel Methods. */\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    setValueAndClose(event) {\n        if (event.value && event.index >= 0) {\n            this.select(event.value, event.index);\n        }\n        this.closePanel();\n    }\n    /**\n     * @param {?} option\n     * @param {?} i\n     * @param {?=} fireEvents\n     * @return {?}\n     */\n    select(option, i, fireEvents = true) {\n        if (this.selected) {\n            this.selected.active = false;\n        }\n        this.selectedIndex = i;\n        this.selected = option;\n        this.selected.active = true;\n        this.empty = false;\n        if (fireEvents) {\n            this.onModelChange(this.selected.value);\n            this.onSelect.emit({ selected: this.selected.value });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        if (this.selected) {\n            this.selected.active = false;\n        }\n        this.selected = {\n            label: this.placeholder,\n            value: null,\n            active: false,\n        };\n        this.header = {\n            open: false,\n            valid: true,\n            value: '',\n        };\n        this.selectedIndex = -1;\n        this.empty = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // To prevent default window scrolling\n        if ([KeyCodes.UP, KeyCodes.DOWN].includes(event.keyCode)) {\n            event.preventDefault();\n        }\n        if ([KeyCodes.ESC, KeyCodes.TAB].includes(event.keyCode)) {\n            this.closePanel();\n        }\n        else if (event.keyCode === KeyCodes.ENTER) {\n            if (this.header.open && this.header.value) {\n                this.saveHeader();\n            }\n            else {\n                this.setValueAndClose({\n                    value: this.filteredOptions[this.selectedIndex],\n                    index: this.selectedIndex,\n                });\n            }\n        }\n        else if (event.keyCode === KeyCodes.UP) {\n            if (!this.panelOpen) {\n                this.openPanel();\n            }\n            if (this.selectedIndex > 0) {\n                this.selectedIndex--;\n                this.select(this.filteredOptions[this.selectedIndex], this.selectedIndex);\n                this.scrollToSelected();\n            }\n        }\n        else if (event.keyCode === KeyCodes.DOWN) {\n            if (!this.panelOpen) {\n                this.openPanel();\n            }\n            if (this.selectedIndex < this.filteredOptions.length - 1) {\n                this.selectedIndex++;\n                this.select(this.filteredOptions[this.selectedIndex], this.selectedIndex);\n                this.scrollToSelected();\n                if (this.header.open) {\n                    this.toggleHeader(null, false);\n                }\n            }\n        }\n        else if (event.keyCode === KeyCodes.UP && this.selectedIndex === 0) {\n            if (!this.panelOpen) {\n                this.openPanel();\n            }\n            this.selectedIndex--;\n            this.toggleHeader(null, true);\n        }\n        else if ((event.keyCode >= 65 && event.keyCode <= 90) || event.keyCode === KeyCodes.SPACE) {\n            if (event.keyCode === KeyCodes.SPACE) {\n                event.preventDefault();\n            }\n            if (!this.panelOpen) {\n                this.openPanel();\n            }\n            clearTimeout(this.filterTermTimeout);\n            this.filterTermTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.filterTerm = '';\n            }), 2000);\n            /** @type {?} */\n            const char = event.key;\n            this.filterTerm = this.filterTerm.concat(char).toUpperCase();\n            /** @type {?} */\n            const item = this.filteredOptions.find((/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => i.label.toUpperCase().indexOf(this.filterTerm) === 0));\n            if (item) {\n                this.select(item, this.filteredOptions.indexOf(item));\n                this.scrollToSelected();\n            }\n        }\n        else if ([KeyCodes.BACKSPACE, KeyCodes.DELETE].includes(event.keyCode)) {\n            clearTimeout(this.filterTermTimeout);\n            this.filterTermTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.filterTerm = '';\n            }), 2000);\n            this.filterTerm = this.filterTerm.slice(0, -1);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    scrollToSelected() {\n        this.scrollToIndex(this.selectedIndex);\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    scrollToIndex(index) {\n        /** @type {?} */\n        const element = this.overlay.overlayRef.overlayElement;\n        /** @type {?} */\n        const list = element.querySelector('.novo-select-list');\n        /** @type {?} */\n        const items = list.querySelectorAll('li');\n        /** @type {?} */\n        const item = items[this.headerConfig ? index + 1 : index];\n        if (item) {\n            list.scrollTop = item.offsetTop;\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?=} forceValue\n     * @return {?}\n     */\n    toggleHeader(event, forceValue = false) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        // Reverse the active property (if forceValue, use that)\n        this.header = {\n            open: forceValue !== undefined ? forceValue : !this.header.open,\n            value: '',\n            valid: true,\n        };\n    }\n    /**\n     * @param {?} match\n     * @param {?} query\n     * @return {?}\n     */\n    highlight(match, query) {\n        // Replaces the capture string with a the same string inside of a \"strong\" tag\n        return query ? match.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<strong>$&</strong>') : match;\n    }\n    /**\n     * @param {?} queryToEscape\n     * @return {?}\n     */\n    escapeRegexp(queryToEscape) {\n        // Ex: if the capture is \"a\" the result will be \\a\n        return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n    /**\n     * @return {?}\n     */\n    saveHeader() {\n        if (this.header.value) {\n            this.headerConfig.onSave(this.header.value);\n            this.createdItem = this.header.value;\n            this.closePanel();\n        }\n        else {\n            this.header.valid = false;\n        }\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        if (this.options) {\n            /** @type {?} */\n            let item = this.filteredOptions.find((/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => i.value === model || (model && i.value === model.id))) || this.options.find((/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => i.value === model || (model && i.value === model.id)));\n            if (!item && !Helpers.isEmpty(model)) {\n                item = {\n                    label: model,\n                    value: model,\n                };\n                if (!item.readOnly) {\n                    this.options.unshift(item);\n                }\n            }\n            if (item) {\n                this.select(item, this.filteredOptions.indexOf(item), false);\n                this.empty = false;\n            }\n            else {\n                this.clear();\n            }\n        }\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoSelectElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-select',\n                providers: [SELECT_VALUE_ACCESSOR],\n                template: `\n    <div #dropdownElement (click)=\"togglePanel(); (false)\" tabIndex=\"{{ disabled ? -1 : 0 }}\" type=\"button\" [class.empty]=\"empty\">\n      {{ selected.label }}<i class=\"bhi-collapse\"></i>\n    </div>\n    <novo-overlay-template [parent]=\"element\" position=\"center\" (closing)=\"dropdown.nativeElement.focus()\">\n      <ul class=\"novo-select-list\" tabIndex=\"-1\" [class.header]=\"headerConfig\" [class.active]=\"panelOpen\">\n        <ng-content></ng-content>\n        <li *ngIf=\"headerConfig\" class=\"select-header\" [class.open]=\"header.open\">\n          <button *ngIf=\"!header.open\" (click)=\"toggleHeader($event); (false)\" tabIndex=\"-1\" type=\"button\" class=\"header\">\n            <i class=\"bhi-add-thin\"></i>&nbsp;{{ headerConfig.label }}\n          </button>\n          <div *ngIf=\"header.open\" [ngClass]=\"{ active: header.open }\">\n            <input\n              autofocus\n              type=\"text\"\n              [placeholder]=\"headerConfig.placeholder\"\n              [attr.id]=\"name\"\n              autocomplete=\"false\"\n              [(ngModel)]=\"header.value\"\n              [ngClass]=\"{ invalid: !header.valid }\"\n            />\n            <footer>\n              <button (click)=\"toggleHeader($event, false)\">{{ labels.cancel }}</button>\n              <button (click)=\"saveHeader()\" class=\"primary\">{{ labels.save }}</button>\n            </footer>\n          </div>\n        </li>\n        <li\n          *ngFor=\"let option of filteredOptions; let i = index\"\n          [ngClass]=\"{ active: option.active }\"\n          (click)=\"setValueAndClose({ value: option, index: i })\"\n          [attr.data-automation-value]=\"option.label\"\n        >\n          <span [innerHtml]=\"highlight(option.label, filterTerm)\"></span> <i *ngIf=\"option.active\" class=\"bhi-check\"></i>\n        </li>\n      </ul>\n    </novo-overlay-template>\n  `,\n                host: {\n                    '(keydown)': 'onKeyDown($event)',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoSelectElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone }\n];\nNovoSelectElement.propDecorators = {\n    name: [{ type: Input }],\n    options: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    readonly: [{ type: Input }],\n    headerConfig: [{ type: Input }],\n    onSelect: [{ type: Output }],\n    overlay: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: true },] }],\n    dropdown: [{ type: ViewChild, args: ['dropdownElement', { static: true },] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSelectElement.prototype.name;\n    /** @type {?} */\n    NovoSelectElement.prototype.options;\n    /** @type {?} */\n    NovoSelectElement.prototype.placeholder;\n    /** @type {?} */\n    NovoSelectElement.prototype.readonly;\n    /** @type {?} */\n    NovoSelectElement.prototype.headerConfig;\n    /** @type {?} */\n    NovoSelectElement.prototype.onSelect;\n    /** @type {?} */\n    NovoSelectElement.prototype.selectedIndex;\n    /** @type {?} */\n    NovoSelectElement.prototype.empty;\n    /** @type {?} */\n    NovoSelectElement.prototype.header;\n    /** @type {?} */\n    NovoSelectElement.prototype.createdItem;\n    /** @type {?} */\n    NovoSelectElement.prototype.selected;\n    /** @type {?} */\n    NovoSelectElement.prototype.model;\n    /** @type {?} */\n    NovoSelectElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoSelectElement.prototype.onModelTouched;\n    /** @type {?} */\n    NovoSelectElement.prototype.filterTerm;\n    /** @type {?} */\n    NovoSelectElement.prototype.filterTermTimeout;\n    /** @type {?} */\n    NovoSelectElement.prototype.filteredOptions;\n    /** @type {?} */\n    NovoSelectElement.prototype.disabled;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    NovoSelectElement.prototype.overlay;\n    /** @type {?} */\n    NovoSelectElement.prototype.dropdown;\n    /** @type {?} */\n    NovoSelectElement.prototype.element;\n    /** @type {?} */\n    NovoSelectElement.prototype.labels;\n    /** @type {?} */\n    NovoSelectElement.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSelectElement.prototype.focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSelectElement.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/select/Select.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSelectModule {\n}\nNovoSelectModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, A11yModule, NovoOverlayModule],\n                declarations: [NovoSelectElement],\n                exports: [NovoSelectElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/dragula/DragulaService.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst dragula = dragulaImported;\nclass NovoDragulaService {\n    constructor() {\n        this.cancel = new EventEmitter();\n        this.cloned = new EventEmitter();\n        this.drag = new EventEmitter();\n        this.dragend = new EventEmitter();\n        this.drop = new EventEmitter();\n        this.out = new EventEmitter();\n        this.over = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.shadow = new EventEmitter();\n        this.dropModel = new EventEmitter();\n        this.removeModel = new EventEmitter();\n        this.events = ['cancel', 'cloned', 'drag', 'dragend', 'drop', 'out', 'over', 'remove', 'shadow', 'dropModel', 'removeModel'];\n        this.bags = [];\n    }\n    /**\n     * @param {?} name\n     * @param {?} drake\n     * @return {?}\n     */\n    add(name, drake) {\n        /** @type {?} */\n        let bag = this.find(name);\n        if (bag) {\n            throw new Error(`Bag named: ${name} already exists.`);\n        }\n        bag = {\n            name,\n            drake,\n        };\n        this.bags.push(bag);\n        if (drake.models) {\n            // models to sync with (must have same structure as containers)\n            this.handleModels(name, drake);\n        }\n        if (!bag.initEvents) {\n            this.setupEvents(bag);\n        }\n        return bag;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    find(name) {\n        for (let i = 0; i < this.bags.length; i++) {\n            if (this.bags[i].name === name) {\n                return this.bags[i];\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    destroy(name) {\n        /** @type {?} */\n        const bag = this.find(name);\n        /** @type {?} */\n        const i = this.bags.indexOf(bag);\n        this.bags.splice(i, 1);\n        bag.drake.destroy();\n    }\n    /**\n     * @param {?} name\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(name, options) {\n        /** @type {?} */\n        const bag = this.add(name, dragula(options));\n        this.handleModels(name, bag.drake);\n    }\n    /**\n     * @param {?} name\n     * @param {?} drake\n     * @return {?}\n     */\n    handleModels(name, drake) {\n        /** @type {?} */\n        let dragElm;\n        /** @type {?} */\n        let dragIndex;\n        /** @type {?} */\n        let dropIndex;\n        /** @type {?} */\n        let sourceModel;\n        drake.on('remove', (/**\n         * @param {?} el\n         * @param {?} source\n         * @return {?}\n         */\n        (el, source) => {\n            if (!drake.models) {\n                return;\n            }\n            sourceModel = drake.models[drake.containers.indexOf(source)];\n            sourceModel.splice(dragIndex, 1);\n            this.removeModel.emit([name, el, source]);\n        }));\n        drake.on('drag', (/**\n         * @param {?} el\n         * @param {?} source\n         * @return {?}\n         */\n        (el, source) => {\n            dragElm = el;\n            dragIndex = this.domIndexOf(el, source);\n        }));\n        drake.on('drop', (/**\n         * @param {?} dropElm\n         * @param {?} target\n         * @param {?} source\n         * @return {?}\n         */\n        (dropElm, target, source) => {\n            if (!drake.models) {\n                return;\n            }\n            dropIndex = this.domIndexOf(dropElm, target);\n            sourceModel = drake.models[drake.containers.indexOf(source)];\n            if (target === source) {\n                sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n            }\n            else {\n                /** @type {?} */\n                const notCopy = dragElm === dropElm;\n                /** @type {?} */\n                const targetModel = drake.models[drake.containers.indexOf(target)];\n                /** @type {?} */\n                const dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));\n                if (notCopy) {\n                    sourceModel.splice(dragIndex, 1);\n                }\n                targetModel.splice(dropIndex, 0, dropElmModel);\n                target.removeChild(dropElm); // element must be removed for ngFor to apply correctly\n            }\n            this.dropModel.emit([name, dropElm, target, source]);\n        }));\n    }\n    /**\n     * @param {?} bag\n     * @return {?}\n     */\n    setupEvents(bag) {\n        bag.initEvents = true;\n        /** @type {?} */\n        const that = this;\n        /** @type {?} */\n        const emitter = (/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            /**\n             * @return {?}\n             */\n            function replicate() {\n                /** @type {?} */\n                const args = Array.prototype.slice.call(arguments);\n                that[type].emit([bag.name].concat(args));\n            }\n            bag.drake.on(type, replicate);\n        });\n        this.events.forEach(emitter);\n    }\n    /**\n     * @param {?} child\n     * @param {?} parent\n     * @return {?}\n     */\n    domIndexOf(child, parent) {\n        return Array.prototype.indexOf.call(parent.children, child);\n    }\n}\nNovoDragulaService.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /** @type {?} */\n    NovoDragulaService.prototype.cancel;\n    /** @type {?} */\n    NovoDragulaService.prototype.cloned;\n    /** @type {?} */\n    NovoDragulaService.prototype.drag;\n    /** @type {?} */\n    NovoDragulaService.prototype.dragend;\n    /** @type {?} */\n    NovoDragulaService.prototype.drop;\n    /** @type {?} */\n    NovoDragulaService.prototype.out;\n    /** @type {?} */\n    NovoDragulaService.prototype.over;\n    /** @type {?} */\n    NovoDragulaService.prototype.remove;\n    /** @type {?} */\n    NovoDragulaService.prototype.shadow;\n    /** @type {?} */\n    NovoDragulaService.prototype.dropModel;\n    /** @type {?} */\n    NovoDragulaService.prototype.removeModel;\n    /** @type {?} */\n    NovoDragulaService.prototype.events;\n    /** @type {?} */\n    NovoDragulaService.prototype.bags;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/dragula/Dragula.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst dragula$1 = dragulaImported;\nclass NovoDragulaElement {\n    /**\n     * @param {?} element\n     * @param {?} dragulaService\n     */\n    constructor(element, dragulaService) {\n        this.dragulaService = dragulaService;\n        this.drake = null;\n        this.container = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const bag = this.dragulaService.find(this.bag);\n        if (bag) {\n            this.drake = bag.drake;\n            this.checkModel();\n            this.drake.containers.push(this.container);\n        }\n        else {\n            this.drake = dragula$1({\n                containers: [this.container],\n            });\n            this.checkModel();\n            this.dragulaService.add(this.bag, this.drake);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkModel() {\n        if (this.dragulaModel) {\n            if (this.drake.models) {\n                this.drake.models.push(this.dragulaModel);\n            }\n            else {\n                this.drake.models = [this.dragulaModel];\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes && changes.dragulaModel) {\n            if (this.drake) {\n                if (this.drake.models) {\n                    /** @type {?} */\n                    const modelIndex = this.drake.models.indexOf(changes.dragulaModel.previousValue);\n                    this.drake.models.splice(modelIndex, 1, changes.dragulaModel.currentValue);\n                }\n                else {\n                    this.drake.models = [changes.dragulaModel.currentValue];\n                }\n            }\n        }\n    }\n}\nNovoDragulaElement.decorators = [\n    { type: Directive, args: [{\n                selector: '[dragula]',\n            },] }\n];\n/** @nocollapse */\nNovoDragulaElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoDragulaService }\n];\nNovoDragulaElement.propDecorators = {\n    bag: [{ type: Input, args: ['dragula',] }],\n    dragulaModel: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDragulaElement.prototype.bag;\n    /** @type {?} */\n    NovoDragulaElement.prototype.dragulaModel;\n    /** @type {?} */\n    NovoDragulaElement.prototype.drake;\n    /** @type {?} */\n    NovoDragulaElement.prototype.container;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDragulaElement.prototype.dragulaService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/dragula/Dragula.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDragulaModule {\n}\nNovoDragulaModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NovoDragulaElement],\n                exports: [NovoDragulaElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/countries/Countries.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable:quotemark */\n/**\n * AUTOGENERATED FILE - DO NOT EDIT\n * Generated by: https://bhsource.bullhorn.com/DEV_WORKSPACE/country-state-parser\n * Last generated on: Tue Feb 26 2019 15:45:12 GMT-0600 (Central Standard Time)\n */\n/** @type {?} */\nconst COUNTRIES = [\n    {\n        code: 'US',\n        id: 1,\n        name: 'United States',\n        states: [\n            {\n                code: 'AL',\n                name: 'Alabama',\n            },\n            {\n                code: 'AK',\n                name: 'Alaska',\n            },\n            {\n                code: 'AZ',\n                name: 'Arizona',\n            },\n            {\n                code: 'AR',\n                name: 'Arkansas',\n            },\n            {\n                code: 'CA',\n                name: 'California',\n            },\n            {\n                code: 'CO',\n                name: 'Colorado',\n            },\n            {\n                code: 'CT',\n                name: 'Connecticut',\n            },\n            {\n                code: 'DE',\n                name: 'Delaware',\n            },\n            {\n                code: 'DC',\n                name: 'District Of Columbia',\n            },\n            {\n                code: 'FL',\n                name: 'Florida',\n            },\n            {\n                code: 'GA',\n                name: 'Georgia',\n            },\n            {\n                code: 'GU',\n                name: 'Guam',\n            },\n            {\n                code: 'HI',\n                name: 'Hawaii',\n            },\n            {\n                code: 'ID',\n                name: 'Idaho',\n            },\n            {\n                code: 'IL',\n                name: 'Illinois',\n            },\n            {\n                code: 'IN',\n                name: 'Indiana',\n            },\n            {\n                code: 'IA',\n                name: 'Iowa',\n            },\n            {\n                code: 'KS',\n                name: 'Kansas',\n            },\n            {\n                code: 'KY',\n                name: 'Kentucky',\n            },\n            {\n                code: 'LA',\n                name: 'Louisiana',\n            },\n            {\n                code: 'ME',\n                name: 'Maine',\n            },\n            {\n                code: 'MH',\n                name: 'Marshall Islands',\n            },\n            {\n                code: 'MD',\n                name: 'Maryland',\n            },\n            {\n                code: 'MA',\n                name: 'Massachusetts',\n            },\n            {\n                code: 'MI',\n                name: 'Michigan',\n            },\n            {\n                code: 'MN',\n                name: 'Minnesota',\n            },\n            {\n                code: 'MS',\n                name: 'Mississippi',\n            },\n            {\n                code: 'MO',\n                name: 'Missouri',\n            },\n            {\n                code: 'MT',\n                name: 'Montana',\n            },\n            {\n                code: 'NE',\n                name: 'Nebraska',\n            },\n            {\n                code: 'NV',\n                name: 'Nevada',\n            },\n            {\n                code: 'NH',\n                name: 'New Hampshire',\n            },\n            {\n                code: 'NJ',\n                name: 'New Jersey',\n            },\n            {\n                code: 'NM',\n                name: 'New Mexico',\n            },\n            {\n                code: 'NY',\n                name: 'New York',\n            },\n            {\n                code: 'NC',\n                name: 'North Carolina',\n            },\n            {\n                code: 'ND',\n                name: 'North Dakota',\n            },\n            {\n                code: 'MP',\n                name: 'Northern Mariana Islands',\n            },\n            {\n                code: 'OH',\n                name: 'Ohio',\n            },\n            {\n                code: 'OK',\n                name: 'Oklahoma',\n            },\n            {\n                code: 'OR',\n                name: 'Oregon',\n            },\n            {\n                code: 'PW',\n                name: 'Palau',\n            },\n            {\n                code: 'PA',\n                name: 'Pennsylvania',\n            },\n            {\n                code: 'PR',\n                name: 'Puerto Rico',\n            },\n            {\n                code: 'RI',\n                name: 'Rhode Island',\n            },\n            {\n                code: 'SC',\n                name: 'South Carolina',\n            },\n            {\n                code: 'SD',\n                name: 'South Dakota',\n            },\n            {\n                code: 'TN',\n                name: 'Tennessee',\n            },\n            {\n                code: 'TX',\n                name: 'Texas',\n            },\n            {\n                code: 'UT',\n                name: 'Utah',\n            },\n            {\n                code: 'VT',\n                name: 'Vermont',\n            },\n            {\n                code: 'VI',\n                name: 'Virgin Islands',\n            },\n            {\n                code: 'VA',\n                name: 'Virginia',\n            },\n            {\n                code: 'WA',\n                name: 'Washington',\n            },\n            {\n                code: 'WV',\n                name: 'West Virginia',\n            },\n            {\n                code: 'WI',\n                name: 'Wisconsin',\n            },\n            {\n                code: 'WY',\n                name: 'Wyoming',\n            },\n        ],\n    },\n    {\n        code: 'UK',\n        id: 2359,\n        name: 'United Kingdom',\n        states: [\n            {\n                code: 'ABD',\n                name: 'Aberdeenshire',\n            },\n            {\n                code: 'ALD',\n                name: 'Alderney',\n            },\n            {\n                code: 'ANS',\n                name: 'Angus',\n            },\n            {\n                code: 'ANN',\n                name: 'Antrim and Newtownabbey',\n            },\n            {\n                code: 'AGB',\n                name: 'Argyllshire',\n            },\n            {\n                code: 'ABC',\n                name: 'Armagh',\n            },\n            {\n                code: 'EAY',\n                name: 'Ayrshire',\n            },\n            {\n                code: 'BLA',\n                name: 'Ballymena',\n            },\n            {\n                code: 'BAY',\n                name: 'Ballymoney',\n            },\n            {\n                code: 'BNB',\n                name: 'Banbridge',\n            },\n            {\n                code: 'BAN',\n                name: 'Banffshire',\n            },\n            {\n                code: 'BDF',\n                name: 'Bedfordshire',\n            },\n            {\n                code: 'BFS',\n                name: 'Belfast',\n            },\n            {\n                code: 'BRK',\n                name: 'Berkshire',\n            },\n            {\n                code: 'BGW',\n                name: 'Blaenau Gwent',\n            },\n            {\n                code: 'SCB',\n                name: 'Borders',\n            },\n            {\n                code: 'BGE',\n                name: 'Bridgend',\n            },\n            {\n                code: 'BST',\n                name: 'Bristol',\n            },\n            {\n                code: 'BKM',\n                name: 'Buckinghamshire',\n            },\n            {\n                code: 'CAY',\n                name: 'Caerphilly',\n            },\n            {\n                code: 'CAI',\n                name: 'Caithness',\n            },\n            {\n                code: 'CAM',\n                name: 'Cambridgeshire',\n            },\n            {\n                code: 'CRF',\n                name: 'Cardiff',\n            },\n            {\n                code: 'CMN',\n                name: 'Carmarthenshire',\n            },\n            {\n                code: 'CKF',\n                name: 'Carrickfergus',\n            },\n            {\n                code: 'CAS',\n                name: 'Castlereagh',\n            },\n            {\n                code: 'CGN',\n                name: 'Ceredigion',\n            },\n            {\n                code: 'CHE',\n                name: 'Cheshire',\n            },\n            {\n                code: 'CLK',\n                name: 'Clackmannanshire',\n            },\n            {\n                code: 'CLR',\n                name: 'Coleraine',\n            },\n            {\n                code: 'CWY',\n                name: 'Conwy',\n            },\n            {\n                code: 'CKT',\n                name: 'Cookstown',\n            },\n            {\n                code: 'CON',\n                name: 'Cornwall',\n            },\n            {\n                code: 'DUR',\n                name: 'County Durham',\n            },\n            {\n                code: 'DRS',\n                name: 'County Londonderry',\n            },\n            {\n                code: 'CRA',\n                name: 'Craigavon',\n            },\n            {\n                code: 'CMA',\n                name: 'Cumbria',\n            },\n            {\n                code: 'DEN',\n                name: 'Denbighshire',\n            },\n            {\n                code: 'DBY',\n                name: 'Derbyshire',\n            },\n            {\n                code: 'DEV',\n                name: 'Devon',\n            },\n            {\n                code: 'DOR',\n                name: 'Dorset',\n            },\n            {\n                code: 'EDU',\n                name: 'Dumbartonshire',\n            },\n            {\n                code: 'DGY',\n                name: 'Dumfries and Galloway',\n            },\n            {\n                code: 'DGN',\n                name: 'Dungannon and South Tyrone',\n            },\n            {\n                code: 'ELN',\n                name: 'East Lothian',\n            },\n            {\n                code: 'ESX',\n                name: 'East Sussex',\n            },\n            {\n                code: 'ERY',\n                name: 'East Yorkshire',\n            },\n            {\n                code: 'ESS',\n                name: 'Essex',\n            },\n            {\n                code: 'FMO',\n                name: 'Fermanagh and Omagh',\n            },\n            {\n                code: 'FIF',\n                name: 'Fife',\n            },\n            {\n                code: 'FLN',\n                name: 'Flintshire',\n            },\n            {\n                code: 'GLG',\n                name: 'Glasgow',\n            },\n            {\n                code: 'GLS',\n                name: 'Gloucestershire',\n            },\n            {\n                code: 'LND',\n                name: 'Greater London',\n            },\n            {\n                code: 'MAN',\n                name: 'Greater Manchester',\n            },\n            {\n                code: 'GSY',\n                name: 'Guernsey',\n            },\n            {\n                code: 'GWN',\n                name: 'Gwynedd',\n            },\n            {\n                code: 'HAM',\n                name: 'Hampshire',\n            },\n            {\n                code: 'HEF',\n                name: 'Herefordshire',\n            },\n            {\n                code: 'HRM',\n                name: 'Herm',\n            },\n            {\n                code: 'HRT',\n                name: 'Hertfordshire',\n            },\n            {\n                code: 'HLD',\n                name: 'Highland',\n            },\n            {\n                code: 'INV',\n                name: 'Inverness-shire',\n            },\n            {\n                code: 'AGY',\n                name: 'Isle of Anglesey',\n            },\n            {\n                code: 'IOM',\n                name: 'Isle of Man',\n            },\n            {\n                code: 'IOW',\n                name: 'Isle of Wight',\n            },\n            {\n                code: 'JSY',\n                name: 'Jersey',\n            },\n            {\n                code: 'KEN',\n                name: 'Kent',\n            },\n            {\n                code: 'KCD',\n                name: 'Kincardineshire',\n            },\n            {\n                code: 'KKD',\n                name: 'Kirkcudbrightshire',\n            },\n            {\n                code: 'LAN',\n                name: 'Lancashire',\n            },\n            {\n                code: 'LRN',\n                name: 'Larne',\n            },\n            {\n                code: 'LEC',\n                name: 'Leicestershire',\n            },\n            {\n                code: 'LMV',\n                name: 'Limavady',\n            },\n            {\n                code: 'LIN',\n                name: 'Lincolnshire',\n            },\n            {\n                code: 'LBC',\n                name: 'Lisburn and Castlereagh',\n            },\n            {\n                code: 'MFT',\n                name: 'Magherafelt',\n            },\n            {\n                code: 'MER',\n                name: 'Merseyside',\n            },\n            {\n                code: 'MTY',\n                name: 'Merthyr Tydfil',\n            },\n            {\n                code: 'MLN',\n                name: 'Midlothian',\n            },\n            {\n                code: 'MON',\n                name: 'Monmouthshire',\n            },\n            {\n                code: 'MRY',\n                name: 'Morayshire',\n            },\n            {\n                code: 'MYL',\n                name: 'Moyle',\n            },\n            {\n                code: 'NAI',\n                name: 'Nairn',\n            },\n            {\n                code: 'NTL',\n                name: 'Neath Port Talbot',\n            },\n            {\n                code: 'NWP',\n                name: 'Newport',\n            },\n            {\n                code: 'NMD',\n                name: 'Newry, Mourne and Down',\n            },\n            {\n                code: 'NFK',\n                name: 'Norfolk',\n            },\n            {\n                code: 'AND',\n                name: 'North Down and Ards',\n            },\n            {\n                code: 'NLK',\n                name: 'North Lanarkshire',\n            },\n            {\n                code: 'NYK',\n                name: 'North Yorkshire',\n            },\n            {\n                code: 'NTH',\n                name: 'Northamptonshire',\n            },\n            {\n                code: 'NBL',\n                name: 'Northumberland',\n            },\n            {\n                code: 'NTT',\n                name: 'Nottinghamshire',\n            },\n            {\n                code: 'OMA',\n                name: 'Omagh',\n            },\n            {\n                code: 'ORK',\n                name: 'Orkney Islands',\n            },\n            {\n                code: 'OXF',\n                name: 'Oxfordshire',\n            },\n            {\n                code: 'PEM',\n                name: 'Pembrokeshire',\n            },\n            {\n                code: 'PKN',\n                name: 'Perth and Kinross',\n            },\n            {\n                code: 'PER',\n                name: 'Perthshire and Kinross',\n            },\n            {\n                code: 'POW',\n                name: 'Powys',\n            },\n            {\n                code: 'RCC',\n                name: 'Redcar and Cleveland',\n            },\n            {\n                code: 'RFW',\n                name: 'Renfrewshire',\n            },\n            {\n                code: 'RCT',\n                name: 'Rhondda Cynon Taff',\n            },\n            {\n                code: 'RUT',\n                name: 'Rutland',\n            },\n            {\n                code: 'SRK',\n                name: 'Sark',\n            },\n            {\n                code: 'ZET',\n                name: 'Shetland Islands',\n            },\n            {\n                code: 'SHR',\n                name: 'Shropshire',\n            },\n            {\n                code: 'SOM',\n                name: 'Somerset',\n            },\n            {\n                code: 'SLK',\n                name: 'South Lanarkshire',\n            },\n            {\n                code: 'SYK',\n                name: 'South Yorkshire',\n            },\n            {\n                code: 'STS',\n                name: 'Staffordshire',\n            },\n            {\n                code: 'STG',\n                name: 'Stirlingshire',\n            },\n            {\n                code: 'STR',\n                name: 'Strabane',\n            },\n            {\n                code: 'SFK',\n                name: 'Suffolk',\n            },\n            {\n                code: 'SRY',\n                name: 'Surrey',\n            },\n            {\n                code: 'SSX',\n                name: 'Sussex',\n            },\n            {\n                code: 'SUT',\n                name: 'Sutherland',\n            },\n            {\n                code: 'SWA',\n                name: 'Swansea',\n            },\n            {\n                code: 'TOF',\n                name: 'Torfaen',\n            },\n            {\n                code: 'TWR',\n                name: 'Tyne and Wear',\n            },\n            {\n                code: 'VGL',\n                name: 'Vale of Glamorgan',\n            },\n            {\n                code: 'WAR',\n                name: 'Warwickshire',\n            },\n            {\n                code: 'WLN',\n                name: 'West Lothian',\n            },\n            {\n                code: 'WMD',\n                name: 'West Midlands',\n            },\n            {\n                code: 'WSX',\n                name: 'West Sussex',\n            },\n            {\n                code: 'WRY',\n                name: 'West Yorkshire',\n            },\n            {\n                code: 'ELS',\n                name: 'Western Isles',\n            },\n            {\n                code: 'WIL',\n                name: 'Wiltshire',\n            },\n            {\n                code: 'WOR',\n                name: 'Worcestershire',\n            },\n            {\n                code: 'WRX',\n                name: 'Wrexham',\n            },\n        ],\n    },\n    {\n        code: 'AF',\n        id: 2185,\n        name: 'Afghanistan',\n        states: [\n            {\n                code: 'AF01',\n                name: 'Badakhshan',\n            },\n            {\n                code: 'AF02',\n                name: 'Badghis',\n            },\n            {\n                code: 'AF03',\n                name: 'Baghlan',\n            },\n            {\n                code: 'AF30',\n                name: 'Balkh',\n            },\n            {\n                code: 'AF05',\n                name: 'Bamian',\n            },\n            {\n                code: 'AF41',\n                name: 'Daikondi',\n            },\n            {\n                code: 'AF06',\n                name: 'Farah',\n            },\n            {\n                code: 'AF07',\n                name: 'Faryab',\n            },\n            {\n                code: 'AF08',\n                name: 'Ghazni',\n            },\n            {\n                code: 'AF09',\n                name: 'Ghowr',\n            },\n            {\n                code: 'AF10',\n                name: 'Helmand',\n            },\n            {\n                code: 'AF11',\n                name: 'Herat',\n            },\n            {\n                code: 'AF31',\n                name: 'Jowzjan',\n            },\n            {\n                code: 'AF13',\n                name: 'Kabul',\n            },\n            {\n                code: 'AF23',\n                name: 'Kandahar',\n            },\n            {\n                code: 'AF14',\n                name: 'Kapisa',\n            },\n            {\n                code: 'AF37',\n                name: 'Khowst',\n            },\n            {\n                code: 'AF34',\n                name: 'Konar',\n            },\n            {\n                code: 'AF24',\n                name: 'Kondoz',\n            },\n            {\n                code: 'AF35',\n                name: 'Laghman',\n            },\n            {\n                code: 'AF17',\n                name: 'Lowgar',\n            },\n            {\n                code: 'AF18',\n                name: 'Nangarhar',\n            },\n            {\n                code: 'AF19',\n                name: 'Nimruz',\n            },\n            {\n                code: 'AF38',\n                name: 'Nurestan',\n            },\n            {\n                code: 'AF39',\n                name: 'Oruzgan',\n            },\n            {\n                code: 'AF36',\n                name: 'Paktia',\n            },\n            {\n                code: 'AF29',\n                name: 'Paktika',\n            },\n            {\n                code: 'AF42',\n                name: 'Panjshir',\n            },\n            {\n                code: 'AF40',\n                name: 'Parvan',\n            },\n            {\n                code: 'AF32',\n                name: 'Samangan',\n            },\n            {\n                code: 'AF33',\n                name: 'Sar-e Pol',\n            },\n            {\n                code: 'AF26',\n                name: 'Takhar',\n            },\n            {\n                code: 'AF27',\n                name: 'Vardak',\n            },\n            {\n                code: 'AF28',\n                name: 'Zabol',\n            },\n        ],\n    },\n    {\n        code: 'AX',\n        id: 2407,\n        name: 'Åland Islands',\n        states: [],\n    },\n    {\n        code: 'AL',\n        id: 2186,\n        name: 'Albania',\n        states: [],\n    },\n    {\n        code: 'DZ',\n        id: 2187,\n        name: 'Algeria',\n        states: [\n            {\n                code: 'DZ.AR',\n                name: 'Adrar',\n            },\n            {\n                code: 'DZ.AD',\n                name: 'Aïn Defla',\n            },\n            {\n                code: 'DZ.AT',\n                name: 'Aïn Témouchent',\n            },\n            {\n                code: 'DZ.AL',\n                name: 'Algiers',\n            },\n            {\n                code: 'DZ.AN',\n                name: 'Annaba',\n            },\n            {\n                code: 'DZ.BT',\n                name: 'Batna',\n            },\n            {\n                code: 'DZ.BC',\n                name: 'Béchar',\n            },\n            {\n                code: 'DZ.BJ',\n                name: 'Béjaïa',\n            },\n            {\n                code: 'DZ.BS',\n                name: 'Biskra',\n            },\n            {\n                code: 'DZ.BL',\n                name: 'Blida',\n            },\n            {\n                code: 'DZ.BB',\n                name: 'Bordj Bou Arréridj',\n            },\n            {\n                code: 'DZ.BU',\n                name: 'Bouira',\n            },\n            {\n                code: 'DZ.BM',\n                name: 'Boumerdès',\n            },\n            {\n                code: 'DZ.CH',\n                name: 'Chlef',\n            },\n            {\n                code: 'DZ.CO',\n                name: 'Constantine',\n            },\n            {\n                code: 'DZ.DJ',\n                name: 'Djelfa',\n            },\n            {\n                code: 'DZ.EB',\n                name: 'El Bayadh',\n            },\n            {\n                code: 'DZ.EO',\n                name: 'El Oued',\n            },\n            {\n                code: 'DZ.ET',\n                name: 'El Tarf',\n            },\n            {\n                code: 'DZ.GR',\n                name: 'Ghardaïa',\n            },\n            {\n                code: 'DZ.GL',\n                name: 'Guelma',\n            },\n            {\n                code: 'DZ.IL',\n                name: 'Illizi',\n            },\n            {\n                code: 'DZ.JJ',\n                name: 'Jijel',\n            },\n            {\n                code: 'DZ.KH',\n                name: 'Khenchela',\n            },\n            {\n                code: 'DZ.LG',\n                name: 'Laghouat',\n            },\n            {\n                code: 'DZ.MC',\n                name: 'Mascara',\n            },\n            {\n                code: 'DZ.MD',\n                name: 'Médéa',\n            },\n            {\n                code: 'DZ.ML',\n                name: 'Mila',\n            },\n            {\n                code: 'DZ.MG',\n                name: 'Mostaganem',\n            },\n            {\n                code: 'DZ.MS',\n                name: 'Msila',\n            },\n            {\n                code: 'DZ.NA',\n                name: 'Naama',\n            },\n            {\n                code: 'DZ.OR',\n                name: 'Oran',\n            },\n            {\n                code: 'DZ.OG',\n                name: 'Ouargla',\n            },\n            {\n                code: 'DZ.OB',\n                name: 'Oum el Bouaghi',\n            },\n            {\n                code: 'DZ.RE',\n                name: 'Relizane',\n            },\n            {\n                code: 'DZ.SD',\n                name: 'Saïda',\n            },\n            {\n                code: 'DZ.SF',\n                name: 'Sétif',\n            },\n            {\n                code: 'DZ.SB',\n                name: 'Sidi Bel Abbès',\n            },\n            {\n                code: 'DZ.SK',\n                name: 'Skikda',\n            },\n            {\n                code: 'DZ.SA',\n                name: 'Souk Ahras',\n            },\n            {\n                code: 'DZ.TM',\n                name: 'Tamanrasset',\n            },\n            {\n                code: 'DZ.TB',\n                name: 'Tébessa',\n            },\n            {\n                code: 'DZ.TR',\n                name: 'Tiaret',\n            },\n            {\n                code: 'DZ.TN',\n                name: 'Tindouf',\n            },\n            {\n                code: 'DZ.TP',\n                name: 'Tipaza',\n            },\n            {\n                code: 'DZ.TS',\n                name: 'Tissemsilt',\n            },\n            {\n                code: 'DZ.TO',\n                name: 'Tizi Ouzou',\n            },\n            {\n                code: 'DZ.TL',\n                name: 'Tlemcen',\n            },\n        ],\n    },\n    {\n        code: 'AS',\n        id: 2408,\n        name: 'American Samoa',\n        states: [],\n    },\n    {\n        code: 'AD',\n        id: 2188,\n        name: 'Andorra',\n        states: [],\n    },\n    {\n        code: 'AO',\n        id: 2189,\n        name: 'Angola',\n        states: [\n            {\n                code: 'AO19',\n                name: 'Bengo',\n            },\n            {\n                code: 'AO01',\n                name: 'Benguela',\n            },\n            {\n                code: 'AO02',\n                name: 'Bié',\n            },\n            {\n                code: 'AO03',\n                name: 'Cabinda',\n            },\n            {\n                code: 'AO04',\n                name: 'Cuando Cubango',\n            },\n            {\n                code: 'AO05',\n                name: 'Cuanza Norte',\n            },\n            {\n                code: 'AO06',\n                name: 'Cuanza Sul',\n            },\n            {\n                code: 'AO07',\n                name: 'Cunene',\n            },\n            {\n                code: 'AO08',\n                name: 'Huambo',\n            },\n            {\n                code: 'AO09',\n                name: 'Huíla',\n            },\n            {\n                code: 'AO20',\n                name: 'Luanda',\n            },\n            {\n                code: 'AO17',\n                name: 'Lunda Norte',\n            },\n            {\n                code: 'AO18',\n                name: 'Lunda Sul',\n            },\n            {\n                code: 'AO12',\n                name: 'Malanje',\n            },\n            {\n                code: 'AO14',\n                name: 'Moxico',\n            },\n            {\n                code: 'AO13',\n                name: 'Namibe',\n            },\n            {\n                code: 'AO15',\n                name: 'Uíge',\n            },\n            {\n                code: 'AO16',\n                name: 'Zaire',\n            },\n        ],\n    },\n    {\n        code: 'AI',\n        id: 2409,\n        name: 'Anguilla',\n        states: [],\n    },\n    {\n        code: 'AQ',\n        id: 2190,\n        name: 'Antarctica',\n        states: [],\n    },\n    {\n        code: 'AG',\n        id: 2191,\n        name: 'Antigua and Barbuda',\n        states: [],\n    },\n    {\n        code: 'AR',\n        id: 2192,\n        name: 'Argentina',\n        states: [\n            {\n                code: 'AR01',\n                name: 'Buenos Aires',\n            },\n            {\n                code: 'AR02',\n                name: 'Catamarca',\n            },\n            {\n                code: 'AR03',\n                name: 'Chaco',\n            },\n            {\n                code: 'AR04',\n                name: 'Chubut',\n            },\n            {\n                code: 'AR07',\n                name: 'Ciudad de Buenos Aires',\n            },\n            {\n                code: 'AR05',\n                name: 'Córdoba',\n            },\n            {\n                code: 'AR06',\n                name: 'Corrientes',\n            },\n            {\n                code: 'AR08',\n                name: 'Entre Ríos',\n            },\n            {\n                code: 'AR09',\n                name: 'Formosa',\n            },\n            {\n                code: 'AR10',\n                name: 'Jujuy',\n            },\n            {\n                code: 'AR11',\n                name: 'La Pampa',\n            },\n            {\n                code: 'AR12',\n                name: 'La Rioja',\n            },\n            {\n                code: 'AR13',\n                name: 'Mendoza',\n            },\n            {\n                code: 'AR14',\n                name: 'Misiones',\n            },\n            {\n                code: 'AR15',\n                name: 'Neuquén',\n            },\n            {\n                code: 'AR16',\n                name: 'Río Negro',\n            },\n            {\n                code: 'AR17',\n                name: 'Salta',\n            },\n            {\n                code: 'AR18',\n                name: 'San Juan',\n            },\n            {\n                code: 'AR19',\n                name: 'San Luis',\n            },\n            {\n                code: 'AR20',\n                name: 'Santa Cruz',\n            },\n            {\n                code: 'AR21',\n                name: 'Santa Fe',\n            },\n            {\n                code: 'AR22',\n                name: 'Santiago del Estero',\n            },\n            {\n                code: 'AR23',\n                name: 'Tierra del Fuego',\n            },\n            {\n                code: 'AR24',\n                name: 'Tucumán',\n            },\n        ],\n    },\n    {\n        code: 'AM',\n        id: 2193,\n        name: 'Armenia',\n        states: [],\n    },\n    {\n        code: 'AB',\n        id: 2373,\n        name: 'Aruba',\n        states: [\n            {\n                code: 'AW.AA',\n                name: 'Aruba',\n            },\n        ],\n    },\n    {\n        code: 'AU',\n        id: 2194,\n        name: 'Australia',\n        states: [\n            {\n                code: 'ACT',\n                name: 'Australian Capital Territory',\n            },\n            {\n                code: 'NSW',\n                name: 'New South Wales',\n            },\n            {\n                code: 'NT',\n                name: 'Northern Territory',\n            },\n            {\n                code: 'QLD',\n                name: 'Queensland',\n            },\n            {\n                code: 'SA',\n                name: 'South Australia',\n            },\n            {\n                code: 'TAS',\n                name: 'Tasmania',\n            },\n            {\n                code: 'VIC',\n                name: 'Victoria',\n            },\n            {\n                code: 'WA',\n                name: 'Western Australia',\n            },\n        ],\n    },\n    {\n        code: 'AT',\n        id: 2195,\n        name: 'Austria',\n        states: [\n            {\n                code: 'AU01',\n                name: 'Burgenland',\n            },\n            {\n                code: 'AU02',\n                name: 'Carinthia',\n            },\n            {\n                code: 'AU03',\n                name: 'Lower Austria',\n            },\n            {\n                code: 'AU05',\n                name: 'Salzburg',\n            },\n            {\n                code: 'AU06',\n                name: 'Styria',\n            },\n            {\n                code: 'AU07',\n                name: 'Tyrol',\n            },\n            {\n                code: 'AU04',\n                name: 'Upper Austria',\n            },\n            {\n                code: 'AU09',\n                name: 'Vienna',\n            },\n            {\n                code: 'AU08',\n                name: 'Vorarlberg',\n            },\n        ],\n    },\n    {\n        code: 'AZ',\n        id: 2196,\n        name: 'Azerbaijan',\n        states: [\n            {\n                code: 'AZ-ABS',\n                name: 'Absheron',\n            },\n            {\n                code: 'AZ-AGM',\n                name: 'Aghdam',\n            },\n            {\n                code: 'AZ-AGS',\n                name: 'Aghdash',\n            },\n            {\n                code: 'AZ-AGC',\n                name: 'Aghjabedi',\n            },\n            {\n                code: 'AZ-AGA',\n                name: 'Aghstafa',\n            },\n            {\n                code: 'AZ-AGU',\n                name: 'Aghsu',\n            },\n            {\n                code: 'AZ-AB',\n                name: 'Ali-Bairamly',\n            },\n            {\n                code: 'AZ-AST',\n                name: 'Astara',\n            },\n            {\n                code: 'AZ-BAB',\n                name: 'Babek',\n            },\n            {\n                code: 'AZ-BA',\n                name: 'Baku',\n            },\n            {\n                code: 'AZ-BAL',\n                name: 'Balaken',\n            },\n            {\n                code: 'AZ-BAR',\n                name: 'Barda',\n            },\n            {\n                code: 'AZ-BEY',\n                name: 'Beilagan',\n            },\n            {\n                code: 'AZ-BIL',\n                name: 'Bilasuvar',\n            },\n            {\n                code: 'AZ-DAS',\n                name: 'Dashkesan',\n            },\n            {\n                code: 'AZ-DAV',\n                name: 'Devechi',\n            },\n            {\n                code: 'AZ-FUZ',\n                name: 'Fizuli',\n            },\n            {\n                code: 'AZ-QAB',\n                name: 'Gabala',\n            },\n            {\n                code: 'AZ-GAD',\n                name: 'Gadabey',\n            },\n            {\n                code: 'AZ-QAX',\n                name: 'Gakh',\n            },\n            {\n                code: 'AZ-GA',\n                name: 'Ganja',\n            },\n            {\n                code: 'AZ-QAZ',\n                name: 'Gazakh',\n            },\n            {\n                code: 'AZ-GOR',\n                name: 'Geranboy',\n            },\n            {\n                code: 'AZ-QOB',\n                name: 'Gobustan',\n            },\n            {\n                code: 'AZ-GOY',\n                name: 'Goychay',\n            },\n            {\n                code: 'AZ-QBA',\n                name: 'Guba',\n            },\n            {\n                code: 'AZ-QBI',\n                name: 'Gubadly',\n            },\n            {\n                code: 'AZ-QUS',\n                name: 'Gusar',\n            },\n            {\n                code: 'AZ-HAC',\n                name: 'Hacuqabul',\n            },\n            {\n                code: 'AZ-IMI',\n                name: 'Imishli',\n            },\n            {\n                code: 'AZ-ISM',\n                name: 'Ismailly',\n            },\n            {\n                code: 'AZ-CAL',\n                name: 'Jalilabad',\n            },\n            {\n                code: 'AZ-CAB',\n                name: 'Jebrail',\n            },\n            {\n                code: 'AZ-CUL',\n                name: 'Julfa',\n            },\n            {\n                code: 'AZ-KAL',\n                name: 'Kelbajar',\n            },\n            {\n                code: 'AZ-XAC',\n                name: 'Khachmaz',\n            },\n            {\n                code: 'AZ-XA',\n                name: 'Khankendy',\n            },\n            {\n                code: 'AZ-XAN',\n                name: 'Khanlar',\n            },\n            {\n                code: 'AZ-XCI',\n                name: 'Khojaly',\n            },\n            {\n                code: 'AZ-XVD',\n                name: 'Khojavend',\n            },\n            {\n                code: 'AZ-XIZ',\n                name: 'Khyzy',\n            },\n            {\n                code: 'AZ-KUR',\n                name: 'Kyurdamir',\n            },\n            {\n                code: 'AZ-LAC',\n                name: 'Lachin',\n            },\n            {\n                code: 'AZ-LAN',\n                name: 'Lenkaran',\n            },\n            {\n                code: 'AZ-LA',\n                name: 'Lenkaran',\n            },\n            {\n                code: 'AZ-LER',\n                name: 'Lerik',\n            },\n            {\n                code: 'AZ-MAS',\n                name: 'Masally',\n            },\n            {\n                code: 'AZ-MI',\n                name: 'Mingechevir',\n            },\n            {\n                code: 'AZ-NA',\n                name: 'Naftalan',\n            },\n            {\n                code: 'AZ-NX',\n                name: 'Nakhchivan',\n            },\n            {\n                code: 'AZ-NEF',\n                name: 'Neftchala',\n            },\n            {\n                code: 'AZ-OGU',\n                name: 'Oghuz',\n            },\n            {\n                code: 'AZ-ORD',\n                name: 'Ordubad',\n            },\n            {\n                code: 'AZ-SAT',\n                name: 'Saatly',\n            },\n            {\n                code: 'AZ-SAB',\n                name: 'Sabirabad',\n            },\n            {\n                code: 'AZ-SAL',\n                name: 'Salyan',\n            },\n            {\n                code: 'AZ-SMX',\n                name: 'Samuh',\n            },\n            {\n                code: 'AZ-SAD',\n                name: 'Sedarak',\n            },\n            {\n                code: 'AZ-SAH',\n                name: 'Shahbuz',\n            },\n            {\n                code: 'AZ-SMI',\n                name: 'Shamakhy',\n            },\n            {\n                code: 'AZ-SKR',\n                name: 'Shamkir',\n            },\n            {\n                code: 'AZ-SAK',\n                name: 'Sheki',\n            },\n            {\n                code: 'AZ-SA',\n                name: 'Sheki',\n            },\n            {\n                code: 'AZ-SAR',\n                name: 'Sherur',\n            },\n            {\n                code: 'AZ-SS',\n                name: 'Shusha',\n            },\n            {\n                code: 'AZ-SUS',\n                name: 'Shusha',\n            },\n            {\n                code: 'AZ-SIY',\n                name: 'Siazan',\n            },\n            {\n                code: 'AZ-SM',\n                name: 'Sumgayit',\n            },\n            {\n                code: 'AZ-TAR',\n                name: 'Terter',\n            },\n            {\n                code: 'AZ-TOV',\n                name: 'Tovuz',\n            },\n            {\n                code: 'AZ-UCA',\n                name: 'Ujar',\n            },\n            {\n                code: 'AZ-YAR',\n                name: 'Yardymly',\n            },\n            {\n                code: 'AZ-YE',\n                name: 'Yevlakh',\n            },\n            {\n                code: 'AZ-YEV',\n                name: 'Yevlakh',\n            },\n            {\n                code: 'AZ-ZAQ',\n                name: 'Zagatala',\n            },\n            {\n                code: 'AZ-ZAN',\n                name: 'Zangilan',\n            },\n            {\n                code: 'AZ-ZAR',\n                name: 'Zerdab',\n            },\n        ],\n    },\n    {\n        code: 'BS',\n        id: 2197,\n        name: 'Bahamas',\n        states: [\n            {\n                code: 'BF24',\n                name: 'Acklins',\n            },\n            {\n                code: 'BF32',\n                name: 'Berry Islands',\n            },\n            {\n                code: 'BF05',\n                name: 'Bimini',\n            },\n            {\n                code: 'BF36',\n                name: 'Black Point',\n            },\n            {\n                code: 'BF06',\n                name: 'Cat Island',\n            },\n            {\n                code: 'BF37',\n                name: 'Central Abaco',\n            },\n            {\n                code: 'BF38',\n                name: 'Central Andros',\n            },\n            {\n                code: 'BF39',\n                name: 'Central Eleuthera',\n            },\n            {\n                code: 'BF25',\n                name: 'City of Freeport',\n            },\n            {\n                code: 'BF40',\n                name: 'Crooked Island',\n            },\n            {\n                code: 'BF41',\n                name: 'East Grand Bahama',\n            },\n            {\n                code: 'BF10',\n                name: 'Exuma',\n            },\n            {\n                code: 'BF42',\n                name: 'Grand Cay',\n            },\n            {\n                code: 'BS.GT\\t',\n                name: 'Green Turtle Cay',\n            },\n            {\n                code: 'BF22',\n                name: 'Harbour Island',\n            },\n            {\n                code: 'BF43',\n                name: 'Hope Town',\n            },\n            {\n                code: 'BF13',\n                name: 'Inagua',\n            },\n            {\n                code: 'BF15',\n                name: 'Long Island',\n            },\n            {\n                code: 'BF44',\n                name: 'Mangrove Cay',\n            },\n            {\n                code: 'BF16',\n                name: 'Mayaguana',\n            },\n            {\n                code: 'BF45',\n                name: \"Moore's Island\",\n            },\n            {\n                code: 'BS.NW',\n                name: 'New Providence',\n            },\n            {\n                code: 'BF46',\n                name: 'North Abaco',\n            },\n            {\n                code: 'BF47',\n                name: 'North Andros',\n            },\n            {\n                code: 'BF48',\n                name: 'North Eleuthera',\n            },\n            {\n                code: 'BF18',\n                name: 'Ragged Island',\n            },\n            {\n                code: 'BF49',\n                name: 'Rum Cay',\n            },\n            {\n                code: 'BF35',\n                name: 'San Salvador',\n            },\n            {\n                code: 'BF50',\n                name: 'South Abaco',\n            },\n            {\n                code: 'BF51',\n                name: 'South Andros',\n            },\n            {\n                code: 'BF52',\n                name: 'South Eleuthera',\n            },\n            {\n                code: 'BF53',\n                name: 'Spanish Wells',\n            },\n            {\n                code: 'BF54',\n                name: 'West Grand Bahama',\n            },\n        ],\n    },\n    {\n        code: 'BH',\n        id: 2198,\n        name: 'Bahrain',\n        states: [\n            {\n                code: 'BA16',\n                name: 'Capital',\n            },\n            {\n                code: 'BA19',\n                name: 'Central',\n            },\n            {\n                code: 'BA15',\n                name: 'Muharraq',\n            },\n            {\n                code: 'BA18',\n                name: 'Northern',\n            },\n            {\n                code: 'BA17',\n                name: 'Southern',\n            },\n        ],\n    },\n    {\n        code: 'BD',\n        id: 2199,\n        name: 'Bangladesh',\n        states: [\n            {\n                code: 'BG85',\n                name: 'Barisal',\n            },\n            {\n                code: 'BG84',\n                name: 'Chittagong',\n            },\n            {\n                code: 'BG81',\n                name: 'Dhaka',\n            },\n            {\n                code: 'BG82',\n                name: 'Khulna',\n            },\n            {\n                code: 'BG81',\n                name: 'Mymensingh',\n            },\n            {\n                code: 'BG83',\n                name: 'Rajshahi',\n            },\n            {\n                code: 'BG87',\n                name: 'Rangpur',\n            },\n            {\n                code: 'BG86',\n                name: 'Sylhet',\n            },\n        ],\n    },\n    {\n        code: 'BB',\n        id: 2200,\n        name: 'Barbados',\n        states: [\n            {\n                code: 'BB01',\n                name: 'Christ Church',\n            },\n            {\n                code: 'BB02',\n                name: 'Saint Andrew',\n            },\n            {\n                code: 'BB03',\n                name: 'Saint George',\n            },\n            {\n                code: 'BB04',\n                name: 'Saint James',\n            },\n            {\n                code: 'BB05',\n                name: 'Saint John',\n            },\n            {\n                code: 'BB06',\n                name: 'Saint Joseph',\n            },\n            {\n                code: 'BB07',\n                name: 'Saint Lucy',\n            },\n            {\n                code: 'BB08',\n                name: 'Saint Michael',\n            },\n            {\n                code: 'BB09',\n                name: 'Saint Peter',\n            },\n            {\n                code: 'BB10',\n                name: 'Saint Philip',\n            },\n            {\n                code: 'BB11',\n                name: 'Saint Thomas',\n            },\n        ],\n    },\n    {\n        code: 'BY',\n        id: 2201,\n        name: 'Belarus',\n        states: [\n            {\n                code: 'BO01',\n                name: 'Brest',\n            },\n            {\n                code: 'BO02',\n                name: 'Gomel',\n            },\n            {\n                code: 'BO03',\n                name: 'Grodno',\n            },\n            {\n                code: 'BO05',\n                name: 'Minsk',\n            },\n            {\n                code: 'BO04',\n                name: 'Minsk City',\n            },\n            {\n                code: 'BO06',\n                name: 'Mogilev',\n            },\n            {\n                code: 'BO07',\n                name: 'Vitebsk',\n            },\n        ],\n    },\n    {\n        code: 'BE',\n        id: 2202,\n        name: 'Belgium',\n        states: [\n            {\n                code: 'BE01',\n                name: 'Antwerpen Province',\n            },\n            {\n                code: 'BE11',\n                name: 'Brussels-Capital Region',\n            },\n            {\n                code: 'BE12',\n                name: 'Flemish Brabant Province',\n            },\n            {\n                code: 'BE03',\n                name: 'Hainaut Province',\n            },\n            {\n                code: 'BE04',\n                name: 'Liege Province',\n            },\n            {\n                code: 'BE05',\n                name: 'Limburg Province',\n            },\n            {\n                code: 'BE06',\n                name: 'Luxembourg Province',\n            },\n            {\n                code: 'BE07',\n                name: 'Namur Province',\n            },\n            {\n                code: 'BE08',\n                name: 'Oost-Vlaanderen Province',\n            },\n            {\n                code: 'BE10',\n                name: 'Walloon Brabant Province',\n            },\n            {\n                code: 'BE09',\n                name: 'West-Vlaanderen Province',\n            },\n        ],\n    },\n    {\n        code: 'BZ',\n        id: 2203,\n        name: 'Belize',\n        states: [],\n    },\n    {\n        code: 'BJ',\n        id: 2204,\n        name: 'Benin',\n        states: [\n            {\n                code: 'BN07',\n                name: 'Alibori',\n            },\n            {\n                code: 'BN08',\n                name: 'Atacora',\n            },\n            {\n                code: 'BN09',\n                name: 'Atlantique',\n            },\n            {\n                code: 'BN10',\n                name: 'Borgou',\n            },\n            {\n                code: 'BN11',\n                name: 'Collines',\n            },\n            {\n                code: 'BN12',\n                name: 'Couffo',\n            },\n            {\n                code: 'BN13',\n                name: 'Donga',\n            },\n            {\n                code: 'BN14',\n                name: 'Littoral',\n            },\n            {\n                code: 'BN15',\n                name: 'Mono',\n            },\n            {\n                code: 'BN16',\n                name: 'Ouémé',\n            },\n            {\n                code: 'BN17',\n                name: 'Plateau',\n            },\n            {\n                code: 'BN18',\n                name: 'Zou',\n            },\n        ],\n    },\n    {\n        code: 'BU',\n        id: 2372,\n        name: 'Bermuda',\n        states: [\n            {\n                code: 'BM.BD',\n                name: 'Bermuda',\n            },\n            {\n                code: 'BD01',\n                name: 'Devonshire',\n            },\n            {\n                code: 'BD03',\n                name: 'Hamilton municipality',\n            },\n            {\n                code: 'BD02',\n                name: 'Hamilton',\n            },\n            {\n                code: 'BD04',\n                name: 'Paget',\n            },\n            {\n                code: 'BD05',\n                name: 'Pembroke',\n            },\n            {\n                code: 'BD06',\n                name: 'Saint George municipality',\n            },\n            {\n                code: 'BD07',\n                name: \"Saint George's\",\n            },\n            {\n                code: 'BD08',\n                name: 'Sandys',\n            },\n            {\n                code: 'BD09',\n                name: 'Smiths',\n            },\n            {\n                code: 'BD10',\n                name: 'Southampton',\n            },\n            {\n                code: 'BD11',\n                name: 'Warwick',\n            },\n        ],\n    },\n    {\n        code: 'BT',\n        id: 2205,\n        name: 'Bhutan',\n        states: [],\n    },\n    {\n        code: 'BO',\n        id: 2206,\n        name: 'Bolivia; Plurinational State',\n        states: [\n            {\n                code: 'BL01',\n                name: 'Chuquisaca',\n            },\n            {\n                code: 'BL02',\n                name: 'Cochabamba',\n            },\n            {\n                code: 'BL03',\n                name: 'El Beni',\n            },\n            {\n                code: 'BL04',\n                name: 'La Paz',\n            },\n            {\n                code: 'BL05',\n                name: 'Oruro',\n            },\n            {\n                code: 'BL06',\n                name: 'Pando',\n            },\n            {\n                code: 'BL07',\n                name: 'Potosí',\n            },\n            {\n                code: 'BL08',\n                name: 'Santa Cruz',\n            },\n            {\n                code: 'BL09',\n                name: 'Tarija',\n            },\n        ],\n    },\n    {\n        code: 'BQ',\n        id: 2449,\n        name: 'Bonaire',\n        states: [\n            {\n                code: 'BQ.BO',\n                name: 'Bonaire',\n            },\n            {\n                code: 'BQ.SB',\n                name: 'Saba',\n            },\n            {\n                code: 'BQ.SE',\n                name: 'Sint Eustatius',\n            },\n        ],\n    },\n    {\n        code: 'BA',\n        id: 2207,\n        name: 'Bosnia and Herzegovina',\n        states: [\n            {\n                code: 'BA-05',\n                name: 'Bosansko-podrinjski kanton',\n            },\n            {\n                code: 'BA-BRC',\n                name: 'Brcko distrikt',\n            },\n            {\n                code: 'BA-BIH',\n                name: 'Federacija Bosna i Hercegovina',\n            },\n            {\n                code: 'BA-07',\n                name: 'Hercegovacko-neretvanski kanton',\n            },\n            {\n                code: 'BA-09',\n                name: 'Kanton Sarajevo',\n            },\n            {\n                code: 'BA-10',\n                name: 'Livanjski kanton',\n            },\n            {\n                code: 'BA-02',\n                name: 'Posavski kanton',\n            },\n            {\n                code: 'BA-SRP',\n                name: 'Republika Srpska',\n            },\n            {\n                code: 'BA-06',\n                name: 'Srednjobosanski kanton',\n            },\n            {\n                code: 'BA-03',\n                name: 'Tuzlanski kanton',\n            },\n            {\n                code: 'BA-01',\n                name: 'Unsko-sanski kanton',\n            },\n            {\n                code: 'BA-08',\n                name: 'Zapadnohercegovacki kanton',\n            },\n            {\n                code: 'BA-04',\n                name: 'Zenicko-dobojski kanton',\n            },\n        ],\n    },\n    {\n        code: 'BW',\n        id: 2208,\n        name: 'Botswana',\n        states: [\n            {\n                code: 'BC01',\n                name: 'Central',\n            },\n            {\n                code: 'BC12',\n                name: 'Chobe',\n            },\n            {\n                code: 'BC13',\n                name: 'Francistown',\n            },\n            {\n                code: 'BC14',\n                name: 'Gaborone',\n            },\n            {\n                code: 'BC03',\n                name: 'Ghanzi',\n            },\n            {\n                code: 'BC15',\n                name: 'Jwaneng',\n            },\n            {\n                code: 'BC04',\n                name: 'Kgalagadi',\n            },\n            {\n                code: 'BC05',\n                name: 'Kgatleng',\n            },\n            {\n                code: 'BC06',\n                name: 'Kweneng',\n            },\n            {\n                code: 'BC16',\n                name: 'Lobatse',\n            },\n            {\n                code: 'BC08',\n                name: 'North-East',\n            },\n            {\n                code: 'BC11',\n                name: 'North-West',\n            },\n            {\n                code: 'BC17',\n                name: 'Selibe Phikwe',\n            },\n            {\n                code: 'BC09',\n                name: 'South East',\n            },\n            {\n                code: 'BC10',\n                name: 'Southern',\n            },\n            {\n                code: 'BC18',\n                name: 'Sowa Town',\n            },\n        ],\n    },\n    {\n        code: 'BV',\n        id: 2410,\n        name: 'Bouvet Island',\n        states: [],\n    },\n    {\n        code: 'BR',\n        id: 2209,\n        name: 'Brazil',\n        states: [\n            {\n                code: 'AC',\n                name: 'Acre',\n            },\n            {\n                code: 'AL',\n                name: 'Alagoas',\n            },\n            {\n                code: 'AP',\n                name: 'Amapá',\n            },\n            {\n                code: 'AM',\n                name: 'Amazonas',\n            },\n            {\n                code: 'BA',\n                name: 'Bahia',\n            },\n            {\n                code: 'CE',\n                name: 'Ceará',\n            },\n            {\n                code: 'DF',\n                name: 'Distrito Federal',\n            },\n            {\n                code: 'ES',\n                name: 'Espírito Santo',\n            },\n            {\n                code: 'GO',\n                name: 'Goiás',\n            },\n            {\n                code: 'MA',\n                name: 'Maranhão',\n            },\n            {\n                code: 'MT',\n                name: 'Mato Grosso',\n            },\n            {\n                code: 'MS',\n                name: 'Mato Grosso do Sul',\n            },\n            {\n                code: 'MG',\n                name: 'Minas Gerais',\n            },\n            {\n                code: 'PA',\n                name: 'Pará',\n            },\n            {\n                code: 'PR',\n                name: 'Paraná',\n            },\n            {\n                code: 'PB',\n                name: 'Paraíba',\n            },\n            {\n                code: 'PE',\n                name: 'Pernambuco',\n            },\n            {\n                code: 'PI',\n                name: 'Piauí',\n            },\n            {\n                code: 'RN',\n                name: 'Rio Grande do Norte',\n            },\n            {\n                code: 'RS',\n                name: 'Rio Grande do Sul',\n            },\n            {\n                code: 'RJ',\n                name: 'Rio de Janeiro',\n            },\n            {\n                code: 'RO',\n                name: 'Rondônia',\n            },\n            {\n                code: 'RR',\n                name: 'Roraima',\n            },\n            {\n                code: 'SC',\n                name: 'Santa Catarina',\n            },\n            {\n                code: 'SP',\n                name: 'São Paulo',\n            },\n            {\n                code: 'SE',\n                name: 'Sergipe',\n            },\n            {\n                code: 'TO',\n                name: 'Tocantins',\n            },\n        ],\n    },\n    {\n        code: 'IO',\n        id: 2411,\n        name: 'British Indian Ocean Territory',\n        states: [],\n    },\n    {\n        code: 'BN',\n        id: 2210,\n        name: 'Brunei Darussalam',\n        states: [\n            {\n                code: 'BX01',\n                name: 'Amo',\n            },\n            {\n                code: 'BX02',\n                name: 'Bandar Seri Begawan',\n            },\n            {\n                code: 'BX03',\n                name: 'Bangar',\n            },\n            {\n                code: 'BX04',\n                name: 'Batu Apoi',\n            },\n            {\n                code: 'BX05',\n                name: 'Berakas',\n            },\n            {\n                code: 'BX06',\n                name: 'Bokok',\n            },\n            {\n                code: 'BX07',\n                name: 'Bukit Sawat',\n            },\n            {\n                code: 'BX08',\n                name: 'Burong Pinggai Ayer',\n            },\n            {\n                code: 'BX09',\n                name: 'Gadong',\n            },\n            {\n                code: 'BX10',\n                name: 'Keriam',\n            },\n            {\n                code: 'BX11',\n                name: 'Kianggeh',\n            },\n            {\n                code: 'BX12',\n                name: 'Kilanas',\n            },\n            {\n                code: 'BX13',\n                name: 'Kiudang',\n            },\n            {\n                code: 'BX14',\n                name: 'Kota Batu',\n            },\n            {\n                code: 'BX15',\n                name: 'Kuala Balai',\n            },\n            {\n                code: 'BX16',\n                name: 'Kuala Belait',\n            },\n            {\n                code: 'BX17',\n                name: 'Labi',\n            },\n            {\n                code: 'BX18',\n                name: 'Labu',\n            },\n            {\n                code: 'BX19',\n                name: 'Lamunin',\n            },\n            {\n                code: 'BX20',\n                name: 'Liang',\n            },\n            {\n                code: 'BX21',\n                name: 'Lumapas',\n            },\n            {\n                code: 'BX22',\n                name: 'Melilas',\n            },\n            {\n                code: 'BX23',\n                name: 'Mentiri',\n            },\n            {\n                code: 'BX24',\n                name: 'Pekan Tutong',\n            },\n            {\n                code: 'BX25',\n                name: 'Pengkalan Batu',\n            },\n            {\n                code: 'BX26',\n                name: 'Peramu',\n            },\n            {\n                code: 'BX27',\n                name: 'Rambai',\n            },\n            {\n                code: 'BX28',\n                name: 'Saba',\n            },\n            {\n                code: 'BX29',\n                name: 'Sengkurong',\n            },\n            {\n                code: 'BX30',\n                name: 'Serasa',\n            },\n            {\n                code: 'BX31',\n                name: 'Seria',\n            },\n            {\n                code: 'BX32',\n                name: 'Sukang',\n            },\n            {\n                code: 'BX33',\n                name: 'Sungai Kebun',\n            },\n            {\n                code: 'BX34',\n                name: 'Sungai Kedayan',\n            },\n            {\n                code: 'BX35',\n                name: 'Tamoi',\n            },\n            {\n                code: 'BX36',\n                name: 'Tanjong Maya',\n            },\n            {\n                code: 'BX37',\n                name: 'Telisai',\n            },\n            {\n                code: 'BX38',\n                name: 'Ukong',\n            },\n        ],\n    },\n    {\n        code: 'BG',\n        id: 2211,\n        name: 'Bulgaria',\n        states: [\n            {\n                code: 'BU38',\n                name: 'Blagoevgrad',\n            },\n            {\n                code: 'BU39',\n                name: 'Burgas',\n            },\n            {\n                code: 'BU40',\n                name: 'Dobrich',\n            },\n            {\n                code: 'BU41',\n                name: 'Gabrovo',\n            },\n            {\n                code: 'BU42',\n                name: 'Grad Sofiya',\n            },\n            {\n                code: 'BU43',\n                name: 'Khaskovo',\n            },\n            {\n                code: 'BU44',\n                name: 'Kurdzhali',\n            },\n            {\n                code: 'BU45',\n                name: 'Kyustendil',\n            },\n            {\n                code: 'BU46',\n                name: 'Lovech',\n            },\n            {\n                code: 'BU47',\n                name: 'Montana',\n            },\n            {\n                code: 'BU48',\n                name: 'Pazardzhik',\n            },\n            {\n                code: 'BU49',\n                name: 'Pernik',\n            },\n            {\n                code: 'BU50',\n                name: 'Pleven',\n            },\n            {\n                code: 'BU51',\n                name: 'Plovdiv',\n            },\n            {\n                code: 'BU52',\n                name: 'Razgrad',\n            },\n            {\n                code: 'BU53',\n                name: 'Ruse',\n            },\n            {\n                code: 'BU54',\n                name: 'Shumen',\n            },\n            {\n                code: 'BU55',\n                name: 'Silistra',\n            },\n            {\n                code: 'BU56',\n                name: 'Sliven',\n            },\n            {\n                code: 'BU57',\n                name: 'Smolyan',\n            },\n            {\n                code: 'BU58',\n                name: 'Sofiya',\n            },\n            {\n                code: 'BU59',\n                name: 'Stara Zagora',\n            },\n            {\n                code: 'BU60',\n                name: 'Turgovishte',\n            },\n            {\n                code: 'BU61',\n                name: 'Varna',\n            },\n            {\n                code: 'BU62',\n                name: 'Veliko Turnovo',\n            },\n            {\n                code: 'BU63',\n                name: 'Vidin',\n            },\n            {\n                code: 'BU64',\n                name: 'Vratsa',\n            },\n            {\n                code: 'BU65',\n                name: 'Yambol',\n            },\n        ],\n    },\n    {\n        code: 'BF',\n        id: 2212,\n        name: 'Burkina Faso',\n        states: [\n            {\n                code: 'UV79',\n                name: 'Boucle du Mouhoun',\n            },\n            {\n                code: 'UV80',\n                name: 'Cascades',\n            },\n            {\n                code: 'UV82',\n                name: 'Centre Est',\n            },\n            {\n                code: 'UV83',\n                name: 'Centre Nord',\n            },\n            {\n                code: 'UV84',\n                name: 'Centre Ouest',\n            },\n            {\n                code: 'UV81',\n                name: 'Centre',\n            },\n            {\n                code: 'UV85',\n                name: 'Centre Sud',\n            },\n            {\n                code: 'UV86',\n                name: 'Est',\n            },\n            {\n                code: 'UV87',\n                name: 'Hauts Bassins',\n            },\n            {\n                code: 'UV88',\n                name: 'Nord',\n            },\n            {\n                code: 'UV89',\n                name: 'Plateau Central',\n            },\n            {\n                code: 'UV90',\n                name: 'Sahel',\n            },\n            {\n                code: 'UV91',\n                name: 'Sud-Ouest',\n            },\n        ],\n    },\n    {\n        code: 'BM',\n        id: 2385,\n        name: 'Burma',\n        states: [\n            {\n                code: 'BM03',\n                name: 'Ayeyarwady',\n            },\n            {\n                code: 'BM16',\n                name: 'Bago',\n            },\n            {\n                code: 'BM02',\n                name: 'Chin',\n            },\n            {\n                code: 'BM04',\n                name: 'Kachin',\n            },\n            {\n                code: 'BM06',\n                name: 'Kayah',\n            },\n            {\n                code: 'BM05',\n                name: 'Kayin',\n            },\n            {\n                code: 'BM15',\n                name: 'Magway',\n            },\n            {\n                code: 'BM08',\n                name: 'Mandalay',\n            },\n            {\n                code: 'BM13',\n                name: 'Mon',\n            },\n            {\n                code: 'BM18',\n                name: 'Naypyidaw',\n            },\n            {\n                code: 'BM01',\n                name: 'Rakhine',\n            },\n            {\n                code: 'BM10',\n                name: 'Sagaing',\n            },\n            {\n                code: 'BM11',\n                name: 'Shan',\n            },\n            {\n                code: 'BM12',\n                name: 'Tanintharyi',\n            },\n            {\n                code: 'BM17',\n                name: 'Yangon',\n            },\n        ],\n    },\n    {\n        code: 'BI',\n        id: 2213,\n        name: 'Burundi',\n        states: [],\n    },\n    {\n        code: 'KH',\n        id: 2214,\n        name: 'Cambodia',\n        states: [\n            {\n                code: 'CB25',\n                name: 'Bântéay Méanchey',\n            },\n            {\n                code: 'CB29',\n                name: 'Batdâmbâng',\n            },\n            {\n                code: 'CB02',\n                name: 'Kâmpóng Cham',\n            },\n            {\n                code: 'CB03',\n                name: 'Kâmpóng Chhnang',\n            },\n            {\n                code: 'CB04',\n                name: 'Kâmpóng Spœ',\n            },\n            {\n                code: 'CB05',\n                name: 'Kâmpóng Thum',\n            },\n            {\n                code: 'CB21',\n                name: 'Kâmpôt',\n            },\n            {\n                code: 'CB07',\n                name: 'Kândal',\n            },\n            {\n                code: 'CB08',\n                name: 'Kaôh Kong',\n            },\n            {\n                code: 'CB09',\n                name: 'Krâchéh',\n            },\n            {\n                code: 'CB26',\n                name: 'Krong Keb',\n            },\n            {\n                code: 'CB30',\n                name: 'Krong Pailin',\n            },\n            {\n                code: 'CB28',\n                name: 'Krong Preah Sihanouk',\n            },\n            {\n                code: 'CB10',\n                name: 'Môndól Kiri',\n            },\n            {\n                code: 'CB27',\n                name: 'Otdâr Méanchey',\n            },\n            {\n                code: 'CB22',\n                name: 'Phnom Penh',\n            },\n            {\n                code: 'CB12',\n                name: 'Pouthisat',\n            },\n            {\n                code: 'CB13',\n                name: 'Preah Vihéar',\n            },\n            {\n                code: 'CB14',\n                name: 'Prey Vêng',\n            },\n            {\n                code: 'CB23',\n                name: 'Rôtânôkiri',\n            },\n            {\n                code: 'CB24',\n                name: 'Siemréab',\n            },\n            {\n                code: 'CB17',\n                name: 'Stœ?ng Trêng',\n            },\n            {\n                code: 'CB18',\n                name: 'Svay Rieng',\n            },\n            {\n                code: 'CB19',\n                name: 'Takêv',\n            },\n            {\n                code: 'CB31',\n                name: 'Tbong Khmum',\n            },\n        ],\n    },\n    {\n        code: 'CM',\n        id: 2215,\n        name: 'Cameroon',\n        states: [\n            {\n                code: 'CM10',\n                name: 'Adamaoua',\n            },\n            {\n                code: 'CM11',\n                name: 'Centre',\n            },\n            {\n                code: 'CM04',\n                name: 'Est',\n            },\n            {\n                code: 'CM12',\n                name: 'Extrême-Nord',\n            },\n            {\n                code: 'CM05',\n                name: 'Littoral',\n            },\n            {\n                code: 'CM07',\n                name: 'Nord-Ouest',\n            },\n            {\n                code: 'CM13',\n                name: 'Nord',\n            },\n            {\n                code: 'CM08',\n                name: 'Ouest',\n            },\n            {\n                code: 'CM09',\n                name: 'Sud-Ouest',\n            },\n            {\n                code: 'CM14',\n                name: 'Sud',\n            },\n        ],\n    },\n    {\n        code: 'CA',\n        id: 2216,\n        name: 'Canada',\n        states: [\n            {\n                code: 'AB',\n                name: 'Alberta',\n            },\n            {\n                code: 'BC',\n                name: 'British Columbia',\n            },\n            {\n                code: 'MB',\n                name: 'Manitoba',\n            },\n            {\n                code: 'NB',\n                name: 'New Brunswick',\n            },\n            {\n                code: 'NL',\n                name: 'Newfoundland and Labrador',\n            },\n            {\n                code: 'NT',\n                name: 'Northwest Territories',\n            },\n            {\n                code: 'NS',\n                name: 'Nova Scotia',\n            },\n            {\n                code: 'NU',\n                name: 'Nunavut',\n            },\n            {\n                code: 'ON',\n                name: 'Ontario',\n            },\n            {\n                code: 'PE',\n                name: 'Prince Edward Island',\n            },\n            {\n                code: 'QC',\n                name: 'Quebec',\n            },\n            {\n                code: 'SK',\n                name: 'Saskatchewan',\n            },\n            {\n                code: 'YT',\n                name: 'Yukon',\n            },\n        ],\n    },\n    {\n        code: 'CV',\n        id: 2217,\n        name: 'Cape Verde',\n        states: [],\n    },\n    {\n        code: 'KY',\n        id: 2379,\n        name: 'Cayman Islands',\n        states: [\n            {\n                code: 'KY.BT',\n                name: 'Bodden Town',\n            },\n            {\n                code: 'KY.CJ',\n                name: 'Cayman Islands',\n            },\n            {\n                code: 'KY.EE',\n                name: 'East End',\n            },\n            {\n                code: 'KY.GT',\n                name: 'George Town',\n            },\n            {\n                code: 'KY.NS',\n                name: 'North Side',\n            },\n            {\n                code: 'KY.SI',\n                name: 'Sister Islands',\n            },\n            {\n                code: 'KY.WB',\n                name: 'West Bay',\n            },\n        ],\n    },\n    {\n        code: 'CF',\n        id: 2218,\n        name: 'Central African Republic',\n        states: [\n            {\n                code: 'CT01',\n                name: 'Bamingui-Bangoran',\n            },\n            {\n                code: 'CT18',\n                name: 'Bangui',\n            },\n            {\n                code: 'CT02',\n                name: 'Basse-Kotto',\n            },\n            {\n                code: 'CT05',\n                name: 'Haut-Mbomou',\n            },\n            {\n                code: 'CT03',\n                name: 'Haute-Kotto',\n            },\n            {\n                code: 'CT06',\n                name: 'Kémo',\n            },\n            {\n                code: 'CT07',\n                name: 'Lobaye',\n            },\n            {\n                code: 'CT04',\n                name: 'Mambéré-Kadéï',\n            },\n            {\n                code: 'CT08',\n                name: 'Mbomou',\n            },\n            {\n                code: 'CT15',\n                name: 'Nana-Grébizi',\n            },\n            {\n                code: 'CT09',\n                name: 'Nana-Mambéré',\n            },\n            {\n                code: 'CT17',\n                name: \"Ombella-M'Poko\",\n            },\n            {\n                code: 'CT11',\n                name: 'Ouaka',\n            },\n            {\n                code: 'CT12',\n                name: 'Ouham',\n            },\n            {\n                code: 'CT13',\n                name: 'Ouham-Pendé',\n            },\n            {\n                code: 'CT16',\n                name: 'Sangha-Mbaéré',\n            },\n            {\n                code: 'CT14',\n                name: 'Vakaga',\n            },\n        ],\n    },\n    {\n        code: 'TD',\n        id: 2219,\n        name: 'Chad',\n        states: [\n            {\n                code: 'CD22',\n                name: 'Barh el Ghazel',\n            },\n            {\n                code: 'CD01',\n                name: 'Batha',\n            },\n            {\n                code: 'CD23',\n                name: 'Borkou',\n            },\n            {\n                code: 'CD15',\n                name: 'Chari-Baguirmi',\n            },\n            {\n                code: 'CD27',\n                name: 'Ennedi Est',\n            },\n            {\n                code: 'CD28',\n                name: 'Ennedi Ouest',\n            },\n            {\n                code: 'CD05',\n                name: 'Guéra',\n            },\n            {\n                code: 'CD18',\n                name: 'Hadjer-Lamis',\n            },\n            {\n                code: 'CD06',\n                name: 'Kanem',\n            },\n            {\n                code: 'CD07',\n                name: 'Lac',\n            },\n            {\n                code: 'CD08',\n                name: 'Logone Occidental',\n            },\n            {\n                code: 'CD09',\n                name: 'Logone Oriental',\n            },\n            {\n                code: 'CD19',\n                name: 'Mandoul',\n            },\n            {\n                code: 'CD16',\n                name: 'Mayo-Kebbi Est',\n            },\n            {\n                code: 'CD20',\n                name: 'Mayo-Kebbi Ouest',\n            },\n            {\n                code: 'CD17',\n                name: 'Moyen-Chari',\n            },\n            {\n                code: 'CD12',\n                name: 'Ouaddaï',\n            },\n            {\n                code: 'CD13',\n                name: 'Salamat',\n            },\n            {\n                code: 'CD25',\n                name: 'Sila',\n            },\n            {\n                code: 'CD14',\n                name: 'Tandjilé',\n            },\n            {\n                code: 'CD26',\n                name: 'Tibesti',\n            },\n            {\n                code: 'CD21',\n                name: \"Ville de N'Djamena\",\n            },\n            {\n                code: 'CD02',\n                name: 'Wadi Fira',\n            },\n        ],\n    },\n    {\n        code: 'CH99',\n        id: 2386,\n        name: 'Channel Islands',\n        states: [],\n    },\n    {\n        code: 'CL',\n        id: 2220,\n        name: 'Chile',\n        states: [\n            {\n                code: 'CL.AI',\n                name: 'Aisén del General Carlos Ibáñez del Campo',\n            },\n            {\n                code: 'CL.AN',\n                name: 'Antofagasta',\n            },\n            {\n                code: 'CL.AR',\n                name: 'Araucanía',\n            },\n            {\n                code: 'CL.AP',\n                name: 'Arica and Parinacota',\n            },\n            {\n                code: 'CL.AT',\n                name: 'Atacama',\n            },\n            {\n                code: 'CL.BI',\n                name: 'Bío-Bío',\n            },\n            {\n                code: 'CL.CO',\n                name: 'Coquimbo',\n            },\n            {\n                code: 'CL.LI',\n                name: \"Libertador General Bernardo O'Higgins\",\n            },\n            {\n                code: 'CL.LG',\n                name: 'Los Lagos',\n            },\n            {\n                code: 'CL.LR',\n                name: 'Los Ríos',\n            },\n            {\n                code: 'CL.MA',\n                name: 'Magallanes y Antártica Chilena',\n            },\n            {\n                code: 'CL.ML',\n                name: 'Maule',\n            },\n            {\n                code: 'CL.RM',\n                name: 'Región Metropolitana de Santiago',\n            },\n            {\n                code: 'CL.TP',\n                name: 'Tarapacá',\n            },\n            {\n                code: 'CL.VS',\n                name: 'Valparaíso',\n            },\n        ],\n    },\n    {\n        code: 'CN',\n        id: 2221,\n        name: 'China',\n        states: [\n            {\n                code: 'CH01',\n                name: 'Anhui',\n            },\n            {\n                code: 'CH22',\n                name: 'Beijing',\n            },\n            {\n                code: 'CH33',\n                name: 'Chongqing',\n            },\n            {\n                code: 'CH07',\n                name: 'Fujian',\n            },\n            {\n                code: 'CH15',\n                name: 'Gansu',\n            },\n            {\n                code: 'CH17',\n                name: 'Guangdon',\n            },\n            {\n                code: 'CH30',\n                name: 'Guangdong',\n            },\n            {\n                code: 'CH16',\n                name: 'Guangxi',\n            },\n            {\n                code: 'CH18',\n                name: 'Guizhou',\n            },\n            {\n                code: 'CH31',\n                name: 'Hainan',\n            },\n            {\n                code: 'CH10',\n                name: 'Hebei',\n            },\n            {\n                code: 'CH08',\n                name: 'Heilongjiang',\n            },\n            {\n                code: 'CH09',\n                name: 'Henan',\n            },\n            {\n                code: 'CH34',\n                name: 'Hong Kong',\n            },\n            {\n                code: 'CH12',\n                name: 'Hubei',\n            },\n            {\n                code: 'CH11',\n                name: 'Hunan',\n            },\n            {\n                code: 'CH04',\n                name: 'Jiangsu',\n            },\n            {\n                code: 'CH03',\n                name: 'Jiangxi',\n            },\n            {\n                code: 'CH05',\n                name: 'Jilin',\n            },\n            {\n                code: 'CH19',\n                name: 'Liaoning',\n            },\n            {\n                code: 'CH20',\n                name: 'Nei Mongol',\n            },\n            {\n                code: 'CH21',\n                name: 'Ningxia',\n            },\n            {\n                code: 'CH06',\n                name: 'Qinghai',\n            },\n            {\n                code: 'CH26',\n                name: 'Shaanxi',\n            },\n            {\n                code: 'CH25',\n                name: 'Shandong',\n            },\n            {\n                code: 'CH23',\n                name: 'Shanghai',\n            },\n            {\n                code: 'CH24',\n                name: 'Shanxi',\n            },\n            {\n                code: 'CH32',\n                name: 'Sichuan',\n            },\n            {\n                code: 'CH27',\n                name: 'Sichuan',\n            },\n            {\n                code: 'CH28',\n                name: 'Tianjin',\n            },\n            {\n                code: 'CH13',\n                name: 'Xinjiang',\n            },\n            {\n                code: 'CH14',\n                name: 'Xizang',\n            },\n            {\n                code: 'CH29',\n                name: 'Yunnan',\n            },\n            {\n                code: 'CH02',\n                name: 'Zhejiang',\n            },\n        ],\n    },\n    {\n        code: 'CX',\n        id: 2412,\n        name: 'Christmas Island',\n        states: [],\n    },\n    {\n        code: 'CC',\n        id: 2413,\n        name: 'Cocos (Keeling) Islands',\n        states: [],\n    },\n    {\n        code: 'CO',\n        id: 2222,\n        name: 'Colombia',\n        states: [\n            {\n                code: 'CO01',\n                name: 'Amazonas',\n            },\n            {\n                code: 'CO02',\n                name: 'Antioquia',\n            },\n            {\n                code: 'CO03',\n                name: 'Arauca',\n            },\n            {\n                code: 'CO04',\n                name: 'Atlántico',\n            },\n            {\n                code: 'CO35',\n                name: 'Bolívar',\n            },\n            {\n                code: 'CO36',\n                name: 'Boyacá',\n            },\n            {\n                code: 'CO37',\n                name: 'Caldas',\n            },\n            {\n                code: 'CO08',\n                name: 'Caquetá',\n            },\n            {\n                code: 'CO32',\n                name: 'Casanare',\n            },\n            {\n                code: 'CO09',\n                name: 'Cauca',\n            },\n            {\n                code: 'CO10',\n                name: 'Cesar',\n            },\n            {\n                code: 'CO11',\n                name: 'Chocó',\n            },\n            {\n                code: 'CO12',\n                name: 'Córdoba',\n            },\n            {\n                code: 'CO33',\n                name: 'Cundinamarca',\n            },\n            {\n                code: 'CO34',\n                name: 'Distrito Capital',\n            },\n            {\n                code: 'CO15',\n                name: 'Guainía',\n            },\n            {\n                code: 'CO14',\n                name: 'Guaviare',\n            },\n            {\n                code: 'CO16',\n                name: 'Huila',\n            },\n            {\n                code: 'CO17',\n                name: 'La Guajira',\n            },\n            {\n                code: 'CO38',\n                name: 'Magdalena',\n            },\n            {\n                code: 'CO19',\n                name: 'Meta',\n            },\n            {\n                code: 'CO20',\n                name: 'Nariño',\n            },\n            {\n                code: 'CO21',\n                name: 'Norte de Santander',\n            },\n            {\n                code: 'CO22',\n                name: 'Putumayo',\n            },\n            {\n                code: 'CO23',\n                name: 'Quindío',\n            },\n            {\n                code: 'CO24',\n                name: 'Risaralda',\n            },\n            {\n                code: 'CO25',\n                name: 'San Andrés y Providencia',\n            },\n            {\n                code: 'CO26',\n                name: 'Santander',\n            },\n            {\n                code: 'CO27',\n                name: 'Sucre',\n            },\n            {\n                code: 'CO28',\n                name: 'Tolima',\n            },\n            {\n                code: 'CO29',\n                name: 'Valle del Cauca',\n            },\n            {\n                code: 'CO30',\n                name: 'Vaupés',\n            },\n            {\n                code: 'CO31',\n                name: 'Vichada',\n            },\n        ],\n    },\n    {\n        code: 'KM',\n        id: 2223,\n        name: 'Comoros',\n        states: [],\n    },\n    {\n        code: 'ZR',\n        id: 2368,\n        name: 'Congo; Democratic Republic of',\n        states: [\n            {\n                code: 'CD.BU',\n                name: 'Bas-Uélé',\n            },\n            {\n                code: 'CD.HK',\n                name: 'Haut-Katanga',\n            },\n            {\n                code: 'CD.HL',\n                name: 'Haut-Lomami',\n            },\n            {\n                code: 'CD.HU',\n                name: 'Haut-Uélé',\n            },\n            {\n                code: 'CD.IT',\n                name: 'Ituri',\n            },\n            {\n                code: 'CD.KS',\n                name: 'Kasaï',\n            },\n            {\n                code: 'CD.LL',\n                name: 'Kasaï-Central',\n            },\n            {\n                code: 'CD.KO',\n                name: 'Kasaï Oriental',\n            },\n            {\n                code: 'CD.KN',\n                name: 'Kinshasa',\n            },\n            {\n                code: 'CD.BC',\n                name: 'Kongo Central',\n            },\n            {\n                code: 'CD.KG',\n                name: 'Kwango',\n            },\n            {\n                code: 'CD.KU',\n                name: 'Kwilu',\n            },\n            {\n                code: 'CD.LM',\n                name: 'Lomami',\n            },\n            {\n                code: 'CD.LB',\n                name: 'Lualaba',\n            },\n            {\n                code: 'CD.MA',\n                name: 'Mai-Ndombe',\n            },\n            {\n                code: 'CD.MN',\n                name: 'Maniema',\n            },\n            {\n                code: 'CD.MO',\n                name: 'Mongala',\n            },\n            {\n                code: 'CD.NK',\n                name: 'Nord-Kivu',\n            },\n            {\n                code: 'CD.NU',\n                name: 'Nord-Ubangi',\n            },\n            {\n                code: 'CD.SN',\n                name: 'Sankuru',\n            },\n            {\n                code: 'CD.SK',\n                name: 'Sud-Kivu',\n            },\n            {\n                code: 'CD.SU',\n                name: 'Sud-Ubangi',\n            },\n            {\n                code: 'CD.TG',\n                name: 'Tanganyika',\n            },\n            {\n                code: 'CD.TO',\n                name: 'Tshopo',\n            },\n            {\n                code: 'CD.TP',\n                name: 'Tshuapa',\n            },\n            {\n                code: 'CD.ET',\n                name: 'Équateur',\n            },\n        ],\n    },\n    {\n        code: 'CG',\n        id: 2383,\n        name: 'Congo; Republic of',\n        states: [],\n    },\n    {\n        code: 'CK',\n        id: 2414,\n        name: 'Cook Islands',\n        states: [],\n    },\n    {\n        code: 'CR',\n        id: 2226,\n        name: 'Costa Rica',\n        states: [\n            {\n                code: 'CS01',\n                name: 'Alajuela',\n            },\n            {\n                code: 'CS02',\n                name: 'Cartago',\n            },\n            {\n                code: 'CS03',\n                name: 'Guanacaste',\n            },\n            {\n                code: 'CS04',\n                name: 'Heredia',\n            },\n            {\n                code: 'CS06',\n                name: 'Limón',\n            },\n            {\n                code: 'CS07',\n                name: 'Puntarenas',\n            },\n            {\n                code: 'CS08',\n                name: 'San José',\n            },\n        ],\n    },\n    {\n        code: 'CI',\n        id: 2227,\n        name: \"Cote D'Ivoire\",\n        states: [\n            {\n                code: 'IV93',\n                name: 'Abidjan',\n            },\n            {\n                code: 'IV76',\n                name: 'Bas-Sassandra',\n            },\n            {\n                code: 'IV94',\n                name: 'Comoé',\n            },\n            {\n                code: 'IV77',\n                name: 'Denguélé',\n            },\n            {\n                code: 'IV95',\n                name: 'Gôh-Djiboua',\n            },\n            {\n                code: 'IV81',\n                name: 'Lacs',\n            },\n            {\n                code: 'IV82',\n                name: 'Lagunes',\n            },\n            {\n                code: 'IV78',\n                name: 'Montagnes',\n            },\n            {\n                code: 'IV96',\n                name: 'Sassandra-Marahoué',\n            },\n            {\n                code: 'IV87',\n                name: 'Savanes',\n            },\n            {\n                code: 'IV90',\n                name: 'Vallée du Bandama',\n            },\n            {\n                code: 'IV97',\n                name: 'Woroba',\n            },\n            {\n                code: 'IV98',\n                name: 'Yamoussoukro',\n            },\n            {\n                code: 'IV92',\n                name: 'Zanzan',\n            },\n        ],\n    },\n    {\n        code: 'HR',\n        id: 2228,\n        name: 'Croatia',\n        states: [\n            {\n                code: 'HR07',\n                name: 'Bjelovarsko-bilogorska',\n            },\n            {\n                code: 'HR12',\n                name: 'Brodsko-posavska',\n            },\n            {\n                code: 'HR19',\n                name: 'Dubrovacko-neretvanska',\n            },\n            {\n                code: 'HR21',\n                name: 'Grad Zagreb',\n            },\n            {\n                code: 'HR-18',\n                name: 'Istarska',\n            },\n            {\n                code: 'HR04',\n                name: 'Karlovacka',\n            },\n            {\n                code: 'HR06',\n                name: 'Koprivnicko-križevacka',\n            },\n            {\n                code: 'HR02',\n                name: 'Krapinsko-zagorska',\n            },\n            {\n                code: 'HR09',\n                name: 'Licko-senjska',\n            },\n            {\n                code: 'HR20',\n                name: 'Medimurska',\n            },\n            {\n                code: 'HR14',\n                name: 'Osjecko-baranjska',\n            },\n            {\n                code: 'HR11',\n                name: 'Požeško-slavonska',\n            },\n            {\n                code: 'HR08',\n                name: 'Primorsko-goranska',\n            },\n            {\n                code: 'HR15',\n                name: 'Šibensko-kninska',\n            },\n            {\n                code: 'HR03',\n                name: 'Sisacko-moslavacka',\n            },\n            {\n                code: 'HR17',\n                name: 'Splitsko-dalmatinska',\n            },\n            {\n                code: 'HR05',\n                name: 'Varaždinska',\n            },\n            {\n                code: 'HR10',\n                name: 'Viroviticko-podravska',\n            },\n            {\n                code: 'HR16',\n                name: 'Vukovarsko-srijemska',\n            },\n            {\n                code: 'HR13',\n                name: 'Zadarska',\n            },\n            {\n                code: 'HR01',\n                name: 'Zagrebacka',\n            },\n        ],\n    },\n    {\n        code: 'CU',\n        id: 2229,\n        name: 'Cuba',\n        states: [\n            {\n                code: 'CU17',\n                name: 'Artemisa',\n            },\n            {\n                code: 'CU05',\n                name: 'Camagüey',\n            },\n            {\n                code: 'CU07',\n                name: 'Ciego de Ávila',\n            },\n            {\n                code: 'CU08',\n                name: 'Cienfuegos',\n            },\n            {\n                code: 'CU09',\n                name: 'Granma',\n            },\n            {\n                code: 'CU10',\n                name: 'Guantánamo',\n            },\n            {\n                code: 'CU12',\n                name: 'Holguín',\n            },\n            {\n                code: 'CU04',\n                name: 'Isla de la Juventud',\n            },\n            {\n                code: 'CU02',\n                name: 'La Habana',\n            },\n            {\n                code: 'CU13',\n                name: 'Las Tunas',\n            },\n            {\n                code: 'CU03',\n                name: 'Matanzas',\n            },\n            {\n                code: 'CU18',\n                name: 'Mayabeque',\n            },\n            {\n                code: 'CU01',\n                name: 'Pinar del Río',\n            },\n            {\n                code: 'CU14',\n                name: 'Sancti Spíritus',\n            },\n            {\n                code: 'CU15',\n                name: 'Santiago de Cuba',\n            },\n            {\n                code: 'CU16',\n                name: 'Villa Clara',\n            },\n        ],\n    },\n    {\n        code: 'C999',\n        id: 2387,\n        name: 'Curacao',\n        states: [\n            {\n                code: 'CW.CU',\n                name: 'Curacao',\n            },\n        ],\n    },\n    {\n        code: 'CY',\n        id: 2230,\n        name: 'Cyprus',\n        states: [\n            {\n                code: 'CY01',\n                name: 'Famagusta',\n            },\n            {\n                code: 'CY02',\n                name: 'Kyrenia',\n            },\n            {\n                code: 'CY03',\n                name: 'Larnaca',\n            },\n            {\n                code: 'CY05',\n                name: 'Limassol',\n            },\n            {\n                code: 'CY04',\n                name: 'Nicosia',\n            },\n            {\n                code: 'CY06',\n                name: 'Paphos',\n            },\n        ],\n    },\n    {\n        code: 'CZ',\n        id: 2231,\n        name: 'Czech Republic',\n        states: [\n            {\n                code: 'JC',\n                name: 'Jihoceský kraj',\n            },\n            {\n                code: 'JM',\n                name: 'Jihomoravský kraj',\n            },\n            {\n                code: 'KA',\n                name: 'Karlovarský kraj',\n            },\n            {\n                code: 'KR',\n                name: 'Královéhradecký kraj',\n            },\n            {\n                code: 'LI',\n                name: 'Liberecký kraj',\n            },\n            {\n                code: 'MO',\n                name: 'Moravskoslezský kraj',\n            },\n            {\n                code: 'OL',\n                name: 'Olomoucký kraj',\n            },\n            {\n                code: 'PA',\n                name: 'Pardubický kraj',\n            },\n            {\n                code: 'PL',\n                name: 'Plzenský kraj',\n            },\n            {\n                code: 'PR',\n                name: 'Praha, hlavní mesto',\n            },\n            {\n                code: 'ST',\n                name: 'Stredoceský kraj',\n            },\n            {\n                code: 'VY',\n                name: 'Vysocina',\n            },\n            {\n                code: 'ZL',\n                name: 'Zlínský kraj',\n            },\n            {\n                code: 'US',\n                name: 'Ústecký kraj',\n            },\n        ],\n    },\n    {\n        code: 'DK',\n        id: 2232,\n        name: 'Denmark',\n        states: [\n            {\n                code: 'DA01',\n                name: 'Arhus County',\n            },\n            {\n                code: 'DA02',\n                name: 'Bornholm Regional Municipality',\n            },\n            {\n                code: 'DA17',\n                name: 'Capital Region',\n            },\n            {\n                code: 'DA18',\n                name: 'Central Jutland Region',\n            },\n            {\n                code: 'DA16',\n                name: 'Frederiksberg municipal',\n            },\n            {\n                code: 'DA03',\n                name: 'Frederiksborg County',\n            },\n            {\n                code: 'DA04',\n                name: 'Fyn County',\n            },\n            {\n                code: 'DA06',\n                name: 'Kobenhavn County',\n            },\n            {\n                code: 'DA05',\n                name: 'Kobenhavn municipal',\n            },\n            {\n                code: 'DA07',\n                name: 'Nordjylland County',\n            },\n            {\n                code: 'DA19',\n                name: 'North Jutland Region',\n            },\n            {\n                code: 'DA08',\n                name: 'Ribe County',\n            },\n            {\n                code: 'DA09',\n                name: 'Ringkobing County',\n            },\n            {\n                code: 'DA10',\n                name: 'Roskilde County',\n            },\n            {\n                code: 'DA11',\n                name: 'Sonderjylland County',\n            },\n            {\n                code: 'DA21',\n                name: 'South Denmark Region',\n            },\n            {\n                code: 'DA12',\n                name: 'Storstrom County',\n            },\n            {\n                code: 'DA13',\n                name: 'Vejle County',\n            },\n            {\n                code: 'DA14',\n                name: 'Vestsjaelland County',\n            },\n            {\n                code: 'DA15',\n                name: 'Viborg County',\n            },\n            {\n                code: 'DA20',\n                name: 'Zealand Region',\n            },\n        ],\n    },\n    {\n        code: 'DJ',\n        id: 2233,\n        name: 'Djibouti',\n        states: [],\n    },\n    {\n        code: 'DM',\n        id: 2234,\n        name: 'Dominica',\n        states: [],\n    },\n    {\n        code: 'DO',\n        id: 2235,\n        name: 'Dominican Republic',\n        states: [\n            {\n                code: 'DR01',\n                name: 'Azua',\n            },\n            {\n                code: 'DR02',\n                name: 'Bahoruco',\n            },\n            {\n                code: 'DR03',\n                name: 'Barahona',\n            },\n            {\n                code: 'DR04',\n                name: 'Dajabón',\n            },\n            {\n                code: 'DR34',\n                name: 'Distrito Nacional',\n            },\n            {\n                code: 'DR06',\n                name: 'Duarte',\n            },\n            {\n                code: 'DR28',\n                name: 'El Seibo',\n            },\n            {\n                code: 'DR11',\n                name: 'Elías Piña',\n            },\n            {\n                code: 'DR08',\n                name: 'Espaillat',\n            },\n            {\n                code: 'DR29',\n                name: 'Hato Mayor',\n            },\n            {\n                code: 'DR19',\n                name: 'Hermanas Mirabal',\n            },\n            {\n                code: 'DR09',\n                name: 'Independencia',\n            },\n            {\n                code: 'DR10',\n                name: 'La Altagracia',\n            },\n            {\n                code: 'DR12',\n                name: 'La Romana',\n            },\n            {\n                code: 'DR30',\n                name: 'La Vega',\n            },\n            {\n                code: 'DR14',\n                name: 'María Trinidad Sánchez',\n            },\n            {\n                code: 'DR31',\n                name: 'Monseñor Nouel',\n            },\n            {\n                code: 'DR15',\n                name: 'Monte Cristi',\n            },\n            {\n                code: 'DR32',\n                name: 'Monte Plata',\n            },\n            {\n                code: 'DR16',\n                name: 'Pedernales',\n            },\n            {\n                code: 'DR35',\n                name: 'Peravia',\n            },\n            {\n                code: 'DR18',\n                name: 'Puerto Plata',\n            },\n            {\n                code: 'DR20',\n                name: 'Samaná',\n            },\n            {\n                code: 'DR33',\n                name: 'San Cristóbal',\n            },\n            {\n                code: 'DR36',\n                name: 'San José de Ocoa',\n            },\n            {\n                code: 'DR23',\n                name: 'San Juan',\n            },\n            {\n                code: 'DR24',\n                name: 'San Pedro de Macorís',\n            },\n            {\n                code: 'DR21',\n                name: 'Sánchez Ramírez',\n            },\n            {\n                code: 'DR25',\n                name: 'Santiago',\n            },\n            {\n                code: 'DR26',\n                name: 'Santiago Rodríguez',\n            },\n            {\n                code: 'DR37',\n                name: 'Santo Domingo',\n            },\n            {\n                code: 'DR27',\n                name: 'Valverde',\n            },\n        ],\n    },\n    {\n        code: 'EC',\n        id: 2236,\n        name: 'Ecuador',\n        states: [\n            {\n                code: 'EC02',\n                name: 'Azuay',\n            },\n            {\n                code: 'EC02',\n                name: 'Azuay',\n            },\n            {\n                code: 'EC03',\n                name: 'Bolívar',\n            },\n            {\n                code: 'EC04',\n                name: 'Cañar',\n            },\n            {\n                code: 'EC05',\n                name: 'Carchi',\n            },\n            {\n                code: 'EC06',\n                name: 'Chimborazo',\n            },\n            {\n                code: 'EC07',\n                name: 'Cotopaxi',\n            },\n            {\n                code: 'EC08',\n                name: 'El Oro',\n            },\n            {\n                code: 'EC09',\n                name: 'Esmeraldas',\n            },\n            {\n                code: 'EC01',\n                name: 'Galápagos',\n            },\n            {\n                code: 'EC10',\n                name: 'Guayas',\n            },\n            {\n                code: 'EC11',\n                name: 'Imbabura',\n            },\n            {\n                code: 'EC12',\n                name: 'Loja',\n            },\n            {\n                code: 'EC13',\n                name: 'Los Ríos',\n            },\n            {\n                code: 'EC14',\n                name: 'Manabí',\n            },\n            {\n                code: 'EC15',\n                name: 'Morona-Santiago',\n            },\n            {\n                code: 'EC23',\n                name: 'Napo',\n            },\n            {\n                code: 'EC24',\n                name: 'Orellana',\n            },\n            {\n                code: 'EC17',\n                name: 'Pastaza',\n            },\n            {\n                code: 'EC18',\n                name: 'Pichincha',\n            },\n            {\n                code: 'EC25',\n                name: 'Santa Elena',\n            },\n            {\n                code: 'EC26',\n                name: 'Santo Domingo de los Tsáchilas',\n            },\n            {\n                code: 'EC22',\n                name: 'Sucumbíos',\n            },\n            {\n                code: 'EC19',\n                name: 'Tungurahua',\n            },\n            {\n                code: 'EC20',\n                name: 'Zamora-Chinchipe',\n            },\n        ],\n    },\n    {\n        code: 'EG',\n        id: 2237,\n        name: 'Egypt',\n        states: [\n            {\n                code: 'EG01',\n                name: 'Ad Daqahliyah',\n            },\n            {\n                code: 'EG02',\n                name: 'Al Bahr al Ahmar',\n            },\n            {\n                code: 'EG03',\n                name: 'Al Buhayrah',\n            },\n            {\n                code: 'EG04',\n                name: 'Al Fayyum',\n            },\n            {\n                code: 'EG05',\n                name: 'Al Gharbiyah',\n            },\n            {\n                code: 'EG06',\n                name: 'Al Iskandariyah',\n            },\n            {\n                code: 'EG07',\n                name: 'Al Isma`iliyah',\n            },\n            {\n                code: 'EG08',\n                name: 'Al Jizah',\n            },\n            {\n                code: 'EG09',\n                name: 'Al Minufiyah',\n            },\n            {\n                code: 'EG10',\n                name: 'Al Minya',\n            },\n            {\n                code: 'EG11',\n                name: 'Al Qahirah',\n            },\n            {\n                code: 'EG12',\n                name: 'Al Qalyubiyah',\n            },\n            {\n                code: 'EG28',\n                name: 'Al Uqsur',\n            },\n            {\n                code: 'EG13',\n                name: 'Al Wadi al Jadid',\n            },\n            {\n                code: 'EG15',\n                name: 'As Suways',\n            },\n            {\n                code: 'EG14',\n                name: 'Ash Sharqiyah',\n            },\n            {\n                code: 'EG16',\n                name: 'Aswan',\n            },\n            {\n                code: 'EG17',\n                name: 'Asyut',\n            },\n            {\n                code: 'EG18',\n                name: 'Bani Suwayf',\n            },\n            {\n                code: 'EG19',\n                name: 'Bur Sa`id',\n            },\n            {\n                code: 'EG20',\n                name: 'Dumyat',\n            },\n            {\n                code: 'EG26',\n                name: 'Janub Sina',\n            },\n            {\n                code: 'EG21',\n                name: 'Kafr ash Shaykh',\n            },\n            {\n                code: 'EG22',\n                name: 'Matruh',\n            },\n            {\n                code: 'EG23',\n                name: 'Qina',\n            },\n            {\n                code: 'EG27',\n                name: 'Shamal Sina',\n            },\n            {\n                code: 'EG24',\n                name: 'Suhaj',\n            },\n        ],\n    },\n    {\n        code: 'SV',\n        id: 2238,\n        name: 'El Salvador',\n        states: [\n            {\n                code: 'ES01',\n                name: 'Ahuachapán',\n            },\n            {\n                code: 'ES02',\n                name: 'Cabañas',\n            },\n            {\n                code: 'ES03',\n                name: 'Chalatenango',\n            },\n            {\n                code: 'ES04',\n                name: 'Cuscatlán',\n            },\n            {\n                code: 'ES05',\n                name: 'La Libertad',\n            },\n            {\n                code: 'ES06',\n                name: 'La Paz',\n            },\n            {\n                code: 'ES07',\n                name: 'La Unión',\n            },\n            {\n                code: 'ES08',\n                name: 'Morazán',\n            },\n            {\n                code: 'ES09',\n                name: 'San Miguel',\n            },\n            {\n                code: 'ES10',\n                name: 'San Salvador',\n            },\n            {\n                code: 'ES12',\n                name: 'San Vicente',\n            },\n            {\n                code: 'ES11',\n                name: 'Santa Ana',\n            },\n            {\n                code: 'ES13',\n                name: 'Sonsonate',\n            },\n            {\n                code: 'ES14',\n                name: 'Usulután',\n            },\n        ],\n    },\n    {\n        code: 'GQ',\n        id: 2239,\n        name: 'Equatorial Guinea',\n        states: [],\n    },\n    {\n        code: 'ER',\n        id: 2240,\n        name: 'Eritrea',\n        states: [],\n    },\n    {\n        code: 'EE',\n        id: 2241,\n        name: 'Estonia',\n        states: [\n            {\n                code: 'EN01',\n                name: 'Harju',\n            },\n            {\n                code: 'EN02',\n                name: 'Hiiu',\n            },\n            {\n                code: 'EN03',\n                name: 'Ida-Viru',\n            },\n            {\n                code: 'EN04',\n                name: 'Järva',\n            },\n            {\n                code: 'EN05',\n                name: 'Jõgeva',\n            },\n            {\n                code: 'EN07',\n                name: 'Lääne',\n            },\n            {\n                code: 'EN08',\n                name: 'Lääne-Viru',\n            },\n            {\n                code: 'EN11',\n                name: 'Pärnu',\n            },\n            {\n                code: 'EN12',\n                name: 'Põlva',\n            },\n            {\n                code: 'EN13',\n                name: 'Rapla',\n            },\n            {\n                code: 'EN14',\n                name: 'Saare',\n            },\n            {\n                code: 'EN18',\n                name: 'Tartu',\n            },\n            {\n                code: 'EN19',\n                name: 'Valga',\n            },\n            {\n                code: 'EN20',\n                name: 'Viljandi',\n            },\n            {\n                code: 'EN21',\n                name: 'Võru',\n            },\n        ],\n    },\n    {\n        code: 'ET',\n        id: 2242,\n        name: 'Ethiopia',\n        states: [\n            {\n                code: 'ET44',\n                name: 'Addis Ababa',\n            },\n            {\n                code: 'ET45',\n                name: 'Afar',\n            },\n            {\n                code: 'ET46',\n                name: 'Amhara',\n            },\n            {\n                code: 'ET47',\n                name: 'Benshangul-Gumaz',\n            },\n            {\n                code: 'ET48',\n                name: 'Dire Dawa',\n            },\n            {\n                code: 'ET49',\n                name: 'Gambela Peoples',\n            },\n            {\n                code: 'ET50',\n                name: 'Harari People',\n            },\n            {\n                code: 'ET51',\n                name: 'Oromia',\n            },\n            {\n                code: 'ET52',\n                name: 'Somali',\n            },\n            {\n                code: 'ET54',\n                name: 'Southern Nations, Nationalities and Peoples',\n            },\n            {\n                code: 'ET53',\n                name: 'Tigray',\n            },\n        ],\n    },\n    {\n        code: 'FK',\n        id: 2415,\n        name: 'Falkland Islands (Malvinas)',\n        states: [],\n    },\n    {\n        code: 'FI99',\n        id: 2388,\n        name: 'Faroe Islands',\n        states: [],\n    },\n    {\n        code: 'FJ',\n        id: 2243,\n        name: 'Fiji',\n        states: [],\n    },\n    {\n        code: 'FI',\n        id: 2244,\n        name: 'Finland',\n        states: [\n            {\n                code: 'FI-AL',\n                name: 'Ahvenanmaan lääni',\n            },\n            {\n                code: 'AX',\n                name: 'Ahvenanmaa',\n            },\n            {\n                code: 'FI.SK',\n                name: 'Etelä-Karjala',\n            },\n            {\n                code: 'FI.SO',\n                name: 'Etelä-Pohjanmaa',\n            },\n            {\n                code: 'FI.SS',\n                name: 'Etelä-Savo',\n            },\n            {\n                code: 'FI-ES',\n                name: 'Etelä-Suomen lääni',\n            },\n            {\n                code: 'FI-IS',\n                name: 'Itä-Suomen lääni',\n            },\n            {\n                code: 'FI.KA',\n                name: 'Kainuu',\n            },\n            {\n                code: 'FI.KH',\n                name: 'Kanta-Häme',\n            },\n            {\n                code: 'FI.CO',\n                name: 'Keski-Pohjanmaa',\n            },\n            {\n                code: 'FI.CF',\n                name: 'Keski-Suomi',\n            },\n            {\n                code: 'FI.KY',\n                name: 'Kymenlaakso',\n            },\n            {\n                code: 'FI-LS',\n                name: 'Länsi-Suomen lääni',\n            },\n            {\n                code: 'FI-LL',\n                name: 'Lapin lääni',\n            },\n            {\n                code: 'FI.LA',\n                name: 'Lappi',\n            },\n            {\n                code: 'FI-OL',\n                name: 'Oulun lääni',\n            },\n            {\n                code: 'FI.PH',\n                name: 'Päijät-Häme',\n            },\n            {\n                code: 'FI.TR',\n                name: 'Pirkanmaa',\n            },\n            {\n                code: 'FI.OS',\n                name: 'Pohjanmaa',\n            },\n            {\n                code: 'FI.NK',\n                name: 'Pohjois-Karjala',\n            },\n            {\n                code: 'FI.NO',\n                name: 'Pohjois-Pohjanmaa',\n            },\n            {\n                code: 'FI.NS',\n                name: 'Pohjois-Savo',\n            },\n            {\n                code: 'FI.SA',\n                name: 'Satakunta',\n            },\n            {\n                code: 'FI.US',\n                name: 'Uusimaa',\n            },\n            {\n                code: 'FI.SF',\n                name: 'Varsinais-Suomi',\n            },\n        ],\n    },\n    {\n        code: 'FR',\n        id: 2245,\n        name: 'France',\n        states: [\n            {\n                code: 'FRC2',\n                name: 'Ain',\n            },\n            {\n                code: 'FRC3',\n                name: 'Aisne',\n            },\n            {\n                code: 'FRC4',\n                name: 'Allier',\n            },\n            {\n                code: 'FRC6',\n                name: 'Alpes-Maritimes',\n            },\n            {\n                code: 'FRC5',\n                name: 'Alpes-de-Haute-Provence',\n            },\n            {\n                code: 'FRC1',\n                name: 'Alsace',\n            },\n            {\n                code: 'FR97',\n                name: 'Aquitaine',\n            },\n            {\n                code: 'FRC7',\n                name: 'Ardèche',\n            },\n            {\n                code: 'FRC8',\n                name: 'Ardennes',\n            },\n            {\n                code: 'FRC9',\n                name: 'Ariège',\n            },\n            {\n                code: 'FRD1',\n                name: 'Aube',\n            },\n            {\n                code: 'FRD2',\n                name: 'Aude',\n            },\n            {\n                code: 'FR.AR',\n                name: 'Auvergne-Rhône-Alpes',\n            },\n            {\n                code: 'FR98',\n                name: 'Auvergne',\n            },\n            {\n                code: 'FRD3',\n                name: 'Aveyron',\n            },\n            {\n                code: 'FRD4',\n                name: 'Bas-Rhin',\n            },\n            {\n                code: 'FR99',\n                name: 'Basse-Normandie',\n            },\n            {\n                code: 'FRD5',\n                name: 'Bouches-du-Rhône',\n            },\n            {\n                code: 'FR.BF',\n                name: 'Bourgogne-Franche-Comté',\n            },\n            {\n                code: 'FRA1',\n                name: 'Bourgogne',\n            },\n            {\n                code: 'FRA2',\n                name: 'Bretagne',\n            },\n            {\n                code: 'FRD8',\n                name: 'Calvados',\n            },\n            {\n                code: 'FRD9',\n                name: 'Cantal',\n            },\n            {\n                code: 'FRA3',\n                name: 'Centre',\n            },\n            {\n                code: 'FR.CN',\n                name: 'Centre-Val de Loire',\n            },\n            {\n                code: 'FRA4',\n                name: 'Champagne-Ardenne',\n            },\n            {\n                code: 'FRE1',\n                name: 'Charente-Maritime',\n            },\n            {\n                code: 'FRE2',\n                name: 'Charente',\n            },\n            {\n                code: 'FRE3',\n                name: 'Cher',\n            },\n            {\n                code: 'FRE4',\n                name: 'Corrèze',\n            },\n            {\n                code: 'FRE5',\n                name: 'Corse-du-Sud',\n            },\n            {\n                code: 'FR.CE',\n                name: 'Corse',\n            },\n            {\n                code: 'FRD6',\n                name: \"Côte-d'Or\",\n            },\n            {\n                code: 'FRD7',\n                name: \"Côtes-d'Armor\",\n            },\n            {\n                code: 'FRE6',\n                name: 'Creuse',\n            },\n            {\n                code: 'FRE7',\n                name: 'Deux-Sèvres',\n            },\n            {\n                code: 'FRE8',\n                name: 'Dordogne',\n            },\n            {\n                code: 'FRE9',\n                name: 'Doubs',\n            },\n            {\n                code: 'FRF1',\n                name: 'Drôme',\n            },\n            {\n                code: 'FRF2',\n                name: 'Essonne',\n            },\n            {\n                code: 'FRF3',\n                name: 'Eure-et-Loir',\n            },\n            {\n                code: 'FRF4',\n                name: 'Eure',\n            },\n            {\n                code: 'FRF5',\n                name: 'Finistère',\n            },\n            {\n                code: 'FRA6',\n                name: 'Franche-Comte',\n            },\n            {\n                code: 'FRF6',\n                name: 'Gard',\n            },\n            {\n                code: 'FRF7',\n                name: 'Gers',\n            },\n            {\n                code: 'FRF8',\n                name: 'Gironde',\n            },\n            {\n                code: 'FR.AO',\n                name: 'Grand Est',\n            },\n            {\n                code: 'FRG1',\n                name: 'Haut-Rhin',\n            },\n            {\n                code: 'FRG2',\n                name: 'Haute-Corse',\n            },\n            {\n                code: 'FRG3',\n                name: 'Haute-Garonne',\n            },\n            {\n                code: 'FRG4',\n                name: 'Haute-Loire',\n            },\n            {\n                code: 'FRG5',\n                name: 'Haute-Marne',\n            },\n            {\n                code: 'FRA7',\n                name: 'Haute-Normandie',\n            },\n            {\n                code: 'FRG6',\n                name: 'Haute-Saône',\n            },\n            {\n                code: 'FRG7',\n                name: 'Haute-Savoie',\n            },\n            {\n                code: 'FRG8',\n                name: 'Haute-Vienne',\n            },\n            {\n                code: 'FRG9',\n                name: 'Hautes-Alpes',\n            },\n            {\n                code: 'FRH1',\n                name: 'Hautes-Pyrénées',\n            },\n            {\n                code: 'FR.NC',\n                name: 'Hauts-de-France',\n            },\n            {\n                code: 'FRH2',\n                name: 'Hauts-de-Seine',\n            },\n            {\n                code: 'FRF9',\n                name: 'Hérault',\n            },\n            {\n                code: 'FRA8',\n                name: 'Ile-de-France',\n            },\n            {\n                code: 'FRH3',\n                name: 'Ille-et-Vilaine',\n            },\n            {\n                code: 'FRH5',\n                name: 'Indre',\n            },\n            {\n                code: 'FRH4',\n                name: 'Indre-et-Loire',\n            },\n            {\n                code: 'FRH6',\n                name: 'Isère',\n            },\n            {\n                code: 'FRH7',\n                name: 'Jura',\n            },\n            {\n                code: 'FRH8',\n                name: 'Landes',\n            },\n            {\n                code: 'FRA9',\n                name: 'Languedoc-Roussillon',\n            },\n            {\n                code: 'FRB1',\n                name: 'Limousin',\n            },\n            {\n                code: 'FRI3',\n                name: 'Loir-et-Cher',\n            },\n            {\n                code: 'FRI2',\n                name: 'Loiret',\n            },\n            {\n                code: 'FRI1',\n                name: 'Loire',\n            },\n            {\n                code: 'FRH9',\n                name: 'Loire-Atlantique',\n            },\n            {\n                code: 'FRB2',\n                name: 'Lorraine',\n            },\n            {\n                code: 'FRI4',\n                name: 'Lot-et-Garonne',\n            },\n            {\n                code: 'FRI5',\n                name: 'Lot',\n            },\n            {\n                code: 'FRI6',\n                name: 'Lozère',\n            },\n            {\n                code: 'FRI7',\n                name: 'Maine-et-Loire',\n            },\n            {\n                code: 'FRI8',\n                name: 'Manche',\n            },\n            {\n                code: 'FRI9',\n                name: 'Marne',\n            },\n            {\n                code: 'FRJ1',\n                name: 'Mayenne',\n            },\n            {\n                code: 'FRJ2',\n                name: 'Meurthe-et-Moselle',\n            },\n            {\n                code: 'FRJ3',\n                name: 'Meuse',\n            },\n            {\n                code: 'FRB3',\n                name: 'Midi-Pyrenees',\n            },\n            {\n                code: 'FRJ4',\n                name: 'Morbihan',\n            },\n            {\n                code: 'FRJ5',\n                name: 'Moselle',\n            },\n            {\n                code: 'FRJ6',\n                name: 'Nièvre',\n            },\n            {\n                code: 'FRJ7',\n                name: 'Nord France',\n            },\n            {\n                code: 'FR67',\n                name: 'Nord',\n            },\n            {\n                code: 'FR.ND',\n                name: 'Normandie',\n            },\n            {\n                code: 'FR.AC',\n                name: 'Nouvelle-Aquitaine',\n            },\n            {\n                code: 'FR.LP',\n                name: 'Occitanie',\n            },\n            {\n                code: 'FRJ8',\n                name: 'Oise',\n            },\n            {\n                code: 'FRJ9',\n                name: 'Orne',\n            },\n            {\n                code: 'FRK1',\n                name: 'Paris',\n            },\n            {\n                code: 'FRB4',\n                name: 'Pas-de-Calais',\n            },\n            {\n                code: 'FRB5',\n                name: 'Pays de la Loire',\n            },\n            {\n                code: 'FRB6',\n                name: 'Picardie',\n            },\n            {\n                code: 'FRB7',\n                name: 'Poitou-Charentes',\n            },\n            {\n                code: 'FRB8',\n                name: \"Provence-Alpes-Cote d'Azur\",\n            },\n            {\n                code: 'FRK2',\n                name: 'Puy-de-Dôme',\n            },\n            {\n                code: 'FRK3',\n                name: 'Pyrénées-Atlantiques',\n            },\n            {\n                code: 'FRK4',\n                name: 'Pyrénées-Orientales',\n            },\n            {\n                code: 'FRB9',\n                name: 'Rhône',\n            },\n            {\n                code: 'FRK5',\n                name: 'Saône-et-Loire',\n            },\n            {\n                code: 'FRK6',\n                name: 'Sarthe',\n            },\n            {\n                code: 'FRK7',\n                name: 'Savoie',\n            },\n            {\n                code: 'FRK9',\n                name: 'Seine-Maritime',\n            },\n            {\n                code: 'FRL1',\n                name: 'Seine-Saint-Denis',\n            },\n            {\n                code: 'FRK8',\n                name: 'Seine-et-Marne',\n            },\n            {\n                code: 'FRL2',\n                name: 'Somme',\n            },\n            {\n                code: 'FRL3',\n                name: 'Tarn-et-Garonne',\n            },\n            {\n                code: 'FRL4',\n                name: 'Tarn',\n            },\n            {\n                code: 'FRL5',\n                name: 'Territoire de Belfor',\n            },\n            {\n                code: 'FR14',\n                name: 'Territoire de Belfort',\n            },\n            {\n                code: 'FRL6',\n                name: \"Val-d'Oise\",\n            },\n            {\n                code: 'FRL7',\n                name: 'Val-de-Marne',\n            },\n            {\n                code: 'FRL8',\n                name: 'Var',\n            },\n            {\n                code: 'FRL9',\n                name: 'Vaucluse',\n            },\n            {\n                code: 'FRM1',\n                name: 'Vendée',\n            },\n            {\n                code: 'FRM2',\n                name: 'Vienne',\n            },\n            {\n                code: 'FR94',\n                name: 'Ville de Paris',\n            },\n            {\n                code: 'FRM3',\n                name: 'Vosges',\n            },\n            {\n                code: 'FRM4',\n                name: 'Yonne',\n            },\n            {\n                code: 'FRM5',\n                name: 'Yvelines',\n            },\n            {\n                code: 'FR.IF',\n                name: 'Île-de-France',\n            },\n        ],\n    },\n    {\n        code: 'GF',\n        id: 2416,\n        name: 'French Guiana',\n        states: [],\n    },\n    {\n        code: 'PF',\n        id: 2417,\n        name: 'French Polynesia',\n        states: [],\n    },\n    {\n        code: 'TF',\n        id: 2418,\n        name: 'French Southern Territories',\n        states: [],\n    },\n    {\n        code: 'GA',\n        id: 2246,\n        name: 'Gabon',\n        states: [\n            {\n                code: 'GB01',\n                name: 'Estuaire',\n            },\n            {\n                code: 'GB02',\n                name: 'Haut-Ogooué',\n            },\n            {\n                code: 'GB03',\n                name: 'Moyen-Ogooué',\n            },\n            {\n                code: 'GB04',\n                name: 'Ngounié',\n            },\n            {\n                code: 'GB05',\n                name: 'Nyanga',\n            },\n            {\n                code: 'GB06',\n                name: 'Ogooué-Ivindo',\n            },\n            {\n                code: 'GB07',\n                name: 'Ogooué-Lolo',\n            },\n            {\n                code: 'GB08',\n                name: 'Ogooué-Maritime',\n            },\n            {\n                code: 'GB09',\n                name: 'Woleu-Ntem',\n            },\n        ],\n    },\n    {\n        code: 'GM',\n        id: 2389,\n        name: 'Gambia',\n        states: [\n            {\n                code: 'GA01',\n                name: 'Banjul',\n            },\n            {\n                code: 'GA03',\n                name: 'Central River',\n            },\n            {\n                code: 'GA02',\n                name: 'Lower River',\n            },\n            {\n                code: 'GA07',\n                name: 'North Bank',\n            },\n            {\n                code: 'GA04',\n                name: 'Upper River',\n            },\n            {\n                code: 'GA05',\n                name: 'West Coast',\n            },\n        ],\n    },\n    {\n        code: 'GE',\n        id: 2248,\n        name: 'Georgia',\n        states: [\n            {\n                code: 'GG02',\n                name: 'Abkhazia',\n            },\n            {\n                code: 'GG04',\n                name: 'Ajaria',\n            },\n            {\n                code: 'GG65',\n                name: 'Guria',\n            },\n            {\n                code: 'GG66',\n                name: 'Imereti',\n            },\n            {\n                code: 'GG67',\n                name: 'Kakheti',\n            },\n            {\n                code: 'GG68',\n                name: 'Kvemo Kartli',\n            },\n            {\n                code: 'GG69',\n                name: 'Mtskheta-Mtianeti',\n            },\n            {\n                code: 'GG70',\n                name: 'Racha-Lochkhumi-Kvemo Svaneti',\n            },\n            {\n                code: 'GG71',\n                name: 'Samegrelo-Zemo Svaneti',\n            },\n            {\n                code: 'GG72',\n                name: 'Samtskhe-Javakheti',\n            },\n            {\n                code: 'GG73',\n                name: 'Shida Kartli',\n            },\n            {\n                code: 'GG51',\n                name: 'Tbilisi',\n            },\n        ],\n    },\n    {\n        code: 'DE',\n        id: 2249,\n        name: 'Germany',\n        states: [\n            {\n                code: 'BW',\n                name: 'Baden-Württemberg',\n            },\n            {\n                code: 'BY',\n                name: 'Bayern',\n            },\n            {\n                code: 'BE',\n                name: 'Berlin',\n            },\n            {\n                code: 'BB',\n                name: 'Brandenburg',\n            },\n            {\n                code: 'HB',\n                name: 'Bremen',\n            },\n            {\n                code: 'HH',\n                name: 'Hamburg',\n            },\n            {\n                code: 'HE',\n                name: 'Hessen',\n            },\n            {\n                code: 'MV',\n                name: 'Mecklenburg-Vorpommern',\n            },\n            {\n                code: 'NI',\n                name: 'Niedersachsen',\n            },\n            {\n                code: 'NW',\n                name: 'Nordrhein-Westfalen',\n            },\n            {\n                code: 'RP',\n                name: 'Rheinland-Pfalz',\n            },\n            {\n                code: 'SL',\n                name: 'Saarland',\n            },\n            {\n                code: 'SN',\n                name: 'Sachsen',\n            },\n            {\n                code: 'ST',\n                name: 'Sachsen-Anhalt',\n            },\n            {\n                code: 'SH',\n                name: 'Schleswig-Holstein',\n            },\n            {\n                code: 'TH',\n                name: 'Thüringen',\n            },\n        ],\n    },\n    {\n        code: 'GH',\n        id: 2250,\n        name: 'Ghana',\n        states: [\n            {\n                code: 'GH02',\n                name: 'Ashanti',\n            },\n            {\n                code: 'GH03',\n                name: 'Brong-Ahafo',\n            },\n            {\n                code: 'GH04',\n                name: 'Central',\n            },\n            {\n                code: 'GH05',\n                name: 'Eastern',\n            },\n            {\n                code: 'GH01',\n                name: 'Greater Accra',\n            },\n            {\n                code: 'GH06',\n                name: 'Northern',\n            },\n            {\n                code: 'GH10',\n                name: 'Upper East',\n            },\n            {\n                code: 'GH11',\n                name: 'Upper West',\n            },\n            {\n                code: 'GH08',\n                name: 'Volta',\n            },\n            {\n                code: 'GH09',\n                name: 'Western',\n            },\n        ],\n    },\n    {\n        code: 'G999',\n        id: 2390,\n        name: 'Gibraltar',\n        states: [\n            {\n                code: 'GI.GI',\n                name: 'Gibraltar',\n            },\n        ],\n    },\n    {\n        code: 'GR',\n        id: 2251,\n        name: 'Greece',\n        states: [\n            {\n                code: '13',\n                name: 'Achaïa',\n            },\n            {\n                code: '69',\n                name: 'Agio Oros',\n            },\n            {\n                code: '01',\n                name: 'Aitolia kai Akarnania',\n            },\n            {\n                code: '11',\n                name: 'Argolida',\n            },\n            {\n                code: '12',\n                name: 'Arkadia',\n            },\n            {\n                code: '31',\n                name: 'Arta',\n            },\n            {\n                code: 'A1',\n                name: 'Attiki',\n            },\n            {\n                code: '64',\n                name: 'Chalkidiki',\n            },\n            {\n                code: '94',\n                name: 'Chania',\n            },\n            {\n                code: '85',\n                name: 'Chios',\n            },\n            {\n                code: '81',\n                name: 'Dodekanisos',\n            },\n            {\n                code: '52',\n                name: 'Drama',\n            },\n            {\n                code: '71',\n                name: 'Evros',\n            },\n            {\n                code: '05',\n                name: 'Evrytania',\n            },\n            {\n                code: '04',\n                name: 'Evvoia',\n            },\n            {\n                code: '63',\n                name: 'Florina',\n            },\n            {\n                code: '07',\n                name: 'Fokida',\n            },\n            {\n                code: '06',\n                name: 'Fthiotida',\n            },\n            {\n                code: '51',\n                name: 'Grevena',\n            },\n            {\n                code: '14',\n                name: 'Ileia',\n            },\n            {\n                code: '53',\n                name: 'Imathia',\n            },\n            {\n                code: '33',\n                name: 'Ioannina',\n            },\n            {\n                code: '91',\n                name: 'Irakleio',\n            },\n            {\n                code: '41',\n                name: 'Karditsa',\n            },\n            {\n                code: '56',\n                name: 'Kastoria',\n            },\n            {\n                code: '55',\n                name: 'Kavala',\n            },\n            {\n                code: '23',\n                name: 'Kefallonia',\n            },\n            {\n                code: '22',\n                name: 'Kerkyra',\n            },\n            {\n                code: '57',\n                name: 'Kilkis',\n            },\n            {\n                code: '15',\n                name: 'Korinthia',\n            },\n            {\n                code: '58',\n                name: 'Kozani',\n            },\n            {\n                code: '82',\n                name: 'Kyklades',\n            },\n            {\n                code: '16',\n                name: 'Lakonia',\n            },\n            {\n                code: '42',\n                name: 'Larisa',\n            },\n            {\n                code: '92',\n                name: 'Lasithi',\n            },\n            {\n                code: '24',\n                name: 'Lefkada',\n            },\n            {\n                code: '83',\n                name: 'Lesvos',\n            },\n            {\n                code: '43',\n                name: 'Magnisia',\n            },\n            {\n                code: '17',\n                name: 'Messinia',\n            },\n            {\n                code: '59',\n                name: 'Pella',\n            },\n            {\n                code: '61',\n                name: 'Pieria',\n            },\n            {\n                code: '34',\n                name: 'Preveza',\n            },\n            {\n                code: '93',\n                name: 'Rethymno',\n            },\n            {\n                code: '73',\n                name: 'Rodopi',\n            },\n            {\n                code: '84',\n                name: 'Samos',\n            },\n            {\n                code: '62',\n                name: 'Serres',\n            },\n            {\n                code: '32',\n                name: 'Thesprotia',\n            },\n            {\n                code: '54',\n                name: 'Thessaloniki',\n            },\n            {\n                code: '44',\n                name: 'Trikala',\n            },\n            {\n                code: '03',\n                name: 'Voiotia',\n            },\n            {\n                code: '72',\n                name: 'Xanthi',\n            },\n            {\n                code: '21',\n                name: 'Zakynthos',\n            },\n        ],\n    },\n    {\n        code: 'GL',\n        id: 2252,\n        name: 'Greenland',\n        states: [],\n    },\n    {\n        code: 'GD',\n        id: 2253,\n        name: 'Grenada',\n        states: [],\n    },\n    {\n        code: 'GP',\n        id: 2419,\n        name: 'Guadeloupe',\n        states: [],\n    },\n    {\n        code: 'GU',\n        id: 2376,\n        name: 'Guam',\n        states: [],\n    },\n    {\n        code: 'GT',\n        id: 2371,\n        name: 'Guatemala',\n        states: [\n            {\n                code: 'GT01',\n                name: 'Alta Verapaz',\n            },\n            {\n                code: 'GT02',\n                name: 'Baja Verapaz',\n            },\n            {\n                code: 'GT03',\n                name: 'Chimaltenango',\n            },\n            {\n                code: 'GT04',\n                name: 'Chiquimula',\n            },\n            {\n                code: 'GT05',\n                name: 'El Progreso',\n            },\n            {\n                code: 'GT06',\n                name: 'Escuintla',\n            },\n            {\n                code: 'GT07',\n                name: 'Guatemala',\n            },\n            {\n                code: 'GT08',\n                name: 'Huehuetenango',\n            },\n            {\n                code: 'GT09',\n                name: 'Izabal',\n            },\n            {\n                code: 'GT10',\n                name: 'Jalapa',\n            },\n            {\n                code: 'GT11',\n                name: 'Jutiapa',\n            },\n            {\n                code: 'GT12',\n                name: 'Petén',\n            },\n            {\n                code: 'GT13',\n                name: 'Quetzaltenango',\n            },\n            {\n                code: 'GT14',\n                name: 'Quiché',\n            },\n            {\n                code: 'GT15',\n                name: 'Retalhuleu',\n            },\n            {\n                code: 'GT16',\n                name: 'Sacatepéquez',\n            },\n            {\n                code: 'GT17',\n                name: 'San Marcos',\n            },\n            {\n                code: 'GT18',\n                name: 'Santa Rosa',\n            },\n            {\n                code: 'GT19',\n                name: 'Sololá',\n            },\n            {\n                code: 'GT20',\n                name: 'Suchitepéquez',\n            },\n            {\n                code: 'GT21',\n                name: 'Totonicapán',\n            },\n            {\n                code: 'GT22',\n                name: 'Zacapa',\n            },\n        ],\n    },\n    {\n        code: 'GG',\n        id: 2420,\n        name: 'Guernsey',\n        states: [],\n    },\n    {\n        code: 'GN',\n        id: 2255,\n        name: 'Guinea',\n        states: [\n            {\n                code: 'GV01',\n                name: 'Beyla',\n            },\n            {\n                code: 'GV02',\n                name: 'Boffa',\n            },\n            {\n                code: 'GV03',\n                name: 'Boké',\n            },\n            {\n                code: 'GV04',\n                name: 'Conakry',\n            },\n            {\n                code: 'GV30',\n                name: 'Coyah',\n            },\n            {\n                code: 'GV05',\n                name: 'Dabola',\n            },\n            {\n                code: 'GV06',\n                name: 'Dalaba',\n            },\n            {\n                code: 'GV07',\n                name: 'Dinguiraye',\n            },\n            {\n                code: 'GV31',\n                name: 'Dubréka',\n            },\n            {\n                code: 'GV09',\n                name: 'Faranah',\n            },\n            {\n                code: 'GV10',\n                name: 'Forécariah',\n            },\n            {\n                code: 'GV11',\n                name: 'Fria',\n            },\n            {\n                code: 'GV12',\n                name: 'Gaoual',\n            },\n            {\n                code: 'GV13',\n                name: 'Guéckédou',\n            },\n            {\n                code: 'GV32',\n                name: 'Kankan',\n            },\n            {\n                code: 'GV15',\n                name: 'Kérouané',\n            },\n            {\n                code: 'GV16',\n                name: 'Kindia',\n            },\n            {\n                code: 'GV17',\n                name: 'Kissidougou',\n            },\n            {\n                code: 'GV33',\n                name: 'Koubia',\n            },\n            {\n                code: 'GV18',\n                name: 'Koundara',\n            },\n            {\n                code: 'GV19',\n                name: 'Kouroussa',\n            },\n            {\n                code: 'GV34',\n                name: 'Labé',\n            },\n            {\n                code: 'GV35',\n                name: 'Lélouma',\n            },\n            {\n                code: 'GV36',\n                name: 'Lola',\n            },\n            {\n                code: 'GV21',\n                name: 'Macenta',\n            },\n            {\n                code: 'GV22',\n                name: 'Mali',\n            },\n            {\n                code: 'GV23',\n                name: 'Mamou',\n            },\n            {\n                code: 'GV37',\n                name: 'Mandiana',\n            },\n            {\n                code: 'GV38',\n                name: 'Nzérékoré',\n            },\n            {\n                code: 'GV25',\n                name: 'Pita',\n            },\n            {\n                code: 'GV39',\n                name: 'Siguiri',\n            },\n            {\n                code: 'GV27',\n                name: 'Télimélé',\n            },\n            {\n                code: 'GV28',\n                name: 'Tougué',\n            },\n            {\n                code: 'GV29',\n                name: 'Yomou',\n            },\n        ],\n    },\n    {\n        code: 'GW',\n        id: 2256,\n        name: 'Guinea-Bissau',\n        states: [\n            {\n                code: 'PU01',\n                name: 'Bafatá',\n            },\n            {\n                code: 'PU12',\n                name: 'Biombo',\n            },\n            {\n                code: 'PU11',\n                name: 'Bissau',\n            },\n            {\n                code: 'PU05',\n                name: 'Bolama',\n            },\n            {\n                code: 'PU06',\n                name: 'Cacheu',\n            },\n            {\n                code: 'PU10',\n                name: 'Gabú',\n            },\n            {\n                code: 'PU04',\n                name: 'Oio',\n            },\n            {\n                code: 'PU02',\n                name: 'Quinara',\n            },\n            {\n                code: 'PU07',\n                name: 'Tombali',\n            },\n        ],\n    },\n    {\n        code: 'GY',\n        id: 2257,\n        name: 'Guyana',\n        states: [\n            {\n                code: 'GY10',\n                name: 'Barima-Waini',\n            },\n            {\n                code: 'GY11',\n                name: 'Cuyuni-Mazaruni',\n            },\n            {\n                code: 'GY12',\n                name: 'Demerara-Mahaica',\n            },\n            {\n                code: 'GY13',\n                name: 'East Berbice-Corentyne',\n            },\n            {\n                code: 'GY14',\n                name: 'Essequibo Islands-West Demerara',\n            },\n            {\n                code: 'GY15',\n                name: 'Mahaica-Berbice',\n            },\n            {\n                code: 'GY16',\n                name: 'Pomeroon-Supenaam',\n            },\n            {\n                code: 'GY17',\n                name: 'Potaro-Siparuni',\n            },\n            {\n                code: 'GY18',\n                name: 'Upper Demerara-Berbice',\n            },\n            {\n                code: 'GY19',\n                name: 'Upper Takutu-Upper Essequibo',\n            },\n        ],\n    },\n    {\n        code: 'HT',\n        id: 2258,\n        name: 'Haiti',\n        states: [\n            {\n                code: 'HA07',\n                name: 'Centre',\n            },\n            {\n                code: 'HA14',\n                name: \"Grand' Anse\",\n            },\n            {\n                code: 'HA06',\n                name: \"L'Artibonite\",\n            },\n            {\n                code: 'HA15',\n                name: 'Nippes',\n            },\n            {\n                code: 'HA10',\n                name: 'Nord-Est',\n            },\n            {\n                code: 'HA03',\n                name: 'Nord-Ouest',\n            },\n            {\n                code: 'HA09',\n                name: 'Nord',\n            },\n            {\n                code: 'HA11',\n                name: 'Ouest',\n            },\n            {\n                code: 'HA13',\n                name: 'Sud-Est',\n            },\n            {\n                code: 'HA12',\n                name: 'Sud',\n            },\n        ],\n    },\n    {\n        code: 'HM',\n        id: 2421,\n        name: 'Heard and McDonald Islands',\n        states: [],\n    },\n    {\n        code: 'VA',\n        id: 2362,\n        name: 'Holy See (Vatican City State)',\n        states: [],\n    },\n    {\n        code: 'HN',\n        id: 2259,\n        name: 'Honduras',\n        states: [\n            {\n                code: 'HO01',\n                name: 'Atlántida',\n            },\n            {\n                code: 'HO02',\n                name: 'Choluteca',\n            },\n            {\n                code: 'HO03',\n                name: 'Colón',\n            },\n            {\n                code: 'HO04',\n                name: 'Comayagua',\n            },\n            {\n                code: 'HO05',\n                name: 'Copán',\n            },\n            {\n                code: 'HO06',\n                name: 'Cortés',\n            },\n            {\n                code: 'HO07',\n                name: 'El Paraíso',\n            },\n            {\n                code: 'HO08',\n                name: 'Francisco Morazán',\n            },\n            {\n                code: 'HO09',\n                name: 'Gracias a Dios',\n            },\n            {\n                code: 'HO10',\n                name: 'Intibucá',\n            },\n            {\n                code: 'HO11',\n                name: 'Islas de la Bahía',\n            },\n            {\n                code: 'HO12',\n                name: 'La Paz',\n            },\n            {\n                code: 'HO13',\n                name: 'Lempira',\n            },\n            {\n                code: 'HO14',\n                name: 'Ocotepeque',\n            },\n            {\n                code: 'HO15',\n                name: 'Olancho',\n            },\n            {\n                code: 'HO16',\n                name: 'Santa Bárbara',\n            },\n            {\n                code: 'HO17',\n                name: 'Valle',\n            },\n            {\n                code: 'HO18',\n                name: 'Yoro',\n            },\n        ],\n    },\n    {\n        code: 'HK',\n        id: 2377,\n        name: 'Hong Kong',\n        states: [\n            {\n                code: 'HK001',\n                name: 'Hong Kong Island',\n            },\n            {\n                code: 'HK002',\n                name: 'Kowloon',\n            },\n            {\n                code: 'HK003',\n                name: 'New Territories',\n            },\n        ],\n    },\n    {\n        code: 'HU',\n        id: 2260,\n        name: 'Hungary',\n        states: [\n            {\n                code: 'BK',\n                name: 'Bács-Kiskun',\n            },\n            {\n                code: 'BA',\n                name: 'Baranya',\n            },\n            {\n                code: 'BE',\n                name: 'Békés',\n            },\n            {\n                code: 'BC',\n                name: 'Békéscsaba',\n            },\n            {\n                code: 'BZ',\n                name: 'Borsod-Abaúj-Zemplén',\n            },\n            {\n                code: 'BU',\n                name: 'Budapest',\n            },\n            {\n                code: 'CS',\n                name: 'Csongrád',\n            },\n            {\n                code: 'DE',\n                name: 'Debrecen',\n            },\n            {\n                code: 'DU',\n                name: 'Dunaújváros',\n            },\n            {\n                code: 'EG',\n                name: 'Eger',\n            },\n            {\n                code: 'ER',\n                name: 'Erd',\n            },\n            {\n                code: 'FE',\n                name: 'Fejér',\n            },\n            {\n                code: 'GY',\n                name: 'Gyor',\n            },\n            {\n                code: 'GS',\n                name: 'Gyor-Moson-Sopron',\n            },\n            {\n                code: 'HB',\n                name: 'Hajdú-Bihar',\n            },\n            {\n                code: 'HE',\n                name: 'Heves',\n            },\n            {\n                code: 'HV',\n                name: 'Hódmezovásárhely',\n            },\n            {\n                code: 'JN',\n                name: 'Jász-Nagykun-Szolnok',\n            },\n            {\n                code: 'KV',\n                name: 'Kaposvár',\n            },\n            {\n                code: 'KM',\n                name: 'Kecskemét',\n            },\n            {\n                code: 'KE',\n                name: 'Komárom-Esztergom',\n            },\n            {\n                code: 'MI',\n                name: 'Miskolc',\n            },\n            {\n                code: 'NK',\n                name: 'Nagykanizsa',\n            },\n            {\n                code: 'NO',\n                name: 'Nógrád',\n            },\n            {\n                code: 'NY',\n                name: 'Nyíregyháza',\n            },\n            {\n                code: 'PS',\n                name: 'Pécs',\n            },\n            {\n                code: 'PE',\n                name: 'Pest',\n            },\n            {\n                code: 'ST',\n                name: 'Salgótarján',\n            },\n            {\n                code: 'SO',\n                name: 'Somogy',\n            },\n            {\n                code: 'SN',\n                name: 'Sopron',\n            },\n            {\n                code: 'SZ',\n                name: 'Szabolcs-Szatmár-Bereg',\n            },\n            {\n                code: 'SD',\n                name: 'Szeged',\n            },\n            {\n                code: 'SF',\n                name: 'Székesfehérvár',\n            },\n            {\n                code: 'SS',\n                name: 'Szekszárd',\n            },\n            {\n                code: 'SK',\n                name: 'Szolnok',\n            },\n            {\n                code: 'SH',\n                name: 'Szombathely',\n            },\n            {\n                code: 'TB',\n                name: 'Tatabánya',\n            },\n            {\n                code: 'TO',\n                name: 'Tolna',\n            },\n            {\n                code: 'VA',\n                name: 'Vas',\n            },\n            {\n                code: 'VE',\n                name: 'Veszprém',\n            },\n            {\n                code: 'VM',\n                name: 'Veszprém City',\n            },\n            {\n                code: 'ZA',\n                name: 'Zala',\n            },\n            {\n                code: 'ZE',\n                name: 'Zalaegerszeg',\n            },\n        ],\n    },\n    {\n        code: 'IS',\n        id: 2261,\n        name: 'Iceland',\n        states: [\n            {\n                code: '7',\n                name: 'Austurland',\n            },\n            {\n                code: '1',\n                name: 'Höfuðborgarsvæði utan Reykjavíkur',\n            },\n            {\n                code: '6',\n                name: 'Norðurland eystra',\n            },\n            {\n                code: '5',\n                name: 'Norðurland vestra',\n            },\n            {\n                code: '0',\n                name: 'Reykjavík',\n            },\n            {\n                code: '8',\n                name: 'Suðurland',\n            },\n            {\n                code: '2',\n                name: 'Suðurnes',\n            },\n            {\n                code: '4',\n                name: 'Vestfirðir',\n            },\n            {\n                code: '3',\n                name: 'Vesturland',\n            },\n        ],\n    },\n    {\n        code: 'IN',\n        id: 2262,\n        name: 'India',\n        states: [\n            {\n                code: 'AN',\n                name: 'Andaman and Nicobar Islands',\n            },\n            {\n                code: 'AP',\n                name: 'Andhra Pradesh',\n            },\n            {\n                code: 'AR',\n                name: 'Arunachal Pradesh',\n            },\n            {\n                code: 'AS',\n                name: 'Assam',\n            },\n            {\n                code: 'BR',\n                name: 'Bihar',\n            },\n            {\n                code: 'CH',\n                name: 'Chandigarh',\n            },\n            {\n                code: 'CT',\n                name: 'Chhattisgarh',\n            },\n            {\n                code: 'DN',\n                name: 'Dadra and Nagar Haveli',\n            },\n            {\n                code: 'DD',\n                name: 'Daman and Diu',\n            },\n            {\n                code: 'DL',\n                name: 'Delhi',\n            },\n            {\n                code: 'GA',\n                name: 'Goa',\n            },\n            {\n                code: 'GJ',\n                name: 'Gujarat',\n            },\n            {\n                code: 'HR',\n                name: 'Haryana',\n            },\n            {\n                code: 'HP',\n                name: 'Himachal Pradesh',\n            },\n            {\n                code: 'JK',\n                name: 'Jammu and Kashmir',\n            },\n            {\n                code: 'JH',\n                name: 'Jharkhand',\n            },\n            {\n                code: 'KA',\n                name: 'Karnataka',\n            },\n            {\n                code: 'KL',\n                name: 'Kerala',\n            },\n            {\n                code: 'LD',\n                name: 'Lakshadweep',\n            },\n            {\n                code: 'MP',\n                name: 'Madhya Pradesh',\n            },\n            {\n                code: 'MH',\n                name: 'Maharashtra',\n            },\n            {\n                code: 'MN',\n                name: 'Manipur',\n            },\n            {\n                code: 'ML',\n                name: 'Meghalaya',\n            },\n            {\n                code: 'MZ',\n                name: 'Mizoram',\n            },\n            {\n                code: 'NL',\n                name: 'Nagaland',\n            },\n            {\n                code: 'OR',\n                name: 'Orissa',\n            },\n            {\n                code: 'PY',\n                name: 'Pondicherry',\n            },\n            {\n                code: 'PB',\n                name: 'Punjab',\n            },\n            {\n                code: 'RJ',\n                name: 'Rajasthan',\n            },\n            {\n                code: 'SK',\n                name: 'Sikkim',\n            },\n            {\n                code: 'TN',\n                name: 'Tamil Nadu',\n            },\n            {\n                code: 'TG',\n                name: 'Telangana',\n            },\n            {\n                code: 'TR',\n                name: 'Tripura',\n            },\n            {\n                code: 'UP',\n                name: 'Uttar Pradesh',\n            },\n            {\n                code: 'UL',\n                name: 'Uttaranchal',\n            },\n            {\n                code: 'WB',\n                name: 'West Bengal',\n            },\n        ],\n    },\n    {\n        code: 'ID',\n        id: 2263,\n        name: 'Indonesia',\n        states: [\n            {\n                code: 'AC',\n                name: 'Aceh',\n            },\n            {\n                code: 'BA',\n                name: 'Bali',\n            },\n            {\n                code: 'BB',\n                name: 'Bangka Belitung',\n            },\n            {\n                code: 'BT',\n                name: 'Banten',\n            },\n            {\n                code: 'BE',\n                name: 'Bengkulu',\n            },\n            {\n                code: 'GO',\n                name: 'Gorontalo',\n            },\n            {\n                code: 'JK',\n                name: 'Jakarta Raya',\n            },\n            {\n                code: 'JA',\n                name: 'Jambi',\n            },\n            {\n                code: 'JB',\n                name: 'Jawa Barat',\n            },\n            {\n                code: 'JT',\n                name: 'Jawa Tengah',\n            },\n            {\n                code: 'JI',\n                name: 'Jawa Timur',\n            },\n            {\n                code: 'KB',\n                name: 'Kalimantan Barat',\n            },\n            {\n                code: 'KS',\n                name: 'Kalimantan Selatan',\n            },\n            {\n                code: 'KT',\n                name: 'Kalimantan Tengah',\n            },\n            {\n                code: 'KI',\n                name: 'Kalimantan Timur',\n            },\n            {\n                code: 'KR',\n                name: 'Kepulauan Riau',\n            },\n            {\n                code: 'LA',\n                name: 'Lampung',\n            },\n            {\n                code: 'MA',\n                name: 'Maluku',\n            },\n            {\n                code: 'MU',\n                name: 'Maluku Utara',\n            },\n            {\n                code: 'NB',\n                name: 'Nusa Tenggara Barat',\n            },\n            {\n                code: 'NT',\n                name: 'Nusa Tenggara Timur',\n            },\n            {\n                code: 'PA',\n                name: 'Papua',\n            },\n            {\n                code: 'PB',\n                name: 'Papua Barat',\n            },\n            {\n                code: 'RI',\n                name: 'Riau',\n            },\n            {\n                code: 'SR',\n                name: 'Sulawesi Barat',\n            },\n            {\n                code: 'SN',\n                name: 'Sulawesi Selatan',\n            },\n            {\n                code: 'ST',\n                name: 'Sulawesi Tengah',\n            },\n            {\n                code: 'SG',\n                name: 'Sulawesi Tenggara',\n            },\n            {\n                code: 'SA',\n                name: 'Sulawesi Utara',\n            },\n            {\n                code: 'SB',\n                name: 'Sumatera Barat',\n            },\n            {\n                code: 'SS',\n                name: 'Sumatera Selatan',\n            },\n            {\n                code: 'SU',\n                name: 'Sumatera Utara',\n            },\n            {\n                code: 'YO',\n                name: 'Yogyakarta',\n            },\n        ],\n    },\n    {\n        code: 'IR',\n        id: 2264,\n        name: 'Iran; Islamic Republic of',\n        states: [\n            {\n                code: 'IR44',\n                name: 'Alborz',\n            },\n            {\n                code: 'IR32',\n                name: 'Ardebil',\n            },\n            {\n                code: 'IR22',\n                name: 'Bushehr',\n            },\n            {\n                code: 'IR03',\n                name: 'Chahar Mahall and Bakhtiari',\n            },\n            {\n                code: 'IR33',\n                name: 'East Azarbaijan',\n            },\n            {\n                code: 'IR28',\n                name: 'Esfahan',\n            },\n            {\n                code: 'IR07',\n                name: 'Fars',\n            },\n            {\n                code: 'IR08',\n                name: 'Gilan',\n            },\n            {\n                code: 'IR37',\n                name: 'Golestan',\n            },\n            {\n                code: 'IR09',\n                name: 'Hamadan',\n            },\n            {\n                code: 'IR11',\n                name: 'Hormozgan',\n            },\n            {\n                code: 'IR42',\n                name: 'IRazavi Khorasan',\n            },\n            {\n                code: 'IR10',\n                name: 'Ilam',\n            },\n            {\n                code: 'IR29',\n                name: 'Kerman',\n            },\n            {\n                code: 'IR13',\n                name: 'Kermanshah',\n            },\n            {\n                code: 'IR15',\n                name: 'Khuzestan',\n            },\n            {\n                code: 'IR05',\n                name: 'Kohgiluyeh and Buyer Ahmad',\n            },\n            {\n                code: 'IR16',\n                name: 'Kordestan',\n            },\n            {\n                code: 'IR23',\n                name: 'Lorestan',\n            },\n            {\n                code: 'IR34',\n                name: 'Markazi',\n            },\n            {\n                code: 'IR35',\n                name: 'Mazandaran',\n            },\n            {\n                code: 'IR43',\n                name: 'North Khorasan',\n            },\n            {\n                code: 'IR38',\n                name: 'Qazvin',\n            },\n            {\n                code: 'IR39',\n                name: 'Qom',\n            },\n            {\n                code: 'IR25',\n                name: 'Semnan',\n            },\n            {\n                code: 'IR04',\n                name: 'Sistan and Baluchestan',\n            },\n            {\n                code: 'IR41',\n                name: 'South Khorasan',\n            },\n            {\n                code: 'IR26',\n                name: 'Tehran',\n            },\n            {\n                code: 'IR01',\n                name: 'West Azarbaijan',\n            },\n            {\n                code: 'IR40',\n                name: 'Yazd',\n            },\n            {\n                code: 'IR36',\n                name: 'Zanjan',\n            },\n        ],\n    },\n    {\n        code: 'IQ',\n        id: 2265,\n        name: 'Iraq',\n        states: [\n            {\n                code: 'IZ01',\n                name: 'Al-Anbar',\n            },\n            {\n                code: 'IZ02',\n                name: 'Al-Basrah',\n            },\n            {\n                code: 'IZ03',\n                name: 'Al-Muthanna',\n            },\n            {\n                code: 'IZ04',\n                name: 'Al-Qadisiyah',\n            },\n            {\n                code: 'IZ17',\n                name: 'An-Najaf',\n            },\n            {\n                code: 'IZ11',\n                name: 'Arbil',\n            },\n            {\n                code: 'IZ05',\n                name: 'As-Sulaymaniyah',\n            },\n            {\n                code: 'IZ13',\n                name: \"At-Ta'mim\",\n            },\n            {\n                code: 'IZ06',\n                name: 'Babil',\n            },\n            {\n                code: 'IZ07',\n                name: 'Baghdad',\n            },\n            {\n                code: 'IZ08',\n                name: 'Dahuk',\n            },\n            {\n                code: 'IZ09',\n                name: 'Dhi Qar',\n            },\n            {\n                code: 'IZ10',\n                name: 'Diyala',\n            },\n            {\n                code: 'IZ12',\n                name: 'Karbala',\n            },\n            {\n                code: 'IZ14',\n                name: 'Maysan',\n            },\n            {\n                code: 'IZ15',\n                name: 'Ninawa',\n            },\n            {\n                code: 'IZ18',\n                name: 'Salah ad-Din',\n            },\n            {\n                code: 'IZ16',\n                name: 'Wasit',\n            },\n        ],\n    },\n    {\n        code: 'IE',\n        id: 2266,\n        name: 'Ireland',\n        states: [\n            {\n                code: 'CW',\n                name: 'Carlow',\n            },\n            {\n                code: 'CN',\n                name: 'Cavan',\n            },\n            {\n                code: 'CE',\n                name: 'Clare',\n            },\n            {\n                code: 'C',\n                name: 'Connacht',\n            },\n            {\n                code: 'CO',\n                name: 'Cork',\n            },\n            {\n                code: 'DL',\n                name: 'Donegal',\n            },\n            {\n                code: 'D',\n                name: 'Dublin',\n            },\n            {\n                code: 'G',\n                name: 'Galway',\n            },\n            {\n                code: 'KY',\n                name: 'Kerry',\n            },\n            {\n                code: 'KE',\n                name: 'Kildare',\n            },\n            {\n                code: 'KK',\n                name: 'Kilkenny',\n            },\n            {\n                code: 'LS',\n                name: 'Laois',\n            },\n            {\n                code: 'L',\n                name: 'Leinster',\n            },\n            {\n                code: 'LM',\n                name: 'Leitrim',\n            },\n            {\n                code: 'LK',\n                name: 'Limerick',\n            },\n            {\n                code: 'LD',\n                name: 'Longford',\n            },\n            {\n                code: 'LH',\n                name: 'Louth',\n            },\n            {\n                code: 'MO',\n                name: 'Mayo',\n            },\n            {\n                code: 'MH',\n                name: 'Meath',\n            },\n            {\n                code: 'MN',\n                name: 'Monaghan',\n            },\n            {\n                code: 'M',\n                name: 'Munster',\n            },\n            {\n                code: 'OY',\n                name: 'Offaly',\n            },\n            {\n                code: 'RN',\n                name: 'Roscommon',\n            },\n            {\n                code: 'SO',\n                name: 'Sligo',\n            },\n            {\n                code: 'TA',\n                name: 'Tipperary',\n            },\n            {\n                code: 'U',\n                name: 'Ulster',\n            },\n            {\n                code: 'WD',\n                name: 'Waterford',\n            },\n            {\n                code: 'WH',\n                name: 'Westmeath',\n            },\n            {\n                code: 'WX',\n                name: 'Wexford',\n            },\n            {\n                code: 'WW',\n                name: 'Wicklow',\n            },\n        ],\n    },\n    {\n        code: 'IM',\n        id: 2445,\n        name: 'Isle of Man',\n        states: [],\n    },\n    {\n        code: 'IL',\n        id: 2267,\n        name: 'Israel',\n        states: [\n            {\n                code: 'IS01',\n                name: 'HaDarom',\n            },\n            {\n                code: 'IS02',\n                name: 'HaMerkaz',\n            },\n            {\n                code: 'IS03',\n                name: 'HaZafon',\n            },\n            {\n                code: 'IS04',\n                name: 'Haifa',\n            },\n            {\n                code: 'IS06',\n                name: 'Jerusalem',\n            },\n            {\n                code: 'IS05',\n                name: 'Tel Aviv',\n            },\n        ],\n    },\n    {\n        code: 'IT',\n        id: 2268,\n        name: 'Italy',\n        states: [\n            {\n                code: '65',\n                name: 'Abruzzo',\n            },\n            {\n                code: 'AG',\n                name: 'Agrigento',\n            },\n            {\n                code: 'AL',\n                name: 'Alessandria',\n            },\n            {\n                code: 'AN',\n                name: 'Ancona',\n            },\n            {\n                code: 'AO',\n                name: 'Aosta',\n            },\n            {\n                code: 'AR',\n                name: 'Arezzo',\n            },\n            {\n                code: 'AP',\n                name: 'Ascoli Piceno',\n            },\n            {\n                code: 'AT',\n                name: 'Asti',\n            },\n            {\n                code: 'AV',\n                name: 'Avellino',\n            },\n            {\n                code: 'BA',\n                name: 'Bari',\n            },\n            {\n                code: 'BT',\n                name: 'Barletta-Andria-Trani',\n            },\n            {\n                code: '77',\n                name: 'Basilicata',\n            },\n            {\n                code: 'BL',\n                name: 'Belluno',\n            },\n            {\n                code: 'BN',\n                name: 'Benevento',\n            },\n            {\n                code: 'BG',\n                name: 'Bergamo',\n            },\n            {\n                code: 'BI',\n                name: 'Biella',\n            },\n            {\n                code: 'BO',\n                name: 'Bologna',\n            },\n            {\n                code: 'BZ',\n                name: 'Bolzano',\n            },\n            {\n                code: 'BS',\n                name: 'Brescia',\n            },\n            {\n                code: 'BR',\n                name: 'Brindisi',\n            },\n            {\n                code: 'CA',\n                name: 'Cagliari',\n            },\n            {\n                code: '78',\n                name: 'Calabria',\n            },\n            {\n                code: 'CL',\n                name: 'Caltanissetta',\n            },\n            {\n                code: '72',\n                name: 'Campania',\n            },\n            {\n                code: 'CB',\n                name: 'Campobasso',\n            },\n            {\n                code: 'CI',\n                name: 'Carbonia-Iglesias',\n            },\n            {\n                code: 'CE',\n                name: 'Caserta',\n            },\n            {\n                code: 'CT',\n                name: 'Catania',\n            },\n            {\n                code: 'CZ',\n                name: 'Catanzaro',\n            },\n            {\n                code: 'CH',\n                name: 'Chieti',\n            },\n            {\n                code: 'CO',\n                name: 'Como',\n            },\n            {\n                code: 'CS',\n                name: 'Cosenza',\n            },\n            {\n                code: 'CR',\n                name: 'Cremona',\n            },\n            {\n                code: 'KR',\n                name: 'Crotone',\n            },\n            {\n                code: 'CN',\n                name: 'Cuneo',\n            },\n            {\n                code: '45',\n                name: 'Emilia-Romagna',\n            },\n            {\n                code: 'EN',\n                name: 'Enna',\n            },\n            {\n                code: 'FM',\n                name: 'Fermo',\n            },\n            {\n                code: 'FE',\n                name: 'Ferrara',\n            },\n            {\n                code: 'FI',\n                name: 'Firenze',\n            },\n            {\n                code: 'FG',\n                name: 'Foggia',\n            },\n            {\n                code: 'FC',\n                name: 'Forli-Cesena',\n            },\n            {\n                code: '36',\n                name: 'Friuli-Venezia Giulia',\n            },\n            {\n                code: 'FR',\n                name: 'Frosinone',\n            },\n            {\n                code: 'GE',\n                name: 'Genova',\n            },\n            {\n                code: 'GO',\n                name: 'Gorizia',\n            },\n            {\n                code: 'GR',\n                name: 'Grosseto',\n            },\n            {\n                code: 'IM',\n                name: 'Imperia',\n            },\n            {\n                code: 'IS',\n                name: 'Isernia',\n            },\n            {\n                code: 'AQ',\n                name: \"L'Aquila\",\n            },\n            {\n                code: 'SP',\n                name: 'La Spezia',\n            },\n            {\n                code: 'LT',\n                name: 'Latina',\n            },\n            {\n                code: '62',\n                name: 'Lazio',\n            },\n            {\n                code: 'LE',\n                name: 'Lecce',\n            },\n            {\n                code: 'LC',\n                name: 'Lecco',\n            },\n            {\n                code: '42',\n                name: 'Liguria',\n            },\n            {\n                code: 'LI',\n                name: 'Livorno',\n            },\n            {\n                code: 'LO',\n                name: 'Lodi',\n            },\n            {\n                code: '25',\n                name: 'Lombardia',\n            },\n            {\n                code: 'LU',\n                name: 'Lucca',\n            },\n            {\n                code: 'MC',\n                name: 'Macerata',\n            },\n            {\n                code: 'MN',\n                name: 'Mantova',\n            },\n            {\n                code: '57',\n                name: 'Marche',\n            },\n            {\n                code: 'MS',\n                name: 'Massa-Carrara',\n            },\n            {\n                code: 'MT',\n                name: 'Matera',\n            },\n            {\n                code: 'VS',\n                name: 'Medio Campidano',\n            },\n            {\n                code: 'ME',\n                name: 'Messina',\n            },\n            {\n                code: 'MI',\n                name: 'Milano',\n            },\n            {\n                code: 'MO',\n                name: 'Modena',\n            },\n            {\n                code: '67',\n                name: 'Molise',\n            },\n            {\n                code: 'MB',\n                name: 'Monza e Brianza',\n            },\n            {\n                code: 'NA',\n                name: 'Napoli',\n            },\n            {\n                code: 'NO',\n                name: 'Novara',\n            },\n            {\n                code: 'NU',\n                name: 'Nuoro',\n            },\n            {\n                code: 'OG',\n                name: 'Ogliastra',\n            },\n            {\n                code: 'OT',\n                name: 'Olbia-Tempio',\n            },\n            {\n                code: 'OR',\n                name: 'Oristano',\n            },\n            {\n                code: 'PD',\n                name: 'Padova',\n            },\n            {\n                code: 'PA',\n                name: 'Palermo',\n            },\n            {\n                code: 'PR',\n                name: 'Parma',\n            },\n            {\n                code: 'PV',\n                name: 'Pavia',\n            },\n            {\n                code: 'PG',\n                name: 'Perugia',\n            },\n            {\n                code: 'PU',\n                name: 'Pesaro e Urbino',\n            },\n            {\n                code: 'PE',\n                name: 'Pescara',\n            },\n            {\n                code: 'PC',\n                name: 'Piacenza',\n            },\n            {\n                code: '21',\n                name: 'Piemonte',\n            },\n            {\n                code: 'PI',\n                name: 'Pisa',\n            },\n            {\n                code: 'PT',\n                name: 'Pistoia',\n            },\n            {\n                code: 'PN',\n                name: 'Pordenone',\n            },\n            {\n                code: 'PZ',\n                name: 'Potenza',\n            },\n            {\n                code: 'PO',\n                name: 'Prato',\n            },\n            {\n                code: '75',\n                name: 'Puglia',\n            },\n            {\n                code: 'RG',\n                name: 'Ragusa',\n            },\n            {\n                code: 'RA',\n                name: 'Ravenna',\n            },\n            {\n                code: 'RC',\n                name: 'Reggio Calabria',\n            },\n            {\n                code: 'RE',\n                name: 'Reggio Emilia',\n            },\n            {\n                code: 'RI',\n                name: 'Rieti',\n            },\n            {\n                code: 'RN',\n                name: 'Rimini',\n            },\n            {\n                code: 'RM',\n                name: 'Roma',\n            },\n            {\n                code: 'RO',\n                name: 'Rovigo',\n            },\n            {\n                code: 'SA',\n                name: 'Salerno',\n            },\n            {\n                code: '88',\n                name: 'Sardegna',\n            },\n            {\n                code: 'SS',\n                name: 'Sassari',\n            },\n            {\n                code: 'SV',\n                name: 'Savona',\n            },\n            {\n                code: '82',\n                name: 'Sicilia',\n            },\n            {\n                code: 'SI',\n                name: 'Siena',\n            },\n            {\n                code: 'SR',\n                name: 'Siracusa',\n            },\n            {\n                code: 'SO',\n                name: 'Sondrio',\n            },\n            {\n                code: 'TA',\n                name: 'Taranto',\n            },\n            {\n                code: 'TE',\n                name: 'Teramo',\n            },\n            {\n                code: 'TR',\n                name: 'Terni',\n            },\n            {\n                code: 'TO',\n                name: 'Torino',\n            },\n            {\n                code: '52',\n                name: 'Toscana',\n            },\n            {\n                code: 'TP',\n                name: 'Trapani',\n            },\n            {\n                code: '32',\n                name: 'Trentino-Alto Adige',\n            },\n            {\n                code: 'TN',\n                name: 'Trento',\n            },\n            {\n                code: 'TV',\n                name: 'Treviso',\n            },\n            {\n                code: 'TS',\n                name: 'Trieste',\n            },\n            {\n                code: 'UD',\n                name: 'Udine',\n            },\n            {\n                code: '55',\n                name: 'Umbria',\n            },\n            {\n                code: '23',\n                name: \"Valle d'Aosta\",\n            },\n            {\n                code: 'VA',\n                name: 'Varese',\n            },\n            {\n                code: '34',\n                name: 'Veneto',\n            },\n            {\n                code: 'VE',\n                name: 'Venezia',\n            },\n            {\n                code: 'VB',\n                name: 'Verbano-Cusio-Ossola',\n            },\n            {\n                code: 'VC',\n                name: 'Vercelli',\n            },\n            {\n                code: 'VR',\n                name: 'Verona',\n            },\n            {\n                code: 'VV',\n                name: 'Vibo Valentia',\n            },\n            {\n                code: 'VI',\n                name: 'Vicenza',\n            },\n            {\n                code: 'VT',\n                name: 'Viterbo',\n            },\n        ],\n    },\n    {\n        code: 'JM',\n        id: 2269,\n        name: 'Jamaica',\n        states: [\n            {\n                code: 'JM01',\n                name: 'Clarendon',\n            },\n            {\n                code: 'JM02',\n                name: 'Hanover',\n            },\n            {\n                code: 'JM17',\n                name: 'Kingston',\n            },\n            {\n                code: 'JM04',\n                name: 'Manchester',\n            },\n            {\n                code: 'JM07',\n                name: 'Portland',\n            },\n            {\n                code: 'JM08',\n                name: 'Saint Andrew',\n            },\n            {\n                code: 'JM09',\n                name: 'Saint Ann',\n            },\n            {\n                code: 'JM10',\n                name: 'Saint Catherine',\n            },\n            {\n                code: 'JM11',\n                name: 'Saint Elizabeth',\n            },\n            {\n                code: 'JM12',\n                name: 'Saint James',\n            },\n            {\n                code: 'JM13',\n                name: 'Saint Mary',\n            },\n            {\n                code: 'JM14',\n                name: 'Saint Thomas',\n            },\n            {\n                code: 'JM15',\n                name: 'Trelawny',\n            },\n            {\n                code: 'JM16',\n                name: 'Westmoreland',\n            },\n        ],\n    },\n    {\n        code: 'JP',\n        id: 2270,\n        name: 'Japan',\n        states: [\n            {\n                code: 'JP23',\n                name: 'Aichi',\n            },\n            {\n                code: 'JP05',\n                name: 'Akita',\n            },\n            {\n                code: 'JP02',\n                name: 'Aomori',\n            },\n            {\n                code: 'JP12',\n                name: 'Chiba',\n            },\n            {\n                code: 'JP38',\n                name: 'Ehime',\n            },\n            {\n                code: 'JP18',\n                name: 'Fukui',\n            },\n            {\n                code: 'JP40',\n                name: 'Fukuoka',\n            },\n            {\n                code: 'JP07',\n                name: 'Fukushima',\n            },\n            {\n                code: 'JP21',\n                name: 'Gifu',\n            },\n            {\n                code: 'JP10',\n                name: 'Gunma',\n            },\n            {\n                code: 'JP34',\n                name: 'Hiroshima',\n            },\n            {\n                code: 'JP01',\n                name: 'Hokkaido',\n            },\n            {\n                code: 'JP28',\n                name: 'Hyogo',\n            },\n            {\n                code: 'JP08',\n                name: 'Ibaraki',\n            },\n            {\n                code: 'JP17',\n                name: 'Ishikawa',\n            },\n            {\n                code: 'JP03',\n                name: 'Iwate',\n            },\n            {\n                code: 'JP37',\n                name: 'Kagawa',\n            },\n            {\n                code: 'JP46',\n                name: 'Kagoshima',\n            },\n            {\n                code: 'JP14',\n                name: 'Kanagawa',\n            },\n            {\n                code: 'JP39',\n                name: 'Kochi',\n            },\n            {\n                code: 'JP43',\n                name: 'Kumamoto',\n            },\n            {\n                code: 'JP26',\n                name: 'Kyoto',\n            },\n            {\n                code: 'JP24',\n                name: 'Mie',\n            },\n            {\n                code: 'JP04',\n                name: 'Miyagi',\n            },\n            {\n                code: 'JP45',\n                name: 'Miyazaki',\n            },\n            {\n                code: 'JP20',\n                name: 'Nagano',\n            },\n            {\n                code: 'JP42',\n                name: 'Nagasaki',\n            },\n            {\n                code: 'JP29',\n                name: 'Nara',\n            },\n            {\n                code: 'JP15',\n                name: 'Niigata',\n            },\n            {\n                code: 'JP44',\n                name: 'Oita',\n            },\n            {\n                code: 'JP33',\n                name: 'Okayama',\n            },\n            {\n                code: 'JP47',\n                name: 'Okinawa',\n            },\n            {\n                code: 'JP27',\n                name: 'Osaka',\n            },\n            {\n                code: 'JP41',\n                name: 'Saga',\n            },\n            {\n                code: 'JP11',\n                name: 'Saitama',\n            },\n            {\n                code: 'JP25',\n                name: 'Shiga',\n            },\n            {\n                code: 'JP32',\n                name: 'Shimane',\n            },\n            {\n                code: 'JP22',\n                name: 'Shizuoka',\n            },\n            {\n                code: 'JP09',\n                name: 'Tochigi',\n            },\n            {\n                code: 'JP36',\n                name: 'Tokushima',\n            },\n            {\n                code: 'JP13',\n                name: 'Tokyo',\n            },\n            {\n                code: 'JP31',\n                name: 'Tottori',\n            },\n            {\n                code: 'JP16',\n                name: 'Toyama',\n            },\n            {\n                code: 'JP30',\n                name: 'Wakayama',\n            },\n            {\n                code: 'JP06',\n                name: 'Yamagata',\n            },\n            {\n                code: 'JP35',\n                name: 'Yamaguchi',\n            },\n            {\n                code: 'JP19',\n                name: 'Yamanashi',\n            },\n        ],\n    },\n    {\n        code: 'JE',\n        id: 2422,\n        name: 'Jersey',\n        states: [],\n    },\n    {\n        code: 'JO',\n        id: 2271,\n        name: 'Jordan',\n        states: [\n            {\n                code: 'JO01',\n                name: 'Ajlun',\n            },\n            {\n                code: 'JO02',\n                name: 'Amman',\n            },\n            {\n                code: 'JO03',\n                name: 'Aqaba',\n            },\n            {\n                code: 'JO04',\n                name: 'Balqa',\n            },\n            {\n                code: 'JO05',\n                name: 'Irbid',\n            },\n            {\n                code: 'JO06',\n                name: 'JarasJ',\n            },\n            {\n                code: 'JO07',\n                name: 'Karak',\n            },\n            {\n                code: 'JO08',\n                name: \"Ma'an\",\n            },\n            {\n                code: 'JO09',\n                name: 'Madaba',\n            },\n            {\n                code: 'JO10',\n                name: 'Mafraq',\n            },\n            {\n                code: 'JO11',\n                name: 'Tafilah',\n            },\n            {\n                code: 'JO12',\n                name: 'Zarqa',\n            },\n        ],\n    },\n    {\n        code: 'KZ',\n        id: 2272,\n        name: 'Kazakhstan',\n        states: [\n            {\n                code: 'KZ01',\n                name: 'Almaty',\n            },\n            {\n                code: 'KZ02',\n                name: 'Almaty (City)',\n            },\n            {\n                code: 'KZ03',\n                name: 'Aqmola',\n            },\n            {\n                code: 'KZ04',\n                name: 'Aqtöbe',\n            },\n            {\n                code: 'KZ05',\n                name: 'Astana',\n            },\n            {\n                code: 'KZ06',\n                name: 'Atyrau',\n            },\n            {\n                code: 'KZ08',\n                name: 'Bayqonyr',\n            },\n            {\n                code: 'KZ15',\n                name: 'East Kazakhstan',\n            },\n            {\n                code: 'KZ09',\n                name: 'Mangghystau',\n            },\n            {\n                code: 'KZ16',\n                name: 'North Kazakhstan',\n            },\n            {\n                code: 'KZ11',\n                name: 'Pavlodar',\n            },\n            {\n                code: 'KZ12',\n                name: 'Qaraghandy',\n            },\n            {\n                code: 'KZ13',\n                name: 'Qostanay',\n            },\n            {\n                code: 'KZ14',\n                name: 'Qyzylorda',\n            },\n            {\n                code: 'KZ10',\n                name: 'South Kazakhstan',\n            },\n            {\n                code: 'KZ07',\n                name: 'West Kazakhstan',\n            },\n            {\n                code: 'KZ17',\n                name: 'Zhambyl',\n            },\n        ],\n    },\n    {\n        code: 'KE',\n        id: 2273,\n        name: 'Kenya',\n        states: [\n            {\n                code: 'KE10',\n                name: 'Baringo',\n            },\n            {\n                code: 'KE11',\n                name: 'Bomet',\n            },\n            {\n                code: 'KE12',\n                name: 'Bungoma',\n            },\n            {\n                code: 'KE13',\n                name: 'Busia',\n            },\n            {\n                code: 'KE14',\n                name: 'Elgeyo Marakwet',\n            },\n            {\n                code: 'KE15',\n                name: 'Embu',\n            },\n            {\n                code: 'KE16',\n                name: 'Garissa',\n            },\n            {\n                code: 'KE17',\n                name: 'Homa Bay',\n            },\n            {\n                code: 'KE18',\n                name: 'Isiolo',\n            },\n            {\n                code: 'KE19',\n                name: 'Kajiado',\n            },\n            {\n                code: 'KE20',\n                name: 'Kakamega',\n            },\n            {\n                code: 'KE21',\n                name: 'Kericho',\n            },\n            {\n                code: 'KE22',\n                name: 'Kiambu',\n            },\n            {\n                code: 'KE23',\n                name: 'Kilifi',\n            },\n            {\n                code: 'KE24',\n                name: 'Kirinyaga',\n            },\n            {\n                code: 'KE25',\n                name: 'Kisii',\n            },\n            {\n                code: 'KE26',\n                name: 'Kisumu',\n            },\n            {\n                code: 'KE27',\n                name: 'Kitui',\n            },\n            {\n                code: 'KE28',\n                name: 'Kwale',\n            },\n            {\n                code: 'KE29',\n                name: 'Laikipia',\n            },\n            {\n                code: 'KE30',\n                name: 'Lamu',\n            },\n            {\n                code: 'KE31',\n                name: 'Machakos',\n            },\n            {\n                code: 'KE32',\n                name: 'Makueni',\n            },\n            {\n                code: 'KE33',\n                name: 'Mandera',\n            },\n            {\n                code: 'KE34',\n                name: 'Marsabit',\n            },\n            {\n                code: 'KE35',\n                name: 'Meru',\n            },\n            {\n                code: 'KE36',\n                name: 'Migori',\n            },\n            {\n                code: 'KE37',\n                name: 'Mombasa',\n            },\n            {\n                code: 'KE38',\n                name: 'Murang',\n            },\n            {\n                code: 'KE05',\n                name: 'Nairobi',\n            },\n            {\n                code: 'KE39',\n                name: 'Nakuru',\n            },\n            {\n                code: 'KE40',\n                name: 'Nandi',\n            },\n            {\n                code: 'KE41',\n                name: 'Narok',\n            },\n            {\n                code: 'KE42',\n                name: 'Nyamira',\n            },\n            {\n                code: 'KE43',\n                name: 'Nyandarua',\n            },\n            {\n                code: 'KE44',\n                name: 'Nyeri',\n            },\n            {\n                code: 'KE45',\n                name: 'Samburu',\n            },\n            {\n                code: 'KE46',\n                name: 'Siaya',\n            },\n            {\n                code: 'KE47',\n                name: 'Taita Taveta',\n            },\n            {\n                code: 'KE48',\n                name: 'Tana River',\n            },\n            {\n                code: 'KE49',\n                name: 'Tharaka Nithi',\n            },\n            {\n                code: 'KE50',\n                name: 'Trans Nzoia',\n            },\n            {\n                code: 'KE51',\n                name: 'Turkana',\n            },\n            {\n                code: 'KE52',\n                name: 'Uasin Gishu',\n            },\n            {\n                code: 'KE53',\n                name: 'Vihiga',\n            },\n            {\n                code: 'KE54',\n                name: 'Wajir',\n            },\n            {\n                code: 'KE55',\n                name: 'West Pokot',\n            },\n        ],\n    },\n    {\n        code: 'KI',\n        id: 2391,\n        name: 'Kiribati',\n        states: [],\n    },\n    {\n        code: 'KP',\n        id: 2274,\n        name: \"Korea; Democratic People's Republic Of (North)\",\n        states: [\n            {\n                code: 'KN01',\n                name: 'Chagang-do',\n            },\n            {\n                code: 'KN17',\n                name: 'Hamgyong-bukto',\n            },\n            {\n                code: 'KN03',\n                name: 'Hamgyong-namdo',\n            },\n            {\n                code: 'KN07',\n                name: 'Hwanghae-bukto',\n            },\n            {\n                code: 'KN06',\n                name: 'Hwanghae-namdo',\n            },\n            {\n                code: 'KN09',\n                name: 'Kangwon-do',\n            },\n            {\n                code: 'KN18',\n                name: 'Najin Sonbong-si',\n            },\n            {\n                code: 'KN11',\n                name: \"P'yongan-bukto\",\n            },\n            {\n                code: 'KN15',\n                name: \"P'yongan-namdo\",\n            },\n            {\n                code: 'KN12',\n                name: \"P'yongyang-si\",\n            },\n            {\n                code: 'KN13',\n                name: 'Yanggang-do',\n            },\n        ],\n    },\n    {\n        code: 'KR',\n        id: 2275,\n        name: 'Korea; Republic Of (South)',\n        states: [\n            {\n                code: 'KS10',\n                name: 'Busan',\n            },\n            {\n                code: 'KS05',\n                name: 'Chungcheongbuk-do',\n            },\n            {\n                code: 'KS17',\n                name: 'Chungcheongnam-do',\n            },\n            {\n                code: 'KS15',\n                name: 'Daegu',\n            },\n            {\n                code: 'KS19',\n                name: 'Daejeon',\n            },\n            {\n                code: 'KS06',\n                name: 'Gangwon-do',\n            },\n            {\n                code: 'KS18',\n                name: 'Gwangju',\n            },\n            {\n                code: 'KS13',\n                name: 'Gyeonggi-do',\n            },\n            {\n                code: 'KS14',\n                name: 'Gyeongsangbuk-do',\n            },\n            {\n                code: 'KS20',\n                name: 'Gyeongsangnam-do',\n            },\n            {\n                code: 'KS12',\n                name: 'Incheon',\n            },\n            {\n                code: 'KS01',\n                name: 'Jeju-do',\n            },\n            {\n                code: 'KS03',\n                name: 'Jeollabuk-do',\n            },\n            {\n                code: 'KS16',\n                name: 'Jeollanam-do',\n            },\n            {\n                code: 'KS22',\n                name: 'Sejong',\n            },\n            {\n                code: 'KS11',\n                name: 'Seoul',\n            },\n            {\n                code: 'KS21',\n                name: 'Ulsan',\n            },\n        ],\n    },\n    {\n        code: 'KV',\n        id: 2392,\n        name: 'Kosovo',\n        states: [],\n    },\n    {\n        code: 'KW',\n        id: 2276,\n        name: 'Kuwait',\n        states: [\n            {\n                code: 'KU04',\n                name: 'Al Ahmadi',\n            },\n            {\n                code: 'KU07',\n                name: 'Al Farwaniyah',\n            },\n            {\n                code: 'KU05',\n                name: 'Al Jahrah',\n            },\n            {\n                code: 'KU02',\n                name: 'Al Kuwayt',\n            },\n            {\n                code: 'KU08',\n                name: 'Hawalli',\n            },\n            {\n                code: 'KU09',\n                name: 'Mubarak Al-Kabir',\n            },\n        ],\n    },\n    {\n        code: 'KG',\n        id: 2277,\n        name: 'Kyrgyzstan',\n        states: [\n            {\n                code: 'KG09',\n                name: 'Batken',\n            },\n            {\n                code: 'KG01',\n                name: 'Bishkek',\n            },\n            {\n                code: 'KG02',\n                name: 'Chüy',\n            },\n            {\n                code: 'KG03',\n                name: 'Jalal-Abad',\n            },\n            {\n                code: 'KG04',\n                name: 'Naryn',\n            },\n            {\n                code: 'KG10',\n                name: 'Osh [City]',\n            },\n            {\n                code: 'KG08',\n                name: 'Osh',\n            },\n            {\n                code: 'KG06',\n                name: 'Talas',\n            },\n            {\n                code: 'KG07',\n                name: 'Ysyk-Köl',\n            },\n        ],\n    },\n    {\n        code: 'LA',\n        id: 2278,\n        name: \"Lao People's Democratic Republic\",\n        states: [\n            {\n                code: 'LA01',\n                name: 'Attapu',\n            },\n            {\n                code: 'LA22',\n                name: 'Bokeo',\n            },\n            {\n                code: 'LA23',\n                name: 'Bolikhamxai',\n            },\n            {\n                code: 'LA02',\n                name: 'Champasak',\n            },\n            {\n                code: 'LA03',\n                name: 'Houaphan',\n            },\n            {\n                code: 'LA15',\n                name: 'Khammouan',\n            },\n            {\n                code: 'LA16',\n                name: 'Louang Namtha',\n            },\n            {\n                code: 'LA17',\n                name: 'Louangphrabang',\n            },\n            {\n                code: 'LA07',\n                name: 'Oudômxai',\n            },\n            {\n                code: 'LA18',\n                name: 'Phôngsali',\n            },\n            {\n                code: 'LA19',\n                name: 'Saravan',\n            },\n            {\n                code: 'LA20',\n                name: 'Savannakhét',\n            },\n            {\n                code: 'LA27',\n                name: 'Vientiane',\n            },\n            {\n                code: 'LA24',\n                name: 'Vientiane [prefecture]',\n            },\n            {\n                code: 'LA13',\n                name: 'Xaignabouri',\n            },\n            {\n                code: 'LA28',\n                name: 'Xaisômboun',\n            },\n            {\n                code: 'LA26',\n                name: 'Xékong',\n            },\n            {\n                code: 'LA14',\n                name: 'Xiangkhoang',\n            },\n        ],\n    },\n    {\n        code: 'LV',\n        id: 2279,\n        name: 'Latvia',\n        states: [\n            {\n                code: 'LG34',\n                name: 'Adaži',\n            },\n            {\n                code: 'LG35',\n                name: 'Aglona',\n            },\n            {\n                code: 'LG36',\n                name: 'Aizkraukle',\n            },\n            {\n                code: 'LG37',\n                name: 'Aizpute',\n            },\n            {\n                code: 'LG38',\n                name: 'Akniste',\n            },\n            {\n                code: 'LG39',\n                name: 'Aloja',\n            },\n            {\n                code: 'LG40',\n                name: 'Alsunga',\n            },\n            {\n                code: 'LG41',\n                name: 'Aluksne',\n            },\n            {\n                code: 'LG42',\n                name: 'Amata',\n            },\n            {\n                code: 'LG43',\n                name: 'Ape',\n            },\n            {\n                code: 'LG44',\n                name: 'Auce',\n            },\n            {\n                code: 'LG45',\n                name: 'Babite',\n            },\n            {\n                code: 'LG46',\n                name: 'Baldone',\n            },\n            {\n                code: 'LG47',\n                name: 'Baltinava',\n            },\n            {\n                code: 'LG48',\n                name: 'Balvi',\n            },\n            {\n                code: 'LG49',\n                name: 'Bauska',\n            },\n            {\n                code: 'LG50',\n                name: 'Beverina',\n            },\n            {\n                code: 'LG51',\n                name: 'Broceni',\n            },\n            {\n                code: 'LG52',\n                name: 'Burtnieki',\n            },\n            {\n                code: 'LG53',\n                name: 'Carnikava',\n            },\n            {\n                code: 'LG54',\n                name: 'Cesis',\n            },\n            {\n                code: 'LG55',\n                name: 'Cesvaine',\n            },\n            {\n                code: 'LG56',\n                name: 'Cibla',\n            },\n            {\n                code: 'LG57',\n                name: 'Dagda',\n            },\n            {\n                code: 'LG06',\n                name: 'Daugavpils',\n            },\n            {\n                code: 'LG58',\n                name: 'Daugavpils',\n            },\n            {\n                code: 'LG59',\n                name: 'Dobele',\n            },\n            {\n                code: 'LG60',\n                name: 'Dundaga',\n            },\n            {\n                code: 'LG61',\n                name: 'Durbe',\n            },\n            {\n                code: 'LG62',\n                name: 'Engure',\n            },\n            {\n                code: 'LG63',\n                name: 'Ergli',\n            },\n            {\n                code: 'LG64',\n                name: 'Garkalne',\n            },\n            {\n                code: 'LG65',\n                name: 'Grobina',\n            },\n            {\n                code: 'LG66',\n                name: 'Gulbene',\n            },\n            {\n                code: 'LG67',\n                name: 'Iecava',\n            },\n            {\n                code: 'LG68',\n                name: 'Ikškile',\n            },\n            {\n                code: 'LG69',\n                name: 'Ilukste',\n            },\n            {\n                code: 'LG70',\n                name: 'Incukalns',\n            },\n            {\n                code: 'LG71',\n                name: 'Jaunjelgava',\n            },\n            {\n                code: 'LG72',\n                name: 'Jaunpiebalga',\n            },\n            {\n                code: 'LG73',\n                name: 'Jaunpils',\n            },\n            {\n                code: 'LG75',\n                name: 'Jekabpils',\n            },\n            {\n                code: 'LG74',\n                name: 'Jekabpils',\n            },\n            {\n                code: 'LG76',\n                name: 'Jelgava',\n            },\n            {\n                code: 'LG11',\n                name: 'Jelgava',\n            },\n            {\n                code: 'LG13',\n                name: 'Jurmala',\n            },\n            {\n                code: 'LG77',\n                name: 'Kandava',\n            },\n            {\n                code: 'LG78',\n                name: 'Karsava',\n            },\n            {\n                code: 'LG79',\n                name: 'Kegums',\n            },\n            {\n                code: 'LG80',\n                name: 'Kekava',\n            },\n            {\n                code: 'LG81',\n                name: 'Kocenu',\n            },\n            {\n                code: 'LG82',\n                name: 'Koknese',\n            },\n            {\n                code: 'LG83',\n                name: 'Kraslava',\n            },\n            {\n                code: 'LG84',\n                name: 'Krimulda',\n            },\n            {\n                code: 'LG85',\n                name: 'Krustpils',\n            },\n            {\n                code: 'LG86',\n                name: 'Kuldiga',\n            },\n            {\n                code: 'LG87',\n                name: 'Lielvarde',\n            },\n            {\n                code: 'LG16',\n                name: 'Liepaja',\n            },\n            {\n                code: 'LG88',\n                name: 'Ligatne',\n            },\n            {\n                code: 'LG89',\n                name: 'Limbaži',\n            },\n            {\n                code: 'LG90',\n                name: 'Livani',\n            },\n            {\n                code: 'LG91',\n                name: 'Lubana',\n            },\n            {\n                code: 'LG92',\n                name: 'Ludza',\n            },\n            {\n                code: 'LG93',\n                name: 'Madona',\n            },\n            {\n                code: 'LG94',\n                name: 'Malpils',\n            },\n            {\n                code: 'LG95',\n                name: 'Marupe',\n            },\n            {\n                code: 'LG96',\n                name: 'Mazsalaca',\n            },\n            {\n                code: 'LGF1',\n                name: 'Mersraga',\n            },\n            {\n                code: 'LG97',\n                name: 'Naukšeni',\n            },\n            {\n                code: 'LG98',\n                name: 'Nereta',\n            },\n            {\n                code: 'LG99',\n                name: 'Nica',\n            },\n            {\n                code: 'LGA1',\n                name: 'Ogre',\n            },\n            {\n                code: 'LGA2',\n                name: 'Olaine',\n            },\n            {\n                code: 'LGA3',\n                name: 'Ozolnieki',\n            },\n            {\n                code: 'LGA4',\n                name: 'Pargauja',\n            },\n            {\n                code: 'LGA5',\n                name: 'Pavilosta',\n            },\n            {\n                code: 'LGA6',\n                name: 'Plavinas',\n            },\n            {\n                code: 'LGA7',\n                name: 'Preili',\n            },\n            {\n                code: 'LGA8',\n                name: 'Priekule',\n            },\n            {\n                code: 'LGA9',\n                name: 'Priekuli',\n            },\n            {\n                code: 'LGB1',\n                name: 'Rauna',\n            },\n            {\n                code: 'LGB2',\n                name: 'Rezekne',\n            },\n            {\n                code: 'LG23',\n                name: 'Rezekne',\n            },\n            {\n                code: 'LGB3',\n                name: 'Riebini',\n            },\n            {\n                code: 'LG25',\n                name: 'Riga',\n            },\n            {\n                code: 'LGB4',\n                name: 'Roja',\n            },\n            {\n                code: 'LGB5',\n                name: 'Ropaži',\n            },\n            {\n                code: 'LGB6',\n                name: 'Rucava',\n            },\n            {\n                code: 'LGB7',\n                name: 'Rugaji',\n            },\n            {\n                code: 'LGB8',\n                name: 'Rujiena',\n            },\n            {\n                code: 'LGB9',\n                name: 'Rundale',\n            },\n            {\n                code: 'LGC1',\n                name: 'Salacgriva',\n            },\n            {\n                code: 'LGC2',\n                name: 'Sala',\n            },\n            {\n                code: 'LGC3',\n                name: 'Salaspils',\n            },\n            {\n                code: 'LGC4',\n                name: 'Saldus',\n            },\n            {\n                code: 'LGC5',\n                name: 'Saulkrasti',\n            },\n            {\n                code: 'LGC6',\n                name: 'Seja',\n            },\n            {\n                code: 'LGC7',\n                name: 'Sigulda',\n            },\n            {\n                code: 'LGC8',\n                name: 'Skriveri',\n            },\n            {\n                code: 'LGC9',\n                name: 'Skrunda',\n            },\n            {\n                code: 'LGD1',\n                name: 'Smiltene',\n            },\n            {\n                code: 'LGD2',\n                name: 'Stopini',\n            },\n            {\n                code: 'LGD3',\n                name: 'Strenci',\n            },\n            {\n                code: 'LGD4',\n                name: 'Talsi',\n            },\n            {\n                code: 'LGD5',\n                name: 'Tervete',\n            },\n            {\n                code: 'LGD6',\n                name: 'Tukums',\n            },\n            {\n                code: 'LGD7',\n                name: 'Vainode',\n            },\n            {\n                code: 'LGD8',\n                name: 'Valka',\n            },\n            {\n                code: 'LGD9',\n                name: 'Valmiera',\n            },\n            {\n                code: 'LGE1',\n                name: 'Varaklani',\n            },\n            {\n                code: 'LGE2',\n                name: 'Varkava',\n            },\n            {\n                code: 'LGE3',\n                name: 'Vecpiebalga',\n            },\n            {\n                code: 'LGE4',\n                name: 'Vecumnieki',\n            },\n            {\n                code: 'LGE5',\n                name: 'Ventspils',\n            },\n            {\n                code: 'LG32',\n                name: 'Ventspils',\n            },\n            {\n                code: 'LGE6',\n                name: 'Viesite',\n            },\n            {\n                code: 'LGE7',\n                name: 'Vilaka',\n            },\n            {\n                code: 'LGE8',\n                name: 'Vilani',\n            },\n            {\n                code: 'LGE9',\n                name: 'Zilupe',\n            },\n        ],\n    },\n    {\n        code: 'LB',\n        id: 2280,\n        name: 'Lebanon',\n        states: [\n            {\n                code: 'LE10',\n                name: 'Aakkar',\n            },\n            {\n                code: 'LE07',\n                name: 'An Nabatiyah',\n            },\n            {\n                code: 'LE11',\n                name: 'Baalbek-Hermel',\n            },\n            {\n                code: 'LE04',\n                name: 'Beirut',\n            },\n            {\n                code: 'LE08',\n                name: 'Beqaa',\n            },\n            {\n                code: 'LE05',\n                name: 'Mount Lebanon',\n            },\n            {\n                code: 'LE09',\n                name: 'North Lebanon',\n            },\n            {\n                code: 'LE06',\n                name: 'South Lebanon',\n            },\n        ],\n    },\n    {\n        code: 'LS',\n        id: 2281,\n        name: 'Lesotho',\n        states: [\n            {\n                code: 'LT10',\n                name: 'Berea',\n            },\n            {\n                code: 'LT11',\n                name: 'Butha-Buthe',\n            },\n            {\n                code: 'LT12',\n                name: 'Leribe',\n            },\n            {\n                code: 'LT14',\n                name: 'Mafeteng',\n            },\n            {\n                code: 'LT13',\n                name: 'Mafeteng',\n            },\n            {\n                code: 'LT15',\n                name: \"Mohale's Hoek\",\n            },\n            {\n                code: 'LT16',\n                name: 'Mokhotlong',\n            },\n            {\n                code: 'LT17',\n                name: \"Qacha's Nek\",\n            },\n            {\n                code: 'LT18',\n                name: 'Quthing',\n            },\n            {\n                code: 'LT19',\n                name: 'Thaba-Tseka',\n            },\n        ],\n    },\n    {\n        code: 'LR',\n        id: 2282,\n        name: 'Liberia',\n        states: [\n            {\n                code: 'LI15',\n                name: 'Bomi',\n            },\n            {\n                code: 'LI01',\n                name: 'Bong',\n            },\n            {\n                code: 'LI21\\t',\n                name: 'Gbarpolu',\n            },\n            {\n                code: 'LI11',\n                name: 'Grand Bassa',\n            },\n            {\n                code: 'LI12',\n                name: 'Grand Cape Mount',\n            },\n            {\n                code: 'LI19',\n                name: 'Grand Gedeh',\n            },\n            {\n                code: 'LI16',\n                name: 'Grand Kru',\n            },\n            {\n                code: 'LI20',\n                name: 'Lofa',\n            },\n            {\n                code: 'LI17',\n                name: 'Margibi',\n            },\n            {\n                code: 'LI13',\n                name: 'Maryland',\n            },\n            {\n                code: 'LI14',\n                name: 'Montserrado',\n            },\n            {\n                code: 'LI09',\n                name: 'Nimba',\n            },\n            {\n                code: 'LI22',\n                name: 'River Gee',\n            },\n            {\n                code: 'LI18',\n                name: 'Rivercess',\n            },\n            {\n                code: 'LI10',\n                name: 'Sinoe',\n            },\n        ],\n    },\n    {\n        code: 'LY',\n        id: 2380,\n        name: 'Libyan Arab Jamahiriya',\n        states: [],\n    },\n    {\n        code: 'LI',\n        id: 2284,\n        name: 'Liechtenstein',\n        states: [],\n    },\n    {\n        code: 'LT',\n        id: 2285,\n        name: 'Lithuania',\n        states: [\n            {\n                code: 'LH56',\n                name: 'Alytus',\n            },\n            {\n                code: 'LH57',\n                name: 'Kaunas',\n            },\n            {\n                code: 'LH58',\n                name: 'Klaipeda',\n            },\n            {\n                code: 'LH59',\n                name: 'Marijampole',\n            },\n            {\n                code: 'LH60',\n                name: 'Panevežys',\n            },\n            {\n                code: 'LH61',\n                name: 'Siauliai',\n            },\n            {\n                code: 'LH62',\n                name: 'Taurage',\n            },\n            {\n                code: 'LH63',\n                name: 'Telšiai',\n            },\n            {\n                code: 'LH64',\n                name: 'Utena',\n            },\n            {\n                code: 'LH65',\n                name: 'Vilnius',\n            },\n        ],\n    },\n    {\n        code: 'LU',\n        id: 2286,\n        name: 'Luxembourg',\n        states: [\n            {\n                code: 'LU01',\n                name: 'Diekirch',\n            },\n            {\n                code: 'LU02',\n                name: 'Grevenmacher',\n            },\n            {\n                code: 'LU03',\n                name: 'Luxembourg',\n            },\n        ],\n    },\n    {\n        code: 'MO',\n        id: 2287,\n        name: 'Macau',\n        states: [],\n    },\n    {\n        code: 'MK',\n        id: 2288,\n        name: 'Macedonia',\n        states: [],\n    },\n    {\n        code: 'YU',\n        id: 2367,\n        name: 'Macedonia; the Former Yugoslav Republic',\n        states: [],\n    },\n    {\n        code: 'MG',\n        id: 2289,\n        name: 'Madagascar',\n        states: [\n            {\n                code: 'MA05',\n                name: 'Antananarivo',\n            },\n            {\n                code: 'MA01',\n                name: 'Antsiranana',\n            },\n            {\n                code: 'MA02',\n                name: 'Fianarantsoa',\n            },\n            {\n                code: 'MA03',\n                name: 'Mahajanga',\n            },\n            {\n                code: 'MA04',\n                name: 'Toamasina',\n            },\n            {\n                code: 'MA06',\n                name: 'Toliara',\n            },\n        ],\n    },\n    {\n        code: 'MW',\n        id: 2290,\n        name: 'Malawi',\n        states: [\n            {\n                code: 'MI26',\n                name: 'Balaka',\n            },\n            {\n                code: 'MI24',\n                name: 'Blantyre',\n            },\n            {\n                code: 'MI02',\n                name: 'Chikwawa',\n            },\n            {\n                code: 'MI03',\n                name: 'Chiradzulu',\n            },\n            {\n                code: 'MI04',\n                name: 'Chitipa',\n            },\n            {\n                code: 'MI06',\n                name: 'Dedza',\n            },\n            {\n                code: 'MI07',\n                name: 'Dowa',\n            },\n            {\n                code: 'MI08',\n                name: 'Karonga',\n            },\n            {\n                code: 'MI09',\n                name: 'Kasungu',\n            },\n            {\n                code: 'MI27',\n                name: 'Likoma',\n            },\n            {\n                code: 'MI11',\n                name: 'Lilongwe',\n            },\n            {\n                code: 'MI28',\n                name: 'Machinga',\n            },\n            {\n                code: 'MI12',\n                name: 'Mangochi',\n            },\n            {\n                code: 'MI13',\n                name: 'Mchinji',\n            },\n            {\n                code: 'MI29',\n                name: 'Mulanje',\n            },\n            {\n                code: 'MI25',\n                name: 'Mwanza',\n            },\n            {\n                code: 'MI15',\n                name: 'Mzimba',\n            },\n            {\n                code: 'MI31',\n                name: 'Neno',\n            },\n            {\n                code: 'MI17',\n                name: 'Nkhata Bay',\n            },\n            {\n                code: 'MI18',\n                name: 'Nkhotakota',\n            },\n            {\n                code: 'MI19',\n                name: 'Nsanje',\n            },\n            {\n                code: 'MI16',\n                name: 'Ntcheu',\n            },\n            {\n                code: 'MI20',\n                name: 'Ntchisi',\n            },\n            {\n                code: 'MI30',\n                name: 'Phalombe',\n            },\n            {\n                code: 'MI21',\n                name: 'Rumphi',\n            },\n            {\n                code: 'MI22',\n                name: 'Salima',\n            },\n            {\n                code: 'MI05',\n                name: 'Thyolo',\n            },\n            {\n                code: 'MI23',\n                name: 'Zomba',\n            },\n        ],\n    },\n    {\n        code: 'MY',\n        id: 2291,\n        name: 'Malaysia',\n        states: [\n            {\n                code: 'MY01',\n                name: 'Johor',\n            },\n            {\n                code: 'MY02',\n                name: 'Kedah',\n            },\n            {\n                code: 'MY03',\n                name: 'Kelantan',\n            },\n            {\n                code: 'MY04',\n                name: 'Melaka',\n            },\n            {\n                code: 'MY05',\n                name: 'Negeri Sembilan',\n            },\n            {\n                code: 'MY06',\n                name: 'Pahang',\n            },\n            {\n                code: 'MY08',\n                name: 'Perak',\n            },\n            {\n                code: 'MY09',\n                name: 'Perlis',\n            },\n            {\n                code: 'MY07',\n                name: 'Pulau Pinang',\n            },\n            {\n                code: 'MY12',\n                name: 'Sabah',\n            },\n            {\n                code: 'MY13',\n                name: 'Sarawak',\n            },\n            {\n                code: 'MY10',\n                name: 'Selangor',\n            },\n            {\n                code: 'MY11',\n                name: 'Terengganu',\n            },\n            {\n                code: 'MY14',\n                name: 'W.P. Kuala Lumpur',\n            },\n            {\n                code: 'MY15',\n                name: 'W.P. Labuan',\n            },\n            {\n                code: 'MY16',\n                name: 'W.P. Putrajaya',\n            },\n        ],\n    },\n    {\n        code: 'MV',\n        id: 2384,\n        name: 'Maldives; Republic of',\n        states: [],\n    },\n    {\n        code: 'ML',\n        id: 2292,\n        name: 'Mali',\n        states: [\n            {\n                code: 'ML01',\n                name: 'Bamako',\n            },\n            {\n                code: 'ML09',\n                name: 'Gao',\n            },\n            {\n                code: 'ML03',\n                name: 'Kayes',\n            },\n            {\n                code: 'ML10',\n                name: 'Kidal',\n            },\n            {\n                code: 'ML07',\n                name: 'Koulikoro',\n            },\n            {\n                code: 'ML.ME',\n                name: 'Ménaka',\n            },\n            {\n                code: 'ML04',\n                name: 'Mopti',\n            },\n            {\n                code: 'ML05',\n                name: 'Ségou',\n            },\n            {\n                code: 'ML06',\n                name: 'Sikasso',\n            },\n            {\n                code: 'ML.TD',\n                name: 'Taoudénit',\n            },\n            {\n                code: 'ML08',\n                name: 'Timbuktu',\n            },\n        ],\n    },\n    {\n        code: 'MT',\n        id: 2293,\n        name: 'Malta',\n        states: [\n            {\n                code: 'MT.CE',\n                name: 'Central',\n            },\n            {\n                code: 'MT.GO',\n                name: 'Gozo',\n            },\n            {\n                code: 'MT.NO',\n                name: 'Northern',\n            },\n            {\n                code: 'MT.SE',\n                name: 'South Eastern',\n            },\n            {\n                code: 'MT.SO',\n                name: 'Southern',\n            },\n        ],\n    },\n    {\n        code: 'RM',\n        id: 2394,\n        name: 'Marshall Islands',\n        states: [],\n    },\n    {\n        code: 'MQ',\n        id: 2423,\n        name: 'Martinique',\n        states: [],\n    },\n    {\n        code: 'MR',\n        id: 2294,\n        name: 'Mauritania',\n        states: [\n            {\n                code: 'MR07',\n                name: 'Adrar',\n            },\n            {\n                code: 'MR03',\n                name: 'Assaba',\n            },\n            {\n                code: 'MR05',\n                name: 'Brakna',\n            },\n            {\n                code: 'MR08',\n                name: 'Dakhlet Nouadhibou',\n            },\n            {\n                code: 'MR04',\n                name: 'Gorgol',\n            },\n            {\n                code: 'MR10',\n                name: 'Guidimaka',\n            },\n            {\n                code: 'MR01',\n                name: 'Hodh ech Chargui',\n            },\n            {\n                code: 'MR02',\n                name: 'Hodh el Gharbi',\n            },\n            {\n                code: 'MR12',\n                name: 'Inchiri',\n            },\n            {\n                code: 'MR.NN',\n                name: 'Nouakchott Nord',\n            },\n            {\n                code: 'MR13',\n                name: 'Nouakchott Ouest',\n            },\n            {\n                code: 'MR.NS',\n                name: 'Nouakchott Sud',\n            },\n            {\n                code: 'MR09',\n                name: 'Tagant',\n            },\n            {\n                code: 'MR11',\n                name: 'Tiris Zemmour',\n            },\n            {\n                code: 'MR06',\n                name: 'Trarza',\n            },\n        ],\n    },\n    {\n        code: 'MU',\n        id: 2295,\n        name: 'Mauritius',\n        states: [\n            {\n                code: 'MP21',\n                name: 'Agalega Islands',\n            },\n            {\n                code: 'MP12',\n                name: 'Black River',\n            },\n            {\n                code: 'MP22',\n                name: 'Cargados Carajos',\n            },\n            {\n                code: 'MP13',\n                name: 'Flacq',\n            },\n            {\n                code: 'MP14',\n                name: 'Grand Port',\n            },\n            {\n                code: 'MP15',\n                name: 'Moka',\n            },\n            {\n                code: 'MP16',\n                name: 'Pamplemousses',\n            },\n            {\n                code: 'MP17',\n                name: 'Plaines Wilhems',\n            },\n            {\n                code: 'MP18',\n                name: 'Port Louis',\n            },\n            {\n                code: 'MP19',\n                name: 'Rivière du Rempart',\n            },\n            {\n                code: 'MP23',\n                name: 'Rodrigues',\n            },\n            {\n                code: 'MP20',\n                name: 'Savanne',\n            },\n        ],\n    },\n    {\n        code: 'M999',\n        id: 2393,\n        name: 'Mayotte',\n        states: [],\n    },\n    {\n        code: 'MX',\n        id: 2296,\n        name: 'Mexico',\n        states: [\n            {\n                code: 'AGU',\n                name: 'Aguascalientes',\n            },\n            {\n                code: 'BCS',\n                name: 'Baja California Sur',\n            },\n            {\n                code: 'BCN',\n                name: 'Baja California',\n            },\n            {\n                code: 'CAM',\n                name: 'Campeche',\n            },\n            {\n                code: 'CHP',\n                name: 'Chiapas',\n            },\n            {\n                code: 'CHH',\n                name: 'Chihuahua',\n            },\n            {\n                code: 'COA',\n                name: 'Coahuila',\n            },\n            {\n                code: 'COL',\n                name: 'Colima',\n            },\n            {\n                code: 'DIF',\n                name: 'Distrito Federal',\n            },\n            {\n                code: 'DUR',\n                name: 'Durango',\n            },\n            {\n                code: 'GUA',\n                name: 'Guanajuato',\n            },\n            {\n                code: 'GRO',\n                name: 'Guerrero',\n            },\n            {\n                code: 'HID',\n                name: 'Hidalgo',\n            },\n            {\n                code: 'JAL',\n                name: 'Jalisco',\n            },\n            {\n                code: 'MEX',\n                name: 'México',\n            },\n            {\n                code: 'MIC',\n                name: 'Michoacán',\n            },\n            {\n                code: 'MOR',\n                name: 'Morelos',\n            },\n            {\n                code: 'NAY',\n                name: 'Nayarit',\n            },\n            {\n                code: 'NLE',\n                name: 'Nuevo León',\n            },\n            {\n                code: 'OAX',\n                name: 'Oaxaca',\n            },\n            {\n                code: 'PUE',\n                name: 'Puebla',\n            },\n            {\n                code: 'QUE',\n                name: 'Querétaro',\n            },\n            {\n                code: 'ROO',\n                name: 'Quintana Roo',\n            },\n            {\n                code: 'SLP',\n                name: 'San Luis Potosí',\n            },\n            {\n                code: 'SIN',\n                name: 'Sinaloa',\n            },\n            {\n                code: 'SON',\n                name: 'Sonora',\n            },\n            {\n                code: 'TAB',\n                name: 'Tabasco',\n            },\n            {\n                code: 'TAM',\n                name: 'Tamaulipas',\n            },\n            {\n                code: 'TLA',\n                name: 'Tlaxcala',\n            },\n            {\n                code: 'VER',\n                name: 'Veracruz',\n            },\n            {\n                code: 'YUC',\n                name: 'Yucatán',\n            },\n            {\n                code: 'ZAC',\n                name: 'Zacatecas',\n            },\n        ],\n    },\n    {\n        code: 'FM',\n        id: 2297,\n        name: 'Micronesia; Federated States of',\n        states: [\n            {\n                code: 'FM03',\n                name: 'Chuuk',\n            },\n            {\n                code: 'FM01',\n                name: 'Kosrae',\n            },\n            {\n                code: 'FM02',\n                name: 'Pohnpei',\n            },\n            {\n                code: 'FM04',\n                name: 'Yap',\n            },\n        ],\n    },\n    {\n        code: 'MD',\n        id: 2395,\n        name: 'Moldova; Republic of',\n        states: [],\n    },\n    {\n        code: 'MC',\n        id: 2299,\n        name: 'Monaco',\n        states: [],\n    },\n    {\n        code: 'MN',\n        id: 2300,\n        name: 'Mongolia',\n        states: [],\n    },\n    {\n        code: 'MJ',\n        id: 2396,\n        name: 'Montenegro',\n        states: [\n            {\n                code: 'ME-1',\n                name: 'Andrijevica',\n            },\n            {\n                code: 'ME-2',\n                name: 'Bar',\n            },\n            {\n                code: 'ME-3',\n                name: 'Berane',\n            },\n            {\n                code: 'ME-4',\n                name: 'Bijelo Polje',\n            },\n            {\n                code: 'ME-5',\n                name: 'Budva',\n            },\n            {\n                code: 'ME-6',\n                name: 'Cetinje',\n            },\n            {\n                code: 'ME-7',\n                name: 'Danilovgrad',\n            },\n            {\n                code: 'ME-8',\n                name: 'Herceg Novi',\n            },\n            {\n                code: 'ME-9',\n                name: 'Kolašin',\n            },\n            {\n                code: 'ME-10',\n                name: 'Kotor',\n            },\n            {\n                code: 'ME-11',\n                name: 'Mojkovac',\n            },\n            {\n                code: 'ME-12',\n                name: 'Nikšic',\n            },\n            {\n                code: 'ME-13',\n                name: 'Plav',\n            },\n            {\n                code: 'ME-14',\n                name: 'Pljevlja',\n            },\n            {\n                code: 'ME-15',\n                name: 'Plužine',\n            },\n            {\n                code: 'ME-16',\n                name: 'Podgorica',\n            },\n            {\n                code: 'ME-17',\n                name: 'Rožaje',\n            },\n            {\n                code: 'ME-18',\n                name: 'Šavnik',\n            },\n            {\n                code: 'ME-19',\n                name: 'Tivat',\n            },\n            {\n                code: 'ME-20',\n                name: 'Ulcinj',\n            },\n            {\n                code: 'ME-21',\n                name: 'Žabljak',\n            },\n        ],\n    },\n    {\n        code: 'MS',\n        id: 2424,\n        name: 'Montserrat',\n        states: [],\n    },\n    {\n        code: 'MA',\n        id: 2301,\n        name: 'Morocco',\n        states: [\n            {\n                code: 'MA.BK',\n                name: 'Béni Mellal-Khénifra',\n            },\n            {\n                code: 'MA.CS',\n                name: 'Casablanca-Settat',\n            },\n            {\n                code: 'MA.OL',\n                name: 'Dakhla-Oued Ed-Dahab',\n            },\n            {\n                code: 'MA.DT',\n                name: 'Drâa-Tafilalet',\n            },\n            {\n                code: 'MA.FK',\n                name: 'Fès-Meknès',\n            },\n            {\n                code: 'MA.GN',\n                name: 'Guelmim-Oued Noun',\n            },\n            {\n                code: 'MA.OF',\n                name: \"L'oriental\",\n            },\n            {\n                code: 'MA.LS',\n                name: 'Laâyoune-Sakia al Hamra',\n            },\n            {\n                code: 'MA.MS',\n                name: 'Marrakech-Safi',\n            },\n            {\n                code: 'MA.RK',\n                name: 'Rabat-Salé-Kénitra',\n            },\n            {\n                code: 'MA.SS',\n                name: 'Souss-Massa',\n            },\n            {\n                code: 'MA.TC',\n                name: 'Tanger-Tétouan-Al Hoceima',\n            },\n        ],\n    },\n    {\n        code: 'MZ',\n        id: 2302,\n        name: 'Mozambique',\n        states: [\n            {\n                code: 'MZ01',\n                name: 'Cabo Delgado',\n            },\n            {\n                code: 'MZ02',\n                name: 'Gaza',\n            },\n            {\n                code: 'MZ03',\n                name: 'Inhambane',\n            },\n            {\n                code: 'MZ10',\n                name: 'Manica',\n            },\n            {\n                code: 'MZ11',\n                name: 'Maputo [city]',\n            },\n            {\n                code: 'MZ04',\n                name: 'Maputo',\n            },\n            {\n                code: 'MZ06',\n                name: 'Nampula',\n            },\n            {\n                code: 'MZ07',\n                name: 'Niassa',\n            },\n            {\n                code: 'MZ05',\n                name: 'Sofala',\n            },\n            {\n                code: 'MZ08',\n                name: 'Tete',\n            },\n            {\n                code: 'MZ09',\n                name: 'Zambézia',\n            },\n        ],\n    },\n    {\n        code: 'MM',\n        id: 2303,\n        name: 'Myanmar',\n        states: [\n            {\n                code: 'MM.AY',\n                name: 'Ayeyarwady',\n            },\n            {\n                code: 'MM.BA',\n                name: 'Bago',\n            },\n            {\n                code: 'MM.CH',\n                name: 'Chin',\n            },\n            {\n                code: 'MM.KC',\n                name: 'Kachin',\n            },\n            {\n                code: 'MM.KH',\n                name: 'Kayah',\n            },\n            {\n                code: 'MM.KN',\n                name: 'Kayin',\n            },\n            {\n                code: 'MM.MG',\n                name: 'Magway',\n            },\n            {\n                code: 'MM.ML',\n                name: 'Mandalay',\n            },\n            {\n                code: 'MM.MO',\n                name: 'Mon',\n            },\n            {\n                code: 'MM.NY',\n                name: 'Naypyidaw',\n            },\n            {\n                code: 'MM.RA',\n                name: 'Rakhine',\n            },\n            {\n                code: 'MM.SA',\n                name: 'Sagaing',\n            },\n            {\n                code: 'MM.SH',\n                name: 'Shan',\n            },\n            {\n                code: 'MM.TN',\n                name: 'Tanintharyi',\n            },\n            {\n                code: 'MM.YA',\n                name: 'Yangon',\n            },\n        ],\n    },\n    {\n        code: 'NA',\n        id: 2304,\n        name: 'Namibia',\n        states: [\n            {\n                code: 'WA29',\n                name: 'Erongo',\n            },\n            {\n                code: 'WA30',\n                name: 'Hardap',\n            },\n            {\n                code: 'WA31',\n                name: 'Karas',\n            },\n            {\n                code: 'WA40',\n                name: 'Kavango East',\n            },\n            {\n                code: 'WA41',\n                name: 'Kavango West',\n            },\n            {\n                code: 'WA21',\n                name: 'Khomas',\n            },\n            {\n                code: 'WA32',\n                name: 'Kunene',\n            },\n            {\n                code: 'WA33',\n                name: 'Ohangwena',\n            },\n            {\n                code: 'WA35',\n                name: 'Omaheke',\n            },\n            {\n                code: 'WA36',\n                name: 'Omusati',\n            },\n            {\n                code: 'WA37',\n                name: 'Oshana',\n            },\n            {\n                code: 'WA38',\n                name: 'Oshikoto',\n            },\n            {\n                code: 'WA39',\n                name: 'Otjozondjupa',\n            },\n            {\n                code: 'WA28',\n                name: 'Zambezi',\n            },\n        ],\n    },\n    {\n        code: 'NR',\n        id: 2397,\n        name: 'Nauru',\n        states: [],\n    },\n    {\n        code: 'NP',\n        id: 2305,\n        name: 'Nepal',\n        states: [\n            {\n                code: 'NP.FI',\n                name: 'Five',\n            },\n            {\n                code: 'NP.FO',\n                name: 'Four',\n            },\n            {\n                code: 'NP.ON',\n                name: 'One',\n            },\n            {\n                code: 'NP.SE',\n                name: 'Seven',\n            },\n            {\n                code: 'NP.SI',\n                name: 'Six',\n            },\n            {\n                code: 'NP.TH',\n                name: 'Three',\n            },\n            {\n                code: 'NP.TW',\n                name: 'Two',\n            },\n        ],\n    },\n    {\n        code: 'NL',\n        id: 2306,\n        name: 'Netherlands',\n        states: [\n            {\n                code: 'DR',\n                name: 'Drenthe',\n            },\n            {\n                code: 'FL',\n                name: 'Flevoland',\n            },\n            {\n                code: 'FR',\n                name: 'Friesland',\n            },\n            {\n                code: 'GE',\n                name: 'Gelderland',\n            },\n            {\n                code: 'GR',\n                name: 'Groningen',\n            },\n            {\n                code: 'LI',\n                name: 'Limburg',\n            },\n            {\n                code: 'NB',\n                name: 'Noord-Brabant',\n            },\n            {\n                code: 'NH',\n                name: 'Noord-Holland',\n            },\n            {\n                code: 'OV',\n                name: 'Overijssel',\n            },\n            {\n                code: 'UT',\n                name: 'Utrecht',\n            },\n            {\n                code: 'ZE',\n                name: 'Zeeland',\n            },\n            {\n                code: 'ZH',\n                name: 'Zuid-Holland',\n            },\n        ],\n    },\n    {\n        code: 'AN',\n        id: 2425,\n        name: 'Netherlands Antilles',\n        states: [],\n    },\n    {\n        code: 'NC',\n        id: 2426,\n        name: 'New Caledonia',\n        states: [],\n    },\n    {\n        code: 'NZ',\n        id: 2307,\n        name: 'New Zealand',\n        states: [\n            {\n                code: 'AUK',\n                name: 'Auckland',\n            },\n            {\n                code: 'BOP',\n                name: 'Bay of Plenty',\n            },\n            {\n                code: 'CAN',\n                name: 'Canterbury',\n            },\n            {\n                code: 'CIT',\n                name: 'Chatham Islands Territory',\n            },\n            {\n                code: 'GIS',\n                name: 'Gisborne',\n            },\n            {\n                code: 'HKB',\n                name: \"Hawke's Bay\",\n            },\n            {\n                code: 'MWT',\n                name: 'Manawatu-Wanganui',\n            },\n            {\n                code: 'MBH',\n                name: 'Marlborough',\n            },\n            {\n                code: 'NSN',\n                name: 'Nelson',\n            },\n            {\n                code: 'N',\n                name: 'North Island',\n            },\n            {\n                code: 'NTL',\n                name: 'Northland',\n            },\n            {\n                code: 'OTA',\n                name: 'Otago',\n            },\n            {\n                code: 'S',\n                name: 'South Island',\n            },\n            {\n                code: 'STL',\n                name: 'Southland',\n            },\n            {\n                code: 'TKI',\n                name: 'Taranaki',\n            },\n            {\n                code: 'TAS',\n                name: 'Tasman District',\n            },\n            {\n                code: 'WKO',\n                name: 'Waikato',\n            },\n            {\n                code: 'WGN',\n                name: 'Wellington',\n            },\n            {\n                code: 'WTC',\n                name: 'West Coast',\n            },\n        ],\n    },\n    {\n        code: 'NI',\n        id: 2308,\n        name: 'Nicaragua',\n        states: [\n            {\n                code: 'NU01',\n                name: 'Boaco',\n            },\n            {\n                code: 'NU02',\n                name: 'Carazo',\n            },\n            {\n                code: 'NU03',\n                name: 'Chinandega',\n            },\n            {\n                code: 'NU04',\n                name: 'Chontales',\n            },\n            {\n                code: 'NU05',\n                name: 'Estelí',\n            },\n            {\n                code: 'NU06',\n                name: 'Granada',\n            },\n            {\n                code: 'NU07',\n                name: 'Jinotega',\n            },\n            {\n                code: 'NU08',\n                name: 'León',\n            },\n            {\n                code: 'NU09',\n                name: 'Madriz',\n            },\n            {\n                code: 'NU10',\n                name: 'Managua',\n            },\n            {\n                code: 'NU11',\n                name: 'Masaya',\n            },\n            {\n                code: 'NU12',\n                name: 'Matagalpa',\n            },\n            {\n                code: 'NU13',\n                name: 'Nueva Segovia',\n            },\n            {\n                code: 'NU17',\n                name: 'Región Autónoma del Caribe Norte',\n            },\n            {\n                code: 'NU18',\n                name: 'Región Autónoma del Caribe Sur',\n            },\n            {\n                code: 'NU14',\n                name: 'Río San Juan',\n            },\n            {\n                code: 'NU15',\n                name: 'Rivas',\n            },\n        ],\n    },\n    {\n        code: 'NE',\n        id: 2309,\n        name: 'Niger',\n        states: [\n            {\n                code: 'NG01',\n                name: 'Agadez',\n            },\n            {\n                code: 'NG02',\n                name: 'Diffa',\n            },\n            {\n                code: 'NG03',\n                name: 'Dosso',\n            },\n            {\n                code: 'NG04',\n                name: 'Maradi',\n            },\n            {\n                code: 'NG08',\n                name: 'Niamey',\n            },\n            {\n                code: 'NG06',\n                name: 'Tahoua',\n            },\n            {\n                code: 'NG09',\n                name: 'Tillabéri',\n            },\n            {\n                code: 'NG07',\n                name: 'Zinder',\n            },\n        ],\n    },\n    {\n        code: 'NG',\n        id: 2310,\n        name: 'Nigeria',\n        states: [\n            {\n                code: 'NI45',\n                name: 'Abia',\n            },\n            {\n                code: 'NI35',\n                name: 'Adamawa',\n            },\n            {\n                code: 'NI21',\n                name: 'Akwa Ibom',\n            },\n            {\n                code: 'NI25',\n                name: 'Anambra',\n            },\n            {\n                code: 'NI46',\n                name: 'Bauchi',\n            },\n            {\n                code: 'NI52',\n                name: 'Bayelsa',\n            },\n            {\n                code: 'NI26',\n                name: 'Benue',\n            },\n            {\n                code: 'NI27',\n                name: 'Borno',\n            },\n            {\n                code: 'NI22',\n                name: 'Cross River',\n            },\n            {\n                code: 'NI36',\n                name: 'Delta',\n            },\n            {\n                code: 'NI53',\n                name: 'Ebonyi',\n            },\n            {\n                code: 'NI37',\n                name: 'Edo',\n            },\n            {\n                code: 'NI54',\n                name: 'Ekiti',\n            },\n            {\n                code: 'NI47',\n                name: 'Enugu',\n            },\n            {\n                code: 'NI11',\n                name: 'Federal Capital Territory',\n            },\n            {\n                code: 'NI55',\n                name: 'Gombe',\n            },\n            {\n                code: 'NI28',\n                name: 'Imo',\n            },\n            {\n                code: 'NI39',\n                name: 'Jigawa',\n            },\n            {\n                code: 'NI23',\n                name: 'Kaduna',\n            },\n            {\n                code: 'NI29',\n                name: 'Kano',\n            },\n            {\n                code: 'NI24',\n                name: 'Katsina',\n            },\n            {\n                code: 'NI40',\n                name: 'Kebbi',\n            },\n            {\n                code: 'NI41',\n                name: 'Kogi',\n            },\n            {\n                code: 'NI30',\n                name: 'Kwara',\n            },\n            {\n                code: 'NI05',\n                name: 'Lagos',\n            },\n            {\n                code: 'NI56',\n                name: 'Nassarawa',\n            },\n            {\n                code: 'NI31',\n                name: 'Niger',\n            },\n            {\n                code: 'NI16',\n                name: 'Ogun',\n            },\n            {\n                code: 'NI48',\n                name: 'Ondo',\n            },\n            {\n                code: 'NI42',\n                name: 'Osun',\n            },\n            {\n                code: 'NI32',\n                name: 'Oyo',\n            },\n            {\n                code: 'NI49',\n                name: 'Plateau',\n            },\n            {\n                code: 'NI50',\n                name: 'Rivers',\n            },\n            {\n                code: 'NI51',\n                name: 'Sokoto',\n            },\n            {\n                code: 'NI43',\n                name: 'Taraba',\n            },\n            {\n                code: 'NI44',\n                name: 'Yobe',\n            },\n            {\n                code: 'NI57',\n                name: 'Zamfara',\n            },\n        ],\n    },\n    {\n        code: 'NU',\n        id: 2427,\n        name: 'Niue',\n        states: [],\n    },\n    {\n        code: 'NF',\n        id: 2428,\n        name: 'Norfolk Island',\n        states: [],\n    },\n    {\n        code: 'MP',\n        id: 2429,\n        name: 'Northern Mariana Islands',\n        states: [],\n    },\n    {\n        code: 'NO',\n        id: 2311,\n        name: 'Norway',\n        states: [\n            {\n                code: 'NO02',\n                name: 'Akershus',\n            },\n            {\n                code: 'NO09',\n                name: 'Aust-Agder',\n            },\n            {\n                code: 'NO06',\n                name: 'Buskerud',\n            },\n            {\n                code: 'NO20',\n                name: 'Finnmark',\n            },\n            {\n                code: 'NO04',\n                name: 'Hedmark',\n            },\n            {\n                code: 'NO12',\n                name: 'Hordaland',\n            },\n            {\n                code: 'NO22',\n                name: 'Jan Mayen (Arctic Region)',\n            },\n            {\n                code: 'NO15',\n                name: 'Møre og Romsdal',\n            },\n            {\n                code: 'NO17',\n                name: 'Nord-Trøndelag',\n            },\n            {\n                code: 'NO18',\n                name: 'Nordland',\n            },\n            {\n                code: 'NO05',\n                name: 'Oppland',\n            },\n            {\n                code: 'NO03',\n                name: 'Oslo',\n            },\n            {\n                code: 'NO01',\n                name: 'Østfold',\n            },\n            {\n                code: 'NO11',\n                name: 'Rogaland',\n            },\n            {\n                code: 'NO14',\n                name: 'Sogn og Fjordane',\n            },\n            {\n                code: 'NO16',\n                name: 'Sør-Trøndelag',\n            },\n            {\n                code: 'NO21',\n                name: 'Svalbard (Arctic Region)',\n            },\n            {\n                code: 'NO08',\n                name: 'Telemark',\n            },\n            {\n                code: 'NO19',\n                name: 'Troms',\n            },\n            {\n                code: 'NO10',\n                name: 'Vest-Agder',\n            },\n            {\n                code: 'NO07',\n                name: 'Vestfold',\n            },\n        ],\n    },\n    {\n        code: 'OM',\n        id: 2312,\n        name: 'Oman',\n        states: [\n            {\n                code: 'MU01',\n                name: 'Ad Dakhliyah',\n            },\n            {\n                code: 'MU09',\n                name: 'Adh Dhahirah',\n            },\n            {\n                code: 'MU11',\n                name: 'Al Batinah North',\n            },\n            {\n                code: 'MU02',\n                name: 'Al Batinah South',\n            },\n            {\n                code: 'MU10',\n                name: 'Al Buraymi',\n            },\n            {\n                code: 'MU03',\n                name: 'Al Wusta',\n            },\n            {\n                code: 'MU12',\n                name: 'Ash Sharqiyah North',\n            },\n            {\n                code: 'MU04',\n                name: 'Ash Sharqiyah South',\n            },\n            {\n                code: 'MU08',\n                name: 'Dhofar',\n            },\n            {\n                code: 'MU07',\n                name: 'Musandam',\n            },\n            {\n                code: 'MU06',\n                name: 'Muscat',\n            },\n        ],\n    },\n    {\n        code: 'PK',\n        id: 2313,\n        name: 'Pakistan',\n        states: [\n            {\n                code: 'PK06',\n                name: 'Azad Kashmir',\n            },\n            {\n                code: 'PK02',\n                name: 'Balochistan',\n            },\n            {\n                code: 'PK01',\n                name: 'Federally Administered Tribal Areas',\n            },\n            {\n                code: 'PK07',\n                name: 'Gilgit-Baltistan',\n            },\n            {\n                code: 'PK08',\n                name: 'Islamabad',\n            },\n            {\n                code: 'PK03',\n                name: 'Khyber-Pakhtunkhwa',\n            },\n            {\n                code: 'PK04',\n                name: 'Punjab',\n            },\n            {\n                code: 'PK05',\n                name: 'Sindh',\n            },\n        ],\n    },\n    {\n        code: 'PW',\n        id: 2314,\n        name: 'Palau',\n        states: [],\n    },\n    {\n        code: 'PS',\n        id: 2430,\n        name: 'Palestinian Territory; Occupied',\n        states: [],\n    },\n    {\n        code: 'PA',\n        id: 2315,\n        name: 'Panama',\n        states: [\n            {\n                code: 'PM01',\n                name: 'Bocas del Toro',\n            },\n            {\n                code: 'PM02\\t',\n                name: 'Chiriquí',\n            },\n            {\n                code: 'PM03',\n                name: 'Coclé',\n            },\n            {\n                code: 'PM04',\n                name: 'Coclé',\n            },\n            {\n                code: 'PM05',\n                name: 'Darién',\n            },\n            {\n                code: 'PM11',\n                name: 'Emberá',\n            },\n            {\n                code: 'PM06',\n                name: 'Herrera',\n            },\n            {\n                code: 'PM09',\n                name: 'Kuna Yala',\n            },\n            {\n                code: 'PM07',\n                name: 'Los Santos',\n            },\n            {\n                code: 'PM12',\n                name: 'Ngäbe Buglé',\n            },\n            {\n                code: 'PM13',\n                name: 'Panamá Oeste',\n            },\n            {\n                code: 'PM08',\n                name: 'Panamá',\n            },\n            {\n                code: 'PM10',\n                name: 'Veraguas',\n            },\n        ],\n    },\n    {\n        code: 'PG',\n        id: 2316,\n        name: 'Papua New Guinea',\n        states: [\n            {\n                code: 'PP07',\n                name: 'Bougainville',\n            },\n            {\n                code: 'PP01',\n                name: 'Central',\n            },\n            {\n                code: 'PP08',\n                name: 'Chimbu',\n            },\n            {\n                code: 'PP10',\n                name: 'East New Britain',\n            },\n            {\n                code: 'PP11',\n                name: 'East Sepik',\n            },\n            {\n                code: 'PP09',\n                name: 'Eastern Highlands',\n            },\n            {\n                code: 'PP19',\n                name: 'Enga',\n            },\n            {\n                code: 'PP02',\n                name: 'Gulf',\n            },\n            {\n                code: 'PP21',\n                name: 'Hela',\n            },\n            {\n                code: 'PP22',\n                name: 'Jiwaka',\n            },\n            {\n                code: 'PP12',\n                name: 'Madang',\n            },\n            {\n                code: 'PP13',\n                name: 'Manus',\n            },\n            {\n                code: 'PP03',\n                name: 'Milne Bay',\n            },\n            {\n                code: 'PP14',\n                name: 'Morobe',\n            },\n            {\n                code: 'PP20',\n                name: 'National Capital District',\n            },\n            {\n                code: 'PP15',\n                name: 'New Ireland',\n            },\n            {\n                code: 'PP04',\n                name: 'Northern',\n            },\n            {\n                code: 'PP18',\n                name: 'Sandaun',\n            },\n            {\n                code: 'PP05',\n                name: 'Southern Highlands',\n            },\n            {\n                code: 'PP17',\n                name: 'West New Britain',\n            },\n            {\n                code: 'PP06',\n                name: 'Western',\n            },\n            {\n                code: 'PP16',\n                name: 'Western Highlands',\n            },\n        ],\n    },\n    {\n        code: 'PY',\n        id: 2317,\n        name: 'Paraguay',\n        states: [\n            {\n                code: 'PA23',\n                name: 'Alto Paraguay',\n            },\n            {\n                code: 'PA01',\n                name: 'Alto Paraná',\n            },\n            {\n                code: 'PA02',\n                name: 'Amambay',\n            },\n            {\n                code: 'PA22',\n                name: 'Asunción',\n            },\n            {\n                code: 'PA24',\n                name: 'Boquerón',\n            },\n            {\n                code: 'PA04',\n                name: 'Caaguazú',\n            },\n            {\n                code: 'PA05',\n                name: 'Caazapá',\n            },\n            {\n                code: 'PA19',\n                name: 'Canindeyú',\n            },\n            {\n                code: 'PA06',\n                name: 'Central',\n            },\n            {\n                code: 'PA07',\n                name: 'Concepción',\n            },\n            {\n                code: 'PA08',\n                name: 'Cordillera',\n            },\n            {\n                code: 'PA10',\n                name: 'Guairá',\n            },\n            {\n                code: 'PA11',\n                name: 'Itapúa',\n            },\n            {\n                code: 'PA12',\n                name: 'Misiones',\n            },\n            {\n                code: 'PA15',\n                name: 'Paraguarí',\n            },\n            {\n                code: 'PA16',\n                name: 'Presidente Hayes',\n            },\n            {\n                code: 'PA17',\n                name: 'San Pedro',\n            },\n            {\n                code: 'PA13',\n                name: 'Ñeembucú',\n            },\n        ],\n    },\n    {\n        code: 'PE',\n        id: 2318,\n        name: 'Peru',\n        states: [\n            {\n                code: 'PE01',\n                name: 'Amazonas',\n            },\n            {\n                code: 'PE02',\n                name: 'Ancash',\n            },\n            {\n                code: 'PE03',\n                name: 'Apurímac',\n            },\n            {\n                code: 'PE04',\n                name: 'Arequipa',\n            },\n            {\n                code: 'PE05',\n                name: 'Ayacucho',\n            },\n            {\n                code: 'PE06',\n                name: 'Cajamarca',\n            },\n            {\n                code: 'PE07',\n                name: 'Callao',\n            },\n            {\n                code: 'PE08',\n                name: 'Cusco',\n            },\n            {\n                code: 'PE09',\n                name: 'Huancavelica',\n            },\n            {\n                code: 'PE10',\n                name: 'Huánuco',\n            },\n            {\n                code: 'PE11',\n                name: 'Ica',\n            },\n            {\n                code: 'PE12',\n                name: 'Junín',\n            },\n            {\n                code: 'PE13',\n                name: 'La Libertad',\n            },\n            {\n                code: 'PE14',\n                name: 'Lambayeque',\n            },\n            {\n                code: 'PE15',\n                name: 'Lima',\n            },\n            {\n                code: 'PE26',\n                name: 'Lima [Province]',\n            },\n            {\n                code: 'PE16',\n                name: 'Loreto',\n            },\n            {\n                code: 'PE17',\n                name: 'Madre de Dios',\n            },\n            {\n                code: 'PE18',\n                name: 'Moquegua',\n            },\n            {\n                code: 'PE19',\n                name: 'Pasco',\n            },\n            {\n                code: 'PE20',\n                name: 'Piura',\n            },\n            {\n                code: 'PE21',\n                name: 'Puno',\n            },\n            {\n                code: 'PE22',\n                name: 'San Martín',\n            },\n            {\n                code: 'PE23',\n                name: 'Tacna',\n            },\n            {\n                code: 'PE24',\n                name: 'Tumbes',\n            },\n            {\n                code: 'PE25',\n                name: 'Ucayali',\n            },\n        ],\n    },\n    {\n        code: 'PH',\n        id: 2319,\n        name: 'Philippines',\n        states: [\n            {\n                code: 'RP01',\n                name: 'Abra',\n            },\n            {\n                code: 'RP02',\n                name: 'Agusan del Norte',\n            },\n            {\n                code: 'RP03',\n                name: 'Agusan del Sur',\n            },\n            {\n                code: 'RP04',\n                name: 'Aklan',\n            },\n            {\n                code: 'RP05',\n                name: 'Albay',\n            },\n            {\n                code: 'RP06',\n                name: 'Antique',\n            },\n            {\n                code: 'RPH6',\n                name: 'Apayao',\n            },\n            {\n                code: 'RPG8',\n                name: 'Aurora',\n            },\n            {\n                code: 'RP22',\n                name: 'Basilan',\n            },\n            {\n                code: 'RP07',\n                name: 'Bataan',\n            },\n            {\n                code: 'RP08',\n                name: 'Batanes',\n            },\n            {\n                code: 'RP09',\n                name: 'Batangas',\n            },\n            {\n                code: 'RP10',\n                name: 'Benguet',\n            },\n            {\n                code: 'RPH9',\n                name: 'Biliran',\n            },\n            {\n                code: 'RP11',\n                name: 'Bohol',\n            },\n            {\n                code: 'RP12',\n                name: 'Bukidnon',\n            },\n            {\n                code: 'RP13',\n                name: 'Bulacan',\n            },\n            {\n                code: 'RP14',\n                name: 'Cagayan',\n            },\n            {\n                code: 'RP15',\n                name: 'Camarines Norte',\n            },\n            {\n                code: 'RP16',\n                name: 'Camarines Sur',\n            },\n            {\n                code: 'RP17',\n                name: 'Camiguin',\n            },\n            {\n                code: 'RP18',\n                name: 'Capiz',\n            },\n            {\n                code: 'RP19',\n                name: 'Catanduanes',\n            },\n            {\n                code: 'RP20',\n                name: 'Cavite',\n            },\n            {\n                code: 'RP21',\n                name: 'Cebu',\n            },\n            {\n                code: 'RPI6',\n                name: 'Compostela Valley',\n            },\n            {\n                code: 'RP57',\n                name: 'Cotabato',\n            },\n            {\n                code: 'RP26',\n                name: 'Davao Oriental',\n            },\n            {\n                code: 'RPI7',\n                name: 'Davao del Norte',\n            },\n            {\n                code: 'RP25',\n                name: 'Davao del Sur',\n            },\n            {\n                code: 'RPI9',\n                name: 'Dinagat Islands',\n            },\n            {\n                code: 'RP23',\n                name: 'Eastern Samar',\n            },\n            {\n                code: 'RPJ3',\n                name: 'Guimaras',\n            },\n            {\n                code: 'RP27',\n                name: 'Ifugao',\n            },\n            {\n                code: 'RP28',\n                name: 'Ilocos Norte',\n            },\n            {\n                code: 'RP29',\n                name: 'Ilocos Sur',\n            },\n            {\n                code: 'RP30',\n                name: 'Iloilo',\n            },\n            {\n                code: 'RP31',\n                name: 'Isabela',\n            },\n            {\n                code: 'RPJ7',\n                name: 'Kalinga',\n            },\n            {\n                code: 'RP36',\n                name: 'La Union',\n            },\n            {\n                code: 'RP33',\n                name: 'Laguna',\n            },\n            {\n                code: 'RP34',\n                name: 'Lanao del Norte',\n            },\n            {\n                code: 'RP35',\n                name: 'Lanao del Sur',\n            },\n            {\n                code: 'RP37',\n                name: 'Leyte',\n            },\n            {\n                code: 'RP56',\n                name: 'Maguindanao',\n            },\n            {\n                code: 'RP38',\n                name: 'Marinduque',\n            },\n            {\n                code: 'RP39',\n                name: 'Masbate',\n            },\n            {\n                code: 'RPD9',\n                name: 'Metropolitan Manila',\n            },\n            {\n                code: 'RP42',\n                name: 'Misamis Occidental',\n            },\n            {\n                code: 'RP43',\n                name: 'Misamis Oriental',\n            },\n            {\n                code: 'RP44',\n                name: 'Mountain',\n            },\n            {\n                code: 'RPH3',\n                name: 'Negros Occidental',\n            },\n            {\n                code: 'RP46',\n                name: 'Negros Oriental',\n            },\n            {\n                code: 'RP67',\n                name: 'Northern Samar',\n            },\n            {\n                code: 'RP47',\n                name: 'Nueva Ecija',\n            },\n            {\n                code: 'RP48',\n                name: 'Nueva Vizcaya',\n            },\n            {\n                code: 'RP40',\n                name: 'Occidental Mindoro',\n            },\n            {\n                code: 'RP41',\n                name: 'Oriental Mindoro',\n            },\n            {\n                code: 'RP49',\n                name: 'Palawan',\n            },\n            {\n                code: 'RP50',\n                name: 'Pampanga',\n            },\n            {\n                code: 'RP51',\n                name: 'Pangasinan',\n            },\n            {\n                code: 'RPH2',\n                name: 'Quezon',\n            },\n            {\n                code: 'RP68',\n                name: 'Quirino',\n            },\n            {\n                code: 'RP53',\n                name: 'Rizal',\n            },\n            {\n                code: 'RP54',\n                name: 'Romblon',\n            },\n            {\n                code: 'RP55',\n                name: 'Samar',\n            },\n            {\n                code: 'PH72',\n                name: 'Sarangani',\n            },\n            {\n                code: 'RP69',\n                name: 'Siquijor',\n            },\n            {\n                code: 'RP58',\n                name: 'Sorsogon',\n            },\n            {\n                code: 'RP70',\n                name: 'South Cotabato',\n            },\n            {\n                code: 'RP59',\n                name: 'Southern Leyte',\n            },\n            {\n                code: 'RP71',\n                name: 'Sultan Kudarat',\n            },\n            {\n                code: 'RP60',\n                name: 'Sulu',\n            },\n            {\n                code: 'RP61',\n                name: 'Surigao del Norte',\n            },\n            {\n                code: 'RP62',\n                name: 'Surigao del Sur',\n            },\n            {\n                code: 'RPO3',\n                name: 'Tarlac',\n            },\n            {\n                code: 'RPO4',\n                name: 'Tawi-Tawi',\n            },\n            {\n                code: 'RPP1',\n                name: 'Zambales',\n            },\n            {\n                code: 'RPG7',\n                name: 'Zamboanga del Norte',\n            },\n            {\n                code: 'RP65',\n                name: 'Zamboanga del Sur',\n            },\n            {\n                code: 'RP66',\n                name: 'Zamboanga-Sibugay',\n            },\n        ],\n    },\n    {\n        code: 'PN',\n        id: 2431,\n        name: 'Pitcairn',\n        states: [],\n    },\n    {\n        code: 'PL',\n        id: 2320,\n        name: 'Poland',\n        states: [\n            {\n                code: 'PL-DS',\n                name: 'Dolnoslaskie',\n            },\n            {\n                code: 'PL-KP',\n                name: 'Kujawsko-pomorskie',\n            },\n            {\n                code: 'PL-LD',\n                name: 'Lódzkie',\n            },\n            {\n                code: 'PL-LU',\n                name: 'Lubelskie',\n            },\n            {\n                code: 'PL-LB',\n                name: 'Lubuskie',\n            },\n            {\n                code: 'PL-MA',\n                name: 'Malopolskie',\n            },\n            {\n                code: 'PL-MZ',\n                name: 'Mazowieckie',\n            },\n            {\n                code: 'PL-OP',\n                name: 'Opolskie',\n            },\n            {\n                code: 'PL-PK',\n                name: 'Podkarpackie',\n            },\n            {\n                code: 'PL-PD',\n                name: 'Podlaskie',\n            },\n            {\n                code: 'PL-PM',\n                name: 'Pomorskie',\n            },\n            {\n                code: 'PL-SL',\n                name: 'Slaskie',\n            },\n            {\n                code: 'PL-SK',\n                name: 'Swietokrzyskie',\n            },\n            {\n                code: 'PL-WN',\n                name: 'Warminsko-mazurskie',\n            },\n            {\n                code: 'PL-WP',\n                name: 'Wielkopolskie',\n            },\n        ],\n    },\n    {\n        code: 'PT',\n        id: 2321,\n        name: 'Portugal',\n        states: [\n            {\n                code: 'PO23',\n                name: 'Acores Autonomous',\n            },\n            {\n                code: 'PO02',\n                name: 'Aveiro',\n            },\n            {\n                code: 'PO03',\n                name: 'Beja',\n            },\n            {\n                code: 'PO04',\n                name: 'Braga',\n            },\n            {\n                code: 'PO05',\n                name: 'Braganca',\n            },\n            {\n                code: 'PO06',\n                name: 'Castelo Branco',\n            },\n            {\n                code: 'PO07',\n                name: 'Coimbra',\n            },\n            {\n                code: 'PO08',\n                name: 'Evora',\n            },\n            {\n                code: 'PO09',\n                name: 'Faro',\n            },\n            {\n                code: 'PO11',\n                name: 'Guarda',\n            },\n            {\n                code: 'PO13',\n                name: 'Leiria',\n            },\n            {\n                code: 'PO14',\n                name: 'Lisboa',\n            },\n            {\n                code: 'PO10',\n                name: 'Madeira Autonomous',\n            },\n            {\n                code: 'PO16',\n                name: 'Portalegre',\n            },\n            {\n                code: 'PO17',\n                name: 'Porto',\n            },\n            {\n                code: 'PO18',\n                name: 'Santarem',\n            },\n            {\n                code: 'PO19',\n                name: 'Setubal',\n            },\n            {\n                code: 'PO20',\n                name: 'Viana do Castelo',\n            },\n            {\n                code: 'PO21',\n                name: 'Vila Real',\n            },\n            {\n                code: 'PO22',\n                name: 'Viseu',\n            },\n        ],\n    },\n    {\n        code: 'PR',\n        id: 2374,\n        name: 'Puerto Rico',\n        states: [\n            {\n                code: 'PR.AJ',\n                name: 'Adjuntas',\n            },\n            {\n                code: 'PR.AD',\n                name: 'Aguada',\n            },\n            {\n                code: 'PR.AL',\n                name: 'Aguadilla',\n            },\n            {\n                code: 'PR.AB',\n                name: 'Aguas Buenas',\n            },\n            {\n                code: 'PR.AI',\n                name: 'Aibonito',\n            },\n            {\n                code: 'PR.AN',\n                name: 'Añasco',\n            },\n            {\n                code: 'PR.AC',\n                name: 'Arecibo',\n            },\n            {\n                code: 'PR.AR',\n                name: 'Arroyo',\n            },\n            {\n                code: 'PR.BC',\n                name: 'Barceloneta',\n            },\n            {\n                code: 'PR.BQ',\n                name: 'Barranquitas',\n            },\n            {\n                code: 'PR.BY',\n                name: 'Bayamón',\n            },\n            {\n                code: 'PR.CR',\n                name: 'Cabo Rojo',\n            },\n            {\n                code: 'PR.CG',\n                name: 'Caguas',\n            },\n            {\n                code: 'PR.CA',\n                name: 'Camuy',\n            },\n            {\n                code: 'PR.CV',\n                name: 'Canóvanas',\n            },\n            {\n                code: 'PR.CN',\n                name: 'Carolina',\n            },\n            {\n                code: 'PR.CT',\n                name: 'Cataño',\n            },\n            {\n                code: 'PR.CY',\n                name: 'Cayey',\n            },\n            {\n                code: 'PR.CB',\n                name: 'Ceiba',\n            },\n            {\n                code: 'PR.CL',\n                name: 'Ciales',\n            },\n            {\n                code: 'PR.CD',\n                name: 'Cidra',\n            },\n            {\n                code: 'PR.CO',\n                name: 'Coamo',\n            },\n            {\n                code: 'PR.CM',\n                name: 'Comerío',\n            },\n            {\n                code: 'PR.CZ',\n                name: 'Corozal',\n            },\n            {\n                code: 'PR.CU',\n                name: 'Culebra',\n            },\n            {\n                code: 'PR.DO',\n                name: 'Dorado',\n            },\n            {\n                code: 'PR.FJ',\n                name: 'Fajardo',\n            },\n            {\n                code: 'PR.FL',\n                name: 'Florida',\n            },\n            {\n                code: 'PR.GC',\n                name: 'Guánica',\n            },\n            {\n                code: 'PR.GM',\n                name: 'Guayama',\n            },\n            {\n                code: 'PR.GL',\n                name: 'Guayanilla',\n            },\n            {\n                code: 'PR.GB',\n                name: 'Guaynabo',\n            },\n            {\n                code: 'PR.GR',\n                name: 'Gurabo',\n            },\n            {\n                code: 'PR.HA',\n                name: 'Hatillo',\n            },\n            {\n                code: 'PR.HO',\n                name: 'Hormigueros',\n            },\n            {\n                code: 'PR.HU',\n                name: 'Humacao',\n            },\n            {\n                code: 'PR.IS',\n                name: 'Isabela',\n            },\n            {\n                code: 'PR.JY',\n                name: 'Jayuya',\n            },\n            {\n                code: 'PR.JD',\n                name: 'Juana Díaz',\n            },\n            {\n                code: 'PR.JC',\n                name: 'Juncos',\n            },\n            {\n                code: 'PR.LJ',\n                name: 'Lajas',\n            },\n            {\n                code: 'PR.LR',\n                name: 'Lares',\n            },\n            {\n                code: 'PR.LM',\n                name: 'Las Marías',\n            },\n            {\n                code: 'PR.LP',\n                name: 'Las Piedras',\n            },\n            {\n                code: 'PR.LZ',\n                name: 'Loíza',\n            },\n            {\n                code: 'PR.LQ',\n                name: 'Luquillo',\n            },\n            {\n                code: 'PR.MT',\n                name: 'Manatí',\n            },\n            {\n                code: 'PR.MR',\n                name: 'Maricao',\n            },\n            {\n                code: 'PR.MB',\n                name: 'Maunabo',\n            },\n            {\n                code: 'PR.MG',\n                name: 'Mayagüez',\n            },\n            {\n                code: 'PR.MC',\n                name: 'Moca',\n            },\n            {\n                code: 'PR.MV',\n                name: 'Morovis',\n            },\n            {\n                code: 'PR.NG',\n                name: 'Naguabo',\n            },\n            {\n                code: 'PR.NR',\n                name: 'Naranjito',\n            },\n            {\n                code: 'PR.OR',\n                name: 'Orocovis',\n            },\n            {\n                code: 'PR.PT',\n                name: 'Patillas',\n            },\n            {\n                code: 'PR.PN\\t',\n                name: 'Peñuelas',\n            },\n            {\n                code: 'PR.PO',\n                name: 'Ponce',\n            },\n            {\n                code: 'PR.QB',\n                name: 'Quebradillas',\n            },\n            {\n                code: 'PR.RC',\n                name: 'Rincón',\n            },\n            {\n                code: 'PR.RG',\n                name: 'Río Grande',\n            },\n            {\n                code: 'PR.SB',\n                name: 'Sabana Grande',\n            },\n            {\n                code: 'PR.SA',\n                name: 'Salinas',\n            },\n            {\n                code: 'PR.SG',\n                name: 'San Germán',\n            },\n            {\n                code: 'PR.SJ',\n                name: 'San Juan',\n            },\n            {\n                code: 'PR.SL',\n                name: 'San Lorenzo',\n            },\n            {\n                code: 'PR.SS',\n                name: 'San Sebastián',\n            },\n            {\n                code: 'PR.SI',\n                name: 'Santa Isabel',\n            },\n            {\n                code: 'PR.TA',\n                name: 'Toa Alta',\n            },\n            {\n                code: 'PR.TB',\n                name: 'Toa Baja',\n            },\n            {\n                code: 'PR.TJ',\n                name: 'Trujillo Alto',\n            },\n            {\n                code: 'PR.UT',\n                name: 'Utuado',\n            },\n            {\n                code: 'PR.VA',\n                name: 'Vega Alta',\n            },\n            {\n                code: 'PR.VB',\n                name: 'Vega Baja',\n            },\n            {\n                code: 'PR.VQ',\n                name: 'Vieques',\n            },\n            {\n                code: 'PR.VL',\n                name: 'Villalba',\n            },\n            {\n                code: 'PR.YB',\n                name: 'Yabucoa',\n            },\n            {\n                code: 'PR.YU',\n                name: 'Yauco',\n            },\n        ],\n    },\n    {\n        code: 'QA',\n        id: 2322,\n        name: 'Qatar',\n        states: [\n            {\n                code: 'QA01',\n                name: 'Ad Dawhah',\n            },\n            {\n                code: 'QA13',\n                name: 'Al Daayen',\n            },\n            {\n                code: 'QA04',\n                name: 'Al Khawr',\n            },\n            {\n                code: 'QA10',\n                name: 'Al Wakrah',\n            },\n            {\n                code: 'QA14',\n                name: 'Al-Shahaniya',\n            },\n            {\n                code: 'QA06',\n                name: 'Ar Rayyan',\n            },\n            {\n                code: 'QA08',\n                name: 'Madinat ach Shamal',\n            },\n            {\n                code: 'QA09',\n                name: 'Umm Salal',\n            },\n        ],\n    },\n    {\n        code: 'R999',\n        id: 2398,\n        name: 'Reunion',\n        states: [],\n    },\n    {\n        code: 'RO',\n        id: 2323,\n        name: 'Romania',\n        states: [\n            {\n                code: 'RO-AB',\n                name: 'Alba',\n            },\n            {\n                code: 'RO-AR',\n                name: 'Arad',\n            },\n            {\n                code: 'RO-AG',\n                name: 'Arges',\n            },\n            {\n                code: 'RO-BC',\n                name: 'Bacau',\n            },\n            {\n                code: 'RO-BH',\n                name: 'Bihor',\n            },\n            {\n                code: 'RO-BN',\n                name: 'Bistrita-Nasaud',\n            },\n            {\n                code: 'RO-BT',\n                name: 'Botosani',\n            },\n            {\n                code: 'RO-BR',\n                name: 'Braila',\n            },\n            {\n                code: 'RO-BV',\n                name: 'Brasov',\n            },\n            {\n                code: 'RO-B',\n                name: 'Bucuresti',\n            },\n            {\n                code: 'RO-BZ',\n                name: 'Buzau',\n            },\n            {\n                code: 'RO-CL',\n                name: 'Calarasi',\n            },\n            {\n                code: 'RO-CS',\n                name: 'Caras-Severin',\n            },\n            {\n                code: 'RO-CJ',\n                name: 'Cluj',\n            },\n            {\n                code: 'RO-CT',\n                name: 'Constanta',\n            },\n            {\n                code: 'RO-CV',\n                name: 'Covasna',\n            },\n            {\n                code: 'RO-DB',\n                name: 'Dâmbovita',\n            },\n            {\n                code: 'RO-DJ',\n                name: 'Dolj',\n            },\n            {\n                code: 'RO-GL',\n                name: 'Galati',\n            },\n            {\n                code: 'RO-GR',\n                name: 'Giurgiu',\n            },\n            {\n                code: 'RO-GJ',\n                name: 'Gorj',\n            },\n            {\n                code: 'RO-HR',\n                name: 'Harghita',\n            },\n            {\n                code: 'RO-HD',\n                name: 'Hunedoara',\n            },\n            {\n                code: 'RO-IL',\n                name: 'Ialomita',\n            },\n            {\n                code: 'RO-IS',\n                name: 'Iasi',\n            },\n            {\n                code: 'RO-IF',\n                name: 'Ilfov',\n            },\n            {\n                code: 'RO-MM',\n                name: 'Maramures',\n            },\n            {\n                code: 'RO-MH',\n                name: 'Mehedinti',\n            },\n            {\n                code: 'RO-MS',\n                name: 'Mures',\n            },\n            {\n                code: 'RO-NT',\n                name: 'Neamt',\n            },\n            {\n                code: 'RO-OT',\n                name: 'Olt',\n            },\n            {\n                code: 'RO-PH',\n                name: 'Prahova',\n            },\n            {\n                code: 'RO-SJ',\n                name: 'Salaj',\n            },\n            {\n                code: 'RO-SM',\n                name: 'Satu Mare',\n            },\n            {\n                code: 'RO-SB',\n                name: 'Sibiu',\n            },\n            {\n                code: 'RO-SV',\n                name: 'Suceava',\n            },\n            {\n                code: 'RO-TR',\n                name: 'Teleorman',\n            },\n            {\n                code: 'RO-TM',\n                name: 'Timis',\n            },\n            {\n                code: 'RO-TL',\n                name: 'Tulcea',\n            },\n            {\n                code: 'RO-VL',\n                name: 'Vâlcea',\n            },\n            {\n                code: 'RO-VS',\n                name: 'Vaslui',\n            },\n            {\n                code: 'RO-VN',\n                name: 'Vrancea',\n            },\n        ],\n    },\n    {\n        code: 'RU',\n        id: 2324,\n        name: 'Russian Federation',\n        states: [\n            {\n                code: 'RS01',\n                name: 'Adygeya Republic',\n            },\n            {\n                code: 'RS02',\n                name: 'Aginskiy Buryatskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS03',\n                name: 'Altay Republic',\n            },\n            {\n                code: 'RS04',\n                name: 'Altayskiy Kray',\n            },\n            {\n                code: 'RS05',\n                name: \"Amurskaya Oblast'\",\n            },\n            {\n                code: 'RS06',\n                name: \"Arkhangel'skaya Oblast'\",\n            },\n            {\n                code: 'RS07',\n                name: \"Astrakhanskaya Oblast'\",\n            },\n            {\n                code: 'RS08',\n                name: 'Bashkortostan Republic',\n            },\n            {\n                code: 'RS09',\n                name: \"Belgorodskaya Oblast'\",\n            },\n            {\n                code: 'RS10',\n                name: \"Bryanskaya Oblast'\",\n            },\n            {\n                code: 'RS11',\n                name: 'Buryatiya Republic',\n            },\n            {\n                code: 'RSCI',\n                name: 'Chechnya Republic',\n            },\n            {\n                code: 'RS13',\n                name: \"Chelyabinskaya Oblast'\",\n            },\n            {\n                code: 'RS14',\n                name: \"Chitinskaya Oblast'\",\n            },\n            {\n                code: 'RS15',\n                name: 'Chukotskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS16',\n                name: 'Chuvashiya Republic',\n            },\n            {\n                code: 'RS17',\n                name: 'Dagestan Republic',\n            },\n            {\n                code: 'RS18',\n                name: 'Evenkiyskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS20',\n                name: \"Irkutskaya Oblast'\",\n            },\n            {\n                code: 'RS21',\n                name: \"Ivanovskaya Oblast'\",\n            },\n            {\n                code: 'RS22',\n                name: 'Kabardino-Balkariya Republic',\n            },\n            {\n                code: 'RS23',\n                name: \"Kaliningradskaya Oblast'\",\n            },\n            {\n                code: 'RS24',\n                name: 'Kalmykiya Republic',\n            },\n            {\n                code: 'RS25',\n                name: \"Kaluzhskaya Oblast'\",\n            },\n            {\n                code: 'RS26',\n                name: \"Kamchatskaya Oblast'\",\n            },\n            {\n                code: 'RS27',\n                name: 'Karachayevo-Cherkesiya Republic',\n            },\n            {\n                code: 'RS28',\n                name: 'Kareliya Republic',\n            },\n            {\n                code: 'RS29',\n                name: \"Kemerovskaya Oblast'\",\n            },\n            {\n                code: 'RS30',\n                name: 'Khabarovskiy Kray',\n            },\n            {\n                code: 'RS31',\n                name: 'Khakasiya Republic',\n            },\n            {\n                code: 'RS32',\n                name: 'Khanty-Mansiyskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS33',\n                name: \"Kirovskaya Oblast'\",\n            },\n            {\n                code: 'RS34',\n                name: 'Komi Republic',\n            },\n            {\n                code: 'RS36',\n                name: 'Koryakskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS37',\n                name: \"Kostromskaya Oblast'\",\n            },\n            {\n                code: 'RS38',\n                name: 'Krasnodarskiy Kray',\n            },\n            {\n                code: 'RS39',\n                name: 'Krasnoyarskiy Kray',\n            },\n            {\n                code: 'RS40',\n                name: \"Kurganskaya Oblast'\",\n            },\n            {\n                code: 'RS41',\n                name: \"Kurskaya Oblast'\",\n            },\n            {\n                code: 'RS42',\n                name: \"Leningradskaya Oblast'\",\n            },\n            {\n                code: 'RS43',\n                name: \"Lipetskaya Oblast'\",\n            },\n            {\n                code: 'RS44',\n                name: \"Magadanskaya Oblast'\",\n            },\n            {\n                code: 'RS45',\n                name: 'Mariy-El Republic',\n            },\n            {\n                code: 'RS46',\n                name: 'Mordoviya Republic',\n            },\n            {\n                code: 'RS47',\n                name: \"Moskovskaya Oblast'\",\n            },\n            {\n                code: 'RS48',\n                name: 'Moskva Federal City',\n            },\n            {\n                code: 'RS49',\n                name: \"Murmanskaya Oblast'\",\n            },\n            {\n                code: 'RS50',\n                name: 'Nenetskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS51',\n                name: \"Nizhegorodskaya Oblast'\",\n            },\n            {\n                code: 'RS52',\n                name: \"Novgorodskaya Oblast'\",\n            },\n            {\n                code: 'RS53',\n                name: \"Novosibirskaya Oblast'\",\n            },\n            {\n                code: 'RS54',\n                name: \"Omskaya Oblast'\",\n            },\n            {\n                code: 'RS55',\n                name: \"Orenburgskaya Oblast'\",\n            },\n            {\n                code: 'RS56',\n                name: \"Orlovskaya Oblast'\",\n            },\n            {\n                code: 'RS57',\n                name: \"Penzenskaya Oblast'\",\n            },\n            {\n                code: 'RS90',\n                name: 'Permskiy Kray',\n            },\n            {\n                code: 'RS59',\n                name: 'Primorskiy Kray',\n            },\n            {\n                code: 'RS60',\n                name: \"Pskovskaya Oblast'\",\n            },\n            {\n                code: 'RS61',\n                name: \"Rostovskaya Oblast'\",\n            },\n            {\n                code: 'RS62',\n                name: \"Ryazanskaya Oblast'\",\n            },\n            {\n                code: 'RS63',\n                name: 'Sakha (Yakutiya) Republic',\n            },\n            {\n                code: 'RS64',\n                name: \"Sakhalinskaya Oblast'\",\n            },\n            {\n                code: 'RS65',\n                name: \"Samarskaya Oblast'\",\n            },\n            {\n                code: 'RS66',\n                name: 'Sankt-Peterburg Federal City',\n            },\n            {\n                code: 'RS67',\n                name: \"Saratovskaya Oblast'\",\n            },\n            {\n                code: 'RS68',\n                name: 'Severnaya Osetiya-Alaniya Respublika',\n            },\n            {\n                code: 'RS69',\n                name: \"Smolenskaya Oblast'\",\n            },\n            {\n                code: 'RS70',\n                name: \"Stavropol'skiy Kray\",\n            },\n            {\n                code: 'RS71',\n                name: \"Sverdlovskaya Oblast'\",\n            },\n            {\n                code: 'RS72',\n                name: \"Tambovskaya Oblast'\",\n            },\n            {\n                code: 'RS73',\n                name: 'Tatarstan Republic',\n            },\n            {\n                code: 'RS74',\n                name: 'Taymyrskiy (Dolgano-Nenetskiy) Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS75',\n                name: \"Tomskaya Oblast'\",\n            },\n            {\n                code: 'RS76',\n                name: \"Tul'skaya Oblast'\",\n            },\n            {\n                code: 'RS77',\n                name: \"Tverskaya Oblast'\",\n            },\n            {\n                code: 'RS78',\n                name: \"Tyumenskaya Oblast'\",\n            },\n            {\n                code: 'RS79',\n                name: 'Tyva Republic',\n            },\n            {\n                code: 'RS80',\n                name: 'Udmurtiya Republic',\n            },\n            {\n                code: 'RS81',\n                name: \"Ul'yanovskaya Oblast'\",\n            },\n            {\n                code: 'RS82',\n                name: \"Ust'-Ordynskiy Buryatskiy Avtonomnyy Okrug\",\n            },\n            {\n                code: 'RS83',\n                name: \"Vladimirskaya Oblast'\",\n            },\n            {\n                code: 'RS84',\n                name: \"Volgogradskaya Oblast'\",\n            },\n            {\n                code: 'RS85',\n                name: \"Vologodskaya Oblast'\",\n            },\n            {\n                code: 'RS86',\n                name: \"Voronezhskaya Oblast'\",\n            },\n            {\n                code: 'RS87',\n                name: 'Yamalo-Nenetskiy Avtonomnyy Okrug',\n            },\n            {\n                code: 'RS88',\n                name: \"Yaroslavskaya Oblast'\",\n            },\n            {\n                code: 'RS89',\n                name: \"Yevreyskaya Avtonomnaya Oblast'\",\n            },\n        ],\n    },\n    {\n        code: 'RW',\n        id: 2325,\n        name: 'Rwanda',\n        states: [\n            {\n                code: 'RW11',\n                name: 'Eastern',\n            },\n            {\n                code: 'RW12',\n                name: 'Kigali City',\n            },\n            {\n                code: 'RW13',\n                name: 'Northern',\n            },\n            {\n                code: 'RW15',\n                name: 'Southern',\n            },\n            {\n                code: 'RW14',\n                name: 'Western',\n            },\n        ],\n    },\n    {\n        code: 'BL',\n        id: 2432,\n        name: 'Saint Barthélemy',\n        states: [],\n    },\n    {\n        code: 'SH',\n        id: 2433,\n        name: 'Saint Helena; Ascension and Tristan Da Cunha',\n        states: [],\n    },\n    {\n        code: 'KN',\n        id: 2399,\n        name: 'Saint Kitts and Nevis',\n        states: [],\n    },\n    {\n        code: 'LC',\n        id: 2326,\n        name: 'Saint Lucia',\n        states: [],\n    },\n    {\n        code: 'MF',\n        id: 2434,\n        name: 'Saint Martin',\n        states: [\n            {\n                code: 'MF.SM',\n                name: 'Saint Martin',\n            },\n        ],\n    },\n    {\n        code: 'PM',\n        id: 2435,\n        name: 'Saint Pierre And Miquelon',\n        states: [],\n    },\n    {\n        code: 'VC',\n        id: 2400,\n        name: 'Saint Vincent and Grenadines',\n        states: [],\n    },\n    {\n        code: 'WS',\n        id: 2401,\n        name: 'Samoa',\n        states: [\n            {\n                code: 'WS01',\n                name: \"A'ana\",\n            },\n            {\n                code: 'WS02',\n                name: 'Aiga-i-le-Tai',\n            },\n            {\n                code: 'WS03',\n                name: 'Atua',\n            },\n            {\n                code: 'WS04',\n                name: \"Fa'asaleleaga\",\n            },\n            {\n                code: 'WS05',\n                name: \"Gaga'emauga\",\n            },\n            {\n                code: 'WS07',\n                name: 'Gagaifomauga',\n            },\n            {\n                code: 'WS08',\n                name: 'Palauli',\n            },\n            {\n                code: 'WS09',\n                name: \"Satupa'itea\",\n            },\n            {\n                code: 'WS10',\n                name: 'Tuamasaga',\n            },\n            {\n                code: 'WS06',\n                name: \"Va'a-o-Fonoti\",\n            },\n            {\n                code: 'WS11',\n                name: 'Vaisigano',\n            },\n        ],\n    },\n    {\n        code: 'SM',\n        id: 2327,\n        name: 'San Marino',\n        states: [],\n    },\n    {\n        code: 'TP',\n        id: 2403,\n        name: 'Sao Tome and Principe',\n        states: [],\n    },\n    {\n        code: 'SA',\n        id: 2328,\n        name: 'Saudi Arabia',\n        states: [\n            {\n                code: 'SA02',\n                name: 'Al Bahah',\n            },\n            {\n                code: 'SA15',\n                name: 'Al Hudud ash Shamaliyah',\n            },\n            {\n                code: 'SA20',\n                name: 'Al Jawf',\n            },\n            {\n                code: 'SA05',\n                name: 'Al Madinah',\n            },\n            {\n                code: 'SA08',\n                name: 'Al Qasim',\n            },\n            {\n                code: 'SA10',\n                name: 'Ar Riyad',\n            },\n            {\n                code: 'SA06',\n                name: 'Ash Sharqiyah',\n            },\n            {\n                code: 'SA11',\n                name: 'Asir',\n            },\n            {\n                code: 'SA13',\n                name: \"Ha'il\",\n            },\n            {\n                code: 'SA17',\n                name: 'Jizan',\n            },\n            {\n                code: 'SA14',\n                name: 'Makkah',\n            },\n            {\n                code: 'SA16',\n                name: 'Najran',\n            },\n            {\n                code: 'SA19',\n                name: 'Tabuk',\n            },\n        ],\n    },\n    {\n        code: 'SN',\n        id: 2329,\n        name: 'Senegal',\n        states: [\n            {\n                code: 'SG01',\n                name: 'Dakar',\n            },\n            {\n                code: 'SG03',\n                name: 'Diourbel',\n            },\n            {\n                code: 'SG09',\n                name: 'Fatick',\n            },\n            {\n                code: 'SG16',\n                name: 'Kaffrine',\n            },\n            {\n                code: 'SG10',\n                name: 'Kaolack',\n            },\n            {\n                code: 'SG17',\n                name: 'Kédougou',\n            },\n            {\n                code: 'SG11',\n                name: 'Kolda',\n            },\n            {\n                code: 'SG13',\n                name: 'Louga',\n            },\n            {\n                code: 'SG15',\n                name: 'Matam',\n            },\n            {\n                code: 'SG14',\n                name: 'Saint-Louis',\n            },\n            {\n                code: 'SG18',\n                name: 'Sédhiou',\n            },\n            {\n                code: 'SG05',\n                name: 'Tambacounda',\n            },\n            {\n                code: 'SG07',\n                name: 'Thiès',\n            },\n            {\n                code: 'SG12',\n                name: 'Ziguinchor',\n            },\n        ],\n    },\n    {\n        code: 'RI',\n        id: 2402,\n        name: 'Serbia',\n        states: [\n            {\n                code: 'RS-00',\n                name: 'Belgrade',\n            },\n            {\n                code: 'RS-14',\n                name: 'Borski okrug',\n            },\n            {\n                code: 'RS-11',\n                name: 'Branicevski okrug',\n            },\n            {\n                code: 'RS-23',\n                name: 'Jablanicki okrug',\n            },\n            {\n                code: 'RS-06',\n                name: 'Južnobanatski okrug',\n            },\n            {\n                code: 'RS-04',\n                name: 'Južnobanatski okrug',\n            },\n            {\n                code: 'RS-09',\n                name: 'Kolubarski okrug',\n            },\n            {\n                code: 'RS-25',\n                name: 'Kosovski okrug',\n            },\n            {\n                code: 'RS-28',\n                name: 'Kosovsko-Mitrovacki okrug',\n            },\n            {\n                code: 'RS-29',\n                name: 'Kosovsko-Pomoravski okrug',\n            },\n            {\n                code: 'RS-08',\n                name: 'Macvanski okrug',\n            },\n            {\n                code: 'RS-17',\n                name: 'Moravicki okrug',\n            },\n            {\n                code: 'RS-20',\n                name: 'Nišavski okrug',\n            },\n            {\n                code: 'RS-24',\n                name: 'Pcinjski okrug',\n            },\n            {\n                code: 'RS-26',\n                name: 'Pecki okrug',\n            },\n            {\n                code: 'RS-22',\n                name: 'Pirotski okrug',\n            },\n            {\n                code: 'RS-10',\n                name: 'Podunavski okrug',\n            },\n            {\n                code: 'RS-13',\n                name: 'Pomoravski okrug',\n            },\n            {\n                code: 'RS-27',\n                name: 'Prizrenski okrug',\n            },\n            {\n                code: 'RS-19',\n                name: 'Rasinski okrug',\n            },\n            {\n                code: 'RS-18',\n                name: 'Raška okrug',\n            },\n            {\n                code: 'RS-01',\n                name: 'Severnobacki okrug',\n            },\n            {\n                code: 'RS-03',\n                name: 'Severnobanatski okrug',\n            },\n            {\n                code: 'RS-02',\n                name: 'Srednjebanatski okrug',\n            },\n            {\n                code: 'RS-07',\n                name: 'Sremski okrug',\n            },\n            {\n                code: 'RS-12',\n                name: 'Šumadijski okrug',\n            },\n            {\n                code: 'RS-21',\n                name: 'Toplièki okrug',\n            },\n            {\n                code: 'RS-15',\n                name: 'Zajeèarski okrug',\n            },\n            {\n                code: 'RS-05',\n                name: 'Zapadnobaèki okrug',\n            },\n            {\n                code: 'RS-16',\n                name: 'Zlatiborski okrug',\n            },\n        ],\n    },\n    {\n        code: 'SC',\n        id: 2331,\n        name: 'Seychelles',\n        states: [],\n    },\n    {\n        code: 'SL',\n        id: 2332,\n        name: 'Sierra Leone',\n        states: [\n            {\n                code: 'SL01',\n                name: 'Eastern',\n            },\n            {\n                code: 'SL02',\n                name: 'Northern',\n            },\n            {\n                code: 'SL03',\n                name: 'Southern',\n            },\n            {\n                code: 'SL04',\n                name: 'Western',\n            },\n        ],\n    },\n    {\n        code: 'SG',\n        id: 2333,\n        name: 'Singapore',\n        states: [\n            {\n                code: 'SG01',\n                name: 'Central Singapore',\n            },\n            {\n                code: 'SG02',\n                name: 'North East',\n            },\n            {\n                code: 'SG03',\n                name: 'North West',\n            },\n            {\n                code: 'SG04',\n                name: 'South East',\n            },\n            {\n                code: 'SG05',\n                name: 'South West',\n            },\n        ],\n    },\n    {\n        code: 'SX',\n        id: 2448,\n        name: 'Sint Maarten',\n        states: [\n            {\n                code: 'SX.SM',\n                name: 'Sint Maarten',\n            },\n        ],\n    },\n    {\n        code: 'SK',\n        id: 2334,\n        name: 'Slovakia',\n        states: [\n            {\n                code: 'SK-BC',\n                name: 'Banskobystrický kraj',\n            },\n            {\n                code: 'SK-BL',\n                name: 'Bratislavský kraj',\n            },\n            {\n                code: 'SK-KI',\n                name: 'Košický kraj',\n            },\n            {\n                code: 'SK-NI',\n                name: 'Nitriansky kraj',\n            },\n            {\n                code: 'SK-PV',\n                name: 'Prešovský kraj',\n            },\n            {\n                code: 'SK-TC',\n                name: 'Trenciansky kraj',\n            },\n            {\n                code: 'SK-TA',\n                name: 'Trnavský kraj',\n            },\n            {\n                code: 'SK-ZI',\n                name: 'Žilinský kraj',\n            },\n        ],\n    },\n    {\n        code: 'SI',\n        id: 2335,\n        name: 'Slovenia',\n        states: [\n            {\n                code: 'SI-001',\n                name: 'Ajdovšcina',\n            },\n            {\n                code: 'SI-195',\n                name: 'Apace',\n            },\n            {\n                code: 'SI-002',\n                name: 'Beltinci',\n            },\n            {\n                code: 'SI-148',\n                name: 'Benedikt',\n            },\n            {\n                code: 'SI-149',\n                name: 'Bistrica ob Sotli',\n            },\n            {\n                code: 'SI-003',\n                name: 'Bled',\n            },\n            {\n                code: 'SI-150',\n                name: 'Bloke',\n            },\n            {\n                code: 'SI-004',\n                name: 'Bohinj',\n            },\n            {\n                code: 'SI-005',\n                name: 'Borovnica',\n            },\n            {\n                code: 'SI-006',\n                name: 'Bovec',\n            },\n            {\n                code: 'SI-151',\n                name: 'Braslovce',\n            },\n            {\n                code: 'SI-007',\n                name: 'Brda',\n            },\n            {\n                code: 'SI-009',\n                name: 'Brežice',\n            },\n            {\n                code: 'SI-008',\n                name: 'Brezovica',\n            },\n            {\n                code: 'SI-152',\n                name: 'Cankova',\n            },\n            {\n                code: 'SI-011',\n                name: 'Celje',\n            },\n            {\n                code: 'SI-012',\n                name: 'Cerklje na Gorenjskem',\n            },\n            {\n                code: 'SI-013',\n                name: 'Cerknica',\n            },\n            {\n                code: 'SI-014',\n                name: 'Cerkno',\n            },\n            {\n                code: 'SI-153',\n                name: 'Cerkvenjak',\n            },\n            {\n                code: 'SI-197',\n                name: 'Cirkulane',\n            },\n            {\n                code: 'SI-015',\n                name: 'Crenšovci',\n            },\n            {\n                code: 'SI-016',\n                name: 'Crna na Koroškem',\n            },\n            {\n                code: 'SI-017',\n                name: 'Crnomelj',\n            },\n            {\n                code: 'SI-018',\n                name: 'Destrnik',\n            },\n            {\n                code: 'SI-019',\n                name: 'Divaca',\n            },\n            {\n                code: 'SI-154',\n                name: 'Dobje',\n            },\n            {\n                code: 'SI-020',\n                name: 'Dobrepolje',\n            },\n            {\n                code: 'SI-155',\n                name: 'Dobrna',\n            },\n            {\n                code: 'SI-021',\n                name: 'Dobrova-Polhov Gradec',\n            },\n            {\n                code: 'SI-156',\n                name: 'Dobrovnik/Dobronak',\n            },\n            {\n                code: 'SI-022',\n                name: 'Dol pri Ljubljani',\n            },\n            {\n                code: 'SI-157',\n                name: 'Dolenjske Toplice',\n            },\n            {\n                code: 'SI-023',\n                name: 'Domžale',\n            },\n            {\n                code: 'SI-024',\n                name: 'Dornava',\n            },\n            {\n                code: 'SI-025',\n                name: 'Dravograd',\n            },\n            {\n                code: 'SI-026',\n                name: 'Duplek',\n            },\n            {\n                code: 'SI-027',\n                name: 'Gorenja vas-Poljane',\n            },\n            {\n                code: 'SI-028',\n                name: 'Gorišnica',\n            },\n            {\n                code: 'SI-207',\n                name: 'Gorje',\n            },\n            {\n                code: 'SI-029',\n                name: 'Gornja Radgona',\n            },\n            {\n                code: 'SI-030',\n                name: 'Gornji Grad',\n            },\n            {\n                code: 'SI-031',\n                name: 'Gornji Petrovci',\n            },\n            {\n                code: 'SI-158',\n                name: 'Grad',\n            },\n            {\n                code: 'SI-032',\n                name: 'Grosuplje',\n            },\n            {\n                code: 'SI-159',\n                name: 'Hajdina',\n            },\n            {\n                code: 'SI-160',\n                name: 'Hoce-Slivnica',\n            },\n            {\n                code: 'SI-161',\n                name: 'Hodoš/Hodos',\n            },\n            {\n                code: 'SI-162',\n                name: 'Horjul',\n            },\n            {\n                code: 'SI-034',\n                name: 'Hrastnik',\n            },\n            {\n                code: 'SI-035',\n                name: 'Hrpelje-Kozina',\n            },\n            {\n                code: 'SI-036',\n                name: 'Idrija',\n            },\n            {\n                code: 'SI-037',\n                name: 'Ig',\n            },\n            {\n                code: 'SI-038',\n                name: 'Ilirska Bistrica',\n            },\n            {\n                code: 'SI-039',\n                name: 'Ivancna Gorica',\n            },\n            {\n                code: 'SI-040',\n                name: 'Izola/Isola',\n            },\n            {\n                code: 'SI-041',\n                name: 'Jesenice',\n            },\n            {\n                code: 'SI-163',\n                name: 'Jezersko',\n            },\n            {\n                code: 'SI-042',\n                name: 'Juršinci',\n            },\n            {\n                code: 'SI-043',\n                name: 'Kamnik',\n            },\n            {\n                code: 'SI-044',\n                name: 'Kanal',\n            },\n            {\n                code: 'SI-045',\n                name: 'Kidricevo',\n            },\n            {\n                code: 'SI-046',\n                name: 'Kobarid',\n            },\n            {\n                code: 'SI-047',\n                name: 'Kobilje',\n            },\n            {\n                code: 'SI-048',\n                name: 'Kocevje',\n            },\n            {\n                code: 'SI-049',\n                name: 'Komen',\n            },\n            {\n                code: 'SI-164',\n                name: 'Komenda',\n            },\n            {\n                code: 'SI-050',\n                name: 'Koper/Capodistria',\n            },\n            {\n                code: 'SI-196',\n                name: 'Kosanjevica na Krki',\n            },\n            {\n                code: 'SI-165',\n                name: 'Kostel',\n            },\n            {\n                code: 'SI-051',\n                name: 'Kozje',\n            },\n            {\n                code: 'SI-052',\n                name: 'Kranj',\n            },\n            {\n                code: 'SI-053',\n                name: 'Kranjska Gora',\n            },\n            {\n                code: 'SI-166',\n                name: 'Križevci',\n            },\n            {\n                code: 'SI-054',\n                name: 'Krško',\n            },\n            {\n                code: 'SI-055',\n                name: 'Kungota',\n            },\n            {\n                code: 'SI-056',\n                name: 'Kuzma',\n            },\n            {\n                code: 'SI-057',\n                name: 'Laško',\n            },\n            {\n                code: 'SI-058',\n                name: 'Lenart',\n            },\n            {\n                code: 'SI-059',\n                name: 'Lendava/Lendva',\n            },\n            {\n                code: 'SI-060',\n                name: 'Litija',\n            },\n            {\n                code: 'SI-061',\n                name: 'Ljubljana',\n            },\n            {\n                code: 'SI-062',\n                name: 'Ljubno',\n            },\n            {\n                code: 'SI-063',\n                name: 'Ljutomer',\n            },\n            {\n                code: 'SI-208',\n                name: 'Log-Dragomer',\n            },\n            {\n                code: 'SI-064',\n                name: 'Logatec',\n            },\n            {\n                code: 'SI-065',\n                name: 'Loška dolina',\n            },\n            {\n                code: 'SI-066',\n                name: 'Loški Potok',\n            },\n            {\n                code: 'SI-167',\n                name: 'Lovrenc na Pohorju',\n            },\n            {\n                code: 'SI-067',\n                name: 'Luce',\n            },\n            {\n                code: 'SI-068',\n                name: 'Lukovica',\n            },\n            {\n                code: 'SI-069',\n                name: 'Majšperk',\n            },\n            {\n                code: 'SI-198',\n                name: 'Makole',\n            },\n            {\n                code: 'SI-070',\n                name: 'Maribor',\n            },\n            {\n                code: 'SI-168',\n                name: 'Markovci',\n            },\n            {\n                code: 'SI-071',\n                name: 'Medvode',\n            },\n            {\n                code: 'SI-072',\n                name: 'Mengeš',\n            },\n            {\n                code: 'SI-073',\n                name: 'Metlika',\n            },\n            {\n                code: 'SI-074',\n                name: 'Mežica',\n            },\n            {\n                code: 'SI-169',\n                name: 'Miklavž na Dravskem polju',\n            },\n            {\n                code: 'SI-075',\n                name: 'Miren-Kostanjevica',\n            },\n            {\n                code: 'SI-170',\n                name: 'Mirna Pec',\n            },\n            {\n                code: 'SI-076',\n                name: 'Mislinja',\n            },\n            {\n                code: 'SI-199',\n                name: 'Mokronog-Trebelno',\n            },\n            {\n                code: 'SI-077',\n                name: 'Moravce',\n            },\n            {\n                code: 'SI-078',\n                name: 'Moravske Toplice',\n            },\n            {\n                code: 'SI-079',\n                name: 'Mozirje',\n            },\n            {\n                code: 'SI-080',\n                name: 'Murska Sobota',\n            },\n            {\n                code: 'SI-081',\n                name: 'Muta',\n            },\n            {\n                code: 'SI-082',\n                name: 'Naklo',\n            },\n            {\n                code: 'SI-083',\n                name: 'Nazarje',\n            },\n            {\n                code: 'SI-084',\n                name: 'Nova Gorica',\n            },\n            {\n                code: 'SI-085',\n                name: 'Novo mesto',\n            },\n            {\n                code: 'SI-086',\n                name: 'Odranci',\n            },\n            {\n                code: 'SI-171',\n                name: 'Oplotnica',\n            },\n            {\n                code: 'SI-087',\n                name: 'Ormož',\n            },\n            {\n                code: 'SI-088',\n                name: 'Osilnica',\n            },\n            {\n                code: 'SI-089',\n                name: 'Pesnica',\n            },\n            {\n                code: 'SI-090',\n                name: 'Piran/Pirano',\n            },\n            {\n                code: 'SI-091',\n                name: 'Pivka',\n            },\n            {\n                code: 'SI-092',\n                name: 'Podcetrtek',\n            },\n            {\n                code: 'SI-172',\n                name: 'Podlehnik',\n            },\n            {\n                code: 'SI-093',\n                name: 'Podvelka',\n            },\n            {\n                code: 'SI-200',\n                name: 'Poljcane',\n            },\n            {\n                code: 'SI-173',\n                name: 'Polzela',\n            },\n            {\n                code: 'SI-094',\n                name: 'Postojna',\n            },\n            {\n                code: 'SI-174',\n                name: 'Prebold',\n            },\n            {\n                code: 'SI-095',\n                name: 'Preddvor',\n            },\n            {\n                code: 'SI-175',\n                name: 'Prevalje',\n            },\n            {\n                code: 'SI-096',\n                name: 'Ptuj',\n            },\n            {\n                code: 'SI-097',\n                name: 'Puconci',\n            },\n            {\n                code: 'SI-098',\n                name: 'Race-Fram',\n            },\n            {\n                code: 'SI-099',\n                name: 'Radece',\n            },\n            {\n                code: 'SI-100',\n                name: 'Radenci',\n            },\n            {\n                code: 'SI-101',\n                name: 'Radlje ob Dravi',\n            },\n            {\n                code: 'SI-102',\n                name: 'Radovljica',\n            },\n            {\n                code: 'SI-103',\n                name: 'Ravne na Koroškem',\n            },\n            {\n                code: 'SI-176',\n                name: 'Razkrižje',\n            },\n            {\n                code: 'SI-209',\n                name: 'Recica ob Savinji',\n            },\n            {\n                code: 'SI-201',\n                name: 'Rence-Vogrsko',\n            },\n            {\n                code: 'SI-177',\n                name: 'Ribnica na Pohorju',\n            },\n            {\n                code: 'SI-104',\n                name: 'Ribnica',\n            },\n            {\n                code: 'SI-106',\n                name: 'Rogaška Slatina',\n            },\n            {\n                code: 'SI-105',\n                name: 'Rogašovci',\n            },\n            {\n                code: 'SI-107',\n                name: 'Rogatec',\n            },\n            {\n                code: 'SI-108',\n                name: 'Ruše',\n            },\n            {\n                code: 'SI-033',\n                name: 'Šalovci',\n            },\n            {\n                code: 'SI-178',\n                name: 'Selnica ob Dravi',\n            },\n            {\n                code: 'SI-109',\n                name: 'Semic',\n            },\n            {\n                code: 'SI-183',\n                name: 'Šempeter-Vrtojba',\n            },\n            {\n                code: 'SI-117',\n                name: 'Šencur',\n            },\n            {\n                code: 'SI-118',\n                name: 'Šentilj',\n            },\n            {\n                code: 'SI-119',\n                name: 'Šentjernej',\n            },\n            {\n                code: 'SI-120',\n                name: 'Šentjur pri Celju',\n            },\n            {\n                code: 'SI-211',\n                name: 'Šentrupert',\n            },\n            {\n                code: 'SI-110',\n                name: 'Sevnica',\n            },\n            {\n                code: 'SI-111',\n                name: 'Sežana',\n            },\n            {\n                code: 'SI-121',\n                name: 'Škocjan',\n            },\n            {\n                code: 'SI-122',\n                name: 'Škofja Loka',\n            },\n            {\n                code: 'SI-123',\n                name: 'Škofljica',\n            },\n            {\n                code: 'SI-112',\n                name: 'Slovenj Gradec',\n            },\n            {\n                code: 'SI-113',\n                name: 'Slovenska Bistrica',\n            },\n            {\n                code: 'SI-114',\n                name: 'Slovenske Konjice',\n            },\n            {\n                code: 'SI-124',\n                name: 'Šmarje pri Jelšah',\n            },\n            {\n                code: 'SI-206',\n                name: 'Šmarješke Toplice',\n            },\n            {\n                code: 'SI-125',\n                name: 'Šmartno ob Paki',\n            },\n            {\n                code: 'SI-194',\n                name: 'Šmartno pri Litiji',\n            },\n            {\n                code: 'SI-194',\n                name: 'Šmartno pri Litiji',\n            },\n            {\n                code: 'SI-179',\n                name: 'Sodražica',\n            },\n            {\n                code: 'SI-180',\n                name: 'Solcava',\n            },\n            {\n                code: 'SI-126',\n                name: 'Šoštanj',\n            },\n            {\n                code: 'SI-202',\n                name: 'Središce ob Dravi',\n            },\n            {\n                code: 'SI-115',\n                name: 'Starše',\n            },\n            {\n                code: 'SI-127',\n                name: 'Štore',\n            },\n            {\n                code: 'SI-203',\n                name: 'Straža',\n            },\n            {\n                code: 'SI-181',\n                name: 'Sveta Ana',\n            },\n            {\n                code: 'SI-204',\n                name: 'Sveta Trojica v Slovenskih Goricah',\n            },\n            {\n                code: 'SI-182',\n                name: 'Sveti Andraž v Slovenskih goricah',\n            },\n            {\n                code: 'SI-116',\n                name: 'Sveti Jurij',\n            },\n            {\n                code: 'SI-210',\n                name: 'Sveti Jurij v Slovenskih Goricah',\n            },\n            {\n                code: 'SI-205',\n                name: 'Sveti Tomaž',\n            },\n            {\n                code: 'SI-184',\n                name: 'Tabor',\n            },\n            {\n                code: 'SI-010',\n                name: 'Tišina',\n            },\n            {\n                code: 'SI-128',\n                name: 'Tolmin',\n            },\n            {\n                code: 'SI-129',\n                name: 'Trbovlje',\n            },\n            {\n                code: 'SI-130',\n                name: 'Trebnje',\n            },\n            {\n                code: 'SI-185',\n                name: 'Trnovska vas',\n            },\n            {\n                code: 'SI-131',\n                name: 'Tržic',\n            },\n            {\n                code: 'SI-186',\n                name: 'Trzin',\n            },\n            {\n                code: 'SI-132',\n                name: 'Turnišce',\n            },\n            {\n                code: 'SI-133',\n                name: 'Velenje',\n            },\n            {\n                code: 'SI-187',\n                name: 'Velika Polana',\n            },\n            {\n                code: 'SI-134',\n                name: 'Velike Lašce',\n            },\n            {\n                code: 'SI-188',\n                name: 'Veržej',\n            },\n            {\n                code: 'SI-135',\n                name: 'Videm',\n            },\n            {\n                code: 'SI-136',\n                name: 'Vipava',\n            },\n            {\n                code: 'SI-137',\n                name: 'Vitanje',\n            },\n            {\n                code: 'SI-138',\n                name: 'Vodice',\n            },\n            {\n                code: 'SI-139',\n                name: 'Vojnik',\n            },\n            {\n                code: 'SI-189',\n                name: 'Vransko',\n            },\n            {\n                code: 'SI-140',\n                name: 'Vrhnika',\n            },\n            {\n                code: 'SI-141',\n                name: 'Vuzenica',\n            },\n            {\n                code: 'SI-142',\n                name: 'Zagorje ob Savi',\n            },\n            {\n                code: 'SI-190',\n                name: 'Žalec',\n            },\n            {\n                code: 'SI-143',\n                name: 'Zavrc',\n            },\n            {\n                code: 'SI-146',\n                name: 'Železniki',\n            },\n            {\n                code: 'SI-191',\n                name: 'Žetale',\n            },\n            {\n                code: 'SI-147',\n                name: 'Žiri',\n            },\n            {\n                code: 'SI-192',\n                name: 'Žirovnica',\n            },\n            {\n                code: 'SI-144',\n                name: 'Zrece',\n            },\n            {\n                code: 'SI-193',\n                name: 'Žužemberk',\n            },\n        ],\n    },\n    {\n        code: 'SB',\n        id: 2336,\n        name: 'Solomon Islands',\n        states: [],\n    },\n    {\n        code: 'SO',\n        id: 2337,\n        name: 'Somalia',\n        states: [\n            {\n                code: 'SO21',\n                name: 'Awdal',\n            },\n            {\n                code: 'SO01',\n                name: 'Bakool',\n            },\n            {\n                code: 'SO02',\n                name: 'Banaadir',\n            },\n            {\n                code: 'SO03',\n                name: 'Bari',\n            },\n            {\n                code: 'SO04',\n                name: 'Bay',\n            },\n            {\n                code: 'SO05',\n                name: 'Galguduud',\n            },\n            {\n                code: 'SO06',\n                name: 'Gedo',\n            },\n            {\n                code: 'SO07',\n                name: 'Hiiraan',\n            },\n            {\n                code: 'SO08',\n                name: 'Jubbada Dhexe',\n            },\n            {\n                code: 'SO09',\n                name: 'Jubbada Hoose',\n            },\n            {\n                code: 'SO10',\n                name: 'Mudug',\n            },\n            {\n                code: 'SO18',\n                name: 'Nugaal',\n            },\n            {\n                code: 'SO12',\n                name: 'Sanaag',\n            },\n            {\n                code: 'SO13',\n                name: 'Shabeellaha Dhexe',\n            },\n            {\n                code: 'SO14',\n                name: 'Shabeellaha Hoose',\n            },\n            {\n                code: 'SO22',\n                name: 'Sool',\n            },\n            {\n                code: 'SO19',\n                name: 'Togdheer',\n            },\n            {\n                code: 'SO20',\n                name: 'Woqooyi Galbeed',\n            },\n        ],\n    },\n    {\n        code: 'ZA',\n        id: 2338,\n        name: 'South Africa',\n        states: [\n            {\n                code: 'SF01',\n                name: 'Cape Province',\n            },\n            {\n                code: 'SF05',\n                name: 'Eastern Cape',\n            },\n            {\n                code: 'SF03',\n                name: 'Free State',\n            },\n            {\n                code: 'SF06',\n                name: 'Gauteng',\n            },\n            {\n                code: 'SF02',\n                name: 'KwaZulu-Natal',\n            },\n            {\n                code: 'SF09',\n                name: 'Limpopo',\n            },\n            {\n                code: 'SF07',\n                name: 'Mpumalanga',\n            },\n            {\n                code: 'SF10',\n                name: 'North-West',\n            },\n            {\n                code: 'SF08',\n                name: 'Northern Cape',\n            },\n            {\n                code: 'SF04',\n                name: 'Transvaal',\n            },\n            {\n                code: 'SF11',\n                name: 'Western Cape',\n            },\n        ],\n    },\n    {\n        code: 'GS',\n        id: 2436,\n        name: 'South Georgia and the South Sandwich Islands',\n        states: [],\n    },\n    {\n        code: 'SS',\n        id: 2447,\n        name: 'South Sudan',\n        states: [\n            {\n                code: 'OD01',\n                name: 'Central Equatoria',\n            },\n            {\n                code: 'OD02',\n                name: 'East Equatoria',\n            },\n            {\n                code: 'OD03',\n                name: 'Jungoli',\n            },\n            {\n                code: 'OD04',\n                name: 'Lakes',\n            },\n            {\n                code: 'OD05',\n                name: 'North Bahr-al-Ghazal',\n            },\n            {\n                code: 'OD06',\n                name: 'Unity',\n            },\n            {\n                code: 'OD07',\n                name: 'Upper Nile',\n            },\n            {\n                code: 'OD08',\n                name: 'Warap',\n            },\n            {\n                code: 'OD09',\n                name: 'West Bahr-al-Ghazal',\n            },\n            {\n                code: 'OD10',\n                name: 'West Equatoria',\n            },\n        ],\n    },\n    {\n        code: 'ES',\n        id: 2339,\n        name: 'Spain',\n        states: [\n            {\n                code: 'SP23',\n                name: 'A Coruña',\n            },\n            {\n                code: 'SP01',\n                name: 'Alava',\n            },\n            {\n                code: 'SP02',\n                name: 'Albacete',\n            },\n            {\n                code: 'SP03',\n                name: 'Alicante',\n            },\n            {\n                code: 'SP04',\n                name: 'Almeria',\n            },\n            {\n                code: 'SP51',\n                name: 'Andalucia',\n            },\n            {\n                code: 'SP52',\n                name: 'Aragon',\n            },\n            {\n                code: 'SP34',\n                name: 'Asturias',\n            },\n            {\n                code: 'SP05',\n                name: 'Avila',\n            },\n            {\n                code: 'SP06',\n                name: 'Badajoz',\n            },\n            {\n                code: 'SP08',\n                name: 'Barcelona',\n            },\n            {\n                code: 'SP09',\n                name: 'Burgos',\n            },\n            {\n                code: 'SP10',\n                name: 'Caceres',\n            },\n            {\n                code: 'SP11',\n                name: 'Cadiz',\n            },\n            {\n                code: 'SP53',\n                name: 'Canarias',\n            },\n            {\n                code: 'SP39',\n                name: 'Cantabria',\n            },\n            {\n                code: 'SP12',\n                name: 'Castellon',\n            },\n            {\n                code: 'SP55',\n                name: 'Castilla y Leon',\n            },\n            {\n                code: 'SP54',\n                name: 'Castilla-La Mancha',\n            },\n            {\n                code: 'SP56',\n                name: 'Cataluna',\n            },\n            {\n                code: 'SP13',\n                name: 'Ciudad Real',\n            },\n            {\n                code: 'SP14',\n                name: 'Cordoba',\n            },\n            {\n                code: 'SP15',\n                name: 'Cuenca',\n            },\n            {\n                code: 'SP57',\n                name: 'Extremadura',\n            },\n            {\n                code: 'SP58',\n                name: 'Galicia',\n            },\n            {\n                code: 'SP16',\n                name: 'Gerona',\n            },\n            {\n                code: 'SP17',\n                name: 'Granada',\n            },\n            {\n                code: 'SP18',\n                name: 'Guadalajara',\n            },\n            {\n                code: 'SP19',\n                name: 'Guipuzcoa',\n            },\n            {\n                code: 'SP20',\n                name: 'Huelva',\n            },\n            {\n                code: 'SP21',\n                name: 'Huesca',\n            },\n            {\n                code: 'SP07',\n                name: 'Islas Baleares',\n            },\n            {\n                code: 'SP22',\n                name: 'Jaen',\n            },\n            {\n                code: 'SP23',\n                name: 'La Coruna',\n            },\n            {\n                code: 'SP27',\n                name: 'La Rioja',\n            },\n            {\n                code: 'SP24',\n                name: 'Las Palmas',\n            },\n            {\n                code: 'SP25',\n                name: 'Leon',\n            },\n            {\n                code: 'SP26',\n                name: 'Lerida',\n            },\n            {\n                code: 'SP28',\n                name: 'Lugo',\n            },\n            {\n                code: 'SP29',\n                name: 'Madrid',\n            },\n            {\n                code: 'SP30',\n                name: 'Malaga',\n            },\n            {\n                code: 'SP31',\n                name: 'Murcia',\n            },\n            {\n                code: 'SP32',\n                name: 'Navarra',\n            },\n            {\n                code: 'SP33',\n                name: 'Orense',\n            },\n            {\n                code: 'SP59',\n                name: 'Pais Vasco',\n            },\n            {\n                code: 'SP35',\n                name: 'Palencia',\n            },\n            {\n                code: 'SP36',\n                name: 'Pontevedra',\n            },\n            {\n                code: 'SP37',\n                name: 'Salamanca',\n            },\n            {\n                code: 'SP38',\n                name: 'Santa Cruz de Tenerife',\n            },\n            {\n                code: 'SP40',\n                name: 'Segovia',\n            },\n            {\n                code: 'SP41',\n                name: 'Sevilla',\n            },\n            {\n                code: 'SP42',\n                name: 'Soria',\n            },\n            {\n                code: 'SP43',\n                name: 'Tarragona',\n            },\n            {\n                code: 'SP44',\n                name: 'Teruel',\n            },\n            {\n                code: 'SP45',\n                name: 'Toledo',\n            },\n            {\n                code: 'SP46',\n                name: 'Valencia',\n            },\n            {\n                code: 'SP60',\n                name: 'Valenciana',\n            },\n            {\n                code: 'SP47',\n                name: 'Valladolid',\n            },\n            {\n                code: 'SP48',\n                name: 'Vizcaya',\n            },\n            {\n                code: 'SP49',\n                name: 'Zamora',\n            },\n            {\n                code: 'SP50',\n                name: 'Zaragoza',\n            },\n        ],\n    },\n    {\n        code: 'LK',\n        id: 2340,\n        name: 'Sri Lanka',\n        states: [],\n    },\n    {\n        code: 'SD',\n        id: 2341,\n        name: 'Sudan',\n        states: [\n            {\n                code: 'SU42',\n                name: 'Blue Nile',\n            },\n            {\n                code: 'SU61',\n                name: 'Central Darfur',\n            },\n            {\n                code: 'SU60',\n                name: 'East Darfur',\n            },\n            {\n                code: 'SU39',\n                name: 'Gedarif',\n            },\n            {\n                code: 'SU38',\n                name: 'Gezira',\n            },\n            {\n                code: 'SU52',\n                name: 'Kassala',\n            },\n            {\n                code: 'SU29',\n                name: 'Khartoum',\n            },\n            {\n                code: 'SU55',\n                name: 'North Darfur',\n            },\n            {\n                code: 'SU56',\n                name: 'North Kordofan',\n            },\n            {\n                code: 'SU43',\n                name: 'Northern',\n            },\n            {\n                code: 'SU36',\n                name: 'Red Sea',\n            },\n            {\n                code: 'SU53',\n                name: 'River Nile',\n            },\n            {\n                code: 'SU58',\n                name: 'Sennar',\n            },\n            {\n                code: 'SU49',\n                name: 'South Darfur',\n            },\n            {\n                code: 'SU50',\n                name: 'South Kordofan',\n            },\n            {\n                code: 'SU47',\n                name: 'West Darfur',\n            },\n            {\n                code: 'SU62',\n                name: 'West Kordofan',\n            },\n            {\n                code: 'SU41',\n                name: 'White Nile',\n            },\n        ],\n    },\n    {\n        code: 'SR',\n        id: 2342,\n        name: 'Suriname',\n        states: [\n            {\n                code: 'NS10',\n                name: 'Brokopondo',\n            },\n            {\n                code: 'NS11',\n                name: 'Commewijne',\n            },\n            {\n                code: 'NS12',\n                name: 'Coronie',\n            },\n            {\n                code: 'NS13',\n                name: 'Marowijne',\n            },\n            {\n                code: 'NS14',\n                name: 'Nickerie',\n            },\n            {\n                code: 'NS16',\n                name: 'Paramaribo',\n            },\n            {\n                code: 'NS15',\n                name: 'Para',\n            },\n            {\n                code: 'NS17',\n                name: 'Saramacca',\n            },\n            {\n                code: 'NS18',\n                name: 'Sipaliwini',\n            },\n            {\n                code: 'NS19',\n                name: 'Wanica',\n            },\n        ],\n    },\n    {\n        code: 'SJ',\n        id: 2437,\n        name: 'Svalbard And Jan Mayen',\n        states: [],\n    },\n    {\n        code: 'SZ',\n        id: 2343,\n        name: 'Swaziland',\n        states: [\n            {\n                code: 'WZ01',\n                name: 'Hhohho',\n            },\n            {\n                code: 'WZ02',\n                name: 'Lubombo',\n            },\n            {\n                code: 'WZ03',\n                name: 'Manzini',\n            },\n            {\n                code: 'WZ04',\n                name: 'Shiselweni',\n            },\n        ],\n    },\n    {\n        code: 'SE',\n        id: 2344,\n        name: 'Sweden',\n        states: [\n            {\n                code: 'SE-K',\n                name: 'Blekinge län',\n            },\n            {\n                code: 'SE-W',\n                name: 'Dalarnas län',\n            },\n            {\n                code: 'SE-X',\n                name: 'Gävleborgs län',\n            },\n            {\n                code: 'SE-I',\n                name: 'Gotlands län',\n            },\n            {\n                code: 'SE-N',\n                name: 'Hallands län',\n            },\n            {\n                code: 'SE-Z',\n                name: 'Jämtlands län',\n            },\n            {\n                code: 'SE-F',\n                name: 'Jönköpings län',\n            },\n            {\n                code: 'SE-H',\n                name: 'Kalmar län',\n            },\n            {\n                code: 'SE-G',\n                name: 'Kronobergs län',\n            },\n            {\n                code: 'SE-BD',\n                name: 'Norrbottens län',\n            },\n            {\n                code: 'SE-M',\n                name: 'Skåne län',\n            },\n            {\n                code: 'SE-D',\n                name: 'Södermanlands län',\n            },\n            {\n                code: 'SE-AB',\n                name: 'Stockholms län',\n            },\n            {\n                code: 'SE-C',\n                name: 'Uppsala län',\n            },\n            {\n                code: 'SE-S',\n                name: 'Värmlands län',\n            },\n            {\n                code: 'SE-AC',\n                name: 'Västerbottens län',\n            },\n            {\n                code: 'SE-Y',\n                name: 'Västernorrlands län',\n            },\n            {\n                code: 'SE-U',\n                name: 'Västmanlands län',\n            },\n            {\n                code: 'SE-O',\n                name: 'Västra Götalands län',\n            },\n            {\n                code: 'SE-T',\n                name: 'Örebro län',\n            },\n            {\n                code: 'SE-E',\n                name: 'Östergötlands län',\n            },\n        ],\n    },\n    {\n        code: 'CH',\n        id: 2345,\n        name: 'Switzerland',\n        states: [\n            {\n                code: 'AG',\n                name: 'Aargau',\n            },\n            {\n                code: 'AR',\n                name: 'Appenzell Ausserrhoden',\n            },\n            {\n                code: 'AI',\n                name: 'Appenzell Innerrhoden',\n            },\n            {\n                code: 'BL',\n                name: 'Basel-Landschaft',\n            },\n            {\n                code: 'BS',\n                name: 'Basel-Stadt',\n            },\n            {\n                code: 'BE',\n                name: 'Bern',\n            },\n            {\n                code: 'FR',\n                name: 'Fribourg',\n            },\n            {\n                code: 'GE',\n                name: 'Genève',\n            },\n            {\n                code: 'GL',\n                name: 'Glarus',\n            },\n            {\n                code: 'GR',\n                name: 'Graubünden',\n            },\n            {\n                code: 'JU',\n                name: 'Jura',\n            },\n            {\n                code: 'LU',\n                name: 'Luzern',\n            },\n            {\n                code: 'NE',\n                name: 'Neuchâtel',\n            },\n            {\n                code: 'NW',\n                name: 'Nidwalden',\n            },\n            {\n                code: 'OW',\n                name: 'Obwalden',\n            },\n            {\n                code: 'SG',\n                name: 'Sankt Gallen',\n            },\n            {\n                code: 'SH',\n                name: 'Schaffhausen',\n            },\n            {\n                code: 'SZ',\n                name: 'Schwyz',\n            },\n            {\n                code: 'SO',\n                name: 'Solothurn',\n            },\n            {\n                code: 'TG',\n                name: 'Thurgau',\n            },\n            {\n                code: 'TI',\n                name: 'Ticino',\n            },\n            {\n                code: 'UR',\n                name: 'Uri',\n            },\n            {\n                code: 'VS',\n                name: 'Valais',\n            },\n            {\n                code: 'VD',\n                name: 'Vaud',\n            },\n            {\n                code: 'ZG',\n                name: 'Zug',\n            },\n            {\n                code: 'ZH',\n                name: 'Zürich',\n            },\n        ],\n    },\n    {\n        code: 'SY',\n        id: 2381,\n        name: 'Syrian Arab Republic',\n        states: [\n            {\n                code: 'SY01',\n                name: 'Al Hasakah',\n            },\n            {\n                code: 'SY09',\n                name: 'Aleppo',\n            },\n            {\n                code: 'SY04',\n                name: 'Ar Raqqah',\n            },\n            {\n                code: 'SY05',\n                name: \"As Suwayda'\",\n            },\n            {\n                code: 'SY13',\n                name: 'Damascus',\n            },\n            {\n                code: 'SY06',\n                name: 'Dar`a',\n            },\n            {\n                code: 'SY07',\n                name: 'Dayr az Zawr',\n            },\n            {\n                code: 'SY10',\n                name: 'Hama',\n            },\n            {\n                code: 'SY11',\n                name: 'Hims',\n            },\n            {\n                code: 'SY12',\n                name: 'Idlib',\n            },\n            {\n                code: 'SY02',\n                name: 'Latakia',\n            },\n            {\n                code: 'SY03',\n                name: 'Quneitra',\n            },\n            {\n                code: 'SY08',\n                name: 'Rif Dimashq',\n            },\n            {\n                code: 'SY14',\n                name: 'Tartus',\n            },\n        ],\n    },\n    {\n        code: 'TW',\n        id: 2375,\n        name: 'Taiwan',\n        states: [\n            {\n                code: 'TW02',\n                name: 'Kaohsiung',\n            },\n            {\n                code: 'TW03',\n                name: 'Taipei',\n            },\n        ],\n    },\n    {\n        code: 'TJ',\n        id: 2348,\n        name: 'Tajikistan',\n        states: [\n            {\n                code: 'TI01',\n                name: 'Badakhshoni Kuni',\n            },\n            {\n                code: 'TI04',\n                name: 'Dushanbe',\n            },\n            {\n                code: 'TI02',\n                name: 'Khatlon',\n            },\n            {\n                code: 'TI05',\n                name: 'Regions of Republican Subordination',\n            },\n            {\n                code: 'TI03',\n                name: 'Sogd',\n            },\n        ],\n    },\n    {\n        code: 'TZ',\n        id: 2349,\n        name: 'Tanzania',\n        states: [\n            {\n                code: 'TZ26',\n                name: 'Arusha',\n            },\n            {\n                code: 'TZ23',\n                name: 'Dar es Salaam',\n            },\n            {\n                code: 'TZ03',\n                name: 'Dodoma',\n            },\n            {\n                code: 'TZ28',\n                name: 'Geita',\n            },\n            {\n                code: 'TZ04',\n                name: 'Iringa',\n            },\n            {\n                code: 'TZ19',\n                name: 'Kagera',\n            },\n            {\n                code: 'TZ29',\n                name: 'Katavi',\n            },\n            {\n                code: 'TZ05',\n                name: 'Kigoma',\n            },\n            {\n                code: 'TZ06',\n                name: 'Kilimanjaro',\n            },\n            {\n                code: 'TZ07',\n                name: 'Lindi',\n            },\n            {\n                code: 'TZ27',\n                name: 'Manyara',\n            },\n            {\n                code: 'TZ08',\n                name: 'Mara',\n            },\n            {\n                code: 'TZ09',\n                name: 'Mbeya',\n            },\n            {\n                code: 'TZ10',\n                name: 'Morogoro',\n            },\n            {\n                code: 'TZ11',\n                name: 'Mtwara',\n            },\n            {\n                code: 'TZ12',\n                name: 'Mwanza',\n            },\n            {\n                code: 'TZ30',\n                name: 'Njombe',\n            },\n            {\n                code: 'TZ13',\n                name: 'Pemba North',\n            },\n            {\n                code: 'TZ20',\n                name: 'Pemba South',\n            },\n            {\n                code: 'TZ02',\n                name: 'Pwani',\n            },\n            {\n                code: 'TZ24',\n                name: 'Rukwa',\n            },\n            {\n                code: 'TZ14',\n                name: 'Ruvuma',\n            },\n            {\n                code: 'TZ15',\n                name: 'Shinyanga',\n            },\n            {\n                code: 'TZ31',\n                name: 'Simiyu',\n            },\n            {\n                code: 'TZ16',\n                name: 'Singida',\n            },\n            {\n                code: 'TZ17',\n                name: 'Tabora',\n            },\n            {\n                code: 'TZ18',\n                name: 'Tanga',\n            },\n            {\n                code: 'TZ22',\n                name: 'Zanzibar North',\n            },\n            {\n                code: 'TZ21',\n                name: 'Zanzibar South and Central',\n            },\n            {\n                code: 'TZ25',\n                name: 'Zanzibar West',\n            },\n        ],\n    },\n    {\n        code: 'TH',\n        id: 2350,\n        name: 'Thailand',\n        states: [\n            {\n                code: 'TH77',\n                name: 'Amnat Charoen',\n            },\n            {\n                code: 'TH35',\n                name: 'Ang Thong',\n            },\n            {\n                code: 'TH40',\n                name: 'Bangkok Metropolis',\n            },\n            {\n                code: 'TH81',\n                name: 'Bueng Kan',\n            },\n            {\n                code: 'TH28',\n                name: 'Buri Ram',\n            },\n            {\n                code: 'TH44',\n                name: 'Chachoengsao',\n            },\n            {\n                code: 'TH32',\n                name: 'Chai Nat',\n            },\n            {\n                code: 'TH26',\n                name: 'Chaiyaphum',\n            },\n            {\n                code: 'TH48',\n                name: 'Chanthaburi',\n            },\n            {\n                code: 'TH02',\n                name: 'Chiang Mai',\n            },\n            {\n                code: 'TH03',\n                name: 'Chiang Rai',\n            },\n            {\n                code: 'TH46',\n                name: 'Chon Buri',\n            },\n            {\n                code: 'TH58',\n                name: 'Chumphon',\n            },\n            {\n                code: 'TH23',\n                name: 'Kalasin',\n            },\n            {\n                code: 'TH11',\n                name: 'Kamphaeng Phet',\n            },\n            {\n                code: 'TH50',\n                name: 'Kanchanaburi',\n            },\n            {\n                code: 'TH22',\n                name: 'Khon Kaen',\n            },\n            {\n                code: 'TH63',\n                name: 'Krabi',\n            },\n            {\n                code: 'TH06',\n                name: 'Lampang',\n            },\n            {\n                code: 'TH05',\n                name: 'Lamphun',\n            },\n            {\n                code: 'TH18',\n                name: 'Loei',\n            },\n            {\n                code: 'TH34',\n                name: 'Lop Buri',\n            },\n            {\n                code: 'TH01',\n                name: 'Mae Hong Son',\n            },\n            {\n                code: 'TH24',\n                name: 'Maha Sarakham',\n            },\n            {\n                code: 'TH78',\n                name: 'Mukdahan',\n            },\n            {\n                code: 'TH43',\n                name: 'Nakhon Nayok',\n            },\n            {\n                code: 'TH53',\n                name: 'Nakhon Pathom',\n            },\n            {\n                code: 'TH73',\n                name: 'Nakhon Phanom',\n            },\n            {\n                code: 'TH27',\n                name: 'Nakhon Ratchasima',\n            },\n            {\n                code: 'TH16',\n                name: 'Nakhon Sawan',\n            },\n            {\n                code: 'TH64',\n                name: 'Nakhon Si Thammarat',\n            },\n            {\n                code: 'TH04',\n                name: 'Nan',\n            },\n            {\n                code: 'TH31',\n                name: 'Narathiwat',\n            },\n            {\n                code: 'TH79',\n                name: 'Nong Bua Lam Phu',\n            },\n            {\n                code: 'TH17',\n                name: 'Nong Khai',\n            },\n            {\n                code: 'TH38',\n                name: 'Nonthaburi',\n            },\n            {\n                code: 'TH39',\n                name: 'Pathum Thani',\n            },\n            {\n                code: 'TH69',\n                name: 'Pattani',\n            },\n            {\n                code: 'TH61',\n                name: 'Phangnga',\n            },\n            {\n                code: 'TH66',\n                name: 'Phatthalung',\n            },\n            {\n                code: 'TH41',\n                name: 'Phayao',\n            },\n            {\n                code: 'TH14',\n                name: 'Phetchabun',\n            },\n            {\n                code: 'TH56',\n                name: 'Phetchaburi',\n            },\n            {\n                code: 'TH13',\n                name: 'Phichit',\n            },\n            {\n                code: 'TH12',\n                name: 'Phitsanulok',\n            },\n            {\n                code: 'TH36',\n                name: 'Phra Nakhon Si Ayutthaya',\n            },\n            {\n                code: 'TH07',\n                name: 'Phrae',\n            },\n            {\n                code: 'TH62',\n                name: 'Phuket',\n            },\n            {\n                code: 'TH74',\n                name: 'Prachin Buri',\n            },\n            {\n                code: 'TH57',\n                name: 'Prachuap Khiri Khan',\n            },\n            {\n                code: 'TH59',\n                name: 'Ranong',\n            },\n            {\n                code: 'TH52',\n                name: 'Ratchaburi',\n            },\n            {\n                code: 'TH47',\n                name: 'Rayong',\n            },\n            {\n                code: 'TH25',\n                name: 'Roi Et',\n            },\n            {\n                code: 'TH80',\n                name: 'Sa Kaeo',\n            },\n            {\n                code: 'TH20',\n                name: 'Sakon Nakhon',\n            },\n            {\n                code: 'TH42',\n                name: 'Samut Prakan',\n            },\n            {\n                code: 'TH55',\n                name: 'Samut Sakhon',\n            },\n            {\n                code: 'TH54',\n                name: 'Samut Songkhram',\n            },\n            {\n                code: 'TH37',\n                name: 'Saraburi',\n            },\n            {\n                code: 'TH67',\n                name: 'Satun',\n            },\n            {\n                code: 'TH30',\n                name: 'Si Sa Ket',\n            },\n            {\n                code: 'TH33',\n                name: 'Sing Buri',\n            },\n            {\n                code: 'TH68',\n                name: 'Songkhla',\n            },\n            {\n                code: 'TH09',\n                name: 'Sukhothai',\n            },\n            {\n                code: 'TH51',\n                name: 'Suphan Buri',\n            },\n            {\n                code: 'TH60',\n                name: 'Surat Thani',\n            },\n            {\n                code: 'TH29',\n                name: 'Surin',\n            },\n            {\n                code: 'TH08',\n                name: 'Tak',\n            },\n            {\n                code: 'TH65',\n                name: 'Trang',\n            },\n            {\n                code: 'TH49',\n                name: 'Trat',\n            },\n            {\n                code: 'TH75',\n                name: 'Ubon Ratchathani',\n            },\n            {\n                code: 'TH76',\n                name: 'Udon Thani',\n            },\n            {\n                code: 'TH15',\n                name: 'Uthai Thani',\n            },\n            {\n                code: 'TH10',\n                name: 'Uttaradit',\n            },\n            {\n                code: 'TH70',\n                name: 'Yala',\n            },\n            {\n                code: 'TH72',\n                name: 'Yasothon',\n            },\n        ],\n    },\n    {\n        code: 'TL',\n        id: 2404,\n        name: 'Timor-Leste',\n        states: [],\n    },\n    {\n        code: 'TG',\n        id: 2351,\n        name: 'Togo',\n        states: [\n            {\n                code: 'TO22',\n                name: 'Centrale',\n            },\n            {\n                code: 'TO23',\n                name: 'Kara',\n            },\n            {\n                code: 'TO24',\n                name: 'Maritime',\n            },\n            {\n                code: 'TO25',\n                name: 'Plateaux',\n            },\n            {\n                code: 'TO26',\n                name: 'Savanes',\n            },\n        ],\n    },\n    {\n        code: 'TK',\n        id: 2438,\n        name: 'Tokelau',\n        states: [],\n    },\n    {\n        code: 'TO',\n        id: 2405,\n        name: 'Tonga',\n        states: [],\n    },\n    {\n        code: 'TT',\n        id: 2352,\n        name: 'Trinidad and Tobago',\n        states: [\n            {\n                code: 'TD01',\n                name: 'Arima',\n            },\n            {\n                code: 'TD13',\n                name: 'Chaguanas',\n            },\n            {\n                code: 'TD14',\n                name: 'Couva/Tabaquite/Talparo',\n            },\n            {\n                code: 'TD15',\n                name: 'Diego Martin',\n            },\n            {\n                code: 'TD11',\n                name: 'Eastern Tobago',\n            },\n            {\n                code: 'TD16',\n                name: 'Mayaro/Rio Claro',\n            },\n            {\n                code: 'TD17',\n                name: 'Penal/Debe',\n            },\n            {\n                code: 'TD18',\n                name: 'Point Fortin',\n            },\n            {\n                code: 'TD05',\n                name: 'Port of Spain',\n            },\n            {\n                code: 'TD19',\n                name: 'Princes Town',\n            },\n            {\n                code: 'TD10',\n                name: 'San Fernando',\n            },\n            {\n                code: 'TD20',\n                name: 'San Juan/Laventille',\n            },\n            {\n                code: 'TD21',\n                name: 'Sangre Grande',\n            },\n            {\n                code: 'TD22',\n                name: 'Siparia',\n            },\n            {\n                code: 'TD23',\n                name: 'Tunapuna/Piarco',\n            },\n            {\n                code: 'TD11',\n                name: 'Western Tobago',\n            },\n        ],\n    },\n    {\n        code: 'TN',\n        id: 2353,\n        name: 'Tunisia',\n        states: [\n            {\n                code: 'TS38',\n                name: 'Ariana',\n            },\n            {\n                code: 'TS17',\n                name: 'Béja',\n            },\n            {\n                code: 'TS27',\n                name: 'Ben Arous',\n            },\n            {\n                code: 'TS18',\n                name: 'Bizerte',\n            },\n            {\n                code: 'TS29',\n                name: 'Gabès',\n            },\n            {\n                code: 'TS30',\n                name: 'Gafsa',\n            },\n            {\n                code: 'TS06',\n                name: 'Jendouba',\n            },\n            {\n                code: 'TS03',\n                name: 'Kairouan',\n            },\n            {\n                code: 'TS02',\n                name: 'Kassérine',\n            },\n            {\n                code: 'TS31',\n                name: 'Kebili',\n            },\n            {\n                code: 'TS14',\n                name: 'Le Kef',\n            },\n            {\n                code: 'TS15',\n                name: 'Mahdia',\n            },\n            {\n                code: 'TS39',\n                name: 'Manouba',\n            },\n            {\n                code: 'TS28',\n                name: 'Médenine',\n            },\n            {\n                code: 'TS16',\n                name: 'Monastir',\n            },\n            {\n                code: 'TS19',\n                name: 'Nabeul',\n            },\n            {\n                code: 'TS32',\n                name: 'Sfax',\n            },\n            {\n                code: 'TS33',\n                name: 'Sidi Bou Zid',\n            },\n            {\n                code: 'TS22',\n                name: 'Siliana',\n            },\n            {\n                code: 'TS23',\n                name: 'Sousse',\n            },\n            {\n                code: 'TS34',\n                name: 'Tataouine',\n            },\n            {\n                code: 'TS35',\n                name: 'Tozeur',\n            },\n            {\n                code: 'TS36',\n                name: 'Tunis',\n            },\n            {\n                code: 'TS37',\n                name: 'Zaghouan',\n            },\n        ],\n    },\n    {\n        code: 'TR',\n        id: 2354,\n        name: 'Turkey',\n        states: [\n            {\n                code: 'TU81',\n                name: 'Adana',\n            },\n            {\n                code: 'TU02',\n                name: 'Adiyaman',\n            },\n            {\n                code: 'TU03',\n                name: 'Afyonkarahisar',\n            },\n            {\n                code: 'TU04',\n                name: 'Agri',\n            },\n            {\n                code: 'TU75',\n                name: 'Aksaray',\n            },\n            {\n                code: 'TU05',\n                name: 'Amasya',\n            },\n            {\n                code: 'TU68',\n                name: 'Ankara',\n            },\n            {\n                code: 'TU07',\n                name: 'Antalya',\n            },\n            {\n                code: 'TU86',\n                name: 'Ardahan',\n            },\n            {\n                code: 'TU08',\n                name: 'Artvin',\n            },\n            {\n                code: 'TU09',\n                name: 'Aydin',\n            },\n            {\n                code: 'TU10',\n                name: 'Balikesir',\n            },\n            {\n                code: 'TU87',\n                name: 'Bartin',\n            },\n            {\n                code: 'TU76',\n                name: 'Batman',\n            },\n            {\n                code: 'TU77',\n                name: 'Bayburt',\n            },\n            {\n                code: 'TU11',\n                name: 'Bilecik',\n            },\n            {\n                code: 'TU12',\n                name: 'Bingöl',\n            },\n            {\n                code: 'TU13',\n                name: 'Bitlis',\n            },\n            {\n                code: 'TU14',\n                name: 'Bolu',\n            },\n            {\n                code: 'TU15',\n                name: 'Burdur',\n            },\n            {\n                code: 'TU16',\n                name: 'Bursa',\n            },\n            {\n                code: 'TU17',\n                name: 'Çanakkale',\n            },\n            {\n                code: 'TU82',\n                name: 'Çankiri',\n            },\n            {\n                code: 'TU19',\n                name: 'Çorum',\n            },\n            {\n                code: 'TU20',\n                name: 'Denizli',\n            },\n            {\n                code: 'TU21',\n                name: 'Diyarbakir',\n            },\n            {\n                code: 'TU93',\n                name: 'Düzce',\n            },\n            {\n                code: 'TU22',\n                name: 'Edirne',\n            },\n            {\n                code: 'TU23',\n                name: 'Elazig',\n            },\n            {\n                code: 'TU24',\n                name: 'Erzincan',\n            },\n            {\n                code: 'TU25',\n                name: 'Erzurum',\n            },\n            {\n                code: 'TU26',\n                name: 'Eskisehir',\n            },\n            {\n                code: 'TU83',\n                name: 'Gaziantep',\n            },\n            {\n                code: 'TU28',\n                name: 'Giresun',\n            },\n            {\n                code: 'TU69',\n                name: 'Gümüshane',\n            },\n            {\n                code: 'TU70',\n                name: 'Hakkari',\n            },\n            {\n                code: 'TU31',\n                name: 'Hatay',\n            },\n            {\n                code: 'TU88',\n                name: 'Igdir',\n            },\n            {\n                code: 'TU33',\n                name: 'Isparta',\n            },\n            {\n                code: 'TU34',\n                name: 'Istanbul',\n            },\n            {\n                code: 'TU35',\n                name: 'Izmir',\n            },\n            {\n                code: 'TU46',\n                name: 'Kahramanmaras',\n            },\n            {\n                code: 'TU89',\n                name: 'Karabük',\n            },\n            {\n                code: 'TU78',\n                name: 'Karaman',\n            },\n            {\n                code: 'TU84',\n                name: 'Kars',\n            },\n            {\n                code: 'TU37',\n                name: 'Kastamonu',\n            },\n            {\n                code: 'TU38',\n                name: 'Kayseri',\n            },\n            {\n                code: 'TU90',\n                name: 'Kilis',\n            },\n            {\n                code: 'TU79',\n                name: 'Kirikkale',\n            },\n            {\n                code: 'TU39',\n                name: 'Kirklareli',\n            },\n            {\n                code: 'TU40',\n                name: 'Kirsehir',\n            },\n            {\n                code: 'TU41',\n                name: 'Kocaeli',\n            },\n            {\n                code: 'TU71',\n                name: 'Konya',\n            },\n            {\n                code: 'TU43',\n                name: 'Kütahya',\n            },\n            {\n                code: 'TU44',\n                name: 'Malatya',\n            },\n            {\n                code: 'TU45',\n                name: 'Manisa',\n            },\n            {\n                code: 'TU72',\n                name: 'Mardin',\n            },\n            {\n                code: 'TU32',\n                name: 'Mersin',\n            },\n            {\n                code: 'TU48',\n                name: 'Mugla',\n            },\n            {\n                code: 'TU49',\n                name: 'Mus',\n            },\n            {\n                code: 'TU50',\n                name: 'Nevsehir',\n            },\n            {\n                code: 'TU73',\n                name: 'Nigde',\n            },\n            {\n                code: 'TU52',\n                name: 'Ordu',\n            },\n            {\n                code: 'TU91',\n                name: 'Osmaniye',\n            },\n            {\n                code: 'TU53',\n                name: 'Rize',\n            },\n            {\n                code: 'TU54',\n                name: 'Sakarya',\n            },\n            {\n                code: 'TU55',\n                name: 'Samsun',\n            },\n            {\n                code: 'TU63',\n                name: 'Sanliurfa',\n            },\n            {\n                code: 'TU74',\n                name: 'Siirt',\n            },\n            {\n                code: 'TU57',\n                name: 'Sinop',\n            },\n            {\n                code: 'TU80',\n                name: 'Sirnak',\n            },\n            {\n                code: 'TU58',\n                name: 'Sivas',\n            },\n            {\n                code: 'TU59',\n                name: 'Tekirdag',\n            },\n            {\n                code: 'TU60',\n                name: 'Tokat',\n            },\n            {\n                code: 'TU61',\n                name: 'Trabzon',\n            },\n            {\n                code: 'TU62',\n                name: 'Tunceli',\n            },\n            {\n                code: 'TU64',\n                name: 'Usak',\n            },\n            {\n                code: 'TU65',\n                name: 'Van',\n            },\n            {\n                code: 'TU92',\n                name: 'Yalova',\n            },\n            {\n                code: 'TU66',\n                name: 'Yozgat',\n            },\n            {\n                code: 'TU85',\n                name: 'Zonguldak',\n            },\n        ],\n    },\n    {\n        code: 'TM',\n        id: 2355,\n        name: 'Turkmenistan',\n        states: [\n            {\n                code: 'TX01',\n                name: 'Ahal',\n            },\n            {\n                code: 'TM.AB',\n                name: 'Ashgabat',\n            },\n            {\n                code: 'TX02',\n                name: 'Balkan',\n            },\n            {\n                code: 'TX03',\n                name: 'Dashoguz',\n            },\n            {\n                code: 'TX04',\n                name: 'Lebap',\n            },\n            {\n                code: 'TX05',\n                name: 'Mary',\n            },\n        ],\n    },\n    {\n        code: 'TC',\n        id: 2439,\n        name: 'Turks and Caicos Islands',\n        states: [],\n    },\n    {\n        code: 'TV',\n        id: 2440,\n        name: 'Tuvalu',\n        states: [],\n    },\n    {\n        code: 'UG',\n        id: 2356,\n        name: 'Uganda',\n        states: [\n            {\n                code: 'UG.AI',\n                name: 'Abim',\n            },\n            {\n                code: 'UG.AD',\n                name: 'Adjumani',\n            },\n            {\n                code: 'UG.AG',\n                name: 'Agago',\n            },\n            {\n                code: 'UG.AL',\n                name: 'Alebtong',\n            },\n            {\n                code: 'UG.AT',\n                name: 'Amolatar',\n            },\n            {\n                code: 'UG.AZ',\n                name: 'Amudat',\n            },\n            {\n                code: 'UG.AM',\n                name: 'Amuria',\n            },\n            {\n                code: 'UG.AY',\n                name: 'Amuru',\n            },\n            {\n                code: 'UG.AQ',\n                name: 'Apac',\n            },\n            {\n                code: 'UG.AX',\n                name: 'Arua',\n            },\n            {\n                code: 'UG.BD',\n                name: 'Budaka',\n            },\n            {\n                code: 'UG.BA',\n                name: 'Bududa',\n            },\n            {\n                code: 'UG.BI',\n                name: 'Bugiri',\n            },\n            {\n                code: 'UG.BH',\n                name: 'Buhweju',\n            },\n            {\n                code: 'UG.BZ',\n                name: 'Buikwe',\n            },\n            {\n                code: 'UG.BE',\n                name: 'Bukedea',\n            },\n            {\n                code: 'UG.BM',\n                name: 'Bukomansimbi',\n            },\n            {\n                code: 'UG.BW',\n                name: 'Bukwo',\n            },\n            {\n                code: 'UG.BB',\n                name: 'Bulambuli',\n            },\n            {\n                code: 'UG.BL',\n                name: 'Buliisa',\n            },\n            {\n                code: 'UG.BX',\n                name: 'Bundibugyo',\n            },\n            {\n                code: 'UG.BC',\n                name: 'Bushenyi',\n            },\n            {\n                code: 'UG.BU',\n                name: 'Busia',\n            },\n            {\n                code: 'UG.BJ',\n                name: 'Butaleja',\n            },\n            {\n                code: 'UG.BT',\n                name: 'Butambala',\n            },\n            {\n                code: 'UG.BV',\n                name: 'Buvuma',\n            },\n            {\n                code: 'UG.BY',\n                name: 'Buyende',\n            },\n            {\n                code: 'UG.DO',\n                name: 'Dokolo',\n            },\n            {\n                code: 'UG.GM',\n                name: 'Gomba',\n            },\n            {\n                code: 'UG.GL',\n                name: 'Gulu',\n            },\n            {\n                code: 'UG.HO',\n                name: 'Hoima',\n            },\n            {\n                code: 'UG.IB',\n                name: 'Ibanda',\n            },\n            {\n                code: 'UG.IC',\n                name: 'Iganga',\n            },\n            {\n                code: 'UG.NG',\n                name: 'Isingiro',\n            },\n            {\n                code: 'UG.JI',\n                name: 'Jinja',\n            },\n            {\n                code: 'UG.AB',\n                name: 'Kaabong',\n            },\n            {\n                code: 'UG.KA',\n                name: 'Kabale',\n            },\n            {\n                code: 'UG.BR',\n                name: 'Kabarole',\n            },\n            {\n                code: 'UG.KD',\n                name: 'Kaberamaido',\n            },\n            {\n                code: 'UG.KN',\n                name: 'Kalangala',\n            },\n            {\n                code: 'UG.RO',\n                name: 'Kaliro',\n            },\n            {\n                code: 'UG.QA',\n                name: 'Kalungu',\n            },\n            {\n                code: 'UG.KM',\n                name: 'Kampala',\n            },\n            {\n                code: 'UG.QU',\n                name: 'Kamuli',\n            },\n            {\n                code: 'UG.KE',\n                name: 'Kamwenge',\n            },\n            {\n                code: 'UG.UU',\n                name: 'Kanungu',\n            },\n            {\n                code: 'UG.QP',\n                name: 'Kapchorwa',\n            },\n            {\n                code: 'UG.KS',\n                name: 'Kasese',\n            },\n            {\n                code: 'UG.KK',\n                name: 'Katakwi',\n            },\n            {\n                code: 'UG.KY',\n                name: 'Kayunga',\n            },\n            {\n                code: 'UG.KI',\n                name: 'Kibaale',\n            },\n            {\n                code: 'UG.QO',\n                name: 'Kiboga',\n            },\n            {\n                code: 'UG.QB',\n                name: 'Kibuku',\n            },\n            {\n                code: 'UG.KH',\n                name: 'Kiruhuura',\n            },\n            {\n                code: 'UG.QD',\n                name: 'Kiryandongo',\n            },\n            {\n                code: 'UG.KR',\n                name: 'Kisoro',\n            },\n            {\n                code: 'UG.QT',\n                name: 'Kitgum',\n            },\n            {\n                code: 'UG.OK',\n                name: 'Koboko',\n            },\n            {\n                code: 'UG.QL',\n                name: 'Kole',\n            },\n            {\n                code: 'UG.KF',\n                name: 'Kotido',\n            },\n            {\n                code: 'UG.QM',\n                name: 'Kumi',\n            },\n            {\n                code: 'UG.QW',\n                name: 'Kween',\n            },\n            {\n                code: 'UG.QZ',\n                name: 'Kyankwanzi',\n            },\n            {\n                code: 'UG.QG',\n                name: 'Kyegegwa',\n            },\n            {\n                code: 'UG.QJ',\n                name: 'Kyenjojo',\n            },\n            {\n                code: 'UG.LM',\n                name: 'Lamwo',\n            },\n            {\n                code: 'UG.LL',\n                name: 'Lira',\n            },\n            {\n                code: 'UG.LK',\n                name: 'Luuka',\n            },\n            {\n                code: 'UG.LW',\n                name: 'Luwero',\n            },\n            {\n                code: 'UG.LE',\n                name: 'Lwengo',\n            },\n            {\n                code: 'UG.LY',\n                name: 'Lyantonde',\n            },\n            {\n                code: 'UG.MW',\n                name: 'Manafwa',\n            },\n            {\n                code: 'UG.MQ',\n                name: 'Masaka',\n            },\n            {\n                code: 'UG.MZ',\n                name: 'Masindi',\n            },\n            {\n                code: 'UG.MG',\n                name: 'Mayuge',\n            },\n            {\n                code: 'UG.ME',\n                name: 'Mbale',\n            },\n            {\n                code: 'UG.RR',\n                name: 'Mbarara',\n            },\n            {\n                code: 'UG.MM',\n                name: 'Mitoma',\n            },\n            {\n                code: 'UG.TY',\n                name: 'Mityana',\n            },\n            {\n                code: 'UG.MX',\n                name: 'Moroto',\n            },\n            {\n                code: 'UG.MY',\n                name: 'Moyo',\n            },\n            {\n                code: 'UG.MJ',\n                name: 'Mpigi',\n            },\n            {\n                code: 'UG.MD',\n                name: 'Mubende',\n            },\n            {\n                code: 'UG.MV',\n                name: 'Mukono',\n            },\n            {\n                code: 'UG.NI',\n                name: 'Nakapiripirit',\n            },\n            {\n                code: 'UG.NK',\n                name: 'Nakaseke',\n            },\n            {\n                code: 'UG.NA',\n                name: 'Nakasongola',\n            },\n            {\n                code: 'UG.NY',\n                name: 'Namayingo',\n            },\n            {\n                code: 'UG.BK',\n                name: 'Namutumba',\n            },\n            {\n                code: 'UG.NQ',\n                name: 'Napak',\n            },\n            {\n                code: 'UG.NB',\n                name: 'Nebbi',\n            },\n            {\n                code: 'UG.NR',\n                name: 'Ngora',\n            },\n            {\n                code: 'UG.NO',\n                name: 'Ntoroko',\n            },\n            {\n                code: 'UG.NT',\n                name: 'Ntungamo',\n            },\n            {\n                code: 'UG.NW',\n                name: 'Nwoya',\n            },\n            {\n                code: 'UG.MH',\n                name: 'Nyadri',\n            },\n            {\n                code: 'UG.OT',\n                name: 'Otuke',\n            },\n            {\n                code: 'UG.OY',\n                name: 'Oyam',\n            },\n            {\n                code: 'UG.PR',\n                name: 'Pader',\n            },\n            {\n                code: 'UG.PS',\n                name: 'Pallisa',\n            },\n            {\n                code: 'UG.RI',\n                name: 'Rakai',\n            },\n            {\n                code: 'UG.RZ',\n                name: 'Rubirizi',\n            },\n            {\n                code: 'UG.RK',\n                name: 'Rukungiri',\n            },\n            {\n                code: 'UG.SE',\n                name: 'Sembabule',\n            },\n            {\n                code: 'UG.SX',\n                name: 'Serere',\n            },\n            {\n                code: 'UG.SH',\n                name: 'Sheema',\n            },\n            {\n                code: 'UG.SK',\n                name: 'Sironko',\n            },\n            {\n                code: 'UG.ST',\n                name: 'Soroti',\n            },\n            {\n                code: 'UG.TR',\n                name: 'Tororo',\n            },\n            {\n                code: 'UG.WA',\n                name: 'Wakiso',\n            },\n            {\n                code: 'UG.YU',\n                name: 'Yumbe',\n            },\n            {\n                code: 'UG.ZO',\n                name: 'Zombo',\n            },\n        ],\n    },\n    {\n        code: 'UA',\n        id: 2357,\n        name: 'Ukraine',\n        states: [\n            {\n                code: 'UP01',\n                name: 'Cherkasy',\n            },\n            {\n                code: 'UP02',\n                name: 'Chernihiv',\n            },\n            {\n                code: 'UP03',\n                name: 'Chernivtsi',\n            },\n            {\n                code: 'UP11',\n                name: 'Crimea',\n            },\n            {\n                code: 'UP04',\n                name: \"Dnipropetrovs'k\",\n            },\n            {\n                code: 'UP05',\n                name: \"Donets'k\",\n            },\n            {\n                code: 'UP06',\n                name: \"Ivano-Frankivs'k\",\n            },\n            {\n                code: 'UP07',\n                name: 'Kharkiv',\n            },\n            {\n                code: 'UP08',\n                name: 'Kherson',\n            },\n            {\n                code: 'UP09',\n                name: \"Khmel'nyts'kyy\",\n            },\n            {\n                code: 'UP13',\n                name: 'Kiev',\n            },\n            {\n                code: 'UP12',\n                name: 'Kiev City',\n            },\n            {\n                code: 'UP10',\n                name: 'Kirovohrad',\n            },\n            {\n                code: 'UP15',\n                name: \"L'viv\",\n            },\n            {\n                code: 'UP14',\n                name: \"Luhans'k\",\n            },\n            {\n                code: 'UP16',\n                name: 'Mykolayiv',\n            },\n            {\n                code: 'UP17',\n                name: 'Odessa',\n            },\n            {\n                code: 'UP18',\n                name: 'Poltava',\n            },\n            {\n                code: 'UP19',\n                name: 'Rivne',\n            },\n            {\n                code: 'UP20',\n                name: \"Sevastopol' City\",\n            },\n            {\n                code: 'UP21',\n                name: 'Sumy',\n            },\n            {\n                code: 'UP22',\n                name: \"Ternopil'\",\n            },\n            {\n                code: 'UP25',\n                name: 'Transcarpathia',\n            },\n            {\n                code: 'UP23',\n                name: 'Vinnytsya',\n            },\n            {\n                code: 'UP24',\n                name: 'Volyn',\n            },\n            {\n                code: 'UP26',\n                name: 'Zaporizhzhya',\n            },\n            {\n                code: 'UP27',\n                name: 'Zhytomyr',\n            },\n        ],\n    },\n    {\n        code: 'AE',\n        id: 2358,\n        name: 'United Arab Emirates',\n        states: [\n            {\n                code: 'AE02',\n                name: \"'Ajman\",\n            },\n            {\n                code: 'AE01',\n                name: 'Abu Dhabi',\n            },\n            {\n                code: 'AE04',\n                name: 'Al Fujayrah',\n            },\n            {\n                code: 'AE03',\n                name: 'Dubai',\n            },\n            {\n                code: 'AE05',\n                name: \"Ra's al Khaymah\",\n            },\n            {\n                code: 'AE06',\n                name: 'Sharjah',\n            },\n            {\n                code: 'AE07',\n                name: 'Umm al Qaywayn',\n            },\n        ],\n    },\n    {\n        code: 'UM',\n        id: 2441,\n        name: 'United States Minor Outlying Islands',\n        states: [],\n    },\n    {\n        code: 'UY',\n        id: 2360,\n        name: 'Uruguay',\n        states: [],\n    },\n    {\n        code: 'UZ',\n        id: 2361,\n        name: 'Uzbekistan',\n        states: [\n            {\n                code: 'UZ01',\n                name: 'Andijon',\n            },\n            {\n                code: 'UZ02',\n                name: 'Buxoro',\n            },\n            {\n                code: 'UZ03',\n                name: 'Farg`ona',\n            },\n            {\n                code: 'UZ15',\n                name: 'Jizzax',\n            },\n            {\n                code: 'UZ09',\n                name: 'Karakalpakstan',\n            },\n            {\n                code: 'UZ08',\n                name: 'Kashkadarya',\n            },\n            {\n                code: 'UZ06',\n                name: 'Namangan',\n            },\n            {\n                code: 'UZ07',\n                name: 'Navoi',\n            },\n            {\n                code: 'UZ10',\n                name: 'Samarkand',\n            },\n            {\n                code: 'UZ16',\n                name: 'Sirdaryo',\n            },\n            {\n                code: 'UZ12',\n                name: 'Surxondaryo',\n            },\n            {\n                code: 'UZ13',\n                name: 'Tashkent City',\n            },\n            {\n                code: 'UZ14',\n                name: 'Tashkent',\n            },\n            {\n                code: 'UZ05',\n                name: 'Xorazm',\n            },\n        ],\n    },\n    {\n        code: 'NH',\n        id: 2406,\n        name: 'Vanuatu',\n        states: [],\n    },\n    {\n        code: 'VE',\n        id: 2363,\n        name: 'Venezuela; Bolivarian Republic of',\n        states: [\n            {\n                code: 'VE01',\n                name: 'Amazonas',\n            },\n            {\n                code: 'VE02',\n                name: 'Anzoátegui',\n            },\n            {\n                code: 'VE03',\n                name: 'Apure',\n            },\n            {\n                code: 'VE04',\n                name: 'Aragua',\n            },\n            {\n                code: 'VE05',\n                name: 'Barinas',\n            },\n            {\n                code: 'VE06',\n                name: 'Bolívar',\n            },\n            {\n                code: 'VE07',\n                name: 'Carabobo',\n            },\n            {\n                code: 'VE08',\n                name: 'Cojedes',\n            },\n            {\n                code: 'VE09',\n                name: 'Delta Amacuro',\n            },\n            {\n                code: 'VE24',\n                name: 'Dependencias Federales',\n            },\n            {\n                code: 'VE25',\n                name: 'Distrito Capital',\n            },\n            {\n                code: 'VE11',\n                name: 'Falcón',\n            },\n            {\n                code: 'VE12',\n                name: 'Guárico',\n            },\n            {\n                code: 'VE13',\n                name: 'Lara',\n            },\n            {\n                code: 'VE14',\n                name: 'Mérida',\n            },\n            {\n                code: 'VE15',\n                name: 'Miranda',\n            },\n            {\n                code: 'VE16',\n                name: 'Monagas',\n            },\n            {\n                code: 'VE17',\n                name: 'Nueva Esparta',\n            },\n            {\n                code: 'VE18',\n                name: 'Portuguesa',\n            },\n            {\n                code: 'VE19',\n                name: 'Sucre',\n            },\n            {\n                code: 'VE20',\n                name: 'Táchira',\n            },\n            {\n                code: 'VE21',\n                name: 'Trujillo',\n            },\n            {\n                code: 'VE26',\n                name: 'Vargas',\n            },\n            {\n                code: 'VE22',\n                name: 'Yaracuy',\n            },\n            {\n                code: 'VE23',\n                name: 'Zulia',\n            },\n        ],\n    },\n    {\n        code: 'VN',\n        id: 2364,\n        name: 'Vietnam',\n        states: [\n            {\n                code: 'VM01',\n                name: 'An Giang',\n            },\n            {\n                code: 'VM45',\n                name: 'Ba Ria-Vung Tau',\n            },\n            {\n                code: 'VM72',\n                name: 'Bac Can',\n            },\n            {\n                code: 'VM71',\n                name: 'Bac Giang',\n            },\n            {\n                code: 'VM73',\n                name: 'Bac Lieu',\n            },\n            {\n                code: 'VM74',\n                name: 'Bac Ninh',\n            },\n            {\n                code: 'VM03',\n                name: 'Ben Tre',\n            },\n            {\n                code: 'VM46',\n                name: 'Binh Dinh',\n            },\n            {\n                code: 'VM75',\n                name: 'Binh Duong',\n            },\n            {\n                code: 'VM76',\n                name: 'Binh Phuoc',\n            },\n            {\n                code: 'VM47',\n                name: 'Binh Thuan',\n            },\n            {\n                code: 'VM77',\n                name: 'Ca Mau',\n            },\n            {\n                code: 'VM87',\n                name: 'Can Tho',\n            },\n            {\n                code: 'VM05',\n                name: 'Cao Bang',\n            },\n            {\n                code: 'VM78',\n                name: 'Da Nang',\n            },\n            {\n                code: 'VM88',\n                name: 'Dac Lac',\n            },\n            {\n                code: 'VM91',\n                name: 'Dac Nong',\n            },\n            {\n                code: 'VM92',\n                name: 'Dien Bien',\n            },\n            {\n                code: 'VM43',\n                name: 'Dong Nai',\n            },\n            {\n                code: 'VM09',\n                name: 'Dong Thap',\n            },\n            {\n                code: 'VM49',\n                name: 'Gia Lai',\n            },\n            {\n                code: 'VM50',\n                name: 'Ha Giang',\n            },\n            {\n                code: 'VM80',\n                name: 'Ha Nam',\n            },\n            {\n                code: 'VM52',\n                name: 'Ha Tinh',\n            },\n            {\n                code: 'VM79',\n                name: 'Hai Duong',\n            },\n            {\n                code: 'VM13',\n                name: 'Haiphong',\n            },\n            {\n                code: 'VM44',\n                name: 'Hanoi',\n            },\n            {\n                code: 'VM93',\n                name: 'Hau Giang',\n            },\n            {\n                code: 'VM20',\n                name: 'Ho Chi Minh',\n            },\n            {\n                code: 'VM53',\n                name: 'Hoa Binh',\n            },\n            {\n                code: 'VM81',\n                name: 'Hung Yen',\n            },\n            {\n                code: 'VM54',\n                name: 'Khanh Hoa',\n            },\n            {\n                code: 'VM21',\n                name: 'Kien Giang',\n            },\n            {\n                code: 'VM55',\n                name: 'Kon Tum',\n            },\n            {\n                code: 'VM89',\n                name: 'Lai Chau',\n            },\n            {\n                code: 'VM23',\n                name: 'Lam Dong',\n            },\n            {\n                code: 'VM39',\n                name: 'Lang Son',\n            },\n            {\n                code: 'VM90',\n                name: 'Lao Cai',\n            },\n            {\n                code: 'VM24',\n                name: 'Long An',\n            },\n            {\n                code: 'VM82',\n                name: 'Nam Dinh',\n            },\n            {\n                code: 'VM58',\n                name: 'Nghe An',\n            },\n            {\n                code: 'VM59',\n                name: 'Ninh Binh',\n            },\n            {\n                code: 'VM60',\n                name: 'Ninh Thuan',\n            },\n            {\n                code: 'VM83',\n                name: 'Phu Tho',\n            },\n            {\n                code: 'VM61',\n                name: 'Phu Yen',\n            },\n            {\n                code: 'VM62',\n                name: 'Quang Binh',\n            },\n            {\n                code: 'VM84',\n                name: 'Quang Nam',\n            },\n            {\n                code: 'VM63',\n                name: 'Quang Ngai',\n            },\n            {\n                code: 'VM30',\n                name: 'Quang Ninh',\n            },\n            {\n                code: 'VM64',\n                name: 'Quang Tri',\n            },\n            {\n                code: 'VM65',\n                name: 'Soc Trang',\n            },\n            {\n                code: 'VM32',\n                name: 'Son La',\n            },\n            {\n                code: 'VM33',\n                name: 'Tay Ninh',\n            },\n            {\n                code: 'VM35',\n                name: 'Thai Binh',\n            },\n            {\n                code: 'VM85',\n                name: 'Thai Nguyen',\n            },\n            {\n                code: 'VM34',\n                name: 'Thanh Hoa',\n            },\n            {\n                code: 'VM66',\n                name: 'Thua Thien-Hue',\n            },\n            {\n                code: 'VM37',\n                name: 'Tien Giang',\n            },\n            {\n                code: 'VM67',\n                name: 'Tra Vinh',\n            },\n            {\n                code: 'VM68',\n                name: 'Tuyen Quang',\n            },\n            {\n                code: 'VM69',\n                name: 'Vinh Long',\n            },\n            {\n                code: 'VM86',\n                name: 'Vinh Phuc',\n            },\n            {\n                code: 'VM70',\n                name: 'Yen Bai',\n            },\n        ],\n    },\n    {\n        code: 'VG',\n        id: 2446,\n        name: 'Virgin Islands; British',\n        states: [\n            {\n                code: 'VG.VI',\n                name: 'British Virgin Islands',\n            },\n        ],\n    },\n    {\n        code: 'VI',\n        id: 2442,\n        name: 'Virgin Islands; U.S.',\n        states: [\n            {\n                code: '010',\n                name: 'Saint Croix',\n            },\n            {\n                code: '020',\n                name: 'Saint John',\n            },\n            {\n                code: '030',\n                name: 'Saint Thomas',\n            },\n        ],\n    },\n    {\n        code: 'WF',\n        id: 2443,\n        name: 'Wallis and Futuna',\n        states: [],\n    },\n    {\n        code: 'EH',\n        id: 2444,\n        name: 'Western Sahara',\n        states: [],\n    },\n    {\n        code: 'YE',\n        id: 2382,\n        name: 'Yemen',\n        states: [\n            {\n                code: 'YM01',\n                name: 'Abyan',\n            },\n            {\n                code: 'YM20',\n                name: \"Al Bayda'\",\n            },\n            {\n                code: 'YM18',\n                name: \"Al Dali'\",\n            },\n            {\n                code: 'YM08',\n                name: 'Al Hudaydah',\n            },\n            {\n                code: 'YM21',\n                name: 'Al Jawf',\n            },\n            {\n                code: 'YM03',\n                name: 'Al Mahrah',\n            },\n            {\n                code: 'YM10',\n                name: 'Al Mahwit',\n            },\n            {\n                code: 'YM19',\n                name: 'Amran',\n            },\n            {\n                code: 'YM11',\n                name: 'Dhamar',\n            },\n            {\n                code: 'YM04',\n                name: 'Hadramawt',\n            },\n            {\n                code: 'YM22',\n                name: 'Hajjah',\n            },\n            {\n                code: 'YM23',\n                name: 'Ibb',\n            },\n            {\n                code: 'YM24',\n                name: 'Lahij',\n            },\n            {\n                code: 'YM14',\n                name: \"Ma'rib\",\n            },\n            {\n                code: 'YM27',\n                name: 'Raymah',\n            },\n            {\n                code: 'YM15',\n                name: 'Sa`dah',\n            },\n            {\n                code: 'YM16',\n                name: \"San`a'\",\n            },\n            {\n                code: 'YM26',\n                name: \"San`a' [City]\",\n            },\n            {\n                code: 'YM05',\n                name: 'Shabwah',\n            },\n            {\n                code: 'YM28',\n                name: 'Socotra',\n            },\n            {\n                code: 'YM25',\n                name: 'Ta`izz',\n            },\n            {\n                code: 'YM02',\n                name: '`Adan',\n            },\n        ],\n    },\n    {\n        code: 'ZM',\n        id: 2369,\n        name: 'Zambia',\n        states: [\n            {\n                code: 'ZA02',\n                name: 'Central',\n            },\n            {\n                code: 'ZA08',\n                name: 'Copperbelt',\n            },\n            {\n                code: 'ZA03',\n                name: 'Eastern',\n            },\n            {\n                code: 'ZA04',\n                name: 'Luapula',\n            },\n            {\n                code: 'ZA09',\n                name: 'Lusaka',\n            },\n            {\n                code: 'ZA10',\n                name: 'Muchinga',\n            },\n            {\n                code: 'ZA06',\n                name: 'North-Western',\n            },\n            {\n                code: 'ZA05',\n                name: 'Northern',\n            },\n            {\n                code: 'ZA07',\n                name: 'Southern',\n            },\n            {\n                code: 'ZA01',\n                name: 'Western',\n            },\n        ],\n    },\n    {\n        code: 'ZW',\n        id: 2370,\n        name: 'Zimbabwe',\n        states: [\n            {\n                code: 'ZI09',\n                name: 'Bulawayo',\n            },\n            {\n                code: 'ZI10',\n                name: 'Harare',\n            },\n            {\n                code: 'ZI01',\n                name: 'Manicaland',\n            },\n            {\n                code: 'ZI03',\n                name: 'Mashonaland Central',\n            },\n            {\n                code: 'ZI04',\n                name: 'Mashonaland East',\n            },\n            {\n                code: 'ZI05',\n                name: 'Mashonaland West',\n            },\n            {\n                code: 'ZI08',\n                name: 'Masvingo',\n            },\n            {\n                code: 'ZI06',\n                name: 'Matabeleland North',\n            },\n            {\n                code: 'ZI07',\n                name: 'Matabeleland South',\n            },\n            {\n                code: 'ZI02',\n                name: 'Midlands',\n            },\n        ],\n    },\n    {\n        code: 'NONE',\n        id: 2378,\n        name: '- None Specified -',\n        states: [],\n    },\n];\n/**\n * Gets all countries\n * @return {?}\n */\nfunction getCountries() {\n    return COUNTRIES.map((/**\n     * @param {?} country\n     * @return {?}\n     */\n    (country) => country.name));\n}\n/**\n * Gets a country by country ID\n * @param {?} id\n * @return {?}\n */\nfunction findByCountryId(id) {\n    return COUNTRIES.find((/**\n     * @param {?} country\n     * @return {?}\n     */\n    (country) => country.id === id));\n}\n/**\n * Gets a country by country name\n * @param {?} name - Name of country to find\n * @return {?}\n */\nfunction findByCountryName(name) {\n    return COUNTRIES.find((/**\n     * @param {?} country\n     * @return {?}\n     */\n    (country) => country.name === name.trim()));\n}\n/**\n * Gets a country by country code\n * @param {?} code - Code of country to find\n * @return {?}\n */\nfunction findByCountryCode(code) {\n    return COUNTRIES.find((/**\n     * @param {?} country\n     * @return {?}\n     */\n    (country) => country.code === code.trim()));\n}\n/**\n * Gets states by country name\n * @param {?} name - Name of the country to search by\n * @return {?}\n */\nfunction getStateObjects(name) {\n    if (name) {\n        /** @type {?} */\n        const foundCountry = COUNTRIES.find((/**\n         * @param {?} country\n         * @return {?}\n         */\n        (country) => country.name === name.trim()));\n        return (foundCountry && foundCountry.states) || [];\n    }\n    return [];\n}\n/**\n * Gets state names by country name\n * @param {?} name - Name of the country to search by\n * @return {?}\n */\nfunction getStates(name) {\n    return getStateObjects(name).map((/**\n     * @param {?} state\n     * @return {?}\n     */\n    (state) => state.name));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/address/Address.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst ADDRESS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoAddressElement)),\n    multi: true,\n};\n/**\n * @record\n */\nfunction NovoAddressSubfieldConfig() { }\nif (false) {\n    /** @type {?} */\n    NovoAddressSubfieldConfig.prototype.label;\n    /** @type {?} */\n    NovoAddressSubfieldConfig.prototype.required;\n    /** @type {?} */\n    NovoAddressSubfieldConfig.prototype.maxlength;\n    /** @type {?|undefined} */\n    NovoAddressSubfieldConfig.prototype.pickerConfig;\n    /** @type {?} */\n    NovoAddressSubfieldConfig.prototype.hidden;\n    /** @type {?|undefined} */\n    NovoAddressSubfieldConfig.prototype.updated;\n    /** @type {?|undefined} */\n    NovoAddressSubfieldConfig.prototype.readOnly;\n}\n/**\n * @record\n */\nfunction NovoAddressConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.required;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.readOnly;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.address1;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.address2;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.city;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.state;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.zip;\n    /** @type {?|undefined} */\n    NovoAddressConfig.prototype.countryID;\n}\nclass NovoAddressElement {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n        this._readOnly = false;\n        this.states = [];\n        this.fieldList = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.focused = {};\n        this.invalid = {};\n        this.disabled = {};\n        this.invalidMaxlength = {};\n        this.valid = {};\n        this.tooltip = {};\n        this.initComplete = false;\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.validityChange = new EventEmitter();\n    }\n    /**\n     * @param {?} readOnly\n     * @return {?}\n     */\n    set readOnly(readOnly) {\n        this._readOnly = readOnly;\n        this.fieldList.forEach((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            this.disabled[field] = this._readOnly;\n        }));\n        if (this.model) {\n            this.updateStates();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get readOnly() {\n        return this._readOnly;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.config) {\n            this.config = {};\n        }\n        if (this.model) {\n            this.writeValue(this.model);\n            this.updateControl();\n        }\n        else if (!this.model) {\n            this.model = {};\n        }\n        this.initConfig();\n        if (Helpers.isBlank(this.model.countryID)) {\n            this.updateStates();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initConfig() {\n        this.fieldList.forEach((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            if (!this.config.hasOwnProperty(field)) {\n                this.config[field] = {\n                    hidden: true,\n                };\n            }\n            if (!this.config[field].hasOwnProperty('label')) {\n                this.config[field].label = this.labels[field];\n            }\n            if (this.config.required) {\n                this.config[field].required = true;\n            }\n            if (this.config[field].readOnly || this.config.readOnly) {\n                this.config[field].readOnly = true;\n                this.disabled[field] = true;\n            }\n            if (field === 'countryID') {\n                if (!this.config[field].pickerConfig) {\n                    this.config.countryID.pickerConfig = this.getDefaultCountryConfig();\n                }\n                this.config[field].pickerConfig.defaultOptions = this.config.countryID.pickerConfig.options;\n            }\n            if (field === 'state') {\n                if (!this.config[field].pickerConfig) {\n                    this.config.state.pickerConfig = this.getDefaultStateConfig();\n                    this.config[field].pickerConfig.defaultOptions = this.config[field].pickerConfig.options;\n                }\n                this.stateOptions = this.config[field].pickerConfig.options;\n                this.config[field].pickerConfig.options = (/**\n                 * @param {?=} query\n                 * @return {?}\n                 */\n                (query = '') => {\n                    return this.stateOptions(query, this.model.countryID);\n                });\n                this.config[field].pickerConfig.defaultOptions = this.stateOptions;\n            }\n        }));\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    isValid(field) {\n        /** @type {?} */\n        let valid = true;\n        if (((this.config[field].required && (Helpers.isBlank(this.model[field]) || Helpers.isEmpty(this.model[field]))) ||\n            !this.config[field].required) &&\n            !(field === 'countryID' && this.config[field].required && !Helpers.isBlank(this.model.countryID)) &&\n            !(field === 'state' &&\n                this.config[field].required &&\n                (!Helpers.isEmpty(this.model.state) ||\n                    ((Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n                        !Helpers.isBlank(this.model.countryName) &&\n                        this.config.state.pickerConfig &&\n                        this.config.state.pickerConfig.defaultOptions &&\n                        this.config.state.pickerConfig.defaultOptions.length === 0)))) {\n            valid = false;\n        }\n        else if (!Helpers.isEmpty(this.model[field]) &&\n            !Helpers.isBlank(this.config[field].maxlength) &&\n            this.config[field].maxlength < this.model[field].length) {\n            valid = false;\n        }\n        this.valid[field] = valid;\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    isInvalid(field) {\n        /** @type {?} */\n        let invalid = false;\n        /** @type {?} */\n        let invalidMaxlength = false;\n        if ((field !== 'countryID' &&\n            field !== 'state' &&\n            this.config[field].required &&\n            Helpers.isEmpty(this.model[field]) &&\n            !Helpers.isBlank(this.model[field])) ||\n            (field === 'countryID' && this.config[field].required && Helpers.isBlank(this.model.countryName) && this.config[field].updated) ||\n            (field === 'state' &&\n                this.config[field].required &&\n                (Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n                !Helpers.isBlank(this.model.countryID) &&\n                this.config[field].updated &&\n                this.config.state.pickerConfig &&\n                this.config.state.pickerConfig.defaultOptions &&\n                this.config.state.pickerConfig.defaultOptions.length > 0)) {\n            invalid = true;\n        }\n        else if (!Helpers.isEmpty(this.model[field]) &&\n            !Helpers.isBlank(this.config[field].maxlength) &&\n            this.config[field].maxlength < this.model[field].length) {\n            invalid = true;\n            invalidMaxlength = true;\n        }\n        this.invalid[field] = invalid;\n        this.invalidMaxlength[field] = invalidMaxlength;\n    }\n    /**\n     * @param {?} event\n     * @param {?} field\n     * @return {?}\n     */\n    onInput(event, field) {\n        this.isInvalid(field);\n        this.isValid(field);\n        if (event) {\n            this.change.emit({ value: this.model[field], field });\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} field\n     * @return {?}\n     */\n    isFocused(event, field) {\n        this.focused[field] = true;\n        this.focus.emit({ event, field });\n    }\n    /**\n     * @param {?} event\n     * @param {?} field\n     * @return {?}\n     */\n    isBlurred(event, field) {\n        this.focused[field] = false;\n        this.blur.emit({ event, field });\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    onCountryChange(evt) {\n        /** @type {?} */\n        const country = evt && evt.rawValue ? evt.rawValue : null;\n        /** @type {?} */\n        let field;\n        /** @type {?} */\n        let statesUpdatable = false;\n        this.config.countryID.updated = true;\n        if (this.config.countryID.pickerConfig) {\n            field = this.config.countryID.pickerConfig.field;\n        }\n        if (country && field && !Helpers.isBlank(country[field]) && this.model.countryID !== country[field]) {\n            this.model.countryID = country[field];\n            this.model.countryName = Helpers.interpolate(this.config.countryID.pickerConfig.format, country);\n            this.disabled.state = false;\n            this.tooltip.state = undefined;\n            statesUpdatable = true;\n        }\n        else if (Helpers.isBlank(country) || Helpers.isBlank(country[field])) {\n            this.model.countryID = undefined;\n            this.model.countryName = undefined;\n            this.disabled.state = true;\n            this.tooltip.state = this.labels.selectCountryFirst;\n            this.invalid.state = false;\n            statesUpdatable = true;\n        }\n        // Update state\n        if (statesUpdatable) {\n            this.model.state = undefined;\n            this.updateStates();\n        }\n        this.updateControl();\n        this.onInput(null, 'countryID');\n        this.onInput(null, 'state');\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    onStateChange(evt) {\n        /** @type {?} */\n        const state = evt && evt.value ? evt.value : null;\n        this.config.state.updated = true;\n        this.model.state = state;\n        this.updateControl();\n        this.onInput(null, 'state');\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    setStateLabel(model) {\n        /** @type {?} */\n        const state = model.state;\n        if (!Helpers.isBlank(state)) {\n            if (this.config.state.required) {\n                this.valid.state = true;\n            }\n            this.model.state = state;\n        }\n        else {\n            this.model.state = undefined;\n            if (this.config.state.required) {\n                this.valid.state = false;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateStates() {\n        if (this.config.state.pickerConfig.options && !Helpers.isBlank(this.model.countryID)) {\n            this.config.state.pickerConfig.options = (/**\n             * @param {?=} query\n             * @return {?}\n             */\n            (query = '') => {\n                return this.stateOptions(query, this.model.countryID);\n            });\n            this.stateOptions('', this.model.countryID).then((/**\n             * @param {?} results\n             * @return {?}\n             */\n            (results) => {\n                this.config.state.pickerConfig.defaultOptions = results;\n                if (results.length) {\n                    this.tooltip.state = undefined;\n                    this.disabled.state = this._readOnly;\n                    this.setStateLabel(this.model);\n                }\n                else {\n                    this.disabled.state = true;\n                    this.tooltip.state = this.labels.noStatesForCountry;\n                    if (this.config.state.required) {\n                        this.valid.state = true;\n                    }\n                }\n                this.validityChange.emit();\n                this.onInput(null, 'state');\n            }));\n        }\n        else {\n            this.config.state.pickerConfig.defaultOptions = [];\n            this.disabled.state = true;\n            this.tooltip.state = this.labels.selectCountryFirst;\n            if (this.config.state.required) {\n                this.valid.state = false;\n            }\n        }\n    }\n    /**\n     * @param {?=} filter\n     * @param {?=} countryID\n     * @return {?}\n     */\n    getStateOptions(filter = '', countryID) {\n        if (countryID) {\n            /** @type {?} */\n            const country = findByCountryId(countryID);\n            /** @type {?} */\n            const states = getStates(country.name);\n            if (filter) {\n                return states.filter((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (name) => new RegExp(`${filter}`, 'gi').test(name)));\n            }\n            return states;\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateControl() {\n        this.onModelChange(this.model);\n        this.onInput(null, 'countryID');\n        this.onInput(null, 'state');\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        /** @type {?} */\n        let loadingCountries = false;\n        if (model) {\n            /** @type {?} */\n            let countryName;\n            if (model.countryName && model.countryID) {\n                countryName = model.countryName;\n            }\n            else if (model.countryID) {\n                if (this.config.countryID.pickerConfig && this.config.countryID.pickerConfig.getLabels) {\n                    if (Helpers.isFunction(this.config.countryID.pickerConfig.getLabels)) {\n                        /** @type {?} */\n                        const promise = this.config.countryID.pickerConfig.getLabels(model.countryID);\n                        loadingCountries = true;\n                        if (promise.then) {\n                            promise.then((/**\n                             * @param {?} result\n                             * @return {?}\n                             */\n                            (result) => {\n                                loadingCountries = false;\n                                countryName = Helpers.interpolateWithFallback(this.config.countryID.pickerConfig.format, result);\n                                this.model = Object.assign(model, { countryName });\n                                this.updateStates();\n                            }));\n                        }\n                    }\n                }\n            }\n            if (countryName) {\n                countryName = countryName.trim();\n                model.state = model.state || '';\n                this.model = Object.assign(model, { countryName });\n            }\n            else {\n                this.model = model;\n            }\n            if (!loadingCountries && !Helpers.isBlank(this.model.countryID)) {\n                this.updateStates();\n            }\n        }\n        this.fieldList.forEach((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            this.onInput(null, field);\n        }));\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDefaultStateConfig() {\n        return {\n            field: 'value',\n            format: '$label',\n            options: (/**\n             * @param {?=} query\n             * @param {?=} countryID\n             * @return {?}\n             */\n            (query = '', countryID) => {\n                return Promise.resolve(this.getStateOptions(query, countryID));\n            }),\n            getLabels: (/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                return Promise.resolve(state);\n            }),\n        };\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDefaultCountryConfig() {\n        return {\n            field: 'value',\n            format: '$label',\n            options: (/**\n             * @param {?=} query\n             * @return {?}\n             */\n            (query = '') => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    /** @type {?} */\n                    let countries = COUNTRIES;\n                    if (query) {\n                        countries = countries.filter((/**\n                         * @param {?} country\n                         * @return {?}\n                         */\n                        (country) => new RegExp(`${query}`, 'gi').test(country.name)));\n                    }\n                    return resolve(countries.map((/**\n                     * @param {?} country\n                     * @return {?}\n                     */\n                    (country) => ({ value: country.id, label: country.name }))));\n                }));\n            }),\n            getLabels: (/**\n             * @param {?} countryID\n             * @return {?}\n             */\n            (countryID) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    /** @type {?} */\n                    const country = findByCountryId(countryID);\n                    if (country) {\n                        resolve({ value: country.id, label: country.name });\n                    }\n                    else {\n                        resolve('');\n                    }\n                }));\n            }),\n        };\n    }\n}\nNovoAddressElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-address',\n                providers: [ADDRESS_VALUE_ACCESSOR],\n                template: `\n    <span\n      *ngIf=\"!config?.address1?.hidden\"\n      class=\"street-address\"\n      [class.invalid]=\"invalid.address1\"\n      [class.focus]=\"focused.address1\"\n      [class.disabled]=\"disabled.address1\"\n    >\n      <i\n        *ngIf=\"config.address1.required\"\n        class=\"required-indicator address1\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address1, 'bhi-check': valid.address1 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address1\"\n        type=\"text\"\n        id=\"address1\"\n        name=\"address1\"\n        [placeholder]=\"config.address1.label\"\n        [maxlength]=\"config?.address1?.maxlength\"\n        autocomplete=\"shipping street-address address-line-1\"\n        [(ngModel)]=\"model.address1\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address1')\"\n        (blur)=\"isBlurred($event, 'address1')\"\n        (input)=\"onInput($event, 'address1')\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.address2?.hidden\"\n      class=\"apt suite\"\n      [class.invalid]=\"invalid.address2\"\n      [class.focus]=\"focused.address2\"\n      [class.disabled]=\"disabled.address2\"\n    >\n      <i\n        *ngIf=\"config.address2.required\"\n        class=\"required-indicator address2\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address2, 'bhi-check': valid.address2 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address2\"\n        type=\"text\"\n        id=\"address2\"\n        name=\"address2\"\n        [placeholder]=\"config.address2.label\"\n        [maxlength]=\"config?.address2?.maxlength\"\n        autocomplete=\"shipping address-line-2\"\n        [(ngModel)]=\"model.address2\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address2')\"\n        (blur)=\"isBlurred($event, 'address2')\"\n        (input)=\"onInput($event, 'address2')\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.city?.hidden\"\n      class=\"city locality\"\n      [class.invalid]=\"invalid.city\"\n      [class.focus]=\"focused.city\"\n      [class.disabled]=\"disabled.city\"\n    >\n      <i *ngIf=\"config.city.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.city, 'bhi-check': valid.city }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.city\"\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        [placeholder]=\"config.city.label\"\n        autocomplete=\"shipping city locality\"\n        [maxlength]=\"config?.city?.maxlength\"\n        [(ngModel)]=\"model.city\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'city')\"\n        (blur)=\"isBlurred($event, 'city')\"\n        (input)=\"onInput($event, 'city')\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.state?.hidden\"\n      class=\"state region\"\n      [class.invalid]=\"invalid.state\"\n      [class.focus]=\"focused.state\"\n      [class.disabled]=\"disabled.state\"\n      [tooltip]=\"tooltip.state\"\n    >\n      <i *ngIf=\"config.state.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.state, 'bhi-check': valid.state }\"> </i>\n      <novo-picker\n        [config]=\"config?.state?.pickerConfig\"\n        [placeholder]=\"config?.state?.label\"\n        (changed)=\"onStateChange($event)\"\n        autocomplete=\"shipping region\"\n        [(ngModel)]=\"model.state\"\n        [disablePickerInput]=\"disabled.state\"\n      ></novo-picker>\n    </span>\n    <span\n      *ngIf=\"!config?.zip?.hidden\"\n      class=\"zip postal-code\"\n      [class.invalid]=\"invalid.zip\"\n      [class.focus]=\"focused.zip\"\n      [class.disabled]=\"disabled.zip\"\n    >\n      <i *ngIf=\"config.zip.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.zip, 'bhi-check': valid.zip }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.zip\"\n        type=\"text\"\n        id=\"zip\"\n        name=\"zip\"\n        [placeholder]=\"config.zip.label\"\n        autocomplete=\"shipping postal-code\"\n        [maxlength]=\"config?.zip?.maxlength\"\n        [(ngModel)]=\"model.zip\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'zip')\"\n        (blur)=\"isBlurred($event, 'zip')\"\n        (input)=\"onInput($event, 'zip')\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.countryID?.hidden\"\n      class=\"country-name\"\n      [class.invalid]=\"invalid.countryID\"\n      [class.focus]=\"focused.countryID\"\n      [class.disabled]=\"disabled.countryID\"\n    >\n      <i\n        *ngIf=\"config.countryID.required\"\n        class=\"required-indicator\"\n        [ngClass]=\"{ 'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID }\"\n      >\n      </i>\n      <novo-picker\n        [config]=\"config?.countryID?.pickerConfig\"\n        [placeholder]=\"config.countryID.label\"\n        (changed)=\"onCountryChange($event)\"\n        autocomplete=\"shipping country\"\n        [(ngModel)]=\"model.countryID\"\n        [disablePickerInput]=\"disabled.countryID\"\n      ></novo-picker>\n    </span>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoAddressElement.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nNovoAddressElement.propDecorators = {\n    config: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    blur: [{ type: Output }],\n    validityChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoAddressElement.prototype.config;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAddressElement.prototype._readOnly;\n    /** @type {?} */\n    NovoAddressElement.prototype.states;\n    /** @type {?} */\n    NovoAddressElement.prototype.fieldList;\n    /** @type {?} */\n    NovoAddressElement.prototype.model;\n    /** @type {?} */\n    NovoAddressElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoAddressElement.prototype.onModelTouched;\n    /** @type {?} */\n    NovoAddressElement.prototype.focused;\n    /** @type {?} */\n    NovoAddressElement.prototype.invalid;\n    /** @type {?} */\n    NovoAddressElement.prototype.disabled;\n    /** @type {?} */\n    NovoAddressElement.prototype.invalidMaxlength;\n    /** @type {?} */\n    NovoAddressElement.prototype.valid;\n    /** @type {?} */\n    NovoAddressElement.prototype.stateOptions;\n    /** @type {?} */\n    NovoAddressElement.prototype.tooltip;\n    /** @type {?} */\n    NovoAddressElement.prototype.initComplete;\n    /** @type {?} */\n    NovoAddressElement.prototype.change;\n    /** @type {?} */\n    NovoAddressElement.prototype.focus;\n    /** @type {?} */\n    NovoAddressElement.prototype.blur;\n    /** @type {?} */\n    NovoAddressElement.prototype.validityChange;\n    /** @type {?} */\n    NovoAddressElement.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/checkbox/Checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoCheckboxElement)),\n    multi: true,\n};\n/** @type {?} */\nconst LAYOUT_DEFAULTS = { iconStyle: 'box' };\nclass NovoCheckboxElement {\n    /**\n     * @param {?} ref\n     */\n    constructor(ref) {\n        this.ref = ref;\n        this.indeterminate = false;\n        this.disabled = false;\n        // TODO - avoid configs like this\n        this.onSelect = new EventEmitter();\n        this.boxIcon = true;\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n        this.boxIcon = this.layoutOptions.iconStyle === 'box';\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    select(event) {\n        Helpers.swallowEvent(event);\n        if (!this.disabled) {\n            this.model = !this.model;\n            this.onModelChange(this.model);\n            this.onSelect.emit({ originalEvent: event, value: this.model });\n        }\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoCheckboxElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-checkbox',\n                providers: [CHECKBOX_VALUE_ACCESSOR],\n                template: `\n    <div class=\"check-box-group\" [class.checked]=\"model\" [class.disabled]=\"disabled\">\n        <input [name]=\"name\" type=\"checkbox\" [(ngModel)]=\"model\" [attr.id]=\"name\" [disabled]=\"disabled\">\n        <label [attr.for]=\"name\" (click)=\"select($event)\" [class.disabled]=\"disabled\">\n          <i [class.bhi-checkbox-empty]=\"!model && !indeterminate && boxIcon\"\n              [class.bhi-checkbox-filled]=\"model && !indeterminate && boxIcon\"\n              [class.bhi-checkbox-indeterminate]=\"indeterminate && boxIcon\"\n              [class.bhi-circle-o]=\"!model && !indeterminate && !boxIcon\"\n              [class.bhi-check]=\"model && !indeterminate && !boxIcon\"\n              [class.bhi-circle]=\"indeterminate && !boxIcon\"></i>\n          <span *ngIf=\"label\">{{ label }}</span>\n        </label>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoCheckboxElement.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNovoCheckboxElement.propDecorators = {\n    name: [{ type: Input }],\n    label: [{ type: Input }],\n    indeterminate: [{ type: Input }],\n    disabled: [{ type: Input }],\n    layoutOptions: [{ type: Input }],\n    onSelect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCheckboxElement.prototype.name;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.label;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.indeterminate;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.disabled;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.layoutOptions;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.onSelect;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.boxIcon;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.model;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoCheckboxElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoCheckboxElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/checkbox/CheckList.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CHECKLIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoCheckListElement)),\n    multi: true,\n};\nclass NovoCheckListElement {\n    constructor() {\n        this.onSelect = new EventEmitter();\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setModel();\n        this.setupOptions();\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    select(event, item) {\n        Helpers.swallowEvent(event);\n        if (!this.disabled) {\n            item.checked = !item.checked;\n            this.model = this._options.filter((/**\n             * @param {?} checkBox\n             * @return {?}\n             */\n            (checkBox) => checkBox.checked)).map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => x.value));\n            this.onModelChange(this.model.length > 0 ? this.model : '');\n            this.onSelect.emit({ selected: this.model });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setupOptions() {\n        this.options = this.options || [];\n        this._options = [];\n        if (this.options.length && !this.options[0].value) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                /** @type {?} */\n                const formattedOption = {\n                    value: option,\n                    label: option,\n                    checked: this.model && this.model.length && this.model.indexOf(option.value) !== -1,\n                };\n                this._options.push(formattedOption);\n            }));\n        }\n        else {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                /** @type {?} */\n                const formattedOption = option;\n                formattedOption.checked = this.model && this.model.length && this.model.indexOf(option.value) !== -1;\n                this._options.push(formattedOption);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setModel() {\n        /** @type {?} */\n        const checkedOptions = this.options.filter((/**\n         * @param {?} checkBox\n         * @return {?}\n         */\n        (checkBox) => checkBox.checked)).map((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.value));\n        this.writeValue(checkedOptions);\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model || [];\n        if (model) {\n            this.setupOptions();\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoCheckListElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-check-list',\n                providers: [CHECKLIST_VALUE_ACCESSOR],\n                template: `\n    <div\n      class=\"check-box-group\"\n      *ngFor=\"let option of _options; let i = index\"\n      [ngClass]=\"{ checked: option.checked }\"\n      [class.disabled]=\"disabled\"\n      [attr.data-automation-id]=\"option.label\"\n    >\n      <input\n        [name]=\"name\"\n        type=\"checkbox\"\n        [ngModel]=\"option.checked\"\n        [attr.id]=\"name + i\"\n        [value]=\"option.checked\"\n        (change)=\"select($event, option)\"\n        [disabled]=\"disabled\"\n      />\n      <label [attr.for]=\"name + i\" (click)=\"select($event, option)\">\n        <i [ngClass]=\"{ 'bhi-checkbox-empty': !option.checked, 'bhi-checkbox-filled': option.checked }\"></i>\n        <span>{{ option.label }}</span>\n      </label>\n    </div>\n  `\n            }] }\n];\nNovoCheckListElement.propDecorators = {\n    name: [{ type: Input }],\n    options: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoCheckListElement.prototype.name;\n    /** @type {?} */\n    NovoCheckListElement.prototype.options;\n    /** @type {?} */\n    NovoCheckListElement.prototype.disabled;\n    /** @type {?} */\n    NovoCheckListElement.prototype.onSelect;\n    /** @type {?} */\n    NovoCheckListElement.prototype._options;\n    /** @type {?} */\n    NovoCheckListElement.prototype.model;\n    /** @type {?} */\n    NovoCheckListElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoCheckListElement.prototype.onModelTouched;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/file/extras/file/File.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFile {\n    /**\n     * @param {?} file\n     */\n    constructor(file) {\n        this.name = '';\n        this.contentType = '';\n        this.lastModified = 0;\n        this.size = 0;\n        this.loaded = false;\n        this.reader = new FileReader();\n        this.name = `${encodeURIComponent(file.name || '')}`;\n        this.contentType = file.type;\n        this.lastModified = file.lastModified;\n        this.size = file.size;\n        this.file = file;\n        this.reader.onload = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.fileContents = event.target.result.split(',')[1];\n            this.dataURL = event.target.result;\n            this.loaded = true;\n            if (this.readPromise) {\n                this.readPromise(this);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    read() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            this.readPromise = resolve;\n            // when the file is read it triggers the onload event above.\n            this.reader.readAsDataURL(this.file);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    toJSON() {\n        return {\n            name: this.name,\n            contentType: this.type,\n            lastModified: this.lastModified,\n            size: this.size,\n            fileContents: this.fileContents,\n        };\n    }\n}\nif (false) {\n    /** @type {?} */\n    NovoFile.prototype.name;\n    /** @type {?} */\n    NovoFile.prototype.file;\n    /** @type {?} */\n    NovoFile.prototype.type;\n    /** @type {?} */\n    NovoFile.prototype.contentType;\n    /** @type {?} */\n    NovoFile.prototype.lastModified;\n    /** @type {?} */\n    NovoFile.prototype.size;\n    /** @type {?} */\n    NovoFile.prototype.loaded;\n    /** @type {?} */\n    NovoFile.prototype.fileContents;\n    /** @type {?} */\n    NovoFile.prototype.dataURL;\n    /** @type {?} */\n    NovoFile.prototype.reader;\n    /** @type {?} */\n    NovoFile.prototype.readPromise;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/file/FileInput.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst FILE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoFileInputElement)),\n    multi: true,\n};\n/** @type {?} */\nconst LAYOUT_DEFAULTS$1 = { order: 'default', download: true, removable: true, labelStyle: 'default', draggable: false };\nclass NovoFileInputElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} dragula\n     */\n    constructor(element, labels, dragula) {\n        this.element = element;\n        this.labels = labels;\n        this.dragula = dragula;\n        this.multiple = false;\n        this.disabled = false;\n        this.value = [];\n        this.edit = new EventEmitter();\n        this.save = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.upload = new EventEmitter();\n        this.elements = [];\n        this.files = [];\n        this.active = false;\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.commands = {\n            dragenter: this.dragEnterHandler.bind(this),\n            dragleave: this.dragLeaveHandler.bind(this),\n            dragover: this.dragOverHandler.bind(this),\n            drop: this.dropHandler.bind(this),\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            this.element.nativeElement.addEventListener(type, this.commands[type]);\n        }));\n        this.updateLayout();\n        this.initializeDragula();\n        this.setInitialFileList();\n        this.dataFeatureId = this.dataFeatureId ? this.dataFeatureId : this.name;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            this.element.nativeElement.removeEventListener(type, this.commands[type]);\n        }));\n        /** @type {?} */\n        const dragulaHasFileOutputBag = this.dragula.bags.length > 0 && this.dragula.bags.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.name === this.fileOutputBag)).length > 0;\n        if (dragulaHasFileOutputBag) {\n            this.dragula.destroy(this.fileOutputBag);\n        }\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.onModelChange(this.model);\n    }\n    /**\n     * @return {?}\n     */\n    updateLayout() {\n        this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS$1, this.layoutOptions);\n        this.insertTemplatesBasedOnLayout();\n    }\n    /**\n     * @return {?}\n     */\n    insertTemplatesBasedOnLayout() {\n        /** @type {?} */\n        let order;\n        switch (this.layoutOptions['order']) {\n            case 'displayFilesBelow':\n                order = ['fileInput', 'fileOutput'];\n                break;\n            default:\n                order = ['fileOutput', 'fileInput'];\n        }\n        order.forEach((/**\n         * @param {?} template\n         * @return {?}\n         */\n        (template) => {\n            this.container.createEmbeddedView(this[template], 0);\n        }));\n        return order;\n    }\n    /**\n     * @return {?}\n     */\n    initializeDragula() {\n        this.fileOutputBag = `file-output-${this.dragula.bags.length}`;\n        this.dragula.setOptions(this.fileOutputBag, {\n            moves: (/**\n             * @param {?} el\n             * @param {?} container\n             * @param {?} handle\n             * @return {?}\n             */\n            (el, container, handle) => {\n                return this.layoutOptions.draggable;\n            }),\n        });\n    }\n    /**\n     * @return {?}\n     */\n    setInitialFileList() {\n        if (this.value) {\n            this.files = this.value;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragEnterHandler(event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n        this.target = event.target;\n        this.active = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragLeaveHandler(event) {\n        event.preventDefault();\n        if (this.target === event.target) {\n            this.active = false;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragOverHandler(event) {\n        event.preventDefault();\n        // no-op\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dropHandler(event) {\n        event.preventDefault();\n        this.visible = false;\n        if (event.dataTransfer.types[0] !== 'Files') {\n            return;\n        }\n        /** @type {?} */\n        const options = this.layoutOptions;\n        /** @type {?} */\n        const filelist = Array.from(event.dataTransfer.files);\n        if (options.customActions) {\n            this.upload.emit(this.multiple ? filelist : [filelist[0]]);\n        }\n        else {\n            this.process(this.multiple ? filelist : [filelist[0]]);\n        }\n        this.active = false;\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    check(event) {\n        this.process(Array.from(event.target.files));\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    validate(files) {\n        /** @type {?} */\n        let passedValidation = true;\n        if (this.layoutOptions.customValidation) {\n            this.layoutOptions.customValidation\n                .filter((/**\n             * @param {?} validation\n             * @return {?}\n             */\n            (validation) => validation.action === 'upload'))\n                .forEach((/**\n             * @param {?} uploadValidation\n             * @return {?}\n             */\n            (uploadValidation) => {\n                passedValidation = uploadValidation.fn(files) && passedValidation;\n            }));\n        }\n        return passedValidation;\n    }\n    /**\n     * @param {?} filelist\n     * @return {?}\n     */\n    process(filelist) {\n        if (this.validate(filelist)) {\n            Promise.all(filelist.map((/**\n             * @param {?} file\n             * @return {?}\n             */\n            (file) => this.readFile(file)))).then((/**\n             * @param {?} files\n             * @return {?}\n             */\n            (files) => {\n                if (this.multiple) {\n                    this.files.push(...files);\n                }\n                else {\n                    this.files = files;\n                }\n                this.model = this.files;\n                this.onModelChange(this.model);\n            }));\n        }\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    download(file) {\n        window.open(file.dataURL, '_blank');\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    remove(file) {\n        this.files.splice(this.files.findIndex((/**\n         * @param {?} f\n         * @return {?}\n         */\n        (f) => f.name === file.name && f.size === file.size)), 1);\n        this.model = this.files;\n        this.onModelChange(this.model);\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    readFile(file) {\n        return new NovoFile(file).read();\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    customEdit(file) {\n        this.edit.emit(file);\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    customSave(file) {\n        this.save.emit(file);\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    customDelete(file) {\n        this.delete.emit(file);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    customCheck(event) {\n        this.upload.emit(event);\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoFileInputElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-file-input',\n                providers: [FILE_VALUE_ACCESSOR],\n                template: `\n    <div #container></div>\n    <ng-template #fileInput>\n      <div class=\"file-input-group\" [class.disabled]=\"disabled\" [class.active]=\"active\">\n        <input\n          *ngIf=\"!layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"check($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <input\n          *ngIf=\"layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"customCheck($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <section [ngSwitch]=\"layoutOptions.labelStyle\">\n          <label *ngSwitchCase=\"'no-box'\" [attr.for]=\"name\" class=\"no-box\">\n            <div>\n              <i class=\"bhi-dropzone\"></i>{{ placeholder || labels.chooseAFile }} {{ labels.or }}\n              <strong class=\"link\">{{ labels.clickToBrowse }}</strong>\n            </div>\n          </label>\n          <label *ngSwitchDefault [attr.for]=\"name\" class=\"boxed\">\n            <span>{{ placeholder || labels.chooseAFile }}</span>\n            <small\n              >{{ labels.or }} <strong class=\"link\">{{ labels.clickToBrowse }}</strong></small\n            >\n          </label>\n        </section>\n      </div>\n    </ng-template>\n    <ng-template #fileOutput>\n      <div class=\"file-output-group\" [dragula]=\"fileOutputBag\" [dragulaModel]=\"files\">\n        <div class=\"file-item\" *ngFor=\"let file of files\" [class.disabled]=\"disabled\">\n          <i *ngIf=\"layoutOptions.draggable\" class=\"bhi-move\"></i>\n          <label *ngIf=\"file.link\"\n            ><span\n              ><a href=\"{{ file.link }}\" target=\"_blank\">{{ file.name | decodeURI }}</a></span\n            ><span *ngIf=\"file.description\">||</span><span>{{ file.description }}</span></label\n          >\n          <label *ngIf=\"!file.link\">{{ file.name | decodeURI }}</label>\n          <div class=\"actions\" [attr.data-automation-id]=\"'file-actions'\" *ngIf=\"file.loaded\">\n            <div *ngIf=\"!layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"download(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled && (layoutOptions.removable || (!layoutOptions.removable && layoutOptions.removableWhenNew && !file.link))\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"remove(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n            <div *ngIf=\"layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.edit && !disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"edit\"\n                (click)=\"customEdit(file)\"\n                [attr.data-automation-id]=\"'file-edit'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"customSave(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"customDelete(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n          </div>\n          <novo-loading *ngIf=\"!file.loaded\"></novo-loading>\n        </div>\n      </div>\n    </ng-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoFileInputElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: NovoDragulaService }\n];\nNovoFileInputElement.propDecorators = {\n    fileInput: [{ type: ViewChild, args: ['fileInput', { static: true },] }],\n    fileOutput: [{ type: ViewChild, args: ['fileOutput', { static: true },] }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef, static: true },] }],\n    name: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    layoutOptions: [{ type: Input }],\n    value: [{ type: Input }],\n    dataFeatureId: [{ type: Input }],\n    edit: [{ type: Output }],\n    save: [{ type: Output }],\n    delete: [{ type: Output }],\n    upload: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoFileInputElement.prototype.fileInput;\n    /** @type {?} */\n    NovoFileInputElement.prototype.fileOutput;\n    /** @type {?} */\n    NovoFileInputElement.prototype.container;\n    /** @type {?} */\n    NovoFileInputElement.prototype.name;\n    /** @type {?} */\n    NovoFileInputElement.prototype.multiple;\n    /** @type {?} */\n    NovoFileInputElement.prototype.disabled;\n    /** @type {?} */\n    NovoFileInputElement.prototype.placeholder;\n    /** @type {?} */\n    NovoFileInputElement.prototype.layoutOptions;\n    /** @type {?} */\n    NovoFileInputElement.prototype.value;\n    /** @type {?} */\n    NovoFileInputElement.prototype.dataFeatureId;\n    /** @type {?} */\n    NovoFileInputElement.prototype.edit;\n    /** @type {?} */\n    NovoFileInputElement.prototype.save;\n    /** @type {?} */\n    NovoFileInputElement.prototype.delete;\n    /** @type {?} */\n    NovoFileInputElement.prototype.upload;\n    /** @type {?} */\n    NovoFileInputElement.prototype.elements;\n    /** @type {?} */\n    NovoFileInputElement.prototype.files;\n    /** @type {?} */\n    NovoFileInputElement.prototype.model;\n    /** @type {?} */\n    NovoFileInputElement.prototype.active;\n    /** @type {?} */\n    NovoFileInputElement.prototype.commands;\n    /** @type {?} */\n    NovoFileInputElement.prototype.visible;\n    /** @type {?} */\n    NovoFileInputElement.prototype.target;\n    /** @type {?} */\n    NovoFileInputElement.prototype.fileOutputBag;\n    /** @type {?} */\n    NovoFileInputElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoFileInputElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoFileInputElement.prototype.element;\n    /** @type {?} */\n    NovoFileInputElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoFileInputElement.prototype.dragula;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/extras/FormExtras.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFormExtrasModule {\n}\nNovoFormExtrasModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    NovoPipesModule,\n                    NovoButtonModule,\n                    NovoSelectModule,\n                    NovoPickerModule,\n                    NovoLoadingModule,\n                    NovoDragulaModule,\n                    NovoTooltipModule,\n                ],\n                declarations: [NovoAddressElement, NovoCheckboxElement, NovoCheckListElement, NovoFileInputElement],\n                exports: [NovoAddressElement, NovoCheckboxElement, NovoCheckListElement, NovoFileInputElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tiles/Tiles.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst TILES_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoTilesElement)),\n    multi: true,\n};\nclass NovoTilesElement {\n    /**\n     * @param {?} element\n     * @param {?} ref\n     */\n    constructor(element, ref) {\n        this.element = element;\n        this.ref = ref;\n        this.name = new Date().getTime().toString();\n        this.disabled = false;\n        this.onChange = new EventEmitter();\n        this.onSelectedOptionClick = new EventEmitter();\n        this.onDisabledOptionClick = new EventEmitter();\n        this._options = [];\n        this.activeTile = null;\n        this.focused = false;\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} focus\n     * @return {?}\n     */\n    setFocus(focus) {\n        this.focused = focus;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.name = this.name || '';\n        this.setupOptions();\n    }\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    ngOnChanges(change) {\n        if (change['options'] && change['options'].currentValue && !change['options'].firstChange) {\n            this.name = this.name || '';\n            this._options = [];\n            this.setupOptions();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setupOptions() {\n        if (this.options && this.options.length && (this.options[0].value === undefined || this.options[0].value === null)) {\n            this._options = this.options.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => {\n                /** @type {?} */\n                const item = { value: x, label: x, checked: this.model === x };\n                if (item.checked) {\n                    this.setTile(item);\n                }\n                return item;\n            }));\n        }\n        else {\n            this._options = this.options.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => {\n                x.checked = this.model === x.value || (this.model && this.model.id === x.value);\n                if (x.checked) {\n                    this.setTile(x);\n                }\n                return x;\n            }));\n        }\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    select(event, item) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        if (!item.disabled) {\n            if (item.checked) {\n                this.onSelectedOptionClick.emit(item);\n                return;\n            }\n            for (const option of this._options) {\n                option.checked = false;\n            }\n            item.checked = !item.checked;\n            this.onChange.emit(item.value);\n            this.onModelChange(item.value);\n            this.setTile(item);\n            this.model = item.value;\n        }\n        else {\n            this.onDisabledOptionClick.emit(item);\n        }\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setTile(item) {\n        if (item) {\n            this.activeTile = item.value;\n            this.ref.markForCheck();\n        }\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        if (!Helpers.isBlank(model)) {\n            this.setupOptions();\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoTilesElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tiles',\n                providers: [TILES_VALUE_ACCESSOR],\n                template: `\n    <div class=\"tile-container\" [class.active]=\"focused\" [class.disabled]=\"disabled\">\n      <div\n        class=\"tile\"\n        *ngFor=\"let option of _options; let i = index\"\n        [ngClass]=\"{ active: option.checked, disabled: option.disabled }\"\n        (click)=\"select($event, option)\"\n        [attr.data-automation-id]=\"option.label || option\"\n      >\n        <input\n          class=\"tiles-input\"\n          [name]=\"name\"\n          type=\"radio\"\n          [value]=\"option.checked || option.value || option\"\n          [attr.id]=\"name + i\"\n          (change)=\"select($event, option)\"\n          (focus)=\"setFocus(true)\"\n          (blur)=\"setFocus(false)\"\n          [disabled]=\"disabled\"\n        />\n        <label [attr.for]=\"name + i\" [attr.data-automation-id]=\"option.label || option\">\n          {{ option.label || option }}\n        </label>\n      </div>\n    </div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoTilesElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNovoTilesElement.propDecorators = {\n    name: [{ type: Input }],\n    options: [{ type: Input }],\n    required: [{ type: Input }],\n    disabled: [{ type: Input, args: ['controlDisabled',] }],\n    onChange: [{ type: Output }],\n    onSelectedOptionClick: [{ type: Output }],\n    onDisabledOptionClick: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTilesElement.prototype.name;\n    /** @type {?} */\n    NovoTilesElement.prototype.options;\n    /** @type {?} */\n    NovoTilesElement.prototype.required;\n    /** @type {?} */\n    NovoTilesElement.prototype.disabled;\n    /** @type {?} */\n    NovoTilesElement.prototype.onChange;\n    /** @type {?} */\n    NovoTilesElement.prototype.onSelectedOptionClick;\n    /** @type {?} */\n    NovoTilesElement.prototype.onDisabledOptionClick;\n    /** @type {?} */\n    NovoTilesElement.prototype._options;\n    /** @type {?} */\n    NovoTilesElement.prototype.activeTile;\n    /** @type {?} */\n    NovoTilesElement.prototype.focused;\n    /** @type {?} */\n    NovoTilesElement.prototype.model;\n    /** @type {?} */\n    NovoTilesElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoTilesElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTilesElement.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTilesElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tiles/Tiles.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTilesModule {\n}\nNovoTilesModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, ReactiveFormsModule],\n                declarations: [NovoTilesElement],\n                exports: [NovoTilesElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/search/SearchBox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst SEARCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoSearchBoxElement)),\n    multi: true,\n};\nclass NovoSearchBoxElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} _changeDetectorRef\n     * @param {?} _zone\n     */\n    constructor(element, labels, _changeDetectorRef, _zone) {\n        this.element = element;\n        this.labels = labels;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._zone = _zone;\n        this.icon = 'search';\n        this.placeholder = 'Search...';\n        this.alwaysOpen = false;\n        this.theme = 'positive';\n        this.closeOnSelect = true;\n        this.searchChanged = new EventEmitter();\n        this.focused = false;\n        /**\n         * View -> model callback called when value changes\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * View -> model callback called when autocomplete has been touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * \\@name showFasterFind\n     * \\@description This function shows the picker and adds the active class (for animation)\n     * @param {?=} event\n     * @param {?=} forceClose\n     * @return {?}\n     */\n    showSearch(event, forceClose = false) {\n        if (!this.panelOpen) {\n            // Reset search\n            // Set focus on search\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const element = this.input.nativeElement;\n                if (element) {\n                    element.focus();\n                }\n            }), 10);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        this._zone.run((/**\n         * @return {?}\n         */\n        () => {\n            this.focused = true;\n            this.openPanel();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.focused = false;\n    }\n    /**\n     * BEGIN: Convenient Panel Methods.\n     * @return {?}\n     */\n    openPanel() {\n        this.overlay.openPanel();\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.overlay.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlay && this.overlay.panelOpen;\n    }\n    /**\n     * @return {?}\n     */\n    get active() {\n        return this.panelOpen || this.alwaysOpen;\n    }\n    /**\n     * END: Convenient Panel Methods.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n            this.closePanel();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        if (document.activeElement === event.target) {\n            this._onChange(((/** @type {?} */ (event.target))).value);\n            if (this.debounceSearchChange) {\n                clearTimeout(this.debounceSearchChange);\n            }\n            this.debounceSearchChange = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.searchChanged.emit(((/** @type {?} */ (event.target))).value);\n            }), 400);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._setValue(value);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setValue(value) {\n        this.value = value;\n        /** @type {?} */\n        let toDisplay = value;\n        if (value && this.displayField) {\n            toDisplay = value.hasOwnProperty(this.displayField) ? value[this.displayField] : value;\n        }\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        this.displayValue = toDisplay ? toDisplay : '';\n        this.input.nativeElement.value = this.displayValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    setValueAndClose(event) {\n        if (event && event.value) {\n            this._setValue(event.value);\n            this._onChange(event.value);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @param {?} skip\n     * @return {?}\n     */\n    clearValue(skip) {\n        this.writeValue(null);\n        this._onChange(null);\n    }\n}\nNovoSearchBoxElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-search',\n                providers: [SEARCH_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <!-- SEARCH ICON -->\n    <button\n      theme=\"fab\"\n      [color]=\"theme\"\n      [icon]=\"icon\"\n      (click)=\"showSearch()\"\n      [tooltip]=\"hint\"\n      tooltipPosition=\"bottom\"\n      data-automation-id=\"novo-search-fab\"\n    ></button>\n    <!-- SEARCH INPUT -->\n    <input\n      type=\"text\"\n      [attr.name]=\"name\"\n      [attr.value]=\"displayValue\"\n      [attr.placeholder]=\"placeholder\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      #input\n      data-automation-id=\"novo-search-input\"\n    />\n    <!-- SEARCH OVERLAY -->\n    <novo-overlay-template\n      [parent]=\"element\"\n      [closeOnSelect]=\"closeOnSelect\"\n      position=\"above-below\"\n      (select)=\"closePanel()\"\n      (closing)=\"onBlur()\"\n    >\n      <ng-content></ng-content>\n    </novo-overlay-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoSearchBoxElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef },\n    { type: NgZone }\n];\nNovoSearchBoxElement.propDecorators = {\n    name: [{ type: Input }],\n    icon: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    alwaysOpen: [{ type: Input }],\n    theme: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    displayField: [{ type: Input }],\n    displayValue: [{ type: Input }],\n    hint: [{ type: Input }],\n    searchChanged: [{ type: Output }],\n    focused: [{ type: HostBinding, args: ['class.focused',] }],\n    overlay: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: false },] }],\n    input: [{ type: ViewChild, args: ['input', { static: true },] }],\n    active: [{ type: HostBinding, args: ['class.active',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.name;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.icon;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.placeholder;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.alwaysOpen;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.theme;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.displayField;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.displayValue;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.hint;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.searchChanged;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.focused;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.value;\n    /**\n     * View -> model callback called when value changes\n     * @type {?}\n     */\n    NovoSearchBoxElement.prototype._onChange;\n    /**\n     * View -> model callback called when autocomplete has been touched\n     * @type {?}\n     */\n    NovoSearchBoxElement.prototype._onTouched;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    NovoSearchBoxElement.prototype.overlay;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.input;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSearchBoxElement.prototype.debounceSearchChange;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.element;\n    /** @type {?} */\n    NovoSearchBoxElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSearchBoxElement.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSearchBoxElement.prototype._zone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/search/SearchBox.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSearchBoxModule {\n}\nNovoSearchBoxModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule, NovoPickerModule, NovoTooltipModule, NovoOverlayModule],\n                declarations: [NovoSearchBoxElement],\n                exports: [NovoSearchBoxElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-picker/DatePicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst DATE_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoDatePickerElement)),\n    multi: true,\n};\n/**\n * @record\n */\nfunction RangeModal() { }\nif (false) {\n    /** @type {?} */\n    RangeModal.prototype.startDate;\n    /** @type {?} */\n    RangeModal.prototype.endDate;\n}\n/**\n * @record\n */\nfunction Day() { }\nif (false) {\n    /** @type {?} */\n    Day.prototype.date;\n    /** @type {?|undefined} */\n    Day.prototype.isCurrentMonth;\n    /** @type {?|undefined} */\n    Day.prototype.isToday;\n    /** @type {?|undefined} */\n    Day.prototype.name;\n    /** @type {?|undefined} */\n    Day.prototype.number;\n}\nclass NovoDatePickerElement {\n    /**\n     * @param {?} labels\n     * @param {?} element\n     */\n    constructor(labels, element) {\n        this.labels = labels;\n        this.element = element;\n        this.weekStart = 0;\n        // Select callback for output\n        this.onSelect = new EventEmitter(false);\n        // List of all the weekdays\n        this.weekdays = [];\n        // List of all months\n        this.months = [];\n        // List of all years (generated in ngOnInit)\n        this.years = [];\n        // Default view mode (select days)\n        this.view = 'days';\n        this.rangeSelectMode = 'startDate';\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Determine the year array\n        /** @type {?} */\n        const now = new Date();\n        /** @type {?} */\n        const start = this.minYear ? Number(this.minYear) : now.getFullYear() - 100;\n        /** @type {?} */\n        const end = this.maxYear ? Number(this.maxYear) : now.getFullYear() + 10;\n        for (let i = start; i <= end; i++) {\n            this.years.push(i);\n        }\n        // Set weekdays / months\n        this.weekdays = this.setupWeekdays();\n        this.months = this.labels.getMonths();\n        // Set labels\n        this.selectedLabel = this.labels.startDate;\n        this.selected2Label = this.labels.endDate;\n        this.updateView(this.model, false, true);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const weekRangeSelectChange = changes['weekRangeSelect'];\n        if (weekRangeSelectChange &&\n            weekRangeSelectChange.currentValue !== weekRangeSelectChange.previousValue &&\n            !weekRangeSelectChange.firstChange) {\n            this.clearRange();\n        }\n        /** @type {?} */\n        const weekStartChanges = changes['weekStart'];\n        if (weekStartChanges && weekStartChanges.currentValue !== weekStartChanges.previousValue && !weekStartChanges.firstChange) {\n            this.weekdays = this.setupWeekdays();\n            this.updateView(this.model, false, false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setupWeekdays() {\n        /** @type {?} */\n        let weekdays = this.labels.getWeekdays();\n        // Weekstart must be 0-6 (Sunday - Saturday)\n        if (!Helpers.isBlank(this.weekStart) && this.weekStart > 0 && this.weekStart <= 6) {\n            /** @type {?} */\n            const newStart = weekdays.splice(this.weekStart);\n            weekdays = [...newStart, ...weekdays];\n        }\n        return weekdays;\n    }\n    /**\n     * @param {?} range\n     * @param {?} day\n     * @param {?} selected\n     * @param {?} selected2\n     * @param {?} hoverDay\n     * @param {?} rangeSelectMode\n     * @param {?} weekRangeSelect\n     * @return {?}\n     */\n    isSelectingRange(range, day, selected, selected2, hoverDay, rangeSelectMode, weekRangeSelect) {\n        if (range && !weekRangeSelect) {\n            /** @type {?} */\n            const isRangeModeEndDate = rangeSelectMode === 'endDate' && (selected && selected2 && isAfter(day, selected2) && isBefore(day, hoverDay));\n            /** @type {?} */\n            const isRangeModeStartDate = rangeSelectMode === 'startDate' && (selected && selected2 && isBefore(day, selected) && isAfter(day, hoverDay));\n            /** @type {?} */\n            const isNotSelected = !selected && selected2 && isBefore(day, selected2) && isAfter(day, hoverDay);\n            /** @type {?} */\n            const isNotSelected2 = selected && !selected2 && isAfter(day, selected) && isBefore(day, hoverDay);\n            return isNotSelected2 || isNotSelected || isRangeModeStartDate || isRangeModeEndDate;\n        }\n        return false;\n    }\n    /**\n     * @param {?} range\n     * @param {?} day\n     * @param {?} selected\n     * @param {?} selected2\n     * @return {?}\n     */\n    isEndFill(range, day, selected, selected2) {\n        if (range && selected2 && selected) {\n            return !isSameDay(selected, selected2) && isSameDay(day, selected2) && isAfter(day, selected);\n        }\n        return false;\n    }\n    /**\n     * @param {?} range\n     * @param {?} day\n     * @param {?} selected\n     * @param {?} selected2\n     * @return {?}\n     */\n    isStartFill(range, day, selected, selected2) {\n        if (range && selected2 && selected) {\n            return !isSameDay(selected, selected2) && isSameDay(day, selected) && isBefore(day, selected2);\n        }\n        return false;\n    }\n    /**\n     * @param {?} range\n     * @param {?} day\n     * @param {?} selected\n     * @param {?} selected2\n     * @return {?}\n     */\n    isFiller(range, day, selected, selected2) {\n        if (range && selected2 && selected) {\n            return ((isAfter(day, selected) && isBefore(day, selected2)) ||\n                isSameDay(day, selected) ||\n                isSameDay(day, selected2));\n        }\n        return false;\n    }\n    /**\n     * @param {?} range\n     * @param {?} day\n     * @param {?} selected\n     * @param {?} selected2\n     * @return {?}\n     */\n    isSelected(range, day, selected, selected2) {\n        if (range) {\n            return (day &&\n                ((selected &&\n                    (day.getDate() === selected.getDate() &&\n                        day.getMonth() === selected.getMonth() &&\n                        day.getFullYear() === selected.getFullYear())) ||\n                    (selected2 &&\n                        (day.getDate() === selected2.getDate() &&\n                            day.getMonth() === selected2.getMonth() &&\n                            day.getFullYear() === selected2.getFullYear()))));\n        }\n        return day.getDate() === selected.getDate() && day.getMonth() === selected.getMonth() && day.getFullYear() === selected.getFullYear();\n    }\n    /**\n     * @param {?} day\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    isDisabled(day, start, end) {\n        return isBefore(day, start) || isAfter(day, end);\n    }\n    /**\n     * @param {?} date\n     * @param {?} fireEvents\n     * @param {?} markedSelected\n     * @return {?}\n     */\n    updateView(date, fireEvents, markedSelected) {\n        if (date && date.startDate === null) {\n            this.clearRange();\n        }\n        else {\n            if (!date) {\n                this.clearRange();\n            }\n            /** @type {?} */\n            let value = date ? new Date(date) : new Date();\n            value = this.removeTime(value);\n            this.month = new Date(value);\n            this.monthLabel = this.labels.formatDateWithFormat(this.month, { month: 'short' });\n            /** @type {?} */\n            const start = new Date(value.getTime());\n            start.setDate(1);\n            this.removeTime(start.setDate(1));\n            this.buildMonth(start, this.month);\n            if (markedSelected) {\n                this.select(null, { date: value }, fireEvents);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setToday() {\n        /** @type {?} */\n        const tmp = new Date();\n        this.updateView(tmp, true, true);\n        // Go back to days\n        this.open(null, 'days');\n    }\n    /**\n     * @return {?}\n     */\n    clearRange() {\n        this.selected = null;\n        this.selectedLabel = this.labels.startDate;\n        this.selected2 = null;\n        this.selected2Label = this.labels.endDate;\n    }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    setMonth(month) {\n        /** @type {?} */\n        const date = this.month ? this.month : new Date();\n        /** @type {?} */\n        const tmp = setMonth(date, month);\n        this.updateView(tmp, true, false);\n        // Go back to days\n        this.open(null, 'days');\n    }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    setYear(year) {\n        /** @type {?} */\n        const date = this.month ? this.month : new Date();\n        /** @type {?} */\n        const tmp = setYear(date, year);\n        this.updateView(tmp, true, false);\n        // Go back to days\n        this.open(null, 'days');\n    }\n    /**\n     * @param {?} event\n     * @param {?} day\n     * @param {?} fireEvents\n     * @return {?}\n     */\n    select(event, day, fireEvents) {\n        Helpers.swallowEvent(event);\n        if (this.range) {\n            if (this.weekRangeSelect) {\n                this.selected = startOfWeek(day.date, { weekStartsOn: this.weekStart });\n                this.selected2 = endOfWeek(day.date, { weekStartsOn: this.weekStart });\n                this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n                    month: 'short',\n                    day: '2-digit',\n                    year: 'numeric',\n                });\n                this.selected2Label = this.labels.formatDateWithFormat(this.selected2, {\n                    month: 'short',\n                    day: '2-digit',\n                    year: 'numeric',\n                });\n                // Make sure to fire this, since we default to the current week selected!\n                if (!fireEvents && this.weekRangeSelect) {\n                    this.fireRangeSelect();\n                }\n            }\n            else if (this.rangeSelectMode === 'startDate') {\n                // SET START DATE\n                this.selected = startOfDay(day.date);\n                this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n                    month: 'short',\n                    day: '2-digit',\n                    year: 'numeric',\n                });\n                if (this.selected2 && isAfter(day.date, this.selected2)) {\n                    // CLEAR END DATE\n                    this.selected2 = null;\n                    this.selected2Label = this.labels.endDate;\n                }\n                if (event) {\n                    this.rangeSelectMode = 'endDate';\n                }\n            }\n            else if (this.rangeSelectMode === 'endDate') {\n                // SET END DATE\n                this.selected2 = endOfDay(day.date);\n                this.selected2Label = this.labels.formatDateWithFormat(this.selected2, {\n                    month: 'short',\n                    day: '2-digit',\n                    year: 'numeric',\n                });\n                if (this.selected && isBefore(day.date, this.selected)) {\n                    // CLEAR START DATE\n                    this.selected = null;\n                    this.selectedLabel = this.labels.startDate;\n                }\n                if (event) {\n                    this.rangeSelectMode = 'startDate';\n                }\n            }\n        }\n        else {\n            this.selected = day.date;\n            this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n                month: 'short',\n                day: '2-digit',\n                year: 'numeric',\n            });\n            this.updateHeading();\n        }\n        if (fireEvents && this.selected) {\n            // Emit our output\n            if (this.range && this.selected && this.selected2) {\n                this.fireRangeSelect();\n                // Also, update the ngModel\n                this._onChange({\n                    startDate: this.selected,\n                    endDate: this.selected2 ? this.selected2 : null,\n                });\n                this.model = {\n                    startDate: this.selected,\n                    endDate: this.selected2 ? this.selected2 : null,\n                };\n            }\n            if (!this.range) {\n                this.onSelect.next({\n                    month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n                    year: this.selected.getFullYear(),\n                    day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n                    date: this.selected,\n                });\n                // Also, update the ngModel\n                this._onChange(this.selected);\n                this.model = this.selected;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    fireRangeSelect() {\n        // Make sure the start date is before the end date\n        if (isBefore(this.selected, this.selected2)) {\n            this.onSelect.next({\n                startDate: {\n                    month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n                    year: this.selected.getFullYear(),\n                    day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n                    date: this.selected,\n                },\n                endDate: {\n                    month: this.labels.formatDateWithFormat(this.selected2, { month: 'long' }),\n                    year: this.selected2.getFullYear(),\n                    day: this.labels.formatDateWithFormat(this.selected2, { weekday: 'long' }),\n                    date: this.selected2,\n                },\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} type\n     * @return {?}\n     */\n    open(event, type) {\n        Helpers.swallowEvent(event);\n        // If they click the toggle two time in a row, close it (go back to days)\n        if (type === this.view) {\n            this.view = 'days';\n        }\n        else {\n            this.view = type;\n        }\n        // Make sure to scroll the selected one into view\n        if (this.view === 'years' || this.view === 'months') {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this.element.nativeElement.querySelector(`.calendar-content.${this.view}`);\n                /** @type {?} */\n                const selectedItem = this.element.nativeElement.querySelector(`.calendar-content.${this.view} .${this.view === 'years' ? 'year' : 'month'}.selected`);\n                if (container && selectedItem) {\n                    container.scrollTop = selectedItem.offsetTop - 100;\n                }\n            }));\n        }\n        this.updateHeading();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    prevMonth(event) {\n        Helpers.swallowEvent(event);\n        /** @type {?} */\n        const tmp = subMonths(this.month, 1);\n        this.updateView(tmp, false, false);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    nextMonth(event) {\n        Helpers.swallowEvent(event);\n        /** @type {?} */\n        const tmp = addMonths(this.month, 1);\n        this.updateView(tmp, false, false);\n    }\n    /**\n     * @return {?}\n     */\n    updateHeading() {\n        if (!this.selected) {\n            return;\n        }\n        this.heading = {\n            month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n            year: this.selected.getFullYear(),\n            day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n            date: this.selected.getDate(),\n        };\n    }\n    /**\n     * Remove the time aspect of the date\n     * @param {?} date\n     * @return {?} with time stripped out\n     */\n    removeTime(date) {\n        /** @type {?} */\n        const ret = new Date(date);\n        ret.setHours(12);\n        ret.setSeconds(0);\n        ret.setMilliseconds(0);\n        return ret;\n    }\n    /**\n     * @param {?} start\n     * @param {?} month\n     * @return {?}\n     */\n    buildMonth(start, month) {\n        // Reset the weeks\n        this.weeks = [];\n        // House keeping variables to know when we are done building the month\n        /** @type {?} */\n        let done = false;\n        /** @type {?} */\n        let date = startOfWeek(start, { weekStartsOn: this.weekStart });\n        /** @type {?} */\n        let monthIndex = date.getMonth();\n        /** @type {?} */\n        let count = 0;\n        while (!done) {\n            // Build the days for the weeks\n            this.weeks.push({ days: this.buildWeek(new Date(date.getTime()), month) });\n            // Increment variables for the next iteration\n            date = addDays(date, 7);\n            done = count++ > 2 && monthIndex !== date.getMonth();\n            monthIndex = date.getMonth();\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    buildWeek(date, month) {\n        // Build out of the days of the week\n        /** @type {?} */\n        const days = [];\n        // Iterate over the days of the week\n        for (let i = 0; i < 7; i++) {\n            // Push a variable on the day array with lots of helpers to make the template easier\n            days.push({\n                name: this.weekdays[i],\n                number: date.getDate(),\n                isToday: isToday(date),\n                date,\n            });\n            // Increment for the next iteration\n            date = addDays(date, 1);\n        }\n        return days;\n    }\n    /**\n     * @param {?} range\n     * @return {?}\n     */\n    toggleRangeSelect(range) {\n        this.rangeSelectMode = range;\n    }\n    /**\n     * @param {?} event\n     * @param {?} day\n     * @return {?}\n     */\n    rangeHover(event, day) {\n        this.hoverDay = day.date;\n    }\n    // ValueAccessor Functions\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        if (Helpers.isDate(model)) {\n            this.updateView(model, false, true);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n}\nNovoDatePickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-date-picker',\n                providers: [DATE_PICKER_VALUE_ACCESSOR],\n                animations: [\n                    trigger('startDateTextState', [\n                        state('startDate', style({\n                            opacity: '1.0',\n                        })),\n                        state('endDate', style({\n                            opacity: '0.6',\n                        })),\n                        transition('startDate <=> endDate', animate('200ms ease-in')),\n                    ]),\n                    trigger('endDateTextState', [\n                        state('startDate', style({\n                            opacity: '0.6',\n                        })),\n                        state('endDate', style({\n                            opacity: '1.0',\n                        })),\n                        transition('startDate <=> endDate', animate('200ms ease-in')),\n                    ]),\n                    trigger('indicatorState', [\n                        state('startDate', style({\n                            transform: 'translateX(0%)',\n                        })),\n                        state('endDate', style({\n                            transform: 'translateX(100%)',\n                        })),\n                        transition('startDate <=> endDate', animate('200ms ease-in')),\n                    ]),\n                ],\n                template: `\n        <div class=\"calendar\">\n            <div class=\"calendar-top\" *ngIf=\"!inline && !range\">\n                <h4 class=\"day\" [attr.data-automation-id]=\"heading?.day\">{{heading?.day}}</h4>\n                <h2 class=\"month\" [attr.data-automation-id]=\"heading?.month\">{{heading?.month}}</h2>\n                <h1 class=\"date\" [attr.data-automation-id]=\"heading?.date\">{{heading?.date}}</h1>\n                <h3 class=\"year\" [attr.data-automation-id]=\"heading?.year\">{{heading?.year}}</h3>\n            </div>\n            <div class=\"date-range-tabs\" *ngIf=\"range\" [class.week-select-mode]=\"weekRangeSelect\">\n                <span class=\"range-tab\" (click)=\"toggleRangeSelect('startDate')\" [@startDateTextState]=\"rangeSelectMode\" data-automation-id=\"calendar-start-date\">{{selectedLabel}}</span>\n                <span class=\"range-tab\" (click)=\"toggleRangeSelect('endDate')\" [@endDateTextState]=\"rangeSelectMode\" data-automation-id=\"calendar-end-date\">{{selected2Label}}</span>\n                <i class=\"indicator\" [@indicatorState]=\"rangeSelectMode\"></i>\n            </div>\n            <div class=\"calendar-header\">\n                <span class=\"previous\" (click)=\"prevMonth($event)\" data-automation-id=\"calendar-previous\"></span>\n                <span class=\"heading\">\n                    <span class=\"month\" (click)=\"open($event, 'months')\" data-automation-id=\"header-month\">{{monthLabel}}</span>\n                    <span class=\"year\" (click)=\"open($event, 'years')\" data-automation-id=\"header-year\">{{month?.getFullYear()}}</span>\n                </span>\n                <span class=\"next\" (click)=\"nextMonth($event)\" data-automation-id=\"calendar-next\"></span>\n            </div>\n            <table class=\"calendar-content days\" cellspacing=\"0\" cellpadding=\"0\" [hidden]=\"!(view=='days')\">\n                <thead>\n                    <tr>\n                        <th *ngFor=\"let day of weekdays\" title=\"{{day}}\" class=\"weekday\" [attr.data-automation-id]=\"day.substr(0, 2)\">{{day.substr(0, 2)}}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let week of weeks\">\n                        <td *ngFor=\"let day of week.days\" [ngClass]=\"{\n                            today: day.isToday,\n                            'notinmonth': day.date.getMonth() !== this.month.getMonth(),\n                            selected: isSelected(range, day.date, selected, selected2),\n                            filler: isFiller(range, day.date, selected, selected2),\n                            startfill: isStartFill(range, day.date, selected, selected2),\n                            endfill: isEndFill(range, day.date, selected, selected2),\n                            'selecting-range': isSelectingRange(range, day.date, selected, selected2, hoverDay, rangeSelectMode, weekRangeSelect)\n                           }\" (mouseover)=\"rangeHover($event, day)\" [attr.data-automation-id]=\"day.number\">\n                            <button class=\"day\" [attr.data-automation-id]=\"day.number\" [disabled]=\"isDisabled(day.date, start, end)\" (click)=\"select($event, day, true)\">{{day.number}}</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <section class=\"calendar-content months\" [hidden]=\"view !== 'months'\">\n                <div *ngFor=\"let month of months;let i = index\" (click)=\"setMonth(i)\">\n                    <div class=\"month\" [ngClass]=\"{selected: i === selected?.getMonth()}\" [attr.data-automation-id]=\"month\">{{month}}</div>\n                </div>\n            </section>\n            <section class=\"calendar-content years\" [hidden]=\"view !== 'years'\">\n                <div *ngFor=\"let year of years\" (click)=\"setYear(year)\">\n                    <div class=\"year\" [ngClass]=\"{selected: year == selected?.getFullYear()}\" [attr.data-automation-id]=\"year\">{{year}}</div>\n                </div>\n            </section>\n            <div class=\"calendar-footer\">\n                <span (click)=\"setToday()\" class=\"today\" data-automation-id=\"calendar-today\">{{ labels.today }}</span>\n            </div>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoDatePickerElement.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: ElementRef }\n];\nNovoDatePickerElement.propDecorators = {\n    minYear: [{ type: Input }],\n    maxYear: [{ type: Input }],\n    start: [{ type: Input }],\n    end: [{ type: Input }],\n    inline: [{ type: Input }],\n    range: [{ type: Input }],\n    weekRangeSelect: [{ type: Input }],\n    weekStart: [{ type: Input }],\n    onSelect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDatePickerElement.prototype.minYear;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.maxYear;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.start;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.end;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.inline;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.range;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.weekRangeSelect;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.weekStart;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.onSelect;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.weekdays;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.months;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.years;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.view;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.heading;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.model;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.month;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.monthLabel;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.weeks;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.selected;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.selectedLabel;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.selected2;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.selected2Label;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.hoverDay;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.rangeSelectMode;\n    /** @type {?} */\n    NovoDatePickerElement.prototype._onChange;\n    /** @type {?} */\n    NovoDatePickerElement.prototype._onTouched;\n    /** @type {?} */\n    NovoDatePickerElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDatePickerElement.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/date-format/DateFormat.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DateFormatService {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} militaryTime\n     * @return {?}\n     */\n    getTimeMask(militaryTime) {\n        /** @type {?} */\n        let mask = [/\\d/, /\\d/, /:/, /\\d/, /\\d/];\n        /** @type {?} */\n        let timeFormatArray = [];\n        /** @type {?} */\n        const timeFormat = this.labels.timeFormatPlaceholderAM.toLowerCase();\n        if (militaryTime) {\n            return mask;\n        }\n        else {\n            timeFormatArray = timeFormat.split('hh:mm');\n            if (timeFormatArray && timeFormatArray.length) {\n                mask = [];\n                for (const timeFormatPart of timeFormatArray) {\n                    if (timeFormatPart === '') {\n                        mask = mask.concat([/\\d/, /\\d|:/, /:|\\d/, /\\d|\\w|\\s/, /\\d|\\s|\\w/]);\n                    }\n                    else if (timeFormatPart.length) {\n                        for (let i = 0; i < timeFormatPart.length; i++) {\n                            mask.push(/\\s|\\w|\\d|\\./);\n                        }\n                    }\n                }\n            }\n        }\n        return mask;\n    }\n    /**\n     * @return {?}\n     */\n    getDateMask() {\n        return [/\\d/, /\\d|\\/|\\.|\\-/, /\\/|\\.|\\-|\\d/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d/, /\\d/];\n    }\n    /**\n     * @param {?=} militaryTime\n     * @return {?}\n     */\n    getDateTimeMask(militaryTime = false) {\n        return [...this.getDateMask(), /\\,?/, /\\s/, ...this.getTimeMask(militaryTime)];\n    }\n    /**\n     * @param {?} militaryTime\n     * @return {?}\n     */\n    getTimePlaceHolder(militaryTime) {\n        if (militaryTime) {\n            return this.labels.timeFormatPlaceholder24Hour;\n        }\n        return this.labels.timeFormatPlaceholderAM;\n    }\n    /**\n     * @param {?} dateString\n     * @return {?}\n     */\n    parseDateString(dateString) {\n        /** @type {?} */\n        let dateFormat = this.labels.dateFormatString();\n        /** @type {?} */\n        const dateFormatRegex = /(\\w+)[\\/|\\.|\\-](\\w+)[\\/|\\.|\\-](\\w+)/gi;\n        /** @type {?} */\n        const dateValueRegex = /(\\d+)[\\/|\\.|\\-](\\d+)[\\/|\\.|\\-](\\d+)/gi;\n        /** @type {?} */\n        let dateFormatTokens;\n        /** @type {?} */\n        let dateValueTokens;\n        /** @type {?} */\n        let year;\n        /** @type {?} */\n        let month;\n        /** @type {?} */\n        let day;\n        /** @type {?} */\n        let date = new Date();\n        if (Helpers.isEmpty(dateFormat)) {\n            // Default to MM/dd/yyyy\n            dateFormat = 'mm/dd/yyyy';\n        }\n        else {\n            dateFormat = dateFormat.toLowerCase();\n        }\n        dateFormatTokens = dateFormatRegex.exec(dateFormat);\n        dateValueTokens = dateValueRegex.exec(dateString);\n        if (dateFormatTokens && dateFormatTokens.length === 4 && dateValueTokens && dateValueTokens.length === 4) {\n            for (let i = 1; i < 4; i++) {\n                if (dateFormatTokens[i].includes('m')) {\n                    month = parseInt(dateValueTokens[i], 10) - 1;\n                }\n                else if (dateFormatTokens[i].includes('d')) {\n                    day = parseInt(dateValueTokens[i], 10);\n                }\n                else {\n                    year = parseInt(dateValueTokens[i], 10);\n                }\n            }\n            if (month >= 0 && month <= 11 && year > 1900 && day > 0 && day <= 31) {\n                date = new Date(year, month, day);\n            }\n        }\n        else if (dateFormatTokens && dateFormatTokens.length === 4 && dateString.length >= 1) {\n            /** @type {?} */\n            const twoTokens = /\\d{1,4}(\\/|\\.|\\-)(\\d{1,2})/.exec(dateString);\n            /** @type {?} */\n            const oneToken = /^(\\d{1,4})$/.exec(dateString);\n            /** @type {?} */\n            const delimiter = /\\w+(\\/|\\.|\\-)\\w+[\\/|\\.|\\-]\\w+/gi.exec(dateFormat);\n            /** @type {?} */\n            const dateStringWithDelimiter = dateString[dateString.length - 1].match(/\\/|\\.|\\-/);\n            if (twoTokens && twoTokens.length === 3 && this.isValidDatePart(twoTokens[2], dateFormatTokens[2]) && !dateStringWithDelimiter) {\n                dateString = `${dateString}${delimiter[1]}`;\n            }\n            else if (oneToken && oneToken.length === 2 && this.isValidDatePart(oneToken[1], dateFormatTokens[1]) && !dateStringWithDelimiter) {\n                dateString = `${dateString}${delimiter[1]}`;\n            }\n        }\n        return [date, dateString];\n    }\n    /**\n     * @param {?} timeString\n     * @param {?} militaryTime\n     * @return {?}\n     */\n    parseTimeString(timeString, militaryTime) {\n        /** @type {?} */\n        const value = new Date();\n        /** @type {?} */\n        let timeStringParts;\n        /** @type {?} */\n        let amFormat = this.labels.timeFormatAM;\n        /** @type {?} */\n        let pmFormat = this.labels.timeFormatPM;\n        if (!(timeString && timeString.includes(':'))) {\n            return [value, timeString];\n        }\n        if (!militaryTime && amFormat && pmFormat) {\n            /** @type {?} */\n            let splits = [];\n            /** @type {?} */\n            let pm = false;\n            amFormat = this.labels.timeFormatAM.toLowerCase();\n            pmFormat = this.labels.timeFormatPM.toLowerCase();\n            timeString = timeString.toLowerCase();\n            if (timeString.includes(amFormat)) {\n                splits = timeString.split(amFormat);\n            }\n            else if (timeString.includes(pmFormat)) {\n                splits = timeString.split(pmFormat);\n                pm = true;\n            }\n            if (splits && splits.length) {\n                for (const item of splits) {\n                    if (item && item.trim().includes(':')) {\n                        timeStringParts = item.trim().split(':');\n                    }\n                }\n            }\n            if (timeStringParts && timeStringParts.length && timeStringParts.length === 2) {\n                /** @type {?} */\n                let hours = parseInt(timeStringParts[0], 10);\n                if (hours === 12 && pm) {\n                    hours = 12;\n                }\n                else if (pm) {\n                    hours = hours + 12;\n                }\n                else if (hours === 12) {\n                    hours = 0;\n                }\n                value.setHours(hours);\n                value.setMinutes(parseInt(timeStringParts[1], 10));\n                value.setSeconds(0);\n            }\n        }\n        else {\n            timeStringParts = /(\\d{1,2}):(\\d{2})/.exec(timeString);\n            if (timeStringParts && timeStringParts.length && timeStringParts.length === 3) {\n                value.setHours(parseInt(timeStringParts[1], 10));\n                value.setMinutes(parseInt(timeStringParts[2], 10));\n                value.setSeconds(0);\n            }\n        }\n        return [value, timeString];\n    }\n    /**\n     * @param {?} dateTimeString\n     * @param {?} militaryTime\n     * @param {?} type\n     * @return {?}\n     */\n    parseString(dateTimeString, militaryTime, type) {\n        switch (type) {\n            case 'datetime':\n                /** @type {?} */\n                const str = dateTimeString.replace(/-/g, '/');\n                /** @type {?} */\n                const parts = str.split(' ');\n                const [dt, dts] = this.parseDateString(parts[0]);\n                if (parts.length > 1) {\n                    const [tm, tms] = this.parseTimeString(parts[1], militaryTime);\n                    return [new Date(dt.setHours(tm.getHours(), tm.getMinutes())), `${dts} ${tms}`];\n                }\n                return [dt, dts];\n            case 'date':\n                return this.parseDateString(dateTimeString);\n            case 'time':\n                return this.parseTimeString(dateTimeString, militaryTime);\n            default:\n                return;\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} format\n     * @return {?}\n     */\n    isValidDatePart(value, format) {\n        /** @type {?} */\n        const datePart = parseInt(value, 10);\n        if (format.includes('m') && (datePart >= 2 || value.length === 2)) {\n            return true;\n        }\n        else if (format.includes('d') && (datePart >= 4 || value.length === 2)) {\n            return true;\n        }\n        else if (format.includes('y') && datePart >= 1000) {\n            return true;\n        }\n        return false;\n    }\n}\nDateFormatService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDateFormatService.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateFormatService.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-picker/DatePickerInput.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst DATE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoDatePickerInputElement)),\n    multi: true,\n};\nclass NovoDatePickerInputElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} _changeDetectorRef\n     * @param {?} dateFormatService\n     */\n    constructor(element, labels, _changeDetectorRef, dateFormatService) {\n        this.element = element;\n        this.labels = labels;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.dateFormatService = dateFormatService;\n        this.formattedValue = '';\n        /**\n         * View -> model callback called when value changes\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * View -> model callback called when autocomplete has been touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.textMaskEnabled = true;\n        this.allowInvalidDate = false;\n        this.disabled = false;\n        this.weekStart = 0;\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.changeEvent = new EventEmitter();\n        this.placeholder = this.labels.dateFormatString().toUpperCase() || this.labels.dateFormatPlaceholder;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.userDefinedFormat = this.format ? !this.format.match(/^(DD\\/MM\\/YYYY|MM\\/DD\\/YYYY)$/g) : false;\n        if (!this.userDefinedFormat && this.textMaskEnabled && !this.allowInvalidDate) {\n            this.maskOptions = this.maskOptions || {\n                mask: this.dateFormatService.getDateMask(),\n                pipe: createAutoCorrectedDatePipe(this.format || this.labels.dateFormatString().toLowerCase()),\n                keepCharPositions: false,\n                guide: true,\n            };\n        }\n        else {\n            this.maskOptions = { mask: false };\n        }\n    }\n    /**\n     * BEGIN: Convenient Panel Methods.\n     * @return {?}\n     */\n    openPanel() {\n        if (!this.disabled) {\n            this.overlay.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.overlay.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlay && this.overlay.panelOpen;\n    }\n    /**\n     * END: Convenient Panel Methods.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n            this._handleEvent(event, true);\n            this.closePanel();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        if (document.activeElement === event.target) {\n            this._handleEvent(event, false);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleBlur(event) {\n        this.blurEvent.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleFocus(event) {\n        this.openPanel();\n        this.focusEvent.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @param {?} blur\n     * @return {?}\n     */\n    _handleEvent(event, blur) {\n        /** @type {?} */\n        const value = ((/** @type {?} */ (event.target))).value;\n        if (value === '') {\n            this.clearValue();\n            this.closePanel();\n        }\n        else {\n            this.formatDate(value, blur);\n            this.openPanel();\n        }\n    }\n    /**\n     * @protected\n     * @param {?} value\n     * @param {?} blur\n     * @return {?}\n     */\n    formatDate(value, blur) {\n        try {\n            const [dateTimeValue, formatted] = this.dateFormatService.parseString(value, false, 'date');\n            if (!isNaN(dateTimeValue.getUTCDate())) {\n                /** @type {?} */\n                const dt = new Date(dateTimeValue);\n                this.dispatchOnChange(dt, blur);\n            }\n            else {\n                this.dispatchOnChange(null, blur);\n            }\n        }\n        catch (err) { }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n    /**\n     * @param {?=} newValue\n     * @param {?=} blur\n     * @param {?=} skip\n     * @return {?}\n     */\n    dispatchOnChange(newValue, blur = false, skip = false) {\n        if (newValue !== this.value) {\n            this._onChange(newValue);\n            this.changeEvent.emit(newValue);\n            if (blur) {\n                !skip && this.writeValue(newValue);\n            }\n            else {\n                !skip && this._setCalendarValue(newValue);\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        this._setCalendarValue(value);\n        this._setFormValue(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setCalendarValue(value) {\n        if (value instanceof Date && this.value instanceof Date) {\n            value = new Date(value).setHours(0, 0, 0, 0);\n        }\n        this.value = value;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setFormValue(value) {\n        if (this.value) {\n            /** @type {?} */\n            const test = this.formatDateValue(this.value);\n            this.formattedValue = test;\n        }\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    setValueAndClose(event) {\n        if (event && event.date) {\n            this.dispatchOnChange(event.date, true);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @return {?}\n     */\n    clearValue() {\n        this.formattedValue = '';\n        this.dispatchOnChange(null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatDateValue(value) {\n        /** @type {?} */\n        const originalValue = value;\n        try {\n            if (!value) {\n                return '';\n            }\n            if (this.userDefinedFormat && isValid(value)) {\n                return format(value, this.format);\n            }\n            if (!(value instanceof Date)) {\n                value = new Date(value);\n            }\n            if (!(isNaN(value.valueOf()) && this.allowInvalidDate)) {\n                return this.labels.formatDateWithFormat(value, {\n                    month: '2-digit',\n                    day: '2-digit',\n                    year: 'numeric',\n                });\n            }\n            else {\n                return originalValue;\n            }\n        }\n        catch (err) {\n            return '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get hasValue() {\n        return !Helpers.isEmpty(this.value);\n    }\n}\nNovoDatePickerInputElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-date-picker-input',\n                providers: [DATE_VALUE_ACCESSOR],\n                template: `\n    <input\n      type=\"text\"\n      [name]=\"name\"\n      [(ngModel)]=\"formattedValue\"\n      [textMask]=\"maskOptions\"\n      [placeholder]=\"placeholder\"\n      (focus)=\"_handleFocus($event)\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      (blur)=\"_handleBlur($event)\"\n      #input\n      data-automation-id=\"date-input\"\n      [disabled]=\"disabled\"\n    />\n    <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-calendar\"></i>\n    <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-date-picker\n        [start]=\"start\"\n        [end]=\"end\"\n        inline=\"true\"\n        (onSelect)=\"setValueAndClose($event)\"\n        [ngModel]=\"value\"\n        [weekStart]=\"weekStart\"\n      ></novo-date-picker>\n    </novo-overlay-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoDatePickerInputElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef },\n    { type: DateFormatService }\n];\nNovoDatePickerInputElement.propDecorators = {\n    name: [{ type: Input }],\n    start: [{ type: Input }],\n    end: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maskOptions: [{ type: Input }],\n    format: [{ type: Input }],\n    textMaskEnabled: [{ type: Input }],\n    allowInvalidDate: [{ type: Input }],\n    disabled: [{ type: HostBinding, args: ['class.disabled',] }, { type: Input }],\n    weekStart: [{ type: Input }],\n    blurEvent: [{ type: Output }],\n    focusEvent: [{ type: Output }],\n    changeEvent: [{ type: Output }],\n    overlay: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.value;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.formattedValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDatePickerInputElement.prototype.userDefinedFormat;\n    /**\n     * View -> model callback called when value changes\n     * @type {?}\n     */\n    NovoDatePickerInputElement.prototype._onChange;\n    /**\n     * View -> model callback called when autocomplete has been touched\n     * @type {?}\n     */\n    NovoDatePickerInputElement.prototype._onTouched;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.name;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.start;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.end;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.placeholder;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.maskOptions;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.format;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.textMaskEnabled;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.allowInvalidDate;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.disabled;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.weekStart;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.blurEvent;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.focusEvent;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.changeEvent;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    NovoDatePickerInputElement.prototype.overlay;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.element;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDatePickerInputElement.prototype._changeDetectorRef;\n    /** @type {?} */\n    NovoDatePickerInputElement.prototype.dateFormatService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-picker/DatePicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDatePickerModule {\n}\nNovoDatePickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoOverlayModule, TextMaskModule],\n                declarations: [NovoDatePickerElement, NovoDatePickerInputElement],\n                exports: [NovoDatePickerElement, NovoDatePickerInputElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cells/data-table-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(columnDef, elementRef, renderer) {\n        super(columnDef, elementRef);\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.role = 'gridcell';\n        this.subscriptions = [];\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-cell');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.cellClass) {\n            this.renderer.addClass(this.elementRef.nativeElement, this.column.cellClass(this.row));\n        }\n        if (this.column.rightAlignCellContent) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'novo-data-table-cell-align-right');\n        }\n        this.calculateWidths();\n        this.subscriptions.push(this.resized.subscribe((/**\n         * @param {?} column\n         * @return {?}\n         */\n        (column) => {\n            if (column === this.column) {\n                this.calculateWidths();\n            }\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        (subscription) => {\n            subscription.unsubscribe();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    calculateWidths() {\n        if (this.column.width) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n        }\n    }\n}\nNovoDataTableCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-cell',\n                template: `\n    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: row, col: column}\"></ng-container>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNovoDataTableCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }],\n    template: [{ type: Input }],\n    column: [{ type: Input }],\n    resized: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableCell.prototype.row;\n    /** @type {?} */\n    NovoDataTableCell.prototype.template;\n    /** @type {?} */\n    NovoDataTableCell.prototype.column;\n    /** @type {?} */\n    NovoDataTableCell.prototype.resized;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCell.prototype.subscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCell.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCell.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cells/data-table-checkbox-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableCheckboxCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} dataTable\n     * @param {?} ref\n     */\n    constructor(columnDef, elementRef, renderer, dataTable, ref) {\n        super(columnDef, elementRef);\n        this.columnDef = columnDef;\n        this.dataTable = dataTable;\n        this.ref = ref;\n        this.role = 'gridcell';\n        this.checked = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-cell');\n        this.selectionSubscription = this.dataTable.state.selectionSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.checked = this.dataTable.isSelected(this.row);\n            this.ref.markForCheck();\n        }));\n        this.resetSubscription = this.dataTable.state.resetSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.checked = false;\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.checked = this.dataTable.isSelected(this.row);\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.dataTable.selectRow(this.row);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n    }\n}\nNovoDataTableCheckboxCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-checkbox-cell',\n                template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\">\n      <input type=\"checkbox\" [checked]=\"checked\">\n      <label>\n        <i [class.bhi-checkbox-empty]=\"!checked\"\n          [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n    `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableCheckboxCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoDataTable },\n    { type: ChangeDetectorRef }\n];\nNovoDataTableCheckboxCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableCheckboxCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableCheckboxCell.prototype.row;\n    /** @type {?} */\n    NovoDataTableCheckboxCell.prototype.checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxCell.prototype.selectionSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxCell.prototype.resetSubscription;\n    /** @type {?} */\n    NovoDataTableCheckboxCell.prototype.columnDef;\n    /** @type {?} */\n    NovoDataTableCheckboxCell.prototype.dataTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxCell.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cells/data-table-expand-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableExpandCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} dataTable\n     * @param {?} ref\n     */\n    constructor(columnDef, elementRef, renderer, dataTable, ref) {\n        super(columnDef, elementRef);\n        this.columnDef = columnDef;\n        this.dataTable = dataTable;\n        this.ref = ref;\n        this.role = 'gridcell';\n        this.expanded = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-cell');\n        this.expandSubscription = this.dataTable.state.expandSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.expanded = this.dataTable.isExpanded(this.row);\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.expanded = this.dataTable.isExpanded(this.row);\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.dataTable.expandRow(this.row);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.expandSubscription) {\n            this.expandSubscription.unsubscribe();\n        }\n    }\n}\nNovoDataTableExpandCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-expand-cell',\n                template: `\n    <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" [class.expanded]=\"expanded\"></i>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableExpandCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoDataTable },\n    { type: ChangeDetectorRef }\n];\nNovoDataTableExpandCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableExpandCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableExpandCell.prototype.row;\n    /** @type {?} */\n    NovoDataTableExpandCell.prototype.expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandCell.prototype.expandSubscription;\n    /** @type {?} */\n    NovoDataTableExpandCell.prototype.columnDef;\n    /** @type {?} */\n    NovoDataTableExpandCell.prototype.dataTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandCell.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/rows/data-table-header-row.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDataTableHeaderRow extends CdkHeaderRow {\n    constructor() {\n        super(...arguments);\n        this.rowClass = 'novo-data-table-header-row';\n        this.fixedHeader = false;\n        this.role = 'row';\n    }\n}\nNovoDataTableHeaderRow.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-header-row',\n                template: CDK_ROW_TEMPLATE,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nNovoDataTableHeaderRow.propDecorators = {\n    rowClass: [{ type: HostBinding, args: ['class',] }],\n    fixedHeader: [{ type: HostBinding, args: ['class.fixed-header',] }, { type: Input }],\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableHeaderRow.prototype.rowClass;\n    /** @type {?} */\n    NovoDataTableHeaderRow.prototype.fixedHeader;\n    /** @type {?} */\n    NovoDataTableHeaderRow.prototype.role;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/rows/data-table-row.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDataTableRow extends CdkRow {\n    constructor() {\n        super(...arguments);\n        this.rowClass = 'novo-data-table-row';\n        this.role = 'row';\n    }\n}\nNovoDataTableRow.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-row',\n                template: CDK_ROW_TEMPLATE,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nNovoDataTableRow.propDecorators = {\n    rowClass: [{ type: HostBinding, args: ['class',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    id: [{ type: HostBinding, args: ['attr.id',] }, { type: Input }],\n    dataAutomationId: [{ type: HostBinding, args: ['attr.data-automation-id',] }, { type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableRow.prototype.rowClass;\n    /** @type {?} */\n    NovoDataTableRow.prototype.role;\n    /** @type {?} */\n    NovoDataTableRow.prototype.id;\n    /** @type {?} */\n    NovoDataTableRow.prototype.dataAutomationId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cell-headers/data-table-expand-header-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableExpandHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} dataTable\n     * @param {?} ref\n     */\n    constructor(columnDef, elementRef, renderer, dataTable, ref) {\n        super(columnDef, elementRef);\n        this.dataTable = dataTable;\n        this.ref = ref;\n        this.role = 'columnheader';\n        this.expanded = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-header-cell');\n        this.expandSubscription = this.dataTable.state.expandSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.expanded = this.dataTable.allCurrentRowsExpanded();\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.expandSubscription) {\n            this.expandSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    expandAll() {\n        this.dataTable.expandRows(!this.expanded);\n    }\n}\nNovoDataTableExpandHeaderCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-expand-header-cell',\n                template: `\n    <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" (click)=\"expandAll()\" [class.expanded]=\"expanded\"></i>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableExpandHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoDataTable },\n    { type: ChangeDetectorRef }\n];\nNovoDataTableExpandHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableExpandHeaderCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableExpandHeaderCell.prototype.expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandHeaderCell.prototype.expandSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandHeaderCell.prototype.dataTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandHeaderCell.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cell-headers/data-table-checkbox-header-cell.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableCheckboxHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} dataTable\n     * @param {?} ref\n     */\n    constructor(columnDef, elementRef, renderer, dataTable, ref) {\n        super(columnDef, elementRef);\n        this.dataTable = dataTable;\n        this.ref = ref;\n        this.role = 'columnheader';\n        this.checked = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-header-cell');\n        this.selectionSubscription = this.dataTable.state.selectionSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.checked = this.dataTable.allCurrentRowsSelected();\n            this.ref.markForCheck();\n        }));\n        this.paginationSubscription = this.dataTable.state.paginationSource.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (event.isPageSizeChange) {\n                this.checked = false;\n                this.dataTable.selectRows(false);\n            }\n            else {\n                this.checked = this.dataTable.allCurrentRowsSelected();\n            }\n            this.ref.markForCheck();\n        }));\n        this.resetSubscription = this.dataTable.state.resetSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.checked = false;\n            this.ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.dataTable.selectRows(!this.checked);\n    }\n}\nNovoDataTableCheckboxHeaderCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-checkbox-header-cell',\n                template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\">\n      <input type=\"checkbox\" [checked]=\"checked\">\n      <label>\n        <i [class.bhi-checkbox-empty]=\"!checked\"\n          [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTableCheckboxHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoDataTable },\n    { type: ChangeDetectorRef }\n];\nNovoDataTableCheckboxHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableCheckboxHeaderCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableCheckboxHeaderCell.prototype.checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxHeaderCell.prototype.selectionSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxHeaderCell.prototype.paginationSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxHeaderCell.prototype.resetSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxHeaderCell.prototype.dataTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableCheckboxHeaderCell.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/cell-headers/data-table-header-cell.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(columnDef, elementRef, renderer) {\n        super(columnDef, elementRef);\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.role = 'columnheader';\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-data-table-header-cell');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.width) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n        }\n    }\n}\nNovoDataTableHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-data-table-header-cell',\n            },] }\n];\n/** @nocollapse */\nNovoDataTableHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNovoDataTableHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    column: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableHeaderCell.prototype.role;\n    /** @type {?} */\n    NovoDataTableHeaderCell.prototype.column;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableHeaderCell.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableHeaderCell.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/pagination/data-table-pagination.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_PAGES_DISPLAYED = 5;\n/**\n * @template T\n */\nclass NovoDataTablePagination {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} labels\n     * @param {?} state\n     */\n    constructor(changeDetectorRef, labels, state) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.labels = labels;\n        this.state = state;\n        this.theme = 'standard';\n        this._page = 0;\n        this._pageSizeOptions = [];\n        this._length = 0;\n        this.pageChange = new EventEmitter();\n        this.resetSubscription = this.state.resetSource.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.page = 0;\n            this.changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    set page(page) {\n        this._page = page;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.state.page = this._page;\n    }\n    /**\n     * @return {?}\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    set pageSize(pageSize) {\n        this._pageSize = pageSize;\n        this.updateDisplayedPageSizeOptions();\n        this.state.pageSize = this._pageSize;\n    }\n    /**\n     * @return {?}\n     */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    /**\n     * @param {?} pageSizeOptions\n     * @return {?}\n     */\n    set pageSizeOptions(pageSizeOptions) {\n        this._pageSizeOptions = pageSizeOptions;\n        this.updateDisplayedPageSizeOptions();\n    }\n    /**\n     * @return {?}\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * @param {?} length\n     * @return {?}\n     */\n    set length(length) {\n        this._length = length;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this.updateDisplayedPageSizeOptions();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.resetSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    selectPage(page) {\n        this.page = page;\n        this.emitPageEvent();\n    }\n    /**\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        this.page++;\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.emitPageEvent();\n    }\n    /**\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        this.page--;\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.emitPageEvent();\n    }\n    /**\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.page >= 1 && this.pageSize !== 0;\n    }\n    /**\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n        return this.page < numberOfPages && this.pageSize !== 0;\n    }\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    changePageSize(pageSize) {\n        this.page = 0;\n        this.pageSize = pageSize;\n        this.emitPageEvent(true);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        if (!this.displayedPageSizeOptions) {\n            this.displayedPageSizeOptions = [];\n            this.pageSizeOptions.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                if (option.hasOwnProperty('value')) {\n                    this.displayedPageSizeOptions.push(option);\n                }\n                else {\n                    this.displayedPageSizeOptions.push({\n                        value: option,\n                        label: option,\n                    });\n                }\n            }));\n        }\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.changeDetectorRef.detectChanges();\n    }\n    /**\n     * @private\n     * @param {?=} isPageSizeChange\n     * @return {?}\n     */\n    emitPageEvent(isPageSizeChange = false) {\n        /** @type {?} */\n        const event = {\n            page: this.page,\n            pageSize: this.pageSize,\n            length: this.length,\n            filter: this.state.filter,\n            sort: this.state.sort,\n        };\n        this.pageChange.next(event);\n        this.state.page = this.page;\n        this.state.pageSize = this.pageSize;\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.state.updates.next(event);\n        this.state.onPaginationChange(isPageSizeChange, this.pageSize);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.pageSize < 1 ? 1 : Math.ceil(this.length / this.pageSize);\n        return Math.max(totalPages || 0, 1);\n    }\n    /**\n     * @private\n     * @param {?} number\n     * @param {?} text\n     * @param {?} isActive\n     * @return {?}\n     */\n    makePage(number, text, isActive) {\n        return {\n            number,\n            text,\n            active: isActive,\n        };\n    }\n    /**\n     * @private\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = MAX_PAGES_DISPLAYED < totalPages;\n        // Recompute if maxPagesDisplayed\n        if (isMaxSized) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(MAX_PAGES_DISPLAYED / 2), 1);\n            endPage = startPage + MAX_PAGES_DISPLAYED - 1;\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n                endPage = totalPages;\n                startPage = endPage - MAX_PAGES_DISPLAYED + 1;\n            }\n        }\n        // Add page number links\n        for (let number = startPage; number <= endPage; number++) {\n            /** @type {?} */\n            const page = this.makePage(number, number.toString(), number === currentPage);\n            pages.push(page);\n        }\n        return pages;\n    }\n}\nNovoDataTablePagination.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-data-table-pagination',\n                template: `\n      <ng-container *ngIf=\"theme === 'basic' || theme === 'basic-wide'\">\n        <div class=\"novo-data-table-pagination-size\">\n            <novo-tiles *ngIf=\"displayedPageSizeOptions.length > 1\"\n                        [(ngModel)]=\"pageSize\"\n                        [options]=\"displayedPageSizeOptions\"\n                        (onChange)=\"changePageSize($event)\"\n                        data-automation-id=\"novo-data-table-pagination-tiles\">\n            </novo-tiles>\n            <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n        </div>\n\n        <div class=\"novo-data-table-range-label-long\" data-automation-id=\"novo-data-table-pagination-range-label-long\">\n            {{ longRangeLabel }}\n        </div>\n        <div class=\"novo-data-table-range-label-short\" data-automation-id=\"novo-data-table-pagination-range-label-short\">\n            {{ shortRangeLabel }}\n        </div>\n        <span class=\"spacer novo-data-table-spacer\" *ngIf=\"theme === 'basic-wide'\"></span>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-data-table-pagination-navigation-previous\"\n                (click)=\"previousPage()\"\n                icon=\"previous\"\n                side=\"left\"\n                [disabled]=\"!hasPreviousPage()\"\n                data-automation-id=\"novo-data-table-pagination-previous\">\n            <span>{{ labels.previous }}</span>\n        </button>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-data-table-pagination-navigation-next\"\n                (click)=\"nextPage()\"\n                icon=\"next\"\n                side=\"right\"\n                [disabled]=\"!hasNextPage()\"\n                data-automation-id=\"novo-data-table-pagination-next\">\n            <span>{{ labels.next }}</span>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"theme === 'standard'\">\n        <h5 class=\"rows\">{{ labels.itemsPerPage }}</h5>\n        <novo-select\n          [options]=\"displayedPageSizeOptions\"\n          [placeholder]=\"labels.select\"\n          [(ngModel)]=\"pageSize\"\n          (onSelect)=\"changePageSize($event.selected)\"\n          data-automation-id=\"pager-select\"\n          [attr.data-feature-id]=\"dataFeatureId\">\n        </novo-select>\n        <span class=\"spacer\"></span>\n        <ul class=\"pager\" data-automation-id=\"pager\">\n            <li class=\"page\" (click)=\"selectPage(page - 1)\" [ngClass]=\"{ 'disabled': page === 0 }\"><i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i></li>\n            <li class=\"page\" [ngClass]=\"{active: p.number === page + 1}\" *ngFor=\"let p of pages\" (click)=\"selectPage(p.number - 1)\">{{ p.text }}</li>\n            <li class=\"page\" (click)=\"selectPage(page + 1)\" [ngClass]=\"{ 'disabled': page + 1 === totalPages }\"><i class=\"bhi-next\" data-automation-id=\"pager-next\"></i></li>\n        </ul>\n      </ng-container>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoDataTablePagination.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoLabelService },\n    { type: DataTableState }\n];\nNovoDataTablePagination.propDecorators = {\n    theme: [{ type: HostBinding, args: ['class',] }, { type: Input }],\n    page: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    dataFeatureId: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    length: [{ type: Input }],\n    pageChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTablePagination.prototype.theme;\n    /** @type {?} */\n    NovoDataTablePagination.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype._pageSize;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.dataFeatureId;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype._pageSizeOptions;\n    /** @type {?} */\n    NovoDataTablePagination.prototype._length;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.pageChange;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.displayedPageSizeOptions;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.longRangeLabel;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.shortRangeLabel;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.pages;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype.resetSubscription;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.totalPages;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype.changeDetectorRef;\n    /** @type {?} */\n    NovoDataTablePagination.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTablePagination.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table.pipes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} value\n * @param {?} col\n * @return {?}\n */\nfunction interpolateCell(value, col) {\n    if (col.format) {\n        return Helpers.interpolateWithFallback(col.format, value);\n    }\n    return value;\n}\n/**\n * @template T\n */\nclass DataTableInterpolatePipe {\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            return interpolateCell(value, column);\n        }\n        return '';\n    }\n}\nDataTableInterpolatePipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableInterpolate',\n                pure: true,\n            },] }\n];\n/**\n * @template T\n */\nclass DateTableDateRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            return column.format ? value : this.labels.formatDate(interpolateCell(value, column));\n        }\n        return '';\n    }\n}\nDateTableDateRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableDateRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDateTableDateRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateTableDateRendererPipe.prototype.labels;\n}\n/**\n * @template T\n */\nclass DateTableDateTimeRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            return column.format ? value : this.labels.formatDateShort(interpolateCell(value, column));\n        }\n        return '';\n    }\n}\nDateTableDateTimeRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableDateTimeRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDateTableDateTimeRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateTableDateTimeRendererPipe.prototype.labels;\n}\n/**\n * @template T\n */\nclass DateTableTimeRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            return column.format ? value : this.labels.formatTime(interpolateCell(value, column));\n        }\n        return '';\n    }\n}\nDateTableTimeRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableTimeRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDateTableTimeRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateTableTimeRendererPipe.prototype.labels;\n}\n/**\n * @template T\n */\nclass DateTableNumberRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @param {?=} isPercent\n     * @return {?}\n     */\n    transform(value, column, isPercent = false) {\n        if (!Helpers.isEmpty(value)) {\n            /** @type {?} */\n            let val = interpolateCell(value, column);\n            if (isPercent && Helpers.isNumber(val)) {\n                val = `${Number(val) * 100}`;\n            }\n            return `${this.labels.formatNumber(val)}${isPercent ? '%' : ''}`;\n        }\n        return '';\n    }\n}\nDateTableNumberRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableNumberRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDateTableNumberRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateTableNumberRendererPipe.prototype.labels;\n}\n/**\n * @template T\n */\nclass DataTableBigDecimalRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            /** @type {?} */\n            const val = interpolateCell(value, column);\n            return this.labels.formatBigDecimal(Number(val), column.configuration);\n        }\n        return '';\n    }\n}\nDataTableBigDecimalRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableBigDecimalRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDataTableBigDecimalRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBigDecimalRendererPipe.prototype.labels;\n}\n/**\n * @template T\n */\nclass DateTableCurrencyRendererPipe {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n    }\n    /**\n     * @param {?} value\n     * @param {?} column\n     * @return {?}\n     */\n    transform(value, column) {\n        if (!Helpers.isEmpty(value)) {\n            /** @type {?} */\n            const val = interpolateCell(value, column);\n            return this.labels.formatCurrency(Number(val));\n        }\n        return '';\n    }\n}\nDateTableCurrencyRendererPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'dataTableCurrencyRenderer',\n                pure: true,\n            },] }\n];\n/** @nocollapse */\nDateTableCurrencyRendererPipe.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DateTableCurrencyRendererPipe.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table-expand.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NovoDataTableExpandDirective {\n    /**\n     * @param {?} vcRef\n     * @param {?} state\n     * @param {?} dataTable\n     */\n    constructor(vcRef, state, dataTable) {\n        this.vcRef = vcRef;\n        this.state = state;\n        this.dataTable = dataTable;\n        this.shouldExpandAllRows = (/**\n         * @param {?} targetId\n         * @return {?}\n         */\n        (targetId) => targetId === undefined);\n        this.shouldExpandOneRow = (/**\n         * @param {?} targetId\n         * @return {?}\n         */\n        (targetId) => targetId === ((/** @type {?} */ (((/** @type {?} */ (this.row)))))).id);\n        this.subscription = this.state.expandSource.subscribe((/**\n         * @param {?=} targetId\n         * @return {?}\n         */\n        (targetId) => {\n            if (this.shouldExpandAllRows(targetId) || this.shouldExpandOneRow(targetId)) {\n                if (dataTable.isExpanded(this.row)) {\n                    this.render();\n                }\n                else {\n                    this.clear();\n                }\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        if (((/** @type {?} */ (event.target))).hasAttribute('novo-data-table-expander')) {\n            Helpers.swallowEvent(event);\n            this.dataTable.expandRow(this.row);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    clear() {\n        this.vcRef.clear();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    render() {\n        this.vcRef.clear();\n        if (this.template && this.row) {\n            this.vcRef.createEmbeddedView(this.template, { $implicit: this.row });\n        }\n    }\n}\nNovoDataTableExpandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoDataTableExpand]',\n            },] }\n];\n/** @nocollapse */\nNovoDataTableExpandDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: DataTableState },\n    { type: NovoDataTable }\n];\nNovoDataTableExpandDirective.propDecorators = {\n    row: [{ type: Input }],\n    template: [{ type: Input, args: ['novoDataTableExpand',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDataTableExpandDirective.prototype.row;\n    /** @type {?} */\n    NovoDataTableExpandDirective.prototype.template;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandDirective.prototype.subscription;\n    /** @type {?} */\n    NovoDataTableExpandDirective.prototype.shouldExpandAllRows;\n    /** @type {?} */\n    NovoDataTableExpandDirective.prototype.shouldExpandOneRow;\n    /** @type {?} */\n    NovoDataTableExpandDirective.prototype.vcRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandDirective.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDataTableExpandDirective.prototype.dataTable;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/data-table.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDataTableModule {\n}\nNovoDataTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    NovoDatePickerModule,\n                    CdkTableModule,\n                    CommonModule,\n                    FormsModule,\n                    NovoButtonModule,\n                    NovoDropdownModule,\n                    NovoFormExtrasModule,\n                    NovoLoadingModule,\n                    NovoTilesModule,\n                    NovoSearchBoxModule,\n                    NovoCommonModule,\n                    NovoSelectModule,\n                    NovoTooltipModule,\n                ],\n                declarations: [\n                    DataTableInterpolatePipe,\n                    DateTableDateRendererPipe,\n                    DateTableCurrencyRendererPipe,\n                    DateTableDateTimeRendererPipe,\n                    DateTableNumberRendererPipe,\n                    DateTableTimeRendererPipe,\n                    DataTableBigDecimalRendererPipe,\n                    NovoDataTableCellHeader,\n                    NovoDataTableSortFilter,\n                    NovoDataTableHeaderCell,\n                    NovoDataTableCell,\n                    NovoDataTableHeaderRow,\n                    NovoDataTableRow,\n                    NovoDataTablePagination,\n                    NovoDataTableCheckboxCell,\n                    NovoDataTableCheckboxHeaderCell,\n                    NovoDataTableExpandCell,\n                    NovoDataTableExpandHeaderCell,\n                    NovoDataTable,\n                    NovoDataTableExpandDirective,\n                    NovoDataTableClearButton,\n                ],\n                providers: [DataTableState],\n                exports: [\n                    NovoDataTable,\n                    DataTableInterpolatePipe,\n                    DateTableDateRendererPipe,\n                    DateTableCurrencyRendererPipe,\n                    DateTableDateTimeRendererPipe,\n                    DateTableNumberRendererPipe,\n                    DateTableTimeRendererPipe,\n                    DataTableBigDecimalRendererPipe,\n                    NovoDataTableClearButton,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/data-table/services/remote-data-table.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template T\n */\nclass RemoteDataTableService {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?} page\n     * @param {?} pageSize\n     * @param {?=} globalSearch\n     * @param {?=} outsideFilter\n     * @return {?}\n     */\n    RemoteDataTableService.prototype.getTableResults = function (sort, filter, page, pageSize, globalSearch, outsideFilter) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-time-picker/DateTimePicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst DATE_TIME_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoDateTimePickerElement)),\n    multi: true,\n};\nclass NovoDateTimePickerElement {\n    /**\n     * @param {?} labels\n     * @param {?} element\n     */\n    constructor(labels, element) {\n        this.labels = labels;\n        this.element = element;\n        this.weekStart = 0;\n        // Select callback for output\n        this.onSelect = new EventEmitter(false);\n        this.componentTabState = 'date';\n        this.datePickerValue = new Date();\n        this.timePickerValue = new Date();\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} tab\n     * @return {?}\n     */\n    toggleView(tab) {\n        this.componentTabState = tab;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setDateLabels(value) {\n        this.selectedLabel = this.labels.formatDateWithFormat(value, {\n            month: 'short',\n            day: '2-digit',\n            year: 'numeric',\n        });\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setTimeLabels(value) {\n        /** @type {?} */\n        let hours = value.getHours();\n        /** @type {?} */\n        const minutes = value.getMinutes();\n        this.meridian = value.toLocaleTimeString().slice(-2);\n        if (!this.military) {\n            hours = this.meridian === 'PM' && hours > 12 ? hours - 12 : hours;\n            // Special case for 12\n            if (this.meridian === 'PM' && hours === 24) {\n                hours = 12;\n            }\n            else if (this.meridian === 'AM' && hours === 0) {\n                hours = 12;\n            }\n        }\n        this.hours = hours.toString();\n        this.minutes = minutes.toString().length === 1 ? `0${minutes.toString()}` : minutes.toString();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDateSelected(event) {\n        this.datePickerValue = event.date;\n        this.model = this.createFullDateValue(this.datePickerValue, this.timePickerValue);\n        this.setDateLabels(this.model);\n        this.onSelect.emit({ date: this.model });\n        this._onChange(this.model);\n        this.toggleView('time');\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onTimeSelected(event) {\n        this.timePickerValue = event.date;\n        this.model = this.createFullDateValue(this.model, this.timePickerValue);\n        this.setTimeLabels(this.model);\n        this.onSelect.emit({ date: this.model });\n        this._onChange(this.model);\n    }\n    /**\n     * @param {?} datePickerValue\n     * @param {?} timePickerValue\n     * @return {?}\n     */\n    createFullDateValue(datePickerValue, timePickerValue) {\n        return setMilliseconds(setSeconds(setMinutes(setHours(datePickerValue, getHours(timePickerValue)), getMinutes(timePickerValue)), getSeconds(timePickerValue)), getMilliseconds(timePickerValue));\n    }\n    // ValueAccessor Functions\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        if (Helpers.isEmpty(model)) {\n            this.model = new Date();\n        }\n        else if (!isNaN(model)) {\n            this.model = new Date(model);\n        }\n        this.datePickerValue = this.model;\n        this.timePickerValue = this.model;\n        if (Helpers.isDate(this.model)) {\n            this.setDateLabels(this.model);\n            this.setTimeLabels(this.model);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n}\nNovoDateTimePickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-date-time-picker',\n                providers: [DATE_TIME_PICKER_VALUE_ACCESSOR],\n                animations: [\n                    trigger('dateTextState', [\n                        state('date', style({\n                            opacity: '1.0',\n                        })),\n                        state('time', style({\n                            opacity: '0.6',\n                        })),\n                        transition('date <=> time', animate('200ms ease-in')),\n                    ]),\n                    trigger('timeTextState', [\n                        state('date', style({\n                            opacity: '0.6',\n                        })),\n                        state('time', style({\n                            opacity: '1.0',\n                        })),\n                        transition('date <=> time', animate('200ms ease-in')),\n                    ]),\n                    trigger('indicatorState', [\n                        state('date', style({\n                            transform: 'translateX(0%)',\n                        })),\n                        state('time', style({\n                            transform: 'translateX(100%)',\n                        })),\n                        transition('date <=> time', animate('200ms ease-in')),\n                    ]),\n                    trigger('containerState', [\n                        state('date', style({\n                            transform: 'translateX(0%)',\n                        })),\n                        state('time', style({\n                            transform: 'translateX(-100%)',\n                        })),\n                        transition('date <=> time', animate('200ms ease-in')),\n                    ]),\n                ],\n                template: `\n    <div class=\"date-time-container\">\n      <div class=\"date-time-tabs\">\n        <span\n          class=\"date-tab\"\n          (click)=\"toggleView('date')\"\n          [@dateTextState]=\"componentTabState\"\n          data-automation-id=\"novo-date-time-date-tab\"\n          >{{ selectedLabel }}</span\n        >\n        <span\n          class=\"time-tab\"\n          (click)=\"toggleView('time')\"\n          [@timeTextState]=\"componentTabState\"\n          data-automation-id=\"novo-date-time-time-tab\"\n        >\n          <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{ hours }}</span\n          >:<span class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{ minutes }}</span>\n          <span *ngIf=\"!military\" class=\"meridian\"> {{ meridian }}</span>\n        </span>\n        <i class=\"date-time-indicator\" [@indicatorState]=\"componentTabState\"></i>\n      </div>\n      <div class=\"view-container\" [@containerState]=\"componentTabState\">\n        <div class=\"calendar\">\n          <novo-date-picker\n            (onSelect)=\"onDateSelected($event)\"\n            [(ngModel)]=\"model\"\n            inline=\"true\"\n            [minYear]=\"minYear\"\n            [maxYear]=\"maxYear\"\n            [start]=\"start\"\n            [end]=\"end\"\n            [weekStart]=\"weekStart\"\n          ></novo-date-picker>\n        </div>\n        <div class=\"time-picker\">\n          <novo-time-picker (onSelect)=\"onTimeSelected($event)\" [(ngModel)]=\"model\" [military]=\"military\" inline=\"true\"></novo-time-picker>\n        </div>\n      </div>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoDateTimePickerElement.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: ElementRef }\n];\nNovoDateTimePickerElement.propDecorators = {\n    minYear: [{ type: Input }],\n    maxYear: [{ type: Input }],\n    start: [{ type: Input }],\n    end: [{ type: Input }],\n    military: [{ type: Input }],\n    weekStart: [{ type: Input }],\n    onSelect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.minYear;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.maxYear;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.start;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.end;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.military;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.weekStart;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.onSelect;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.componentTabState;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.selectedLabel;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.hours;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.minutes;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.meridian;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.datePickerValue;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.timePickerValue;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.model;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype._onChange;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype._onTouched;\n    /** @type {?} */\n    NovoDateTimePickerElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDateTimePickerElement.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-time-picker/DateTimePickerInput.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst DATE_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoDateTimePickerInputElement)),\n    multi: true,\n};\nclass NovoDateTimePickerInputElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, labels, _changeDetectorRef) {\n        this.element = element;\n        this.labels = labels;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * View -> model callback called when value changes\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * View -> model callback called when autocomplete has been touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.military = false;\n        this.disabled = false;\n        this.weekStart = 0;\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.changeEvent = new EventEmitter();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.datePart = isDate(value) ? parse(value) : value;\n        this.timePart = isDate(value) ? parse(value) : value;\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    updateDate(event) {\n        this.datePart = event;\n        this.checkParts();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    updateTime(event) {\n        this.timePart = event;\n        this.checkParts();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleBlur(event) {\n        this.blurEvent.emit(event);\n        this.changeEvent.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleFocus(event) {\n        this.focusEvent.emit(event);\n    }\n    /**\n     * @return {?}\n     */\n    checkParts() {\n        try {\n            if (this.datePart instanceof Date && this.timePart instanceof Date) {\n                this.dispatchOnChange(new Date(this.datePart.getFullYear(), this.datePart.getMonth(), this.datePart.getDate(), this.timePart.getHours(), this.timePart.getMinutes()));\n            }\n            else if (this.datePart instanceof Date) {\n                this.timePart = new Date(this.datePart.getFullYear(), this.datePart.getMonth(), this.datePart.getDate(), 12, 0);\n                this.dispatchOnChange(new Date(this.datePart.getFullYear(), this.datePart.getMonth(), this.datePart.getDate(), this.timePart.getHours(), this.timePart.getMinutes()));\n            }\n            else {\n                this.dispatchOnChange(null);\n            }\n        }\n        catch (err) {\n            // Date not valid\n            this.dispatchOnChange(null);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n    /**\n     * @param {?=} newValue\n     * @return {?}\n     */\n    dispatchOnChange(newValue) {\n        if (newValue !== this.value) {\n            this._onChange(newValue);\n            this._setTriggerValue(newValue);\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        this.value = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    setValue(event) {\n        if (event && event.date) {\n            this.dispatchOnChange(event.date);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    setValueAndClose(event) {\n        this.setValue(event);\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @return {?}\n     */\n    clearValue() {\n        this.dispatchOnChange(null);\n    }\n    /**\n     * @return {?}\n     */\n    get hasValue() {\n        return !Helpers.isEmpty(this.value);\n    }\n}\nNovoDateTimePickerInputElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-date-time-picker-input',\n                providers: [DATE_VALUE_ACCESSOR$1],\n                template: `\n    <novo-date-picker-input\n      [ngModel]=\"datePart\"\n      (ngModelChange)=\"updateDate($event)\"\n      [start]=\"start\"\n      [end]=\"end\"\n      [maskOptions]=\"maskOptions\"\n      (blurEvent)=\"handleBlur($event)\"\n      (focusEvent)=\"handleFocus($event)\"\n      [disabled]=\"disabled\"\n      [weekStart]=\"weekStart\"\n    ></novo-date-picker-input>\n    <novo-time-picker-input\n      [ngModel]=\"timePart\"\n      (ngModelChange)=\"updateTime($event)\"\n      [military]=\"military\"\n      (blurEvent)=\"handleBlur($event)\"\n      (focusEvent)=\"handleFocus($event)\"\n      [disabled]=\"disabled\"\n    ></novo-time-picker-input>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoDateTimePickerInputElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nNovoDateTimePickerInputElement.propDecorators = {\n    name: [{ type: Input }],\n    start: [{ type: Input }],\n    end: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maskOptions: [{ type: Input }],\n    military: [{ type: Input }],\n    disabled: [{ type: Input }],\n    format: [{ type: Input }],\n    weekStart: [{ type: Input }],\n    blurEvent: [{ type: Output }],\n    focusEvent: [{ type: Output }],\n    changeEvent: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.value;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.datePart;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.timePart;\n    /**\n     * View -> model callback called when value changes\n     * @type {?}\n     */\n    NovoDateTimePickerInputElement.prototype._onChange;\n    /**\n     * View -> model callback called when autocomplete has been touched\n     * @type {?}\n     */\n    NovoDateTimePickerInputElement.prototype._onTouched;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.name;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.start;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.end;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.placeholder;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.maskOptions;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.military;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.disabled;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.format;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.weekStart;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.blurEvent;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.focusEvent;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.changeEvent;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.element;\n    /** @type {?} */\n    NovoDateTimePickerInputElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDateTimePickerInputElement.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/time-picker/TimePicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst TIME_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoTimePickerElement)),\n    multi: true,\n};\nclass NovoTimePickerElement {\n    constructor() {\n        this.military = false;\n        this.analog = false;\n        this.inline = false;\n        this.onSelect = new EventEmitter();\n        this.hours = 12;\n        this.minutes = 0;\n        this.value = null;\n        this.increments = [];\n        this.MERIDIANS = ['am', 'pm'];\n        this.MINUTES = ['05', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '00'];\n        this.HOURS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} arr\n     * @return {?}\n     */\n    flatten(arr) {\n        return Array.prototype.concat(...arr);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.military) {\n            this.HOURS = ['0', ...this.HOURS, '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\n            this.increments = this.flatten([...this.HOURS.map((/**\n                 * @param {?} hour\n                 * @return {?}\n                 */\n                (hour) => [`${hour}:00`, `${hour}:15`, `${hour}:30`, `${hour}:45`]))]);\n        }\n        else {\n            /** @type {?} */\n            const hours = ['12', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11'];\n            this.increments = this.flatten([\n                ...hours.map((/**\n                 * @param {?} hour\n                 * @return {?}\n                 */\n                (hour) => [`${hour}:00 AM`, `${hour}:15 AM`, `${hour}:30 AM`, `${hour}:45 AM`])),\n                ...hours.map((/**\n                 * @param {?} hour\n                 * @return {?}\n                 */\n                (hour) => [`${hour}:00 PM`, `${hour}:15 PM`, `${hour}:30 PM`, `${hour}:45 PM`])),\n            ]);\n        }\n        this.ngOnChanges();\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this.model) {\n            this.init(this.model, false);\n        }\n        else {\n            this.selected = null;\n            this.init(new Date(), false);\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} dispatch\n     * @return {?}\n     */\n    init(value, dispatch) {\n        /** @type {?} */\n        const _value = new Date(value);\n        /** @type {?} */\n        let hours = _value.getHours();\n        /** @type {?} */\n        let minutes = _value.getMinutes();\n        if (!this.military) {\n            this.meridian = hours >= 12 ? 'pm' : 'am';\n            hours = hours % 12;\n            hours = hours || 12;\n        }\n        minutes = minutes < 10 ? `0${minutes}` : minutes;\n        this.setHours(null, hours, dispatch);\n        this.setMinutes(null, minutes, dispatch);\n        this.checkBetween(minutes);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    checkBetween(value) {\n        this.inBetween = this.MINUTES.indexOf(String(value)) < 0;\n    }\n    /**\n     * @param {?} event\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(event, value) {\n        Helpers.swallowEvent(event);\n        this.selected = value;\n        const [time, meridian] = value.split(' ');\n        const [hours, minutes] = time.split(':');\n        this.hours = hours;\n        this.minutes = minutes;\n        this.meridian = meridian;\n        this.dispatchChange();\n    }\n    /**\n     * @param {?} event\n     * @param {?} hours\n     * @param {?} dispatch\n     * @return {?}\n     */\n    setHours(event, hours, dispatch) {\n        Helpers.swallowEvent(event);\n        this.hours = hours;\n        this.hoursClass = `hour-${hours}`;\n        this.activeHour = hours;\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} minutes\n     * @param {?} dispatch\n     * @return {?}\n     */\n    setMinutes(event, minutes, dispatch) {\n        Helpers.swallowEvent(event);\n        this.minutes = minutes;\n        this.minutesClass = `min-${minutes}`;\n        this.activeMinute = minutes;\n        this.checkBetween(minutes);\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} period\n     * @param {?} dispatch\n     * @return {?}\n     */\n    setPeriod(event, period, dispatch) {\n        Helpers.swallowEvent(event);\n        this.meridian = period;\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    dispatchChange() {\n        /** @type {?} */\n        let hours = Number(this.hours);\n        if (!this.military) {\n            hours = this.meridian.toLowerCase() === 'pm' ? hours + 12 : hours;\n            // Special case for 12\n            if (this.meridian.toLowerCase() === 'pm' && hours === 24) {\n                hours = 12;\n            }\n            else if (this.meridian.toLowerCase() === 'am' && hours === 12) {\n                hours = 0;\n            }\n        }\n        /** @type {?} */\n        const value = new Date();\n        value.setHours(hours);\n        value.setMinutes(this.minutes);\n        value.setSeconds(0);\n        this.value = `${this.hours}:${this.minutes} ${this.meridian}`;\n        this.onSelect.next({\n            hours,\n            minutes: this.minutes,\n            meridian: this.meridian,\n            date: value,\n            text: this.value,\n        });\n        this._onChange(value);\n    }\n    // ValueAccessor Functions\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        if (Helpers.isDate(model)) {\n            this.init(model, false);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n}\nNovoTimePickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-time-picker',\n                providers: [TIME_PICKER_VALUE_ACCESSOR],\n                template: `\n        <div class=\"digital\" [class.inline]=\"inline\" [class.military]=\"military\">\n            <div class=\"digital--inner\">\n                <span class=\"digital--clock\" *ngIf=\"!inline\">\n                    <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{hours}}</span>:<span class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{minutes}}</span>\n                </span>\n                <div class=\"control-block\" *ngIf=\"!military\">\n                    <span *ngFor=\"let period of MERIDIANS\" class=\"digital--period\" [class.active]=\"meridian==period\" (click)=\"setPeriod($event, period, true)\" [attr.data-automation-id]=\"period\">{{period}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"increments\" *ngIf=\"!analog\">\n            <novo-list direction=\"vertical\" data-automation-id=\"novo-time-picker-increments\">\n                <novo-list-item *ngFor=\"let increment of increments\" (click)=\"setValue($event, increment)\" [class.active]=\"increment==selected\" [attr.data-automation-id]=\"increment\">\n                    <item-content>{{increment}}</item-content>\n                    <i *ngIf=\"increment==selected\" class=\"bhi-check\"></i>\n                </novo-list-item>\n            </novo-list>\n        </div>\n        <div class=\"analog\" *ngIf=\"analog\">\n            <div class=\"analog--inner\">\n                <div class=\"analog--face\">\n                    <span class=\"analog--center\"></span>\n                    <span class=\"analog--hand--hours\" [ngClass]=\"hoursClass\">\n                        <span class=\"analog--ball\"></span>\n                    </span>\n                    <span class=\"analog--hand--minutes\" [ngClass]=\"minutesClass\">\n                        <span class=\"analog--ball\" [ngClass]=\"{between: inBetween}\"></span>\n                    </span>\n                </div>\n                <div class=\"analog--hours\">\n                    <span *ngFor=\"let hour of HOURS\" class=\"analog--hour\" [ngClass]=\"{active: activeHour == hour}\" (click)=\"setHours($event, hour, true)\" [attr.data-automation-id]=\"hour\">{{hour}}</span>\n                </div>\n                <div class=\"analog--minutes\">\n                    <span *ngFor=\"let minute of MINUTES\" class=\"analog--minute\" [ngClass]=\"{active: activeMinute == minute}\" (click)=\"setMinutes($event, minute, true)\" [attr.data-automation-id]=\"minute\">{{minute}}</span>\n                </div>\n            </div>\n        </div>\n    `,\n                host: {\n                    '[class.military]': 'military',\n                }\n            }] }\n];\nNovoTimePickerElement.propDecorators = {\n    military: [{ type: Input }],\n    analog: [{ type: Input }],\n    inline: [{ type: Input }],\n    onSelect: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTimePickerElement.prototype.military;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.analog;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.inline;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.onSelect;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.hours;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.minutes;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.value;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.meridian;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.inBetween;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.hoursClass;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.activeHour;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.minutesClass;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.activeMinute;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.increments;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.selected;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.MERIDIANS;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.MINUTES;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.HOURS;\n    /** @type {?} */\n    NovoTimePickerElement.prototype.model;\n    /** @type {?} */\n    NovoTimePickerElement.prototype._onChange;\n    /** @type {?} */\n    NovoTimePickerElement.prototype._onTouched;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/time-picker/TimePickerInput.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst DATE_VALUE_ACCESSOR$2 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoTimePickerInputElement)),\n    multi: true,\n};\nclass NovoTimePickerInputElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} dateFormatService\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, labels, dateFormatService, _changeDetectorRef) {\n        this.element = element;\n        this.labels = labels;\n        this.dateFormatService = dateFormatService;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.formattedValue = '';\n        /**\n         * View -> model callback called when value changes\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * View -> model callback called when autocomplete has been touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.military = false;\n        this.disabled = false;\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.placeholder = this.military ? this.labels.timeFormatPlaceholder24Hour : this.labels.timeFormatPlaceholderAM;\n        this.maskOptions = {\n            mask: this.military ? [/\\d/, /\\d/, ':', /\\d/, /\\d/] : [/\\d/, /\\d/, ':', /\\d/, /\\d/, ' ', /[aApP上下]/, /[mM午]/],\n            pipe: this.military ? createAutoCorrectedDatePipe('HH:MM') : createAutoCorrectedDatePipe('mm:MM'),\n            keepCharPositions: false,\n            guide: true,\n        };\n    }\n    /**\n     * BEGIN: Convenient Panel Methods.\n     * @return {?}\n     */\n    openPanel() {\n        if (!this.overlay.panelOpen) {\n            this.overlay.openPanel();\n            /** @type {?} */\n            const hour = new Date().getHours();\n            Promise.resolve(null).then((/**\n             * @return {?}\n             */\n            () => this.scrollToIndex(hour * 4)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    closePanel() {\n        this.overlay.closePanel();\n    }\n    /**\n     * @return {?}\n     */\n    get panelOpen() {\n        return this.overlay && this.overlay.panelOpen;\n    }\n    /**\n     * END: Convenient Panel Methods.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n            this.closePanel();\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        if (document.activeElement === event.target) {\n            // this._onChange((event.target as HTMLInputElement).value);\n            /** @type {?} */\n            const text = ((/** @type {?} */ (event.target))).value;\n            if (this.military ? text.replace(/_/g, '').length === 5 : text.replace(/_/g, '').length === 8) {\n                const [dateTimeValue, formatted] = this.dateFormatService.parseString(text, this.military, 'time');\n                this.dispatchOnChange(dateTimeValue);\n            }\n            else {\n                this.dispatchOnChange(null);\n            }\n            this.openPanel();\n            /** @type {?} */\n            const num = Number(text.split(':')[0]);\n            this.scrollToIndex(num * 4);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleBlur(event) {\n        this.blurEvent.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleFocus(event) {\n        this.openPanel();\n        this.focusEvent.emit(event);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n    /**\n     * @param {?=} newValue\n     * @param {?=} skip\n     * @return {?}\n     */\n    dispatchOnChange(newValue, skip = false) {\n        if (newValue !== this.value) {\n            this._onChange(newValue);\n            !skip && this.writeValue(newValue);\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        if (value instanceof Date && this.value instanceof Date) {\n            value = new Date(value.setFullYear(this.value.getFullYear(), this.value.getMonth(), this.value.getDate()));\n        }\n        this.value = value;\n        if (this.value) {\n            this.formattedValue = this.formatDateValue(this.value);\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    setValue(event) {\n        if (event && event.date) {\n            this.dispatchOnChange(event.date);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    setValueAndClose(event) {\n        this.setValue(event);\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @return {?}\n     */\n    clearValue() {\n        this.formattedValue = '';\n        this.dispatchOnChange(null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatDateValue(value) {\n        if (!value) {\n            return '';\n        }\n        /** @type {?} */\n        const format = this.labels.formatTimeWithFormat(value, {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: !this.military,\n        });\n        if (format.split(':')[0].length === 1) {\n            return `0${format}`;\n        }\n        return format;\n    }\n    /**\n     * @return {?}\n     */\n    get hasValue() {\n        return !Helpers.isEmpty(this.value);\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    scrollToIndex(index) {\n        /** @type {?} */\n        const element = this.overlay.overlayRef.overlayElement;\n        /** @type {?} */\n        const list = element.querySelector('.increments');\n        /** @type {?} */\n        const items = list.querySelectorAll('novo-list-item');\n        /** @type {?} */\n        const item = items[index];\n        if (item) {\n            list.scrollTop = ((/** @type {?} */ (item))).offsetTop;\n        }\n    }\n}\nNovoTimePickerInputElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-time-picker-input',\n                providers: [DATE_VALUE_ACCESSOR$2],\n                template: `\n    <input\n      type=\"text\"\n      [name]=\"name\"\n      [(ngModel)]=\"formattedValue\"\n      [textMask]=\"maskOptions\"\n      [placeholder]=\"placeholder\"\n      (focus)=\"_handleFocus($event)\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      (blur)=\"_handleBlur($event)\"\n      #input\n      data-automation-id=\"time-input\"\n      [disabled]=\"disabled\"\n    />\n    <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-clock\"></i> <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-time-picker inline=\"true\" (onSelect)=\"setValue($event)\" [ngModel]=\"value\" [military]=\"military\"></novo-time-picker>\n    </novo-overlay-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoTimePickerInputElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: DateFormatService },\n    { type: ChangeDetectorRef }\n];\nNovoTimePickerInputElement.propDecorators = {\n    name: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    military: [{ type: Input }],\n    maskOptions: [{ type: Input }],\n    disabled: [{ type: HostBinding, args: ['class.disabled',] }, { type: Input }],\n    blurEvent: [{ type: Output }],\n    focusEvent: [{ type: Output }],\n    overlay: [{ type: ViewChild, args: [NovoOverlayTemplateComponent, { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.value;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.formattedValue;\n    /**\n     * View -> model callback called when value changes\n     * @type {?}\n     */\n    NovoTimePickerInputElement.prototype._onChange;\n    /**\n     * View -> model callback called when autocomplete has been touched\n     * @type {?}\n     */\n    NovoTimePickerInputElement.prototype._onTouched;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.name;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.placeholder;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.military;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.maskOptions;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.disabled;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.blurEvent;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.focusEvent;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    NovoTimePickerInputElement.prototype.overlay;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.element;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.labels;\n    /** @type {?} */\n    NovoTimePickerInputElement.prototype.dateFormatService;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NovoTimePickerInputElement.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/time-picker/TimePicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTimePickerModule {\n}\nNovoTimePickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, TextMaskModule, NovoOverlayModule, NovoListModule],\n                declarations: [NovoTimePickerElement, NovoTimePickerInputElement],\n                exports: [NovoTimePickerElement, NovoTimePickerInputElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/date-time-picker/DateTimePicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoDateTimePickerModule {\n}\nNovoDateTimePickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoDatePickerModule, NovoTimePickerModule, TextMaskModule, NovoOverlayModule],\n                declarations: [NovoDateTimePickerElement, NovoDateTimePickerInputElement],\n                exports: [NovoDateTimePickerElement, NovoDateTimePickerInputElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass NovoAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * The display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the reset of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) {\n        this._hideToggle = coerceBooleanProperty(show);\n    }\n}\nNovoAccordion.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-accordion',\n                exportAs: 'novoAccordion',\n                host: {\n                    class: 'novo-accordion',\n                },\n            },] }\n];\nNovoAccordion.propDecorators = {\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoAccordion.prototype._hideToggle;\n    /**\n     * The display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the reset of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    NovoAccordion.prototype.displayMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n * @type {?}\n */\nconst novoExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}',\n        }), {\n            params: { expandedHeight: '56px' },\n        }),\n        transition('expanded <=> collapsed', group([query('@indicatorRotate', animateChild(), { optional: true }), animate(EXPANSION_PANEL_ANIMATION_TIMING)])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass NovoExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nNovoExpansionPanelContent.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[matExpansionPanelContent]',\n            },] }\n];\n/** @nocollapse */\nNovoExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    NovoExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * `<novo-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the NovoAccordion directive attached.\n */\nclass NovoExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._hideToggle = false;\n        this._padding = true;\n        this.opened = new EventEmitter();\n        this.closed = new EventEmitter();\n        this.expandedChange = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `novo-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get padding() {\n        return this._padding;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set padding(value) {\n        this._padding = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    _getHideToggle() {\n        if (this.accordion) {\n            return this.accordion.hideToggle;\n        }\n        return this.hideToggle;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _bodyAnimation(event) {\n        /** @type {?} */\n        const classList = event.element.classList;\n        /** @type {?} */\n        const cssClass = 'novo-expanded';\n        const { phaseName, toState } = event;\n        // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\n        // order to prevent the cases where switching too early would cause the animation to jump.\n        // Note that we do it directly on the DOM element to avoid the slight delay that comes\n        // with doing it via change detection.\n        if (phaseName === 'done' && toState === 'expanded') {\n            classList.add(cssClass);\n        }\n        else if (phaseName === 'start' && toState === 'collapsed') {\n            classList.remove(cssClass);\n        }\n    }\n}\nNovoExpansionPanel.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-expansion-panel',\n                exportAs: 'novoExpansionPanel',\n                template: \"<ng-content select=\\\"novo-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"novo-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimation($event)\\\"\\n     (@bodyExpansion.start)=\\\"_bodyAnimation($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"novo-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"novo-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [novoExpansionAnimations.bodyExpansion],\n                host: {\n                    class: 'novo-expansion-panel',\n                    '[class.novo-expanded]': 'expanded',\n                    '[class.novo-expansion-panel-spacing]': '_hasSpacing()',\n                    '[class.novo-expansion-panel-padding]': 'padding',\n                },\n                styles: [\"@-webkit-keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@-webkit-keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@-webkit-keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@-webkit-keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}@keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}.novo-expansion-panel{background:#fff;color:#3d464d;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);box-sizing:content-box;display:block;margin:0 16px;transition:margin 225ms ease-in-out}.novo-action-row{border-top-color:#3d464d}.novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused,.novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled=true]):hover{background:rgba(0,0,0,.04)}.novo-expansion-panel-header-title{color:#3d464d}.novo-expansion-indicator::after,.novo-expansion-panel-header-description{color:#999}.novo-expansion-panel-header[aria-disabled=true]{color:#999;pointer-events:none}.novo-expansion-panel-header[aria-disabled=true] .novo-expansion-panel-header-description,.novo-expansion-panel-header[aria-disabled=true] .novo-expansion-panel-header-title{color:inherit}.novo-expansion-panel.novo-expanded[theme=company]{border-top:3px solid #39d}.novo-expansion-panel.novo-expanded[theme=candidate]{border-top:3px solid #4b7}.novo-expansion-panel.novo-expanded[theme=navigation]{border-top:3px solid #2f384f}.novo-expansion-panel.novo-expanded[theme=lead]{border-top:3px solid #a69}.novo-expansion-panel.novo-expanded[theme=contact]{border-top:3px solid #fa4}.novo-expansion-panel.novo-expanded[theme=opportunity]{border-top:3px solid #625}.novo-expansion-panel.novo-expanded[theme=job]{border-top:3px solid #b56}.novo-expansion-panel.novo-expanded[theme=earnCode],.novo-expansion-panel.novo-expanded[theme=jobCode]{border-top:3px solid #696d79}.novo-expansion-panel.novo-expanded[theme=sendout]{border-top:3px solid #747884}.novo-expansion-panel.novo-expanded[theme=placement]{border-top:3px solid #0b344f}.novo-expansion-panel.novo-expanded[theme=corporateuser],.novo-expansion-panel.novo-expanded[theme=credential],.novo-expansion-panel.novo-expanded[theme=distributionList],.novo-expansion-panel.novo-expanded[theme=task],.novo-expansion-panel.novo-expanded[theme=user]{border-top:3px solid #4f5361}.novo-expansion-panel.novo-expanded[theme=aqua]{border-top:3px solid #3bafda}.novo-expansion-panel.novo-expanded[theme=ocean]{border-top:3px solid #4a89dc}.novo-expansion-panel.novo-expanded[theme=mint]{border-top:3px solid #37bc9b}.novo-expansion-panel.novo-expanded[theme=grass]{border-top:3px solid #8cc152}.novo-expansion-panel.novo-expanded[theme=sunflower]{border-top:3px solid #f6b042}.novo-expansion-panel.novo-expanded[theme=bittersweet]{border-top:3px solid #eb6845}.novo-expansion-panel.novo-expanded[theme=grapefruit]{border-top:3px solid #da4453}.novo-expansion-panel.novo-expanded[theme=carnation]{border-top:3px solid #d770ad}.novo-expansion-panel.novo-expanded[theme=lavender]{border-top:3px solid #967adc}.novo-expansion-panel.novo-expanded[theme=positive]{border-top:3px solid #4a89dc}.novo-expansion-panel.novo-expanded[theme=success]{border-top:3px solid #8cc152}.novo-expansion-panel.novo-expanded[theme=negative]{border-top:3px solid #da4453}.novo-expansion-panel.novo-expanded[theme=warning]{border-top:3px solid #f6b042}.novo-expansion-panel.novo-expanded[theme=black]{border-top:3px solid #000}.novo-expansion-panel.novo-expanded[theme=dark]{border-top:3px solid #3d464d}.novo-expansion-panel.novo-expanded[theme=pulse]{border-top:3px solid #3bafda}.novo-expansion-panel.novo-expanded[theme=neutral]{border-top:3px solid #4f5361}.novo-expansion-panel.novo-expanded[theme=navy]{border-top:3px solid #0d2d42}.novo-expansion-panel.novo-expanded[theme=contract]{border-top:3px solid #454ea0}.novo-expansion-panel.novo-expanded[theme=mountain]{border-top:3px solid #9678b6}.novo-expansion-panel.novo-expanded[theme=billableCharge],.novo-expansion-panel.novo-expanded[theme=invoiceStatement],.novo-expansion-panel.novo-expanded[theme=payableCharge]{border-top:3px solid #696d79}.novo-expansion-panel.novo-expanded[theme=submission]{border-top:3px solid #a9adbb}.novo-expansion-panel.novo-expanded[theme=note]{border-top:3px solid #747884}.novo-expansion-panel.novo-expanded[theme=ash]{border-top:3px solid #a0a0a0}.novo-expansion-panel.novo-expanded[theme=slate]{border-top:3px solid #707070}.novo-expansion-panel.novo-expanded[theme=charcoal]{border-top:3px solid #282828}.novo-expansion-panel.novo-expanded[theme=background]{border-top:3px solid #f4f4f4}.novo-expansion-panel.novo-expanded[theme=background-dark]{border-top:3px solid #e2e2e2}.novo-expansion-panel.novo-expanded[theme=white]{border-top:3px solid #fff}.novo-expansion-panel.novo-expanded[theme=grey]{border-top:3px solid #999}.novo-expansion-panel.novo-expanded[theme=off-white]{border-top:3px solid #f4f4f4}.novo-expansion-panel.novo-expanded[theme=light]{border-top:3px solid #d9dadc}.novo-expansion-panel.novo-expanded[theme=empty]{border-top:3px solid #cccdcc}.novo-expansion-panel.novo-expanded[theme=sand]{border-top:3px solid #f4f4f4}.novo-expansion-panel.novo-expanded[theme=silver]{border-top:3px solid #e2e2e2}.novo-expansion-panel.novo-expanded[theme=stone]{border-top:3px solid #bebebe}.novo-expansion-panel.novo-expanded{margin:16px 4px}.novo-expansion-panel.novo-expanded:first-child{margin-top:0}.novo-expansion-panel.novo-expanded:last-child{margin-bottom:0}.novo-expansion-panel-content{overflow:hidden}.novo-expansion-panel-content.novo-expanded{overflow:visible}.novo-expansion-panel-padding .novo-expansion-panel-body{padding:0 24px 16px}.novo-accordion .novo-expansion-panel-spacing:first-child{margin-top:0}.novo-accordion .novo-expansion-panel-spacing:last-child{margin-bottom:0}.novo-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.novo-action-row button.novo-button{margin-left:8px}[dir=rtl] .novo-action-row button.novo-button{margin-left:0;margin-right:8px}\"]\n            }] }\n];\n/** @nocollapse */\nNovoExpansionPanel.ctorParameters = () => [\n    { type: NovoAccordion, decorators: [{ type: Optional }, { type: Host }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef }\n];\nNovoExpansionPanel.propDecorators = {\n    disabled: [{ type: Input }],\n    expanded: [{ type: Input }],\n    hideToggle: [{ type: Input }],\n    padding: [{ type: Input }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [NovoExpansionPanelContent, { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoExpansionPanel.prototype.disabled;\n    /** @type {?} */\n    NovoExpansionPanel.prototype.expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanel.prototype._padding;\n    /** @type {?} */\n    NovoExpansionPanel.prototype.opened;\n    /** @type {?} */\n    NovoExpansionPanel.prototype.closed;\n    /** @type {?} */\n    NovoExpansionPanel.prototype.expandedChange;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    NovoExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    NovoExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    NovoExpansionPanel.prototype._lazyContent;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    NovoExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    NovoExpansionPanel.prototype._headerId;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanel.prototype._viewContainerRef;\n}\nclass NovoExpansionPanelActionRow {\n}\nNovoExpansionPanelActionRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-action-row',\n                host: {\n                    class: 'novo-action-row',\n                },\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<novo-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<novo-expansion-panel>`.\n */\nclass NovoExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _element, _changeDetectorRef) {\n        this.panel = panel;\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to  subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => !!(changes.hideToggle || changes.disabled))))).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        // _focusMonitor.monitor(_element.nativeElement);\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        // this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    }\n}\nNovoExpansionPanelHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-expansion-panel-header',\n                template: \"<span class=\\\"novo-content\\\">\\n  <ng-content select=\\\"novo-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"novo-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"novo-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [novoExpansionAnimations.indicatorRotate, novoExpansionAnimations.expansionHeaderHeight],\n                host: {\n                    class: 'novo-expansion-panel-header',\n                    role: 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.novo-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`,\n                },\n                styles: [\".novo-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.novo-expansion-panel-header:focus,.novo-expansion-panel-header:hover{outline:0}.novo-expansion-panel-header.novo-expanded:focus,.novo-expansion-panel-header.novo-expanded:hover{background:inherit}.novo-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.novo-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.novo-expansion-panel-header-description,.novo-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px;align-items:center}[dir=rtl] .novo-expansion-panel-header-description,[dir=rtl] .novo-expansion-panel-header-title{margin-right:0;margin-left:16px}.novo-expansion-panel-header-description{flex-grow:2}.novo-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"]\n            }] }\n];\n/** @nocollapse */\nNovoExpansionPanelHeader.ctorParameters = () => [\n    { type: NovoExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNovoExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    NovoExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    NovoExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    NovoExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<novo-panel-description>`\n *\n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\nclass NovoExpansionPanelDescription {\n}\nNovoExpansionPanelDescription.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-panel-description',\n                host: {\n                    class: 'novo-expansion-panel-header-description',\n                },\n            },] }\n];\n/**\n * `<novo-panel-title>`\n *\n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\nclass NovoExpansionPanelTitle {\n}\nNovoExpansionPanelTitle.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-panel-title',\n                host: {\n                    class: 'novo-expansion-panel-header-title',\n                },\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/expansion/expansion.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoExpansionModule {\n}\nNovoExpansionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    NovoAccordion,\n                    NovoExpansionPanel,\n                    NovoExpansionPanelActionRow,\n                    NovoExpansionPanelHeader,\n                    NovoExpansionPanelTitle,\n                    NovoExpansionPanelDescription,\n                    NovoExpansionPanelContent,\n                ],\n                declarations: [\n                    NovoAccordion,\n                    NovoExpansionPanel,\n                    NovoExpansionPanelActionRow,\n                    NovoExpansionPanelHeader,\n                    NovoExpansionPanelTitle,\n                    NovoExpansionPanelDescription,\n                    NovoExpansionPanelContent,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/BaseControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction NovoGroupedControlConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    NovoGroupedControlConfig.prototype.label;\n    /** @type {?|undefined} */\n    NovoGroupedControlConfig.prototype.icon;\n    /** @type {?|undefined} */\n    NovoGroupedControlConfig.prototype.add;\n    /** @type {?|undefined} */\n    NovoGroupedControlConfig.prototype.remove;\n    /** @type {?} */\n    NovoGroupedControlConfig.prototype.key;\n    /** @type {?|undefined} */\n    NovoGroupedControlConfig.prototype.initialValue;\n}\nclass ControlConfig {\n    constructor() {\n        this.isEmbedded = false;\n        this.isInlineEmbedded = false;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ControlConfig.prototype.allowInvalidDate;\n    /** @type {?} */\n    ControlConfig.prototype.appendToBody;\n    /** @type {?} */\n    ControlConfig.prototype.associatedEntity;\n    /** @type {?} */\n    ControlConfig.prototype.asyncValidators;\n    /** @type {?} */\n    ControlConfig.prototype.checkboxLabel;\n    /** @type {?} */\n    ControlConfig.prototype.closeOnSelect;\n    /** @type {?} */\n    ControlConfig.prototype.config;\n    /** @type {?} */\n    ControlConfig.prototype.controlType;\n    /** @type {?} */\n    ControlConfig.prototype.currencyFormat;\n    /** @type {?} */\n    ControlConfig.prototype.customControl;\n    /** @type {?} */\n    ControlConfig.prototype.customControlConfig;\n    /** @type {?} */\n    ControlConfig.prototype.dataSpecialization;\n    /** @type {?} */\n    ControlConfig.prototype.dataType;\n    /** @type {?} */\n    ControlConfig.prototype.dateFormat;\n    /** @type {?} */\n    ControlConfig.prototype.description;\n    /** @type {?} */\n    ControlConfig.prototype.dirty;\n    /** @type {?} */\n    ControlConfig.prototype.disabled;\n    /** @type {?} */\n    ControlConfig.prototype.encrypted;\n    /** @type {?} */\n    ControlConfig.prototype.endDate;\n    /** @type {?} */\n    ControlConfig.prototype.fileBrowserImageUploadUrl;\n    /** @type {?} */\n    ControlConfig.prototype.forceClear;\n    /** @type {?} */\n    ControlConfig.prototype.headerConfig;\n    /** @type {?} */\n    ControlConfig.prototype.hidden;\n    /** @type {?} */\n    ControlConfig.prototype.interactions;\n    /** @type {?} */\n    ControlConfig.prototype.isEmpty;\n    /** @type {?} */\n    ControlConfig.prototype.key;\n    /** @type {?} */\n    ControlConfig.prototype.label;\n    /** @type {?} */\n    ControlConfig.prototype.maskOptions;\n    /** @type {?} */\n    ControlConfig.prototype.maxlength;\n    /** @type {?} */\n    ControlConfig.prototype.metaType;\n    /** @type {?} */\n    ControlConfig.prototype.military;\n    /** @type {?} */\n    ControlConfig.prototype.minimal;\n    /** @type {?} */\n    ControlConfig.prototype.minlength;\n    /** @type {?} */\n    ControlConfig.prototype.multiple;\n    /** @type {?} */\n    ControlConfig.prototype.name;\n    /** @type {?} */\n    ControlConfig.prototype.options;\n    /** @type {?} */\n    ControlConfig.prototype.optionsType;\n    /** @type {?} */\n    ControlConfig.prototype.parentScrollSelector;\n    /** @type {?} */\n    ControlConfig.prototype.placeholder;\n    /** @type {?} */\n    ControlConfig.prototype.readOnly;\n    /** @type {?} */\n    ControlConfig.prototype.removeTooltipArrow;\n    /** @type {?} */\n    ControlConfig.prototype.required;\n    /** @type {?} */\n    ControlConfig.prototype.restrictFieldInteractions;\n    /** @type {?} */\n    ControlConfig.prototype.sortOrder;\n    /** @type {?} */\n    ControlConfig.prototype.startDate;\n    /** @type {?} */\n    ControlConfig.prototype.startupFocus;\n    /** @type {?} */\n    ControlConfig.prototype.subType;\n    /** @type {?} */\n    ControlConfig.prototype.template;\n    /** @type {?} */\n    ControlConfig.prototype.textMaskEnabled;\n    /** @type {?} */\n    ControlConfig.prototype.tooltip;\n    /** @type {?} */\n    ControlConfig.prototype.tooltipAutoPosition;\n    /** @type {?} */\n    ControlConfig.prototype.tooltipPosition;\n    /** @type {?} */\n    ControlConfig.prototype.tooltipPreline;\n    /** @type {?} */\n    ControlConfig.prototype.tooltipSize;\n    /** @type {?} */\n    ControlConfig.prototype.type;\n    /** @type {?} */\n    ControlConfig.prototype.validators;\n    /** @type {?} */\n    ControlConfig.prototype.value;\n    /** @type {?} */\n    ControlConfig.prototype.warning;\n    /** @type {?} */\n    ControlConfig.prototype.width;\n    /** @type {?} */\n    ControlConfig.prototype.layoutOptions;\n    /** @type {?} */\n    ControlConfig.prototype.tipWell;\n    /** @type {?} */\n    ControlConfig.prototype.isEmbedded;\n    /** @type {?} */\n    ControlConfig.prototype.isInlineEmbedded;\n    /** @type {?} */\n    ControlConfig.prototype.weekStart;\n}\nclass BaseControl extends ControlConfig {\n    /**\n     * @param {?=} type\n     * @param {?=} config\n     */\n    constructor(type = 'BaseControl', config = {}) {\n        super();\n        this.__type = 'BaseControl';\n        this.__type = type;\n        this.__config = config;\n        this.validators = config.validators || [];\n        this.asyncValidators = config.asyncValidators || [];\n        this.value = config.value;\n        this.key = config.key || '';\n        this.label = config.label || '';\n        this.checkboxLabel = config.checkboxLabel;\n        this.name = config.name || '';\n        this.required = !!config.required;\n        this.hidden = !!config.hidden;\n        this.encrypted = !!config.encrypted;\n        this.sortOrder = config.sortOrder === undefined ? 1 : config.sortOrder;\n        this.controlType = config.controlType || '';\n        this.type = config.type;\n        this.subType = config.subType;\n        this.metaType = config.metaType;\n        this.placeholder = config.placeholder || '';\n        this.config = config.config || null;\n        this.dirty = !!(config.value !== undefined && config.value !== null);\n        this.multiple = !!config.multiple;\n        this.headerConfig = config.headerConfig || null;\n        this.currencyFormat = config.currencyFormat || null;\n        this.associatedEntity = config.associatedEntity || null;\n        this.optionsType = config.optionsType || null;\n        this.options = config.options || [];\n        this.forceClear = new EventEmitter();\n        this.readOnly = !!config.readOnly || !!config.disabled;\n        this.disabled = !!config.disabled;\n        this.layoutOptions = config.layoutOptions || {};\n        this.military = !!config.military;\n        this.dateFormat = config.dateFormat;\n        this.textMaskEnabled = config.textMaskEnabled;\n        this.maskOptions = config.maskOptions;\n        this.allowInvalidDate = config.allowInvalidDate;\n        this.startDate = config.startDate;\n        this.endDate = config.endDate;\n        this.restrictFieldInteractions = !!config.restrictFieldInteractions;\n        if (!Helpers.isEmpty(config.warning)) {\n            this.warning = config.warning;\n        }\n        if (this.required) {\n            this.validators.push(Validators.required);\n        }\n        if (!Helpers.isBlank(config.maxlength)) {\n            this.maxlength = config.maxlength;\n            this.validators.push(Validators.maxLength(this.maxlength));\n        }\n        if (!Helpers.isBlank(config.minlength)) {\n            this.minlength = config.minlength;\n            this.validators.push(Validators.minLength(this.minlength));\n        }\n        this.closeOnSelect = !!config.closeOnSelect;\n        this.interactions = config.interactions;\n        this.dataSpecialization = config.dataSpecialization;\n        this.dataType = config.dataType;\n        this.appendToBody = !!config.appendToBody;\n        if (this.appendToBody) {\n            notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n        }\n        this.parentScrollSelector = config.parentScrollSelector;\n        this.description = config.description;\n        if (config.tooltip) {\n            this.tooltip = config.tooltip;\n            this.tooltipPosition = config.tooltipPosition;\n            this.tooltipSize = config.tooltipSize;\n            this.tooltipPreline = config.tooltipPreline;\n            this.removeTooltipArrow = config.removeTooltipArrow;\n            this.tooltipAutoPosition = config.tooltipAutoPosition;\n        }\n        this.template = config.template;\n        this.customControlConfig = config.customControlConfig;\n        this.tipWell = config.tipWell;\n        this.width = config.width;\n        this.startupFocus = !!config.startupFocus;\n        if (config.fileBrowserImageUploadUrl) {\n            this.fileBrowserImageUploadUrl = config.fileBrowserImageUploadUrl;\n        }\n        if (config.isEmpty) {\n            this.isEmpty = config.isEmpty;\n        }\n        this.weekStart = config.weekStart || 0;\n    }\n}\nif (false) {\n    /** @type {?} */\n    BaseControl.prototype.__type;\n    /** @type {?} */\n    BaseControl.prototype.__config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/FormValidators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_INTEGER = 2147483647;\n/** @type {?} */\nconst MIN_YEAR = 1753;\nclass FormValidators {\n    /**\n     * @private\n     * @param {?} subfield\n     * @param {?} control\n     * @return {?}\n     */\n    showStateRequiredFlag(subfield, control) {\n        return (subfield === 'state' &&\n            !Helpers.isEmpty(control.config.state) &&\n            control.config.state.required &&\n            Helpers.isBlank(control.value.state) &&\n            control.config.state.updated &&\n            !Helpers.isBlank(control.value.countryName) &&\n            control.config.state.pickerConfig &&\n            control.config.state.pickerConfig.defaultOptions &&\n            control.config.state.pickerConfig.defaultOptions.length > 0);\n    }\n    // Makes sure the control value does not exceed the max integer value\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    static maxInteger(control) {\n        return control.value < MAX_INTEGER ? null : { integerTooLarge: true };\n    }\n    // Makes sure the control value is above the minimum year\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    static minYear(control) {\n        if (!control.value) {\n            return null;\n        }\n        return control.value >= MIN_YEAR ? null : { minYear: true };\n    }\n    // Makes sure the control value does not exceed the max number value\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    static maxDouble(control) {\n        return control.value < Number.MAX_SAFE_INTEGER ? null : { doubleTooLarge: true };\n    }\n    // Make sure the control value is an email\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    static isEmail(control) {\n        /** @type {?} */\n        const EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n        return !control.value || EMAIL_REGEXP.test(control.value) ? null : { invalidEmail: true };\n    }\n    // Makes sure the control value is a valid address\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    static isValidAddress(control) {\n        /** @type {?} */\n        const fieldList = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n        /** @type {?} */\n        const invalidAddressFields = [];\n        /** @type {?} */\n        const maxlengthFields = [];\n        /** @type {?} */\n        let returnVal = null;\n        /** @type {?} */\n        let maxlengthError = false;\n        /** @type {?} */\n        const showCountryRequiredFlag = (/**\n         * @param {?} subfield\n         * @param {?} ctrl\n         * @return {?}\n         */\n        (subfield, ctrl) => {\n            return (subfield === 'countryID' &&\n                !Helpers.isEmpty(ctrl.config.countryID) &&\n                ctrl.config.countryID.required &&\n                Helpers.isBlank(ctrl.value.countryName) &&\n                ctrl.config.countryID.updated);\n        });\n        /** @type {?} */\n        const showStateRequiredFlag = (/**\n         * @param {?} subfield\n         * @param {?} ctrl\n         * @return {?}\n         */\n        (subfield, ctrl) => {\n            return (subfield === 'state' &&\n                !Helpers.isEmpty(ctrl.config.state) &&\n                ctrl.config.state.required &&\n                Helpers.isBlank(ctrl.value.state) &&\n                ctrl.config.state.updated &&\n                !Helpers.isBlank(ctrl.value.countryName) &&\n                ctrl.config.state.pickerConfig &&\n                ctrl.config.state.pickerConfig.defaultOptions &&\n                ctrl.config.state.pickerConfig.defaultOptions.length > 0);\n        });\n        if (control.value && control.config) {\n            /** @type {?} */\n            let valid = true;\n            /** @type {?} */\n            let formValidity = true;\n            fieldList.forEach((/**\n             * @param {?} subfield\n             * @return {?}\n             */\n            (subfield) => {\n                if (!Helpers.isEmpty(control.config[subfield])) {\n                    if ((['countryID', 'state'].indexOf(subfield) === -1 &&\n                        control.config[subfield].required &&\n                        !Helpers.isBlank(control.value[subfield]) &&\n                        Helpers.isEmpty(control.value[subfield])) ||\n                        showCountryRequiredFlag(subfield, control) ||\n                        showStateRequiredFlag(subfield, control)) {\n                        valid = false;\n                        invalidAddressFields.push(control.config[subfield].label);\n                    }\n                    if (((subfield !== 'countryID' && control.config[subfield].required && Helpers.isEmpty(control.value[subfield])) ||\n                        (subfield === 'countryID' &&\n                            !Helpers.isEmpty(control.config.countryID) &&\n                            control.config.countryID.required &&\n                            Helpers.isEmpty(control.value.countryName))) &&\n                        !(subfield === 'state' &&\n                            !Helpers.isBlank(control.value.countryName) &&\n                            control.config.state.pickerConfig &&\n                            control.config.state.pickerConfig.defaultOptions &&\n                            control.config.state.pickerConfig.defaultOptions.length === 0)) {\n                        formValidity = false;\n                    }\n                    if (!Helpers.isEmpty(control.config[subfield].maxlength) &&\n                        !Helpers.isEmpty(control.value[subfield]) &&\n                        control.value[subfield].length > control.config[subfield].maxlength) {\n                        maxlengthError = true;\n                        maxlengthFields.push(subfield);\n                        formValidity = false;\n                    }\n                }\n            }));\n            if (!valid || !formValidity || maxlengthError) {\n                returnVal = {};\n            }\n            if (!valid) {\n                returnVal.invalidAddress = true;\n                returnVal.invalidAddressFields = invalidAddressFields;\n            }\n            if (!formValidity) {\n                returnVal.invalidAddressForForm = true;\n            }\n            if (maxlengthError) {\n                returnVal.maxlength = true;\n                returnVal.maxlengthFields = maxlengthFields;\n            }\n            return returnVal;\n        }\n        return null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/address/AddressControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AddressControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('AddressControl', config);\n        this.controlType = 'address';\n        this.validators.push(FormValidators.isValidAddress);\n    }\n}\nif (false) {\n    /** @type {?} */\n    AddressControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/check-list/CheckListControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CheckListControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('CheckListControl', config);\n        this.controlType = 'checklist';\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    CheckListControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/checkbox/CheckboxControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CheckboxControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('CheckboxControl', config);\n        this.controlType = 'checkbox';\n    }\n}\nif (false) {\n    /** @type {?} */\n    CheckboxControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/date/DateControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DateControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('DateControl', config);\n        this.controlType = 'date';\n    }\n}\nif (false) {\n    /** @type {?} */\n    DateControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/date-time/DateTimeControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DateTimeControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('DateTimeControl', config);\n        this.controlType = 'date-time';\n    }\n}\nif (false) {\n    /** @type {?} */\n    DateTimeControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/editor/EditorControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass EditorControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('EditorControl', config);\n        this.controlType = 'editor';\n        this.minimal = false;\n    }\n}\nif (false) {\n    /** @type {?} */\n    EditorControl.prototype.controlType;\n    /** @type {?} */\n    EditorControl.prototype.minimal;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/ace-editor/AceEditorControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AceEditorControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('AceEditorControl', config);\n        this.controlType = 'ace-editor';\n    }\n}\nif (false) {\n    /** @type {?} */\n    AceEditorControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/file/FileControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('FileControl', config);\n        this.controlType = 'file';\n        // TODO - translate\n        this.placeholder = config.placeholder;\n        this.multiple = config.multiple;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/native-select/NativeSelectControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeSelectControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('NativeSelectControl', config);\n        this.controlType = 'native-select';\n        this.options = [];\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    NativeSelectControl.prototype.controlType;\n    /** @type {?} */\n    NativeSelectControl.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/picker/PickerControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PickerControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('PickerControl', config);\n        this.controlType = 'picker';\n        this.options = [];\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    PickerControl.prototype.controlType;\n    /** @type {?} */\n    PickerControl.prototype.options;\n}\nclass TablePickerControl extends PickerControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super(Object.assign(config, { parentScrollSelector: '.table-container' }));\n        this.__type = 'TablePickerControl';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/quick-note/QuickNoteControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass QuickNoteControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('QuickNoteControl', config);\n        this.controlType = 'quick-note';\n        this.options = [];\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    QuickNoteControl.prototype.controlType;\n    /** @type {?} */\n    QuickNoteControl.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/radio/RadioControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RadioControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('RadioControl', config);\n        this.controlType = 'radio';\n        this.options = [];\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    RadioControl.prototype.controlType;\n    /** @type {?} */\n    RadioControl.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/read-only/ReadOnlyControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ReadOnlyControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('ReadOnlyControl', config);\n        this.controlType = 'read-only';\n        config.readOnly = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ReadOnlyControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/select/SelectControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SelectControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('SelectControl', config);\n        this.controlType = 'select';\n        this.options = [];\n        this.options = config.options || [];\n        this.placeholder = config.placeholder || '';\n    }\n}\nif (false) {\n    /** @type {?} */\n    SelectControl.prototype.controlType;\n    /** @type {?} */\n    SelectControl.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/text-area/TextAreaControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextAreaControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('TextAreaControl', config);\n        this.controlType = 'text-area';\n    }\n}\nif (false) {\n    /** @type {?} */\n    TextAreaControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/textbox/TextBoxControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextBoxControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('TextBoxControl', config);\n        this.controlType = 'textbox';\n        this.type = this.getTextboxType(config.type) || '';\n        this.subType = config.type || '';\n        this.setValidators(this.subType);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    setValidators(type) {\n        switch (type) {\n            case 'email':\n                this.validators.push(FormValidators.isEmail);\n                break;\n            case 'number':\n            case 'currency':\n                this.validators.push(FormValidators.maxInteger);\n                break;\n            case 'float':\n            case 'percentage':\n                this.validators.push(FormValidators.maxDouble);\n                break;\n            case 'year':\n                this.validators.push(FormValidators.minYear);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getTextboxType(type) {\n        switch (type) {\n            case 'percentage':\n            case 'currency':\n            case 'float':\n            case 'year':\n                return 'number';\n            default:\n                return type;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    TextBoxControl.prototype.controlType;\n    /** @type {?} */\n    TextBoxControl.prototype.type;\n    /** @type {?} */\n    TextBoxControl.prototype.subType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/tiles/TilesControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TilesControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('TilesControl', config);\n        this.controlType = 'tiles';\n        this.options = [];\n        this.options = config.options || [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilesControl.prototype.controlType;\n    /** @type {?} */\n    TilesControl.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/time/TimeControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TimeControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super('TimeControl', config);\n        this.controlType = 'time';\n    }\n}\nif (false) {\n    /** @type {?} */\n    TimeControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/grouped/GroupedControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GroupedControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        this.__type = 'GroupedControl';\n        Object.keys(config).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => (this[key] = config[key])));\n    }\n}\nif (false) {\n    /** @type {?} */\n    GroupedControl.prototype.__type;\n    /** @type {?} */\n    GroupedControl.prototype.key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/ControlFactory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ControlFactory {\n    /**\n     * @param {?} type\n     * @param {?} config\n     * @return {?}\n     */\n    static create(type, config) {\n        switch (type) {\n            case 'AddressControl':\n                return new AddressControl(config);\n            case 'CheckboxControl':\n                return new CheckboxControl(config);\n            case 'CheckListControl':\n                return new CheckListControl(config);\n            case 'CheckListControl':\n                return new CheckListControl(config);\n            case 'DateTimeControl':\n                return new DateTimeControl(config);\n            case 'EditorControl':\n                return new EditorControl(config);\n            case 'FileControl':\n                return new FileControl(config);\n            case 'NativeSelectControl':\n                return new NativeSelectControl(config);\n            case 'PickerControl':\n                return new PickerControl(config);\n            case 'TablePickerControl':\n                return new TablePickerControl(config);\n            case 'QuickNoteControl':\n                return new QuickNoteControl(config);\n            case 'RadioControl':\n                return new RadioControl(config);\n            case 'ReadOnlyControl':\n                return new ReadOnlyControl(config);\n            case 'TextAreaControl':\n                return new TextAreaControl(config);\n            case 'TextBoxControl':\n                return new TextBoxControl(config);\n            case 'SelectControl':\n                return new SelectControl(config);\n            case 'TilesControl':\n                return new TilesControl(config);\n            case 'TimeControl':\n                return new TimeControl(config);\n            default:\n                console.warn('[ControlFactory] - unable to find control for type. Make sure to set \"editorType\" and \"editorConfig\" on your column', type);\n                return null;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/controls/custom/CustomControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CustomControl extends BaseControl {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        super(config.template, config);\n        this.controlType = 'custom';\n        this.controlType = config.template;\n    }\n}\nif (false) {\n    /** @type {?} */\n    CustomControl.prototype.controlType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/FormControls.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/NovoFormControl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFormControl extends FormControl {\n    /**\n     * @param {?} value\n     * @param {?} control\n     */\n    constructor(value, control) {\n        super(value, control.validators, control.asyncValidators);\n        this.displayValueChanges = new EventEmitter();\n        this.valueHistory = [];\n        this.validators = control.validators;\n        this.initialValue = value;\n        this.valueHistory.push(value);\n        this.key = control.key;\n        this.label = control.label;\n        this.readOnly = control.readOnly;\n        this.hidden = control.hidden;\n        this.encrypted = control.encrypted;\n        this.config = control.config;\n        this.type = control.type;\n        this.subType = control.subType;\n        this.required = control.required;\n        this.hasRequiredValidator = this.required;\n        this.tooltip = control.tooltip;\n        this.tooltipPosition = control.tooltipPosition;\n        this.tooltipSize = control.tooltipSize;\n        this.tooltipPreline = control.tooltipPreline;\n        this.removeTooltipArrow = control.removeTooltipArrow;\n        this.tooltipAutoPosition = control.tooltipAutoPosition;\n        this.label = control.label;\n        this.name = control.name;\n        this.required = control.required;\n        this.sortOrder = control.sortOrder;\n        this.controlType = control.controlType;\n        this.placeholder = control.placeholder;\n        this.minimal = control.minimal;\n        this.multiple = control.multiple;\n        this.headerConfig = control.headerConfig;\n        this.optionsType = control.optionsType;\n        this.readOnly = control.readOnly;\n        this.layoutOptions = control.layoutOptions;\n        this.military = control.military;\n        this.dateFormat = control.dateFormat;\n        this.currencyFormat = control.currencyFormat;\n        this.startDate = control.startDate;\n        this.endDate = control.endDate;\n        this.weekStart = control.weekStart;\n        this.textMaskEnabled = control.textMaskEnabled;\n        this.textMaskEnabled = control.textMaskEnabled;\n        this.maskOptions = control.maskOptions;\n        this.allowInvalidDate = control.allowInvalidDate;\n        this.maxlength = control.maxlength;\n        this.minlength = control.minlength;\n        this.closeOnSelect = control.closeOnSelect;\n        this.interactions = control.interactions;\n        this.checkboxLabel = control.checkboxLabel;\n        this.restrictFieldInteractions = control.restrictFieldInteractions;\n        this.appendToBody = control.appendToBody;\n        if (this.appendToBody) {\n            notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n        }\n        this.parentScrollSelector = control.parentScrollSelector;\n        this.description = control.description;\n        this.options = control.options;\n        this.tipWell = control.tipWell;\n        this.customControlConfig = control.customControlConfig;\n        this.warning = control.warning;\n        // Reactive Form, need to enable/disable, can't bind to [disabled]\n        if (this.readOnly) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    /**\n     * @param {?=} clearValue - flag to reset the control's value\n     * @return {?}\n     */\n    hide(clearValue = true) {\n        this.hidden = true;\n        if (clearValue) {\n            this.setValue(null);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        this.hidden = false;\n    }\n    /**\n     * @param {?} isRequired\n     * @return {?}\n     */\n    setRequired(isRequired) {\n        this.required = isRequired;\n        // Update validators to have the required\n        if (this.required && !this.hasRequiredValidator) {\n            /** @type {?} */\n            const validators = [...this.validators];\n            validators.push(Validators.required);\n            // TODO: duplicated below\n            this.setValidators(validators);\n            this.updateValueAndValidity({ emitEvent: false });\n            this.hasRequiredValidator = this.required;\n        }\n        else if (!this.required && this.hasRequiredValidator) {\n            /** @type {?} */\n            let validators = [...this.validators];\n            validators = validators.filter((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val !== Validators.required));\n            // TODO: duplicated above\n            this.setValidators(validators);\n            this.updateValueAndValidity({ emitEvent: false });\n            this.hasRequiredValidator = this.required;\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    setValue(value, { onlySelf, emitEvent, emitModelToViewChange, emitViewToModelChange, } = {}) {\n        this.markAsDirty();\n        this.markAsTouched();\n        this.displayValueChanges.emit(value);\n        super.setValue(value, { onlySelf, emitEvent, emitModelToViewChange, emitViewToModelChange });\n        // History\n        clearTimeout(this.historyTimeout);\n        this.historyTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.valueHistory.push(value);\n        }), 300);\n    }\n    /**\n     * @param {?} isReadOnly\n     * @return {?}\n     */\n    setReadOnly(isReadOnly) {\n        this.readOnly = isReadOnly;\n        if (this.readOnly) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    disable(opts = { emitEvent: false }) {\n        if (typeof opts.emitEvent === 'undefined') {\n            opts.emitEvent = false;\n        }\n        super.disable(opts);\n    }\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    enable(opts = { emitEvent: false }) {\n        if (typeof opts.emitEvent === 'undefined') {\n            opts.emitEvent = false;\n        }\n        super.enable(opts);\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    markAsInvalid(message) {\n        this.markAsDirty();\n        this.markAsTouched();\n        this.setErrors(Object.assign({}, this.errors, { custom: message }));\n    }\n    /**\n     * @return {?}\n     */\n    markAsValid() {\n        this.setErrors(null);\n    }\n}\nif (false) {\n    /** @type {?} */\n    NovoFormControl.prototype.displayValueChanges;\n    /** @type {?} */\n    NovoFormControl.prototype.hidden;\n    /** @type {?} */\n    NovoFormControl.prototype.encrypted;\n    /** @type {?} */\n    NovoFormControl.prototype.key;\n    /** @type {?} */\n    NovoFormControl.prototype.required;\n    /** @type {?} */\n    NovoFormControl.prototype.readOnly;\n    /** @type {?} */\n    NovoFormControl.prototype.hasRequiredValidator;\n    /** @type {?} */\n    NovoFormControl.prototype.label;\n    /** @type {?} */\n    NovoFormControl.prototype.tooltip;\n    /** @type {?} */\n    NovoFormControl.prototype.tooltipPosition;\n    /** @type {?} */\n    NovoFormControl.prototype.tooltipSize;\n    /** @type {?} */\n    NovoFormControl.prototype.tooltipPreline;\n    /** @type {?} */\n    NovoFormControl.prototype.removeTooltipArrow;\n    /** @type {?} */\n    NovoFormControl.prototype.tooltipAutoPosition;\n    /** @type {?} */\n    NovoFormControl.prototype.initialValue;\n    /** @type {?} */\n    NovoFormControl.prototype.valueHistory;\n    /** @type {?} */\n    NovoFormControl.prototype.validators;\n    /** @type {?} */\n    NovoFormControl.prototype.config;\n    /** @type {?} */\n    NovoFormControl.prototype.sortOrder;\n    /** @type {?} */\n    NovoFormControl.prototype.controlType;\n    /** @type {?} */\n    NovoFormControl.prototype.placeholder;\n    /** @type {?} */\n    NovoFormControl.prototype.minimal;\n    /** @type {?} */\n    NovoFormControl.prototype.multiple;\n    /** @type {?} */\n    NovoFormControl.prototype.headerConfig;\n    /** @type {?} */\n    NovoFormControl.prototype.optionsType;\n    /** @type {?} */\n    NovoFormControl.prototype.maxlength;\n    /** @type {?} */\n    NovoFormControl.prototype.minlength;\n    /** @type {?} */\n    NovoFormControl.prototype.options;\n    /** @type {?} */\n    NovoFormControl.prototype.type;\n    /** @type {?} */\n    NovoFormControl.prototype.subType;\n    /** @type {?} */\n    NovoFormControl.prototype.name;\n    /** @type {?} */\n    NovoFormControl.prototype.closeOnSelect;\n    /** @type {?} */\n    NovoFormControl.prototype.interactions;\n    /** @type {?} */\n    NovoFormControl.prototype.appendToBody;\n    /** @type {?} */\n    NovoFormControl.prototype.parentScrollSelector;\n    /** @type {?} */\n    NovoFormControl.prototype.description;\n    /** @type {?} */\n    NovoFormControl.prototype.layoutOptions;\n    /** @type {?} */\n    NovoFormControl.prototype.military;\n    /** @type {?} */\n    NovoFormControl.prototype.dateFormat;\n    /** @type {?} */\n    NovoFormControl.prototype.currencyFormat;\n    /** @type {?} */\n    NovoFormControl.prototype.startDate;\n    /** @type {?} */\n    NovoFormControl.prototype.endDate;\n    /** @type {?} */\n    NovoFormControl.prototype.weekStart;\n    /** @type {?} */\n    NovoFormControl.prototype.textMaskEnabled;\n    /** @type {?} */\n    NovoFormControl.prototype.maskOptions;\n    /** @type {?} */\n    NovoFormControl.prototype.allowInvalidDate;\n    /** @type {?} */\n    NovoFormControl.prototype.tipWell;\n    /** @type {?} */\n    NovoFormControl.prototype.rawValue;\n    /** @type {?} */\n    NovoFormControl.prototype.customControlConfig;\n    /** @type {?} */\n    NovoFormControl.prototype.checkboxLabel;\n    /** @type {?} */\n    NovoFormControl.prototype.restrictFieldInteractions;\n    /** @type {?} */\n    NovoFormControl.prototype.warning;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoFormControl.prototype.historyTimeout;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/NovoFormGroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFormGroup extends FormGroup {\n    constructor() {\n        super(...arguments);\n        this.fieldInteractionEvents = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this.getRawValue();\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = v;\n    }\n    /**\n     * @return {?}\n     */\n    enableAllControls() {\n        for (const key in this.controls) {\n            if (((/** @type {?} */ (this.controls[key]))).readOnly) {\n                ((/** @type {?} */ (this.controls[key]))).readOnly = false;\n                this.controls[key].enable();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    disableAllControls() {\n        for (const key in this.controls) {\n            if (!((/** @type {?} */ (this.controls[key]))).readOnly) {\n                ((/** @type {?} */ (this.controls[key]))).readOnly = true;\n                this.controls[key].disable();\n            }\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NovoFormGroup.prototype.fieldInteractionEvents;\n    /** @type {?} */\n    NovoFormGroup.prototype.layout;\n    /** @type {?} */\n    NovoFormGroup.prototype.edit;\n    /** @type {?} */\n    NovoFormGroup.prototype.currentEntity;\n    /** @type {?} */\n    NovoFormGroup.prototype.currentEntityId;\n    /** @type {?} */\n    NovoFormGroup.prototype.associations;\n    /** @type {?} */\n    NovoFormGroup.prototype.fieldsets;\n    /** @type {?} */\n    NovoFormGroup.prototype._value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/options/OptionsService.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// App\nclass OptionsService {\n    constructor() { }\n    /**\n     * @param {?} http\n     * @param {?} field\n     * @param {?} config\n     * @return {?}\n     */\n    getOptionsConfig(http, field, config) {\n        return {\n            field: 'value',\n            format: '$label',\n            options: (/**\n             * @param {?} query\n             * @return {?}\n             */\n            (query) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @param {?} reject\n                 * @return {?}\n                 */\n                (resolve, reject) => {\n                    if (query && query.length) {\n                        http.get(`${field.optionsUrl}?filter=${query || ''}`).subscribe(resolve, reject);\n                    }\n                    else {\n                        resolve([]);\n                    }\n                }));\n            }),\n        };\n    }\n}\nOptionsService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nOptionsService.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/form-utils/FormUtils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FormUtils {\n    /**\n     * @param {?} labels\n     * @param {?} optionsService\n     */\n    constructor(labels, optionsService) {\n        this.labels = labels;\n        this.optionsService = optionsService;\n        this.ASSOCIATED_ENTITY_LIST = [\n            'Candidate',\n            'ClientContact',\n            'ClientCorporation',\n            'CorporationDepartment',\n            'Lead',\n            'Opportunity',\n            'JobOrder',\n            'CorporateUser',\n            'Person',\n            'Placement',\n        ];\n        this.ENTITY_PICKER_LIST = [\n            'Candidate',\n            'CandidateText',\n            'Client',\n            'ClientText',\n            'ClientContact',\n            'ClientContactText',\n            'ClientCorporation',\n            'ClientCorporationText',\n            'Lead',\n            'LeadText',\n            'Opportunity',\n            'OpportunityText',\n            'JobOrder',\n            'JobOrderText',\n            'CorporateUser',\n            'CorporateUserText',\n            'Person',\n            'PersonText',\n            'Placement',\n        ];\n    }\n    /**\n     * @param {?} controls\n     * @return {?}\n     */\n    toFormGroup(controls) {\n        /** @type {?} */\n        const group = {};\n        controls.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const value = Helpers.isBlank(control.value) ? '' : control.value;\n            group[control.key] = new NovoFormControl(value, control);\n        }));\n        return new NovoFormGroup(group);\n    }\n    /**\n     * @return {?}\n     */\n    emptyFormGroup() {\n        return new NovoFormGroup({});\n    }\n    /**\n     * @param {?} formGroup\n     * @param {?} controls\n     * @return {?}\n     */\n    addControls(formGroup, controls) {\n        controls.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const value = Helpers.isBlank(control.value) ? '' : control.value;\n            /** @type {?} */\n            const formControl = new NovoFormControl(value, control);\n            formGroup.addControl(control.key, formControl);\n        }));\n    }\n    /**\n     * @param {?} formGroup\n     * @param {?} controls\n     * @return {?}\n     */\n    removeControls(formGroup, controls) {\n        controls.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            formGroup.removeControl(control.key);\n        }));\n    }\n    /**\n     * @param {?} fieldsets\n     * @return {?}\n     */\n    toFormGroupFromFieldset(fieldsets) {\n        /** @type {?} */\n        const controls = [];\n        fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            controls.push(...fieldset.controls);\n        }));\n        return this.toFormGroup(controls);\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    hasAssociatedEntity(field) {\n        return !!(field.associatedEntity && ~this.ASSOCIATED_ENTITY_LIST.indexOf(field.associatedEntity.entity));\n    }\n    /**\n     * @param {?} field\n     * @return {?}\n     */\n    determineInputType(field) {\n        /** @type {?} */\n        let type;\n        /** @type {?} */\n        const dataSpecializationTypeMap = {\n            DATETIME: 'datetime',\n            TIME: 'time',\n            MONEY: 'currency',\n            PERCENTAGE: 'percentage',\n            HTML: 'editor',\n            'HTML-MINIMAL': 'editor-minimal',\n            YEAR: 'year',\n            WORKFLOW_OPTIONS: 'select',\n            SPECIALIZED_OPTIONS: 'select',\n            WorkflowOptionsLookup: 'select',\n            SpecializedOptionsLookup: 'select',\n            SimplifiedOptionsLookup: 'select',\n        };\n        /** @type {?} */\n        const dataTypeToTypeMap = {\n            Timestamp: 'date',\n            Date: 'date',\n            Boolean: 'tiles',\n        };\n        /** @type {?} */\n        const inputTypeToTypeMap = {\n            CHECKBOX: 'radio',\n            RADIO: 'radio',\n            SELECT: 'select',\n            TILES: 'tiles',\n        };\n        /** @type {?} */\n        const inputTypeMultiToTypeMap = {\n            CHECKBOX: 'checklist',\n            RADIO: 'checklist',\n            SELECT: 'chips',\n        };\n        /** @type {?} */\n        const typeToTypeMap = {\n            file: 'file',\n            COMPOSITE: 'address',\n        };\n        /** @type {?} */\n        const numberDataTypeToTypeMap = {\n            Double: 'float',\n            BigDecimal: 'float',\n            Integer: 'number',\n        };\n        if (field.type === 'TO_MANY') {\n            if (this.hasAssociatedEntity(field)) {\n                if (field.multiValue === false) {\n                    type = 'entitypicker';\n                }\n                else {\n                    type = 'entitychips';\n                }\n            }\n            else {\n                if (field.multiValue === false) {\n                    type = 'picker';\n                }\n                else {\n                    type = 'chips';\n                }\n            }\n        }\n        else if (field.type === 'TO_ONE') {\n            if ('SYSTEM' === field.dataSpecialization && ['WorkflowOptionsLookup', 'SpecializedOptionsLookup'].includes(field.dataType)) {\n                type = dataSpecializationTypeMap[field.dataType];\n            }\n            else if (['WORKFLOW_OPTIONS', 'SPECIALIZED_OPTIONS'].includes(field.dataSpecialization)) {\n                type = dataSpecializationTypeMap[field.dataSpecialization];\n            }\n            else if (['SimplifiedOptionsLookup', 'SpecializedOptionsLookup'].includes(field.dataType)) {\n                if (field.options && Object.keys(inputTypeToTypeMap).indexOf(field.inputType) > -1 && !field.multiValue) {\n                    type = inputTypeToTypeMap[field.inputType];\n                }\n                else if (field.options && Object.keys(inputTypeMultiToTypeMap).indexOf(field.inputType) > -1 && field.multiValue) {\n                    type = inputTypeMultiToTypeMap[field.inputType];\n                }\n                else {\n                    type = dataSpecializationTypeMap[field.dataType];\n                }\n            }\n            else if (this.hasAssociatedEntity(field)) {\n                type = 'entitypicker'; // TODO!\n            }\n            else {\n                type = 'picker';\n            }\n        }\n        else if (field.optionsUrl && field.inputType === 'SELECT') {\n            if (field.optionsType && ~this.ENTITY_PICKER_LIST.indexOf(field.optionsType)) {\n                type = 'entitypicker'; // TODO!\n            }\n            else {\n                type = 'picker';\n            }\n        }\n        else if (Object.keys(dataSpecializationTypeMap).indexOf(field.dataSpecialization) > -1) {\n            type = dataSpecializationTypeMap[field.dataSpecialization];\n        }\n        else if (Object.keys(dataTypeToTypeMap).indexOf(field.dataType) > -1) {\n            type = dataTypeToTypeMap[field.dataType];\n        }\n        else if (field.inputType === 'TEXTAREA') {\n            type = 'textarea';\n        }\n        else if (field.options && Object.keys(inputTypeToTypeMap).indexOf(field.inputType) > -1 && !field.multiValue) {\n            type = inputTypeToTypeMap[field.inputType];\n        }\n        else if (field.options && Object.keys(inputTypeMultiToTypeMap).indexOf(field.inputType) > -1 && field.multiValue) {\n            type = inputTypeMultiToTypeMap[field.inputType];\n        }\n        else if (Object.keys(typeToTypeMap).indexOf(field.type) > -1) {\n            type = typeToTypeMap[field.type];\n        }\n        else if (Object.keys(numberDataTypeToTypeMap).indexOf(field.dataType) > -1) {\n            type = numberDataTypeToTypeMap[field.dataType];\n        } /* else {\n                throw new Error('FormUtils: This field type is unsupported.');\n            }*/\n        return type;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    isFieldEncrypted(key) {\n        return key.indexOf('customEncrypted') > -1;\n    }\n    /**\n     * @param {?} field\n     * @param {?} http\n     * @param {?} config\n     * @param {?=} overrides\n     * @param {?=} forTable\n     * @param {?=} fieldData\n     * @return {?}\n     */\n    getControlForField(field, http, config, overrides, forTable = false, fieldData) {\n        // TODO: if field.type overrides `determineInputType` we should use it in that method or use this method\n        // TODO: (cont.) as the setter of the field argument\n        /** @type {?} */\n        let type = this.determineInputType(field) || field.type;\n        /** @type {?} */\n        let control;\n        /** @type {?} */\n        const controlConfig = {\n            metaType: field.type,\n            type,\n            key: field.name,\n            label: field.label,\n            placeholder: field.hint || '',\n            required: field.required || field.systemRequired,\n            hidden: !field.required,\n            encrypted: this.isFieldEncrypted(field.name ? field.name.toString() : ''),\n            value: field.value || field.defaultValue,\n            sortOrder: field.sortOrder,\n            associatedEntity: field.associatedEntity,\n            optionsType: field.optionsType,\n            multiple: field.multiValue,\n            readOnly: !!field.disabled || !!field.readOnly,\n            disabled: field.disabled,\n            maxlength: field.maxLength,\n            interactions: field.interactions,\n            dataSpecialization: field.dataSpecialization,\n            dataType: field.dataType,\n            description: field.description || '',\n            tooltip: field.tooltip,\n            tooltipPosition: field.tooltipPosition,\n            customControl: field.customControl,\n            template: field.template,\n            customControlConfig: field.customControlConfig,\n            restrictFieldInteractions: field.restrictFieldInteractions,\n            validators: field.validators,\n            warning: field.warning,\n            config: field.config || {},\n            closeOnSelect: field.closeOnSelect,\n            layoutOptions: field.layoutOptions,\n        };\n        this.inferStartDate(controlConfig, field);\n        // TODO: getControlOptions should always return the correct format\n        /** @type {?} */\n        const optionsConfig = this.getControlOptions(field, http, config, fieldData);\n        if (Array.isArray(optionsConfig) && !(type === 'chips' || type === 'picker')) {\n            controlConfig.options = optionsConfig;\n        }\n        else if (Array.isArray(optionsConfig) && (type === 'chips' || type === 'picker')) {\n            controlConfig.config = {\n                options: optionsConfig,\n            };\n        }\n        else if (optionsConfig) {\n            controlConfig.config = Object.assign({}, optionsConfig, (controlConfig && controlConfig.config));\n        }\n        if (type === 'year') {\n            controlConfig.maxlength = 4;\n        }\n        // TODO: Overrides should be an iterable of all properties (potentially a private method)\n        /** @type {?} */\n        let overrideResultsTemplate;\n        /** @type {?} */\n        let overridePreviewTemplate;\n        if (overrides && overrides[field.name]) {\n            if (overrides[field.name].resultsTemplate) {\n                overrideResultsTemplate = overrides[field.name].resultsTemplate;\n                controlConfig.config.resultsTemplate = overrideResultsTemplate;\n                delete overrides[field.name].resultsTemplate;\n            }\n            if (overrides[field.name].overridePreviewTemplate) {\n                overrideResultsTemplate = overrides[field.name].overridePreviewTemplate;\n                controlConfig.config.overridePreviewTemplate = overrideResultsTemplate;\n                delete overrides[field.name].overridePreviewTemplate;\n            }\n            if (overrides[field.name].pickerCallback) {\n                controlConfig.config.callback = overrides[field.name].pickerCallback;\n            }\n            if (overrides[field.name].type) {\n                type = overrides[field.name].type;\n            }\n            if (overrides[field.name].columns) {\n                controlConfig.config.columns = overrides[field.name].columns;\n                controlConfig.closeOnSelect = true;\n                delete controlConfig.label;\n            }\n            if (overrides[field.name].warning) {\n                controlConfig.warning = overrides[field.name].warning;\n            }\n            Object.assign(controlConfig, overrides[field.name]);\n        }\n        switch (type) {\n            case 'entitychips':\n                // TODO: This doesn't belong in this codebase\n                controlConfig.multiple = true;\n                controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n                controlConfig.config.previewTemplate = overridePreviewTemplate || EntityPickerResult;\n                // TODO: When appendToBody picker works better in table/form\n                control = new PickerControl(controlConfig);\n                break;\n            case 'chips':\n                controlConfig.multiple = true;\n                // TODO: When appendToBody picker works better in table/form\n                control = new PickerControl(controlConfig);\n                break;\n            case 'entitypicker':\n                // TODO: This doesn't belong in this codebase\n                controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n                // TODO: When appendToBody picker works better in table/form\n                control = new PickerControl(controlConfig);\n                break;\n            case 'picker':\n                // TODO: When appendToBody picker works better in table/form\n                control = new PickerControl(controlConfig);\n                break;\n            case 'datetime':\n                controlConfig.military = config ? !!config.military : false;\n                controlConfig.weekStart = config && config.weekStart ? config.weekStart : 0;\n                control = new DateTimeControl(controlConfig);\n                break;\n            case 'date':\n                controlConfig.dateFormat = field.dateFormat;\n                controlConfig.textMaskEnabled = field.textMaskEnabled;\n                controlConfig.allowInvalidDate = field.allowInvalidDate;\n                controlConfig.military = config ? !!config.military : false;\n                controlConfig.weekStart = config && config.weekStart ? config.weekStart : 0;\n                control = new DateControl(controlConfig);\n                break;\n            case 'time':\n                controlConfig.military = config ? !!config.military : false;\n                control = new TimeControl(controlConfig);\n                break;\n            case 'currency':\n            case 'money':\n            case 'email':\n            case 'percentage':\n            case 'float':\n            case 'number':\n            case 'year':\n                // TODO: Only types from `determineInputType` should be used in this class\n                if (type === 'money') {\n                    type = 'currency';\n                }\n                controlConfig.type = type;\n                control = new TextBoxControl(controlConfig);\n                break;\n            case 'text':\n                control = new TextBoxControl(controlConfig);\n                break;\n            case 'textarea':\n                control = new TextAreaControl(controlConfig);\n                break;\n            case 'editor':\n                control = new EditorControl(controlConfig);\n                break;\n            case 'editor-minimal':\n                control = new EditorControl(controlConfig);\n                control.minimal = true;\n                break;\n            case 'tiles':\n                control = new TilesControl(controlConfig);\n                break;\n            case 'checkbox':\n                controlConfig.checkboxLabel = field.checkboxLabel;\n                control = new CheckboxControl(controlConfig);\n                break;\n            case 'checklist':\n                control = new CheckListControl(controlConfig);\n                break;\n            case 'radio':\n                control = new RadioControl(controlConfig);\n                break;\n            case 'select':\n                control = new SelectControl(controlConfig);\n                break;\n            case 'address':\n                controlConfig.required = field.required || false;\n                if (Helpers.isBlank(controlConfig.config)) {\n                    controlConfig.config = {};\n                }\n                controlConfig.config.required = field.required;\n                controlConfig.config.readOnly = controlConfig.readOnly;\n                if (field.fields && field.fields.length) {\n                    for (const subfield of field.fields) {\n                        controlConfig.config[subfield.name] = {\n                            required: !!subfield.required,\n                            hidden: !!subfield.readOnly,\n                        };\n                        if (!Helpers.isEmpty(subfield.label)) {\n                            controlConfig.config[subfield.name].label = subfield.label;\n                        }\n                        if (!Helpers.isEmpty(subfield.maxLength)) {\n                            controlConfig.config[subfield.name].maxlength = subfield.maxLength;\n                        }\n                        controlConfig.required = controlConfig.required || subfield.required;\n                        if (subfield.defaultValue) {\n                            if (Helpers.isBlank(controlConfig.value)) {\n                                controlConfig.value = {};\n                            }\n                            controlConfig.value[subfield.name] = subfield.defaultValue;\n                        }\n                        else if (subfield.name === 'countryID') {\n                            if (Helpers.isBlank(controlConfig.value)) {\n                                controlConfig.value = {};\n                            }\n                            controlConfig.value[subfield.name] = 1;\n                        }\n                        if (subfield.name === 'state' || subfield.name === 'countryID') {\n                            if (subfield.name === 'countryID') {\n                                subfield.optionsType = 'Country';\n                            }\n                            if (!subfield.optionsUrl) {\n                                subfield.optionsUrl = `options/${subfield.optionsType}`;\n                            }\n                            controlConfig.config[subfield.name].pickerConfig = this.getControlOptions(subfield, http, config, fieldData);\n                        }\n                    }\n                }\n                controlConfig.isEmpty = this.isAddressEmpty;\n                control = new AddressControl(controlConfig);\n                break;\n            case 'file':\n                control = new FileControl(controlConfig);\n                break;\n            case 'custom':\n                control = new CustomControl(controlConfig);\n                break;\n            default:\n                control = new TextBoxControl(controlConfig);\n                break;\n        }\n        return control;\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @return {?}\n     */\n    shouldCreateControl(field) {\n        if (field.systemRequired) {\n            field.readOnly = false;\n        }\n        return (field.name !== 'id' &&\n            (!['SYSTEM', 'SECTION_HEADER'].includes(field.dataSpecialization) ||\n                ['address', 'billingAddress', 'secondaryAddress'].includes(field.name)) &&\n            !field.readOnly);\n    }\n    /**\n     * @param {?} meta\n     * @param {?} currencyFormat\n     * @param {?} http\n     * @param {?} config\n     * @param {?=} overrides\n     * @param {?=} forTable\n     * @return {?}\n     */\n    toControls(meta, currencyFormat, http, config, overrides, forTable = false) {\n        /** @type {?} */\n        const controls = [];\n        if (meta && meta.fields) {\n            /** @type {?} */\n            const fields = meta.fields;\n            fields.forEach((/**\n             * @param {?} field\n             * @return {?}\n             */\n            (field) => {\n                if (this.shouldCreateControl(field)) {\n                    /** @type {?} */\n                    const control = this.getControlForField(field, http, config, overrides, forTable);\n                    // Set currency format\n                    if (control.subType === 'currency') {\n                        control.currencyFormat = currencyFormat;\n                    }\n                    // Add to controls\n                    controls.push(control);\n                }\n            }));\n        }\n        return controls;\n    }\n    /**\n     * @param {?} meta\n     * @param {?} currencyFormat\n     * @param {?} http\n     * @param {?} config\n     * @param {?=} overrides\n     * @return {?}\n     */\n    toTableControls(meta, currencyFormat, http, config, overrides) {\n        /** @type {?} */\n        const controls = this.toControls(meta, currencyFormat, http, config, overrides, true);\n        /** @type {?} */\n        const ret = {};\n        controls.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            ret[control.key] = {\n                editorType: control.__type,\n                editorConfig: control.__config,\n            };\n        }));\n        return ret;\n    }\n    /**\n     * @param {?} meta\n     * @param {?} currencyFormat\n     * @param {?} http\n     * @param {?} config\n     * @param {?=} overrides\n     * @param {?=} data\n     * @return {?}\n     */\n    toFieldSets(meta, currencyFormat, http, config, overrides, data) {\n        /** @type {?} */\n        const fieldsets = [];\n        /** @type {?} */\n        let formFields = [];\n        if (meta && meta.fields) {\n            formFields = this.getFormFields(meta);\n            formFields.forEach((/**\n             * @param {?} field\n             * @return {?}\n             */\n            (field) => {\n                if (this.isHeader(field)) {\n                    if (field.enabled) {\n                        this.insertHeaderToFieldsets(fieldsets, field);\n                    }\n                }\n                else if (this.isEmbeddedField(field)) {\n                    this.insertHeaderToFieldsets(fieldsets, field);\n                    /** @type {?} */\n                    const embeddedFields = this.getEmbeddedFields(field);\n                    embeddedFields.forEach((/**\n                     * @param {?} embeddedField\n                     * @return {?}\n                     */\n                    (embeddedField) => {\n                        if (this.shouldCreateControl(embeddedField)) {\n                            /** @type {?} */\n                            let control = this.createControl(embeddedField, data, http, config, overrides, currencyFormat);\n                            control = this.markControlAsEmbedded(control, field.dataSpecialization ? field.dataSpecialization.toLowerCase() : null);\n                            fieldsets[fieldsets.length - 1].controls.push(control);\n                        }\n                        else if (this.isHeader(embeddedField)) {\n                            this.insertHeaderToFieldsets(fieldsets, embeddedField);\n                        }\n                    }));\n                }\n                else if (this.shouldCreateControl(field)) {\n                    /** @type {?} */\n                    let control = this.createControl(field, data, http, config, overrides, currencyFormat);\n                    if (field.inlineEmbeddedAssociatedEntityField) {\n                        control = this.markControlAsEmbedded(control, 'inline_embedded');\n                    }\n                    if (fieldsets.length === 0) {\n                        fieldsets.push({ controls: [] });\n                    }\n                    fieldsets[fieldsets.length - 1].controls.push(control);\n                }\n            }));\n        }\n        if (fieldsets.length > 0) {\n            return fieldsets;\n        }\n        else {\n            return [\n                {\n                    controls: this.toControls(meta, currencyFormat, http, config),\n                },\n            ];\n        }\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @return {?}\n     */\n    isEmbeddedField(field) {\n        return field.dataSpecialization && ['embedded'].includes(field.dataSpecialization.toLowerCase()) && !field.readOnly;\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @param {?} data\n     * @param {?} http\n     * @param {?} config\n     * @param {?} overrides\n     * @param {?} currencyFormat\n     * @return {?}\n     */\n    createControl(field, data, http, config, overrides, currencyFormat) {\n        /** @type {?} */\n        const fieldData = this.isEmbeddedFieldData(field, data) ? this.getEmbeddedFieldData(field, data) : this.getFieldData(field, data);\n        /** @type {?} */\n        const control = this.getControlForField(field, http, config, overrides, undefined, fieldData);\n        // Set currency format\n        if (control.subType === 'currency') {\n            control.currencyFormat = currencyFormat;\n        }\n        return control;\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @param {?} data\n     * @return {?}\n     */\n    isEmbeddedFieldData(field, data) {\n        return data && field.name.includes('.');\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @param {?} data\n     * @return {?}\n     */\n    getFieldData(field, data) {\n        return (data && data[field.name]) || null;\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @param {?} data\n     * @return {?}\n     */\n    getEmbeddedFieldData(field, data) {\n        const [parentFieldName, fieldName] = field.name.split('.');\n        return (data && data[parentFieldName] && data[parentFieldName][fieldName]) || null;\n    }\n    /**\n     * @private\n     * @param {?} meta\n     * @return {?}\n     */\n    getFormFields(meta) {\n        /** @type {?} */\n        const sectionHeaders = meta.sectionHeaders\n            ? meta.sectionHeaders.map((/**\n             * @param {?} element\n             * @return {?}\n             */\n            (element) => {\n                element.isSectionHeader = true;\n                return element;\n            }))\n            : [];\n        /** @type {?} */\n        let fields = meta.fields.map((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            if (!field.hasOwnProperty('sortOrder')) {\n                field.sortOrder = Number.MAX_SAFE_INTEGER - 1;\n            }\n            return field;\n        }));\n        // build list of fields that should be displayed inline but belong to associated entities\n        /** @type {?} */\n        const inlineEmbeddedAssociatedEntityFields = this.getInlineEmbeddedFields(fields);\n        // remove the inline embedded fields because the associated entity fields were extracted above\n        // and will be added to the regular list of fields. This prevents the fields from being added multiple times.\n        fields = fields.filter((/**\n         * @param {?} f\n         * @return {?}\n         */\n        (f) => !f.dataSpecialization || f.dataSpecialization.toLowerCase() !== 'inline_embedded'));\n        // sort fields\n        return [...sectionHeaders, ...fields, ...inlineEmbeddedAssociatedEntityFields].sort(Helpers.sortByField(['sortOrder', 'name']));\n    }\n    /**\n     * @private\n     * @param {?} fields\n     * @return {?}\n     */\n    getInlineEmbeddedFields(fields) {\n        /** @type {?} */\n        let inlineEmbeddedAssociatedEntityFields = [];\n        fields\n            .filter((/**\n         * @param {?} f\n         * @return {?}\n         */\n        (f) => f.dataSpecialization && f.dataSpecialization.toLowerCase() === 'inline_embedded'))\n            .forEach((/**\n         * @param {?} f\n         * @return {?}\n         */\n        (f) => {\n            inlineEmbeddedAssociatedEntityFields = [...inlineEmbeddedAssociatedEntityFields, ...this.getAssociatedFieldsForInlineEmbedded(f)];\n        }));\n        return inlineEmbeddedAssociatedEntityFields;\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @return {?}\n     */\n    getAssociatedFieldsForInlineEmbedded(field) {\n        /** @type {?} */\n        let associatedEntityFields = [];\n        associatedEntityFields = this.getEmbeddedFields(field).map((/**\n         * @param {?} aef\n         * @return {?}\n         */\n        (aef) => {\n            aef.inlineEmbeddedAssociatedEntityField = true;\n            return aef;\n        }));\n        return associatedEntityFields;\n    }\n    /**\n     * @private\n     * @param {?} subHeader\n     * @return {?}\n     */\n    getEmbeddedFields(subHeader) {\n        return subHeader.associatedEntity.fields\n            .filter((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => field.name !== 'id'))\n            .map((/**\n         * @param {?} field\n         * @return {?}\n         */\n        (field) => {\n            if (!field.name.startsWith(`${subHeader.name}.`)) {\n                field.name = `${subHeader.name}.${field.name}`;\n            }\n            return field;\n        }))\n            .sort(Helpers.sortByField(['sortOrder', 'name']));\n    }\n    /**\n     * @private\n     * @param {?} field\n     * @return {?}\n     */\n    isHeader(field) {\n        return (!Helpers.isBlank(field) &&\n            ((field.hasOwnProperty('isSectionHeader') && field.isSectionHeader) ||\n                (field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'section_header')));\n    }\n    /**\n     * @private\n     * @param {?} fieldsets\n     * @param {?} field\n     * @return {?}\n     */\n    insertHeaderToFieldsets(fieldsets, field) {\n        /** @type {?} */\n        const constantProperties = {\n            controls: [],\n            isEmbedded: field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'embedded',\n            isInlineEmbedded: field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'inline_embedded',\n            key: field.name,\n        };\n        if (field.name && field.name.startsWith('customObject') && field.associatedEntity && field.associatedEntity.label) {\n            fieldsets.push(Object.assign({ title: field.associatedEntity.label || field.label, icon: field.icon || 'bhi-card-expand' }, constantProperties));\n        }\n        else {\n            fieldsets.push(Object.assign({ title: field.label, icon: field.icon || 'bhi-section' }, constantProperties));\n        }\n    }\n    /**\n     * @private\n     * @param {?} control\n     * @param {?=} dataSpecialization\n     * @return {?}\n     */\n    markControlAsEmbedded(control, dataSpecialization) {\n        if (Helpers.isBlank(control['config'])) {\n            control['config'] = {};\n        }\n        control['config']['embedded'] = true;\n        control.isEmbedded = dataSpecialization === 'embedded';\n        control.isInlineEmbedded = dataSpecialization === 'inline_embedded';\n        return control;\n    }\n    /**\n     * @param {?} field\n     * @param {?} http\n     * @param {?} config\n     * @param {?=} fieldData\n     * @return {?}\n     */\n    getControlOptions(field, http, config, fieldData) {\n        // TODO: The token property of config is the only property used; just pass in `token: string`\n        if (field.dataType === 'Boolean' && !field.options) {\n            // TODO: dataType should only be determined by `determineInputType` which doesn't ever return 'Boolean' it\n            // TODO: (cont.) returns `tiles`\n            return [{ value: false, label: this.labels.no }, { value: true, label: this.labels.yes }];\n        }\n        else if (field.workflowOptions && fieldData) {\n            return this.getWorkflowOptions(field.workflowOptions, fieldData);\n        }\n        else if (field.dataSpecialization === 'SPECIALIZED_OPTIONS' ||\n            (field.options && ['SpecializedOptionsLookup', 'SimplifiedOptionsLookup'].includes(field.dataType))) {\n            return field.options;\n        }\n        else if (field.optionsUrl) {\n            return this.optionsService.getOptionsConfig(http, field, config);\n        }\n        else if (Array.isArray(field.options) && field.type === 'chips') {\n            /** @type {?} */\n            const options = field.options;\n            return {\n                field: 'value',\n                format: '$label',\n                options,\n            };\n        }\n        else if (field.options) {\n            return field.options;\n        }\n        return null;\n    }\n    /**\n     * @private\n     * @param {?} workflowOptions\n     * @param {?} fieldData\n     * @return {?}\n     */\n    getWorkflowOptions(workflowOptions, fieldData) {\n        /** @type {?} */\n        let currentValue;\n        if (fieldData.id) {\n            currentValue = { value: fieldData.id, label: fieldData.label ? fieldData.label : fieldData.id };\n        }\n        /** @type {?} */\n        const currentWorkflowOption = fieldData.id ? fieldData.id : 'initial';\n        /** @type {?} */\n        const updateWorkflowOptions = workflowOptions[currentWorkflowOption] || [];\n        if (currentValue && !updateWorkflowOptions.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => option.value === currentValue.value))) {\n            updateWorkflowOptions.unshift(currentValue);\n        }\n        return updateWorkflowOptions;\n    }\n    /**\n     * @param {?} controls\n     * @param {?} values\n     * @param {?=} keepClean\n     * @param {?=} keyOverride\n     * @return {?}\n     */\n    setInitialValues(controls, values, keepClean, keyOverride) {\n        for (let i = 0; i < controls.length; i++) {\n            /** @type {?} */\n            const control = controls[i];\n            /** @type {?} */\n            const key = keyOverride ? control.key.replace(keyOverride, '') : control.key;\n            /** @type {?} */\n            let value = values[key];\n            if (Helpers.isBlank(value)) {\n                continue;\n            }\n            if (Array.isArray(value) && value.length === 0) {\n                continue;\n            }\n            if (Array.isArray(value) && value.length > 0) {\n                value = value.filter((/**\n                 * @param {?} val\n                 * @return {?}\n                 */\n                (val) => !(Object.keys(val).length === 0 && val.constructor === Object)));\n                if (value.length === 0) {\n                    continue;\n                }\n            }\n            if (value.data && value.data.length === 0) {\n                continue;\n            }\n            if (Object.keys(value).length === 0 && value.constructor === Object) {\n                continue;\n            }\n            if (control.dataType === 'Date' && typeof value === 'string' && control.optionsType !== 'skipConversion') {\n                value = startOfDay(value);\n            }\n            control.value = value;\n            // TODO: keepClean is not required, but is always used. It should default (to true?)\n            control.dirty = !keepClean;\n        }\n    }\n    /**\n     * @param {?} fieldsets\n     * @param {?} values\n     * @param {?=} keepClean\n     * @return {?}\n     */\n    setInitialValuesFieldsets(fieldsets, values, keepClean) {\n        fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            this.setInitialValues(fieldset.controls, values, keepClean);\n        }));\n    }\n    /**\n     * @param {?} controls\n     * @return {?}\n     */\n    forceShowAllControls(controls) {\n        controls.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.hidden = false;\n        }));\n    }\n    /**\n     * @param {?} fieldsets\n     * @return {?}\n     */\n    forceShowAllControlsInFieldsets(fieldsets) {\n        fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            fieldset.controls.forEach((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                control.hidden = false;\n            }));\n        }));\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    forceValidation(form) {\n        Object.keys(form.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            /** @type {?} */\n            const control = form.controls[key];\n            if (control.required && Helpers.isBlank(form.value[control.key])) {\n                control.markAsDirty();\n                control.markAsTouched();\n            }\n        }));\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    isAddressEmpty(control) {\n        /** @type {?} */\n        const fieldList = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n        /** @type {?} */\n        let valid = true;\n        if (control.value && control.config) {\n            fieldList.forEach((/**\n             * @param {?} subfield\n             * @return {?}\n             */\n            (subfield) => {\n                if (((subfield !== 'countryID' &&\n                    !Helpers.isEmpty(control.config[subfield]) &&\n                    control.config[subfield].required &&\n                    (Helpers.isBlank(control.value[subfield]) || Helpers.isEmpty(control.value[subfield]))) ||\n                    (subfield === 'countryID' &&\n                        !Helpers.isEmpty(control.config.countryID) &&\n                        control.config.countryID.required &&\n                        Helpers.isEmpty(control.value.countryName))) &&\n                    !(subfield === 'state' &&\n                        !Helpers.isBlank(control.value.countryName) &&\n                        control.config.state.pickerConfig &&\n                        control.config.state.pickerConfig.defaultOptions &&\n                        control.config.state.pickerConfig.defaultOptions.length === 0)) {\n                    valid = false;\n                }\n            }));\n        }\n        return valid;\n    }\n    /**\n     * @private\n     * @param {?} dateRange\n     * @return {?}\n     */\n    getStartDateFromRange(dateRange) {\n        if (dateRange.minDate) {\n            return parse(dateRange.minDate);\n        }\n        else if (dateRange.minOffset) {\n            return addDays(startOfToday(), dateRange.minOffset);\n        }\n    }\n    /**\n     * Get the min start date of a Date base on field data.\n     * @private\n     * @param {?} field\n     * @return {?}\n     */\n    getStartDate(field) {\n        if (field.allowedDateRange) {\n            return this.getStartDateFromRange(field.allowedDateRange);\n        }\n        // there is no restriction on the start date\n        return null;\n    }\n    /**\n     * @private\n     * @param {?} controlConfig\n     * @param {?} field\n     * @return {?}\n     */\n    inferStartDate(controlConfig, field) {\n        if (field.dataType === 'Date') {\n            /** @type {?} */\n            const startDate = this.getStartDate(field);\n            if (startDate) {\n                controlConfig.startDate = startDate;\n            }\n            return startDate;\n        }\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    inflateEmbeddedProperties(data) {\n        if (data) {\n            Object.keys(data)\n                .filter((/**\n             * @param {?} fieldName\n             * @return {?}\n             */\n            (fieldName) => fieldName.includes('.')))\n                .forEach((/**\n             * @param {?} field\n             * @return {?}\n             */\n            (field) => {\n                const [parentFieldName, fieldName] = field.split('.');\n                if (!data[parentFieldName]) {\n                    data[parentFieldName] = {};\n                }\n                data[parentFieldName][fieldName] = data[field];\n                delete data[field];\n            }));\n        }\n        return data;\n    }\n}\nFormUtils.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nFormUtils.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: OptionsService }\n];\nif (false) {\n    /** @type {?} */\n    FormUtils.prototype.ASSOCIATED_ENTITY_LIST;\n    /** @type {?} */\n    FormUtils.prototype.ENTITY_PICKER_LIST;\n    /** @type {?} */\n    FormUtils.prototype.labels;\n    /** @type {?} */\n    FormUtils.prototype.optionsService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/deferred/Deferred.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A Promise that uses the deferred anti-pattern\n * @return {?}\n */\nfunction Deferred() {\n    /** @type {?} */\n    const temp = {};\n    /** @type {?} */\n    const promise = new Promise((/**\n     * @param {?} resolve\n     * @param {?} reject\n     * @return {?}\n     */\n    (resolve, reject) => {\n        temp.resolve = resolve;\n        temp.reject = reject;\n    }));\n    promise.resolve = temp.resolve;\n    promise.reject = temp.reject;\n    return promise;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/modal/Modal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Params that can be passed to the Modal\n * @record\n */\nfunction ModalParams() { }\nclass NovoModalParams {\n}\n/**\n * Reference to an opened dialog.\n */\nclass NovoModalRef {\n    constructor() {\n        this.component = null;\n        this.contentRef = null;\n        this.containerRef = null;\n        this.isClosed = false;\n        this._onClosed = Deferred();\n    }\n    // Gets a promise that is resolved when the dialog is closed.\n    /**\n     * @return {?}\n     */\n    get onClosed() {\n        return this._onClosed;\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n        document.body.classList.add('modal-open');\n    }\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n    close(result) {\n        document.body.classList.remove('modal-open');\n        if (this.contentRef) {\n            this.contentRef.destroy();\n        }\n        if (this.containerRef) {\n            this.containerRef.destroy();\n        }\n        this._onClosed.resolve(result);\n    }\n}\nNovoModalRef.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /** @type {?} */\n    NovoModalRef.prototype.component;\n    /** @type {?} */\n    NovoModalRef.prototype.contentRef;\n    /** @type {?} */\n    NovoModalRef.prototype.containerRef;\n    /** @type {?} */\n    NovoModalRef.prototype.isClosed;\n    /** @type {?} */\n    NovoModalRef.prototype._onClosed;\n}\nclass NovoModalContainerElement {\n    /**\n     * @param {?} modalRef\n     * @param {?} componentUtils\n     */\n    constructor(modalRef, componentUtils) {\n        this.modalRef = modalRef;\n        this.componentUtils = componentUtils;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.modalRef.contentRef = this.componentUtils.append(this.modalRef.component, this.container);\n        }));\n    }\n}\nNovoModalContainerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-modal-container',\n                template: '<span #container></span>'\n            }] }\n];\n/** @nocollapse */\nNovoModalContainerElement.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: ComponentUtils }\n];\nNovoModalContainerElement.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef, static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoModalContainerElement.prototype.container;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoModalContainerElement.prototype.modalRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoModalContainerElement.prototype.componentUtils;\n}\nclass NovoModalElement {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nNovoModalElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-modal',\n                template: `\n    <ng-content select=\"header\"></ng-content>\n    <ng-content select=\"section\"></ng-content>\n    <footer><ng-content select=\"button\"></ng-content></footer>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoModalElement.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoModalElement.prototype.modalRef;\n}\nclass NovoModalNotificationElement {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n        this.cancel = new EventEmitter();\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.cancel.emit();\n        this.modalRef.close();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        switch (this.type) {\n            case 'success':\n                this.iconType = 'bhi-check';\n                break;\n            case 'warning':\n                this.iconType = 'bhi-caution-o';\n                break;\n            case 'error':\n                this.iconType = 'bhi-caution-o';\n                break;\n            case 'custom':\n                this.iconType = `bhi-${this.icon}`;\n                break;\n            default:\n                break;\n        }\n    }\n}\nNovoModalNotificationElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-notification',\n                template: `\n    <button class=\"modal-close\" theme=\"icon\" icon=\"times\" (click)=\"close()\"></button>\n    <header><ng-content select=\"label\"></ng-content></header>\n    <section class=\"notification-body\">\n      <i class=\"indicator\" [ngClass]=\"iconType\" *ngIf=\"iconType\"></i>\n      <ng-content select=\"h1\"></ng-content>\n      <ng-content select=\"h2\"></ng-content>\n      <ng-content select=\"p\"></ng-content>\n    </section>\n    <footer><ng-content select=\"button\"></ng-content></footer>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoModalNotificationElement.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nNovoModalNotificationElement.propDecorators = {\n    type: [{ type: Input }],\n    icon: [{ type: Input }],\n    cancel: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoModalNotificationElement.prototype.type;\n    /** @type {?} */\n    NovoModalNotificationElement.prototype.icon;\n    /** @type {?} */\n    NovoModalNotificationElement.prototype.cancel;\n    /** @type {?} */\n    NovoModalNotificationElement.prototype.iconType;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoModalNotificationElement.prototype.modalRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/modal/ModalService.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoModalService {\n    /**\n     * @param {?} componentUtils\n     */\n    constructor(componentUtils) {\n        this.componentUtils = componentUtils;\n    }\n    /**\n     * @param {?} view\n     * @return {?}\n     */\n    set parentViewContainer(view) {\n        this._parentViewContainer = view;\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @param {?=} scope\n     * @return {?}\n     */\n    open(component, scope = {}) {\n        if (!this._parentViewContainer) {\n            throw new Error('No parent view container specified for the ModalService. Set it inside your main application. \\nthis.modalService.parentViewContainer = view (ViewContainerRef)');\n        }\n        /** @type {?} */\n        const modal = new NovoModalRef();\n        modal.component = component;\n        modal.open();\n        /** @type {?} */\n        const providers = [{ provide: NovoModalRef, useValue: modal }, { provide: NovoModalParams, useValue: scope }];\n        modal.containerRef = this.componentUtils.append(NovoModalContainerElement, this._parentViewContainer, providers);\n        return modal;\n    }\n}\nNovoModalService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNovoModalService.ctorParameters = () => [\n    { type: ComponentUtils }\n];\nif (false) {\n    /** @type {?} */\n    NovoModalService.prototype._parentViewContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoModalService.prototype.componentUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/toast/Toast.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoToastElement {\n    /**\n     * @param {?} sanitizer\n     */\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.theme = 'danger';\n        this.icon = 'caution';\n        this.hasDialogue = false;\n        this.isCloseable = false;\n        this.closed = new EventEmitter();\n        this.show = false;\n        this.animate = false;\n        this.parent = null;\n        this.launched = false;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    set message(m) {\n        this._message = this.sanitizer.bypassSecurityTrustHtml(m);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.launched) {\n            // clear position and time\n            this.position = null;\n            this.time = null;\n            // set icon and styling\n            this.iconClass = `bhi-${this.icon}`;\n            this.alertTheme = `${this.theme} toast-container embedded`;\n            if (this.hasDialogue) {\n                this.alertTheme += ' dialogue';\n            }\n        }\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // set icon and styling\n        this.iconClass = `bhi-${this.icon}`;\n        this.alertTheme = `${this.theme} toast-container embedded`;\n        if (this.hasDialogue) {\n            this.alertTheme += ' dialogue';\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    clickHandler(event) {\n        if (!this.isCloseable) {\n            if (event) {\n                event.stopPropagation();\n                event.preventDefault();\n            }\n            if (this.parent) {\n                this.parent.hide(this);\n            }\n            else {\n                this.closed.emit({ closed: true });\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    close(event) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        if (this.parent) {\n            this.parent.hide(this);\n        }\n        else {\n            this.closed.emit({ closed: true });\n        }\n    }\n}\nNovoToastElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-toast',\n                host: {\n                    '[class]': 'alertTheme',\n                    '[class.show]': 'show',\n                    '[class.animate]': 'animate',\n                    '[class.embedded]': 'embedded',\n                    '(click)': '!isCloseable && clickHandler($event)',\n                },\n                template: `\n        <div class=\"toast-icon\">\n            <i [ngClass]=\"iconClass\"></i>\n        </div>\n        <div class=\"toast-content\">\n            <h5 *ngIf=\"title\">{{title}}</h5>\n            <p *ngIf=\"_message\" [class.message-only]=\"!title\" [innerHtml]=\"_message\"></p>\n            <div *ngIf=\"link\" class=\"link-generated\">\n                <input type=\"text\" [value]=\"link\" onfocus=\"this.select();\"/>\n            </div>\n            <div class=\"dialogue\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div class=\"close-icon\" *ngIf=\"isCloseable\" (click)=\"close($event)\">\n            <i class=\"bhi-times\"></i>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoToastElement.ctorParameters = () => [\n    { type: DomSanitizer }\n];\nNovoToastElement.propDecorators = {\n    theme: [{ type: Input }],\n    icon: [{ type: Input }],\n    title: [{ type: Input }],\n    hasDialogue: [{ type: Input }],\n    link: [{ type: Input }],\n    isCloseable: [{ type: Input }],\n    message: [{ type: Input }],\n    closed: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoToastElement.prototype.theme;\n    /** @type {?} */\n    NovoToastElement.prototype.icon;\n    /** @type {?} */\n    NovoToastElement.prototype.title;\n    /** @type {?} */\n    NovoToastElement.prototype.hasDialogue;\n    /** @type {?} */\n    NovoToastElement.prototype.link;\n    /** @type {?} */\n    NovoToastElement.prototype.isCloseable;\n    /** @type {?} */\n    NovoToastElement.prototype.closed;\n    /** @type {?} */\n    NovoToastElement.prototype._message;\n    /** @type {?} */\n    NovoToastElement.prototype.show;\n    /** @type {?} */\n    NovoToastElement.prototype.animate;\n    /** @type {?} */\n    NovoToastElement.prototype.parent;\n    /** @type {?} */\n    NovoToastElement.prototype.launched;\n    /** @type {?} */\n    NovoToastElement.prototype.position;\n    /** @type {?} */\n    NovoToastElement.prototype.time;\n    /** @type {?} */\n    NovoToastElement.prototype.iconClass;\n    /** @type {?} */\n    NovoToastElement.prototype.alertTheme;\n    /** @type {?} */\n    NovoToastElement.prototype.embedded;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoToastElement.prototype.sanitizer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/toast/ToastService.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ToastOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    ToastOptions.prototype.title;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.message;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.icon;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.theme;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.hideDelay;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.position;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.isCloseable;\n    /** @type {?|undefined} */\n    ToastOptions.prototype.customClass;\n}\nclass NovoToastService {\n    /**\n     * @param {?} componentUtils\n     */\n    constructor(componentUtils) {\n        this.componentUtils = componentUtils;\n        this.references = [];\n        this.icons = { default: 'bell', success: 'check', info: 'info', warning: 'warning', danger: 'remove' };\n        this.defaults = { hideDelay: 3500, position: 'growlTopRight', theme: 'default' };\n    }\n    /**\n     * @param {?} view\n     * @return {?}\n     */\n    set parentViewContainer(view) {\n        this._parentViewContainer = view;\n    }\n    /**\n     * @param {?} options\n     * @param {?=} toastElement\n     * @return {?}\n     */\n    alert(options, toastElement = NovoToastElement) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (!this._parentViewContainer) {\n                console.error('No parent view container specified for the ToastService. Set it inside your main application. \\nthis.toastService.parentViewContainer = view (ViewContainerRef)');\n                return;\n            }\n            /** @type {?} */\n            const toast = this.componentUtils.append(toastElement, this._parentViewContainer);\n            this.references.push(toast);\n            this.handleAlert(toast.instance, options);\n            resolve(toast);\n        }));\n    }\n    /**\n     * @param {?} toast\n     * @return {?}\n     */\n    isVisible(toast) {\n        return toast.show;\n    }\n    /**\n     * @param {?} toast\n     * @return {?}\n     */\n    hide(toast) {\n        toast.animate = false;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            toast.show = false;\n            /** @type {?} */\n            const REF = this.references.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => x.instance === toast))[0];\n            if (REF) {\n                this.references.splice(this.references.indexOf(REF), 1);\n                REF.destroy();\n            }\n        }), 300);\n    }\n    /**\n     * @param {?} toast\n     * @param {?} options\n     * @return {?}\n     */\n    handleAlert(toast, options) {\n        this.setToastOnSession(toast, options);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.show(toast);\n        }), 20);\n        if (!toast.isCloseable) {\n            this.toastTimer(toast);\n        }\n    }\n    /**\n     * @param {?} toast\n     * @param {?} opts\n     * @return {?}\n     */\n    setToastOnSession(toast, opts) {\n        /** @type {?} */\n        const OPTIONS = typeof opts === 'object' ? opts : {};\n        toast.parent = this;\n        toast.title = OPTIONS.title || '';\n        toast.message = OPTIONS.message || '';\n        toast.hideDelay = OPTIONS.hideDelay || this.defaults.hideDelay;\n        toast.link = OPTIONS.link || '';\n        toast.isCloseable = OPTIONS.isCloseable || false;\n        /** @type {?} */\n        const CUSTOM_CLASS = OPTIONS.customClass || '';\n        /** @type {?} */\n        const ALERT_STYLE = OPTIONS.theme || this.defaults.theme;\n        /** @type {?} */\n        const ALERT_POSITION = OPTIONS.position || this.defaults.position;\n        /** @type {?} */\n        const ALERT_ICON = OPTIONS.icon || this.icons.default;\n        toast.iconClass = `bhi-${ALERT_ICON}`;\n        toast.launched = true;\n        toast.alertTheme = `${ALERT_STYLE} ${ALERT_POSITION} ${CUSTOM_CLASS} toast-container launched`;\n    }\n    /**\n     * @param {?} toast\n     * @return {?}\n     */\n    show(toast) {\n        toast.show = true;\n        setTimeout(addClass, 25);\n        /**\n         * Adds animate class to be called after a timeout\n         *\n         * @return {?}\n         */\n        function addClass() {\n            toast.animate = true;\n        }\n    }\n    /**\n     * @param {?} toast\n     * @return {?}\n     */\n    toastTimer(toast) {\n        if (toast.hideDelay < 0) {\n            return;\n        }\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.hide(toast);\n        }), toast.hideDelay);\n    }\n}\nNovoToastService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNovoToastService.ctorParameters = () => [\n    { type: ComponentUtils }\n];\nif (false) {\n    /** @type {?} */\n    NovoToastService.prototype._parentViewContainer;\n    /** @type {?} */\n    NovoToastService.prototype.references;\n    /** @type {?} */\n    NovoToastService.prototype.icons;\n    /** @type {?} */\n    NovoToastService.prototype.defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoToastService.prototype.componentUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/FieldInteractionModals.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ControlConfirmModal {\n    /**\n     * @param {?} modalRef\n     * @param {?} params\n     * @param {?} labels\n     */\n    constructor(modalRef, params, labels) {\n        this.modalRef = modalRef;\n        this.params = params;\n        this.labels = labels;\n    }\n    /**\n     * @param {?} result\n     * @return {?}\n     */\n    close(result) {\n        this.modalRef.close(result);\n    }\n}\nControlConfirmModal.decorators = [\n    { type: Component, args: [{\n                selector: 'control-confirm-modal',\n                template: `\n        <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n            <h1>{{ labels.confirmChangesModalMessage }}</h1>\n            <h2 *ngIf=\"!params['message']\"><label>{{ params['label'] }}:</label> {{ params['oldValue'] }} <i class=\"bhi-arrow-right\"></i> {{ params['newValue'] }}</h2>\n            <h2 *ngIf=\"params['message']\">{{ params['message'] }}</h2>\n            <button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">{{ labels.cancel }}</button>\n            <button theme=\"primary\" icon=\"check\" (click)=\"close(true)\" autofocus [attr.data-automation-id]=\"'field-interaction-modal-save-' + params['key']\">{{ labels.save }}</button>\n        </novo-notification>\n    `\n            }] }\n];\n/** @nocollapse */\nControlConfirmModal.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: NovoModalParams },\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ControlConfirmModal.prototype.modalRef;\n    /** @type {?} */\n    ControlConfirmModal.prototype.params;\n    /** @type {?} */\n    ControlConfirmModal.prototype.labels;\n}\nclass ControlPromptModal {\n    /**\n     * @param {?} modalRef\n     * @param {?} params\n     * @param {?} labels\n     */\n    constructor(modalRef, params, labels) {\n        this.modalRef = modalRef;\n        this.params = params;\n        this.labels = labels;\n    }\n    /**\n     * @param {?} result\n     * @return {?}\n     */\n    close(result) {\n        this.modalRef.close(result);\n    }\n}\nControlPromptModal.decorators = [\n    { type: Component, args: [{\n                selector: 'control-prompt-modal',\n                template: `\n        <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n            <h1>{{ labels.promptModalMessage }}</h1>\n            <p *ngFor=\"let change of params['changes']\">{{ change }}</p>\n            <button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">{{ labels.cancel }}</button>\n            <button theme=\"primary\" icon=\"check\" (click)=\"close(true)\" autofocus [attr.data-automation-id]=\"'field-interaction-modal-yes-' + params['key']\">{{ labels.yes }}</button>\n        </novo-notification>\n    `\n            }] }\n];\n/** @nocollapse */\nControlPromptModal.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: NovoModalParams },\n    { type: NovoLabelService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ControlPromptModal.prototype.modalRef;\n    /** @type {?} */\n    ControlPromptModal.prototype.params;\n    /** @type {?} */\n    ControlPromptModal.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/FieldInteractionApi.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CustomHttpImpl {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n        this.mapFn = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x);\n    }\n    /**\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options) {\n        this.url = url;\n        this.options = options;\n        return this;\n    }\n    /**\n     * @param {?} mapFn\n     * @return {?}\n     */\n    map(mapFn) {\n        this.mapFn = mapFn;\n        return this;\n    }\n    /**\n     * @param {?} resolve\n     * @param {?=} reject\n     * @return {?}\n     */\n    subscribe(resolve, reject) {\n        return this.http\n            .get(this.url, this.options)\n            .pipe(map(this.mapFn))\n            .subscribe(resolve, reject);\n    }\n}\nif (false) {\n    /** @type {?} */\n    CustomHttpImpl.prototype.url;\n    /** @type {?} */\n    CustomHttpImpl.prototype.options;\n    /** @type {?} */\n    CustomHttpImpl.prototype.mapFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CustomHttpImpl.prototype.http;\n}\nclass FieldInteractionApi {\n    /**\n     * @param {?} toaster\n     * @param {?} modalService\n     * @param {?} formUtils\n     * @param {?} http\n     * @param {?} labels\n     */\n    constructor(toaster, modalService, formUtils, http, labels) {\n        this.toaster = toaster;\n        this.modalService = modalService;\n        this.formUtils = formUtils;\n        this.http = http;\n        this.labels = labels;\n        this.getOptionsConfig = (/**\n         * @param {?} args\n         * @param {?=} mapper\n         * @param {?=} filteredOptionsCreator\n         * @param {?=} pickerConfigFormat\n         * @return {?}\n         */\n        (args, mapper, filteredOptionsCreator, pickerConfigFormat) => {\n            if (filteredOptionsCreator || 'optionsUrl' in args || 'optionsUrlBuilder' in args || 'optionsPromise' in args) {\n                /** @type {?} */\n                const format = ('format' in args && args.format) || pickerConfigFormat;\n                return Object.assign({ options: this.createOptionsFunction(args, mapper, filteredOptionsCreator) }, ('emptyPickerMessage' in args && { emptyPickerMessage: args.emptyPickerMessage }), (format && { format }));\n            }\n            else if ('options' in args && Array.isArray(args.options)) {\n                return {\n                    options: [...args.options],\n                };\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.createOptionsFunction = (/**\n         * @param {?} config\n         * @param {?=} mapper\n         * @param {?=} filteredOptionsCreator\n         * @return {?}\n         */\n        (config, mapper, filteredOptionsCreator) => (/**\n         * @param {?} query\n         * @param {?=} page\n         * @return {?}\n         */\n        (query, page) => {\n            if ('optionsPromise' in config && config.optionsPromise) {\n                return config.optionsPromise(query, new CustomHttpImpl(this.http), page);\n            }\n            else if (('optionsUrlBuilder' in config && config.optionsUrlBuilder) || ('optionsUrl' in config && config.optionsUrl)) {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @param {?} reject\n                 * @return {?}\n                 */\n                (resolve, reject) => {\n                    /** @type {?} */\n                    const url = 'optionsUrlBuilder' in config ? config.optionsUrlBuilder(query) : `${config.optionsUrl}?filter=${query || ''}`;\n                    this.http\n                        .get(url)\n                        .pipe(map((/**\n                     * @param {?} results\n                     * @return {?}\n                     */\n                    (results) => {\n                        if (mapper) {\n                            return results.map(mapper);\n                        }\n                        return results;\n                    })))\n                        .subscribe(resolve, reject);\n                }));\n            }\n            else if (filteredOptionsCreator) {\n                if ('where' in config) {\n                    return filteredOptionsCreator(config.where)(query, page);\n                }\n                else {\n                    return filteredOptionsCreator()(query, page);\n                }\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get associations() {\n        return this.form.hasOwnProperty('associations') ? this.form.associations : {};\n    }\n    /**\n     * @return {?}\n     */\n    get currentEntity() {\n        return this.form.hasOwnProperty('currentEntity') ? this.form.currentEntity : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get currentEntityId() {\n        return this.form.hasOwnProperty('currentEntityId') ? this.form.currentEntityId : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get isEdit() {\n        return this.form.hasOwnProperty('edit') ? this.form.edit : false;\n    }\n    /**\n     * @return {?}\n     */\n    get isAdd() {\n        return this.form.hasOwnProperty('edit') ? !this.form.edit : false;\n    }\n    /**\n     * @param {?} globals\n     * @return {?}\n     */\n    set globals(globals) {\n        this._globals = globals;\n    }\n    /**\n     * @return {?}\n     */\n    get globals() {\n        return this._globals;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    set currentKey(key) {\n        this._currentKey = key;\n    }\n    /**\n     * @return {?}\n     */\n    get currentKey() {\n        return this._currentKey;\n    }\n    /**\n     * @return {?}\n     */\n    isActiveControlValid() {\n        return !!this.getValue(this.currentKey);\n    }\n    /**\n     * @return {?}\n     */\n    getActiveControl() {\n        return this.getControl(this.currentKey);\n    }\n    /**\n     * @return {?}\n     */\n    getActiveKey() {\n        return this.currentKey;\n    }\n    /**\n     * @return {?}\n     */\n    getActiveValue() {\n        return this.getValue(this.currentKey);\n    }\n    /**\n     * @return {?}\n     */\n    getActiveInitialValue() {\n        return this.getInitialValue(this.currentKey);\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getFieldSet(key, otherForm) {\n        if (!key) {\n            console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n            return null;\n        }\n        /** @type {?} */\n        const form = otherForm || this.form;\n        /** @type {?} */\n        const fieldSet = form.fieldsets.find((/**\n         * @param {?} fs\n         * @return {?}\n         */\n        (fs) => fs.key && fs.key.toLowerCase() === key.toLowerCase()));\n        if (!fieldSet) {\n            console.error('[FieldInteractionAPI] - could not find a fieldset in the form by the key --', key); // tslint:disable-line\n            return null;\n        }\n        return (/** @type {?} */ (fieldSet));\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getControl(key, otherForm) {\n        if (!key) {\n            console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n            return null;\n        }\n        /** @type {?} */\n        const form = otherForm || this.form;\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        if (!control) {\n            console.error('[FieldInteractionAPI] - could not find a control in the form by the key --', key); // tslint:disable-line\n            return null;\n        }\n        return control;\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getFormGroupArray(key, otherForm) {\n        if (!key) {\n            console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n            return null;\n        }\n        /** @type {?} */\n        const form = otherForm || this.form;\n        /** @type {?} */\n        const formArray = (/** @type {?} */ (form.controls[key]));\n        if (!formArray || !formArray.controls) {\n            console.error('[FieldInteractionAPI] - could not find a form array in the form by the key --', key); // tslint:disable-line\n            return null;\n        }\n        return (/** @type {?} */ (formArray.controls));\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getValue(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control) {\n            return control.value;\n        }\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getRawValue(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control) {\n            return control.rawValue;\n        }\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getInitialValue(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control) {\n            return control.initialValue;\n        }\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setValue(key, value, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.setValue(value, options);\n            this.triggerEvent({ controlKey: key, prop: 'value', value }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    patchValue(key, value, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.setValue(value, options);\n            this.triggerEvent({ controlKey: key, prop: 'value', value }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} isReadOnly\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setReadOnly(key, isReadOnly, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.setReadOnly(isReadOnly);\n            this.triggerEvent({ controlKey: key, prop: 'readOnly', value: isReadOnly }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} required\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setRequired(key, required, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.setRequired(required);\n            this.triggerEvent({ controlKey: key, prop: 'required', value: required }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} clearValue\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    hide(key, clearValue = true, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.hide(clearValue);\n            this.disable(key, { emitEvent: false });\n            this.triggerEvent({ controlKey: key, prop: 'hidden', value: true }, otherForm);\n        }\n        return control;\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    show(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.show();\n            this.enable(key, { emitEvent: false });\n            this.triggerEvent({ controlKey: key, prop: 'hidden', value: false }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    hideFieldSetHeader(key) {\n        /** @type {?} */\n        const fieldSet = this.getFieldSet(key);\n        if (fieldSet) {\n            fieldSet.hidden = true;\n        }\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    showFieldSetHeader(key) {\n        /** @type {?} */\n        const fieldSet = this.getFieldSet(key);\n        if (fieldSet) {\n            fieldSet.hidden = false;\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    disable(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.disable(options);\n            this.triggerEvent({ controlKey: key, prop: 'readOnly', value: true }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    enable(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.enable(options);\n            this.triggerEvent({ controlKey: key, prop: 'readOnly', value: false }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} validationMessage\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsInvalid(key, validationMessage, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control) {\n            if (control && !control.restrictFieldInteractions) {\n                control.markAsInvalid(validationMessage);\n                this.triggerEvent({ controlKey: key, prop: 'errors', value: validationMessage }, otherForm);\n            }\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsValid(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control) {\n            if (control && !control.restrictFieldInteractions) {\n                control.markAsValid();\n                this.triggerEvent({ controlKey: key, prop: 'errors', value: null }, otherForm);\n            }\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsDirty(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.markAsDirty(options);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsPending(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.markAsPending(options);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsPristine(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.markAsPristine(options);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsTouched(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.markAsTouched(options);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    markAsUntouched(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.markAsUntouched(options);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    updateValueAndValidity(key, options, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.updateValueAndValidity(options);\n        }\n    }\n    /**\n     * @param {?} toastConfig\n     * @return {?}\n     */\n    displayToast(toastConfig) {\n        if (this.toaster) {\n            this.toaster.alert(toastConfig);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} tip\n     * @param {?=} icon\n     * @param {?=} allowDismiss\n     * @param {?=} sanitize\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    displayTip(key, tip, icon, allowDismiss, sanitize, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.tipWell = {\n                tip,\n                icon,\n                button: allowDismiss,\n                sanitize: sanitize !== false,\n            };\n            this.triggerEvent({ controlKey: key, prop: 'tipWell', value: tip }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    clearTip(key, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.tipWell = null;\n            this.triggerEvent({ controlKey: key, prop: 'tipWell', value: null }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} tooltip\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setTooltip(key, tooltip, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control.tooltip = tooltip;\n            if (tooltip.length >= 40 && tooltip.length <= 400) {\n                control.tooltipSize = 'large';\n                control.tooltipPreline = true;\n            }\n            else if (tooltip.length > 400) {\n                control.tooltipSize = 'extra-large';\n            }\n            this.triggerEvent({ controlKey: key, prop: 'tooltip', value: tooltip }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} message\n     * @return {?}\n     */\n    confirmChanges(key, message) {\n        /** @type {?} */\n        const history = this.getProperty(key, 'valueHistory');\n        /** @type {?} */\n        const oldValue = history[history.length - 2];\n        /** @type {?} */\n        const newValue = this.getValue(key);\n        /** @type {?} */\n        const label = this.getProperty(key, 'label');\n        ((/** @type {?} */ (document.activeElement))).blur();\n        return this.modalService.open(ControlConfirmModal, { oldValue, newValue, label, message, key }).onClosed.then((/**\n         * @param {?} result\n         * @return {?}\n         */\n        (result) => {\n            if (!result) {\n                this.setValue(key, oldValue, { emitEvent: false });\n            }\n        }));\n    }\n    /**\n     * @param {?} key\n     * @param {?} changes\n     * @return {?}\n     */\n    promptUser(key, changes) {\n        ((/** @type {?} */ (document.activeElement))).blur();\n        return this.modalService.open(ControlPromptModal, { changes, key }).onClosed;\n    }\n    /**\n     * @param {?} key\n     * @param {?} prop\n     * @param {?} value\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setProperty(key, prop, value, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            control[prop] = value;\n            this.triggerEvent({ controlKey: key, prop, value }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} prop\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    getProperty(key, prop, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            return control[prop];\n        }\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    isValueEmpty(key) {\n        /** @type {?} */\n        const value = this.getValue(key);\n        return Helpers.isEmpty(value);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    isValueBlank(key) {\n        /** @type {?} */\n        const value = this.getValue(key);\n        return Helpers.isBlank(value);\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    hasField(key, otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        return !!form.controls[key];\n    }\n    /**\n     * @param {?} key\n     * @param {?} newOption\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    addStaticOption(key, newOption, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        /** @type {?} */\n        let optionToAdd = newOption;\n        /** @type {?} */\n        let isUnique = true;\n        if (control && !control.restrictFieldInteractions) {\n            /** @type {?} */\n            let currentOptions = this.getProperty(key, 'options');\n            if (!currentOptions || !currentOptions.length) {\n                /** @type {?} */\n                const config = this.getProperty(key, 'config');\n                if (config) {\n                    currentOptions = config.options;\n                    if (currentOptions && Array.isArray(currentOptions)) {\n                        if (currentOptions[0].value && !optionToAdd.value) {\n                            optionToAdd = { value: newOption, label: newOption };\n                        }\n                        config.options = [...currentOptions, optionToAdd];\n                        this.setProperty(key, 'config', config);\n                    }\n                }\n            }\n            else {\n                if (currentOptions[0].value && !optionToAdd.value) {\n                    optionToAdd = { value: newOption, label: newOption };\n                }\n                // Ensure duplicate values are not added\n                currentOptions.forEach((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                (option) => {\n                    if ((option.value && option.value === optionToAdd.value) || option === optionToAdd) {\n                        isUnique = false;\n                    }\n                }));\n                if (isUnique) {\n                    this.setProperty(key, 'options', [...currentOptions, optionToAdd]);\n                }\n            }\n            if (isUnique) {\n                this.triggerEvent({ controlKey: key, prop: 'options', value: [...currentOptions, optionToAdd] }, otherForm);\n            }\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} optionToRemove\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    removeStaticOption(key, optionToRemove, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            /** @type {?} */\n            let currentOptions = this.getProperty(key, 'options');\n            if (!currentOptions || !currentOptions.length) {\n                /** @type {?} */\n                const config = this.getProperty(key, 'config');\n                if (config) {\n                    currentOptions = config.options;\n                    if (currentOptions && Array.isArray(currentOptions)) {\n                        /** @type {?} */\n                        let index = -1;\n                        currentOptions.forEach((/**\n                         * @param {?} opt\n                         * @param {?} i\n                         * @return {?}\n                         */\n                        (opt, i) => {\n                            if (opt.value || opt.label) {\n                                if (opt.value === optionToRemove || opt.label === optionToRemove) {\n                                    index = i;\n                                }\n                            }\n                            else {\n                                if (opt === optionToRemove) {\n                                    index = i;\n                                }\n                            }\n                        }));\n                        if (index !== -1) {\n                            currentOptions.splice(index, 1);\n                        }\n                        config.options = [...currentOptions];\n                        this.setProperty(key, 'config', config);\n                    }\n                }\n            }\n            else {\n                /** @type {?} */\n                let index = -1;\n                currentOptions.forEach((/**\n                 * @param {?} opt\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (opt, i) => {\n                    if (opt.value || opt.label) {\n                        if (opt.value === optionToRemove || opt.label === optionToRemove) {\n                            index = i;\n                        }\n                    }\n                    else {\n                        if (opt === optionToRemove) {\n                            index = i;\n                        }\n                    }\n                }));\n                if (index !== -1) {\n                    currentOptions.splice(index, 1);\n                }\n                this.setProperty(key, 'options', [...currentOptions]);\n            }\n            this.triggerEvent({ controlKey: key, prop: 'options', value: control.options }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} config\n     * @param {?=} mapper\n     * @return {?}\n     */\n    modifyPickerConfig(key, config, mapper) {\n        // call another method to avoid a breaking change but still enable stricter types\n        this.mutatePickerConfig(key, (/** @type {?} */ (config)), mapper);\n    }\n    /**\n     * @param {?} key\n     * @param {?} args\n     * @param {?=} mapper\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    mutatePickerConfig(key, args, mapper, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            const { minSearchLength, enableInfiniteScroll, filteredOptionsCreator, format, getLabels, emptyPickerMessage } = control.config;\n            /** @type {?} */\n            const optionsConfig = this.getOptionsConfig(args, mapper, filteredOptionsCreator, format);\n            /** @type {?} */\n            const newConfig = Object.assign({}, (emptyPickerMessage && { emptyPickerMessage }), (Number.isInteger(minSearchLength) && { minSearchLength }), (enableInfiniteScroll && { enableInfiniteScroll }), (filteredOptionsCreator && { filteredOptionsCreator }), (getLabels && { getLabels }), (optionsConfig && optionsConfig), { resultsTemplate: control.config.resultsTemplate || ('resultsTemplateType' in args && this.getAppropriateResultsTemplate(args.resultsTemplateType)) });\n            this.setProperty(key, 'config', newConfig);\n            this.triggerEvent({ controlKey: key, prop: 'pickerConfig', value: args }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} properties\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    addPropertiesToPickerConfig(key, properties, otherForm) {\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (!control || control.restrictFieldInteractions) {\n            return;\n        }\n        /** @type {?} */\n        const config = Object.assign({}, control.config, properties);\n        this.setProperty(key, 'config', config);\n        this.triggerEvent({ controlKey: key, prop: 'pickerConfig', value: properties }, otherForm);\n    }\n    /**\n     * @private\n     * @param {?} resultsTemplateType\n     * @return {?}\n     */\n    getAppropriateResultsTemplate(resultsTemplateType) {\n        switch (resultsTemplateType) {\n            case 'entity-picker':\n                return EntityPickerResults;\n            default:\n                return undefined;\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} loading\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    setLoading(key, loading, otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            if (loading) {\n                form.controls[key].fieldInteractionloading = true;\n                control.setErrors({ loading: true });\n                // History\n                clearTimeout(this.asyncBlockTimeout);\n                this.asyncBlockTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.setLoading(key, false);\n                    this.displayTip(key, this.labels.asyncFailure, 'info', false);\n                    this.setProperty(key, '_displayedAsyncFailure', true);\n                }), 10000);\n            }\n            else {\n                form.controls[key].fieldInteractionloading = false;\n                clearTimeout(this.asyncBlockTimeout);\n                control.setErrors({ loading: null });\n                control.updateValueAndValidity({ emitEvent: false });\n                if (this.getProperty(key, '_displayedAsyncFailure')) {\n                    this.setProperty(key, 'tipWell', null);\n                }\n            }\n            this.triggerEvent({ controlKey: key, prop: 'loading', value: loading }, otherForm);\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} metaForNewField\n     * @param {?=} position\n     * @param {?=} initialValue\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    addControl(key, metaForNewField, position = FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD, initialValue, otherForm) {\n        if (!metaForNewField.key && !metaForNewField.name) {\n            console.error('[FieldInteractionAPI] - missing \"key\" in meta for new field'); // tslint:disable-line\n            return null;\n        }\n        if (!metaForNewField.key) {\n            // If key is not explicitly declared, use name as key\n            metaForNewField.key = metaForNewField.name;\n        }\n        /** @type {?} */\n        const form = otherForm || this.form;\n        if (form.controls[metaForNewField.key]) {\n            // Field is already on the form\n            return null;\n        }\n        /** @type {?} */\n        const control = form.controls[key];\n        /** @type {?} */\n        let fieldsetIndex;\n        /** @type {?} */\n        let controlIndex;\n        if (control) {\n            fieldsetIndex = -1;\n            controlIndex = -1;\n            form.fieldsets.forEach((/**\n             * @param {?} fieldset\n             * @param {?} fi\n             * @return {?}\n             */\n            (fieldset, fi) => {\n                fieldset.controls.forEach((/**\n                 * @param {?} fieldsetControl\n                 * @param {?} ci\n                 * @return {?}\n                 */\n                (fieldsetControl, ci) => {\n                    if (fieldsetControl.key === key) {\n                        fieldsetIndex = fi;\n                        controlIndex = ci;\n                    }\n                }));\n            }));\n            // Change the position of the newly added field\n            switch (position) {\n                case FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD:\n                    // Adding field above active field\n                    // index can stay the same\n                    break;\n                case FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD:\n                    // Adding field below active field\n                    controlIndex += 1;\n                    break;\n                case FieldInteractionApi.FIELD_POSITIONS.TOP_OF_FORM:\n                    // Adding field to the top of the form\n                    controlIndex = 0;\n                    fieldsetIndex = 0;\n                    break;\n                case FieldInteractionApi.FIELD_POSITIONS.BOTTOM_OF_FORM:\n                    // Adding field to the bottom of the form\n                    fieldsetIndex = form.fieldsets.length - 1;\n                    controlIndex = form.fieldsets[fieldsetIndex].controls.length;\n                    break;\n                default:\n                    break;\n            }\n            if (fieldsetIndex !== -1 && controlIndex !== -1) {\n                /** @type {?} */\n                const novoControl = this.formUtils.getControlForField(metaForNewField, this.http, {});\n                novoControl.hidden = false;\n                /** @type {?} */\n                const formControl = new NovoFormControl(initialValue, novoControl);\n                form.addControl(novoControl.key, formControl);\n                form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 0, novoControl);\n                this.triggerEvent({ controlKey: key, prop: 'addControl', value: formControl }, otherForm);\n            }\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    removeControl(key, otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        if (!form.controls[key]) {\n            // Field is not on the form\n            return null;\n        }\n        /** @type {?} */\n        const control = this.getControl(key, otherForm);\n        if (control && !control.restrictFieldInteractions) {\n            /** @type {?} */\n            let fieldsetIndex = -1;\n            /** @type {?} */\n            let controlIndex = -1;\n            form.fieldsets.forEach((/**\n             * @param {?} fieldset\n             * @param {?} fi\n             * @return {?}\n             */\n            (fieldset, fi) => {\n                fieldset.controls.forEach((/**\n                 * @param {?} fieldsetControl\n                 * @param {?} ci\n                 * @return {?}\n                 */\n                (fieldsetControl, ci) => {\n                    if (fieldsetControl.key === key) {\n                        fieldsetIndex = fi;\n                        controlIndex = ci;\n                    }\n                }));\n            }));\n            if (fieldsetIndex !== -1 && controlIndex !== -1) {\n                form.removeControl(key);\n                form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 1);\n                this.triggerEvent({ controlKey: key, prop: 'removeControl', value: key }, otherForm);\n            }\n        }\n    }\n    /**\n     * @param {?} func\n     * @param {?=} wait\n     * @return {?}\n     */\n    debounce(func, wait = 50) {\n        /** @type {?} */\n        let h;\n        clearTimeout(h);\n        h = setTimeout((/**\n         * @return {?}\n         */\n        () => func()), wait);\n    }\n    /**\n     * Allows traversing nested forms by accessing the parent form.\n     *\n     * @param {?=} otherForm optional parameter for getting the parent of a different form.\n     * If not provided will default to the parent of the current form.\n     * @return {?}\n     */\n    getParent(otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        return form.parent;\n    }\n    /**\n     * The index is assigned as a property on the form's associations object when the form is part of a NovoControlGroup array.\n     *\n     * @param {?=} otherForm optional parameter for getting the index of a different form. If not provided will default to the current form.\n     * @return {?} the index if it exists for the current or form, or null otherwise.\n     */\n    getIndex(otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        return (form.associations && form.associations.hasOwnProperty('index')) ? form.associations.index : null;\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?=} otherForm\n     * @return {?}\n     */\n    triggerEvent(event, otherForm) {\n        /** @type {?} */\n        const form = otherForm || this.form;\n        if (form && form.fieldInteractionEvents) {\n            form.fieldInteractionEvents.emit(event);\n        }\n    }\n}\nFieldInteractionApi.FIELD_POSITIONS = {\n    ABOVE_FIELD: 'ABOVE_FIELD',\n    BELOW_FIELD: 'BELOW_FIELD',\n    TOP_OF_FORM: 'TOP_OF_FORM',\n    BOTTOM_OF_FORM: 'BOTTOM_OF_FORM',\n};\nFieldInteractionApi.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nFieldInteractionApi.ctorParameters = () => [\n    { type: NovoToastService },\n    { type: NovoModalService },\n    { type: FormUtils },\n    { type: HttpClient },\n    { type: NovoLabelService }\n];\nif (false) {\n    /** @type {?} */\n    FieldInteractionApi.FIELD_POSITIONS;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype._globals;\n    /** @type {?} */\n    FieldInteractionApi.prototype.form;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype._currentKey;\n    /** @type {?} */\n    FieldInteractionApi.prototype.appBridge;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.asyncBlockTimeout;\n    /** @type {?} */\n    FieldInteractionApi.prototype.getOptionsConfig;\n    /** @type {?} */\n    FieldInteractionApi.prototype.createOptionsFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.toaster;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.modalService;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.formUtils;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.http;\n    /**\n     * @type {?}\n     * @private\n     */\n    FieldInteractionApi.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/template/NovoTemplateService.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTemplateService {\n    constructor() {\n        this.templates = {\n            default: {},\n            custom: {},\n        };\n    }\n    /**\n     * @return {?}\n     */\n    getAll() {\n        /** @type {?} */\n        const templates = {};\n        /** @type {?} */\n        const customTemplateTypes = Object.keys(this.templates.custom);\n        /** @type {?} */\n        const defaultTemplateTypes = Object.keys(this.templates.default);\n        defaultTemplateTypes.forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            templates[type] = this.templates.default[type];\n        }));\n        customTemplateTypes.forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            templates[type] = this.templates.custom[type];\n        }));\n        return templates;\n    }\n    /**\n     * @param {?} key\n     * @param {?} template\n     * @return {?}\n     */\n    addDefault(key, template) {\n        this.templates.default[key] = template;\n    }\n    /**\n     * @param {?} key\n     * @param {?} template\n     * @return {?}\n     */\n    addCustom(key, template) {\n        this.templates.custom[key] = template;\n    }\n}\nNovoTemplateService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNovoTemplateService.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    NovoTemplateService.prototype.templates;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/Control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IMaskOptions() { }\nif (false) {\n    /** @type {?} */\n    IMaskOptions.prototype.mask;\n    /** @type {?} */\n    IMaskOptions.prototype.keepCharPositions;\n    /** @type {?} */\n    IMaskOptions.prototype.guide;\n}\nclass NovoAutoSize {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n    }\n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput(textArea) {\n        this.adjust();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.adjust();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    adjust() {\n        /** @type {?} */\n        const nativeElement = this.element.nativeElement;\n        nativeElement.style.height = nativeElement.style.minHeight;\n        nativeElement.style.height = `${nativeElement.scrollHeight}px`;\n    }\n}\nNovoAutoSize.decorators = [\n    { type: Directive, args: [{\n                selector: 'textarea[autosize]',\n            },] }\n];\n/** @nocollapse */\nNovoAutoSize.ctorParameters = () => [\n    { type: ElementRef }\n];\nNovoAutoSize.propDecorators = {\n    onInput: [{ type: HostListener, args: ['input', ['$event.target'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoAutoSize.prototype.element;\n}\n// undo all template context references!\nclass NovoControlElement extends OutsideClick {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} dateFormatService\n     * @param {?} fieldInteractionApi\n     * @param {?} templateService\n     * @param {?} changeDetectorRef\n     * @param {?=} locale\n     */\n    constructor(element, labels, dateFormatService, fieldInteractionApi, templateService, changeDetectorRef, locale = 'en-US') {\n        super(element);\n        this.labels = labels;\n        this.dateFormatService = dateFormatService;\n        this.fieldInteractionApi = fieldInteractionApi;\n        this.templateService = templateService;\n        this.changeDetectorRef = changeDetectorRef;\n        this.locale = locale;\n        this.condensed = false;\n        this.autoFocus = false;\n        this.change = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.save = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.upload = new EventEmitter();\n        this.formattedValue = '';\n        this.maxLengthMet = false;\n        this.itemCount = 0;\n        this._blurEmitter = new EventEmitter();\n        this._focusEmitter = new EventEmitter();\n        this._focused = false;\n        this._enteredText = '';\n        this._showCount = false;\n        this.maxLengthMetErrorfields = [];\n        this.templates = {};\n        this.loading = false;\n    }\n    /**\n     * @return {?}\n     */\n    get onBlur() {\n        return this._blurEmitter.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    get onFocus() {\n        return this._focusEmitter.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    get maxlengthMetField() {\n        if (this.maxLengthMetErrorfields && this.maxLengthMetErrorfields.length) {\n            return this.maxLengthMetErrorfields.find((/**\n             * @param {?} field\n             * @return {?}\n             */\n            (field) => field === this.focusedField)) || '';\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get maxlengthErrorField() {\n        if (this.errors && this.errors.maxlengthFields && this.errors.maxlengthFields.length) {\n            return this.errors.maxlengthFields.find((/**\n             * @param {?} field\n             * @return {?}\n             */\n            (field) => field === this.focusedField)) || '';\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get showFieldMessage() {\n        return !this.errors && !this.maxLengthMet && Helpers.isBlank(this.control.description);\n    }\n    /**\n     * @return {?}\n     */\n    get showMaxLengthMetMessage() {\n        return ((this.isDirty && this.maxLengthMet && this.focused && (!this.errors || (this.errors && !this.errors.maxlength))) ||\n            (this.isDirty &&\n                this.maxlengthMetField &&\n                this.focused &&\n                (!this.errors || (this.errors && !this.errors.maxlengthFields.includes(this.maxlengthMetField)))));\n    }\n    /**\n     * @return {?}\n     */\n    get showErrorState() {\n        return ((this.isDirty && this.errors) ||\n            (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields) ||\n            (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields && this.maxlengthErrorField));\n    }\n    /**\n     * @return {?}\n     */\n    get showCount() {\n        /** @type {?} */\n        const MAX_LENGTH_CONTROL_TYPES = ['textbox', 'picker', 'text-area'];\n        /** @type {?} */\n        const charCount = this.focused &&\n            !!this.form.controls[this.control.key].maxlength &&\n            MAX_LENGTH_CONTROL_TYPES.includes(this.form.controls[this.control.key].controlType);\n        return this._showCount || charCount;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showCount(value) {\n        this._showCount = value;\n    }\n    /**\n     * @return {?}\n     */\n    get showMessages() {\n        return (this.showCount ||\n            !Helpers.isEmpty(this.form.controls[this.control.key].warning) ||\n            !Helpers.isEmpty(this.form.controls[this.control.key].description));\n    }\n    /**\n     * @return {?}\n     */\n    get decimalSeparator() {\n        return new Intl.NumberFormat(this.locale).format(1.2)[1];\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const DO_NOT_FOCUS_ME = ['picker', 'time', 'date', 'date-time'];\n        if (this.autoFocus && !DO_NOT_FOCUS_ME.includes(this.control.controlType)) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const input = this.element.nativeElement.querySelector('input');\n                if (input) {\n                    input.focus();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Subscribe to control interactions\n        if (this.control.interactions && !this.form.controls[this.control.key].restrictFieldInteractions) {\n            for (const interaction of this.control.interactions) {\n                switch (interaction.event) {\n                    case 'blur':\n                        this.valueChangeSubscription = this.onBlur.pipe(debounceTime(300)).subscribe((/**\n                         * @return {?}\n                         */\n                        () => {\n                            if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                                this.executeInteraction(interaction);\n                            }\n                        }));\n                        break;\n                    case 'focus':\n                        this.valueChangeSubscription = this.onFocus.pipe(debounceTime(300)).subscribe((/**\n                         * @return {?}\n                         */\n                        () => {\n                            if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                                this.executeInteraction(interaction);\n                            }\n                        }));\n                        break;\n                    case 'change':\n                        this.valueChangeSubscription = this.form.controls[this.control.key].valueChanges.pipe(debounceTime(300)).subscribe((/**\n                         * @return {?}\n                         */\n                        () => {\n                            if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                                this.executeInteraction(interaction);\n                            }\n                        }));\n                        break;\n                    case 'init':\n                        interaction.invokeOnInit = true;\n                        break;\n                    default:\n                        break;\n                }\n                if (interaction.invokeOnInit) {\n                    if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                        this.executeInteraction(interaction);\n                    }\n                }\n            }\n        }\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.templates = this.templateService.getAll();\n            this.loading = false;\n            this.changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.loading = true;\n        // Make sure to initially format the time controls\n        if (this.control && this.form.controls[this.control.key].value) {\n            if (this.form.controls[this.control.key].controlType === 'textbox' ||\n                this.form.controls[this.control.key].controlType === 'text-area') {\n                this.itemCount = this.form.controls[this.control.key].value.length;\n            }\n        }\n        if (this.control) {\n            // Listen to clear events\n            this.forceClearSubscription = this.control.forceClear.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.clearValue();\n            }));\n            // For Asynchronous validations\n            this.statusChangeSubscription = this.form.controls[this.control.key].statusChanges.subscribe((/**\n             * @param {?} validity\n             * @return {?}\n             */\n            (validity) => {\n                this.form.controls[this.control.key] = this.templateContext.$implicit;\n                if (validity !== 'PENDING' && this.form.updateValueAndValidity) {\n                    this.form.updateValueAndValidity();\n                }\n            }));\n        }\n        this.templateContext = {\n            $implicit: this.form.controls[this.control.key],\n            methods: {\n                restrictKeys: this.restrictKeys.bind(this),\n                emitChange: this.emitChange.bind(this),\n                handleFocus: this.handleFocus.bind(this),\n                handlePercentChange: this.handlePercentChange.bind(this),\n                handleBlur: this.handleBlur.bind(this),\n                handleTextAreaInput: this.handleTextAreaInput.bind(this),\n                handleEdit: this.handleEdit.bind(this),\n                handleSave: this.handleSave.bind(this),\n                handleDelete: this.handleDelete.bind(this),\n                handleUpload: this.handleUpload.bind(this),\n                modelChange: this.modelChange.bind(this),\n                modelChangeWithRaw: this.modelChangeWithRaw.bind(this),\n                handleAddressChange: this.handleAddressChange.bind(this),\n                handleTyping: this.handleTyping.bind(this),\n                updateValidity: this.updateValidity.bind(this),\n                toggleActive: this.toggleActive.bind(this),\n                validateIntegerInput: this.validateIntegerInput.bind(this),\n                validateNumberOnBlur: this.validateNumberOnBlur.bind(this),\n            },\n            form: this.form,\n        };\n        this.templateContext.$implicit.tooltipPosition = this.tooltipPosition;\n        this.templateContext.$implicit.tooltip = this.tooltip;\n        this.templateContext.$implicit.tooltipSize = this.tooltipSize;\n        this.templateContext.$implicit.tooltipPreline = this.tooltipPreline;\n        this.templateContext.$implicit.removeTooltipArrow = this.removeTooltipArrow;\n        this.templateContext.$implicit.startupFocus = this.form.controls[this.control.key].startupFocus;\n        this.templateContext.$implicit.fileBrowserImageUploadUrl = this.form.controls[this.control.key].fileBrowserImageUploadUrl;\n        this.templateContext.$implicit.minimal = this.form.controls[this.control.key].minimal;\n        this.templateContext.$implicit.currencyFormat = this.form.controls[this.control.key].currencyFormat;\n        this.templateContext.$implicit.percentValue = this.form.controls[this.control.key].percentValue;\n        this.templateContext.$implicit.config = this.form.controls[this.control.key].config;\n        if (this.form.controls[this.control.key] && this.form.controls[this.control.key].subType === 'percentage') {\n            if (!Helpers.isEmpty(this.form.controls[this.control.key].value)) {\n                this.templateContext.$implicit.percentValue = Number((this.form.controls[this.control.key].value * 100).toFixed(6).replace(/\\.?0*$/, ''));\n            }\n            this.percentChangeSubscription = this.form.controls[this.control.key].displayValueChanges.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => {\n                if (!Helpers.isEmpty(value)) {\n                    this.templateContext.$implicit.percentValue = Number((value * 100).toFixed(6).replace(/\\.?0*$/, ''));\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Unsubscribe from control interactions\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n        // if (this.dateChangeSubscription) {\n        //     this.dateChangeSubscription.unsubscribe();\n        // }\n        if (this.forceClearSubscription) {\n            // Un-listen for clear events\n            this.forceClearSubscription.unsubscribe();\n        }\n        if (this.percentChangeSubscription) {\n            // Un-listen for clear events\n            this.percentChangeSubscription.unsubscribe();\n        }\n        if (this.dateChangeSubscription) {\n            this.dateChangeSubscription.unsubscribe();\n        }\n        if (this.statusChangeSubscription) {\n            this.statusChangeSubscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    /**\n     * @return {?}\n     */\n    get errors() {\n        return this.form.controls[this.control.key].errors;\n    }\n    /**\n     * @return {?}\n     */\n    get isValid() {\n        return this.form.controls[this.control.key].valid;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this.form.controls[this.control.key].dirty || this.control.dirty;\n    }\n    /**\n     * @return {?}\n     */\n    get hasValue() {\n        return !Helpers.isEmpty(this.form.value[this.control.key]);\n    }\n    /**\n     * @return {?}\n     */\n    get focused() {\n        return this._focused;\n    }\n    /**\n     * @return {?}\n     */\n    get tooltip() {\n        return this.form.controls[this.control.key].tooltip;\n    }\n    /**\n     * @return {?}\n     */\n    get tooltipPosition() {\n        if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPosition)) {\n            return 'right';\n        }\n        return this.form.controls[this.control.key].tooltipPosition;\n    }\n    /**\n     * @return {?}\n     */\n    get tooltipSize() {\n        if (Helpers.isBlank(this.form.controls[this.control.key].tooltipSize)) {\n            return '';\n        }\n        return this.form.controls[this.control.key].tooltipSize;\n    }\n    /**\n     * @return {?}\n     */\n    get tooltipPreline() {\n        if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPreline)) {\n            return false;\n        }\n        return this.form.controls[this.control.key].tooltipPreline;\n    }\n    /**\n     * @return {?}\n     */\n    get removeTooltipArrow() {\n        if (Helpers.isBlank(this.form.controls[this.control.key].removeTooltipArrow)) {\n            return false;\n        }\n        return this.form.controls[this.control.key].removeTooltipArrow;\n    }\n    /**\n     * @return {?}\n     */\n    get alwaysActive() {\n        // Controls that have the label active if there is any user entered text in the field\n        if (this.form.controls[this.control.key].controlType === 'picker' && this._enteredText.length) {\n            return true;\n        }\n        // Controls that always have the label active\n        return ([\n            'tiles',\n            'checklist',\n            'checkbox',\n            'date',\n            'time',\n            'date-time',\n            'address',\n            'file',\n            'editor',\n            'ace-editor',\n            'radio',\n            'text-area',\n            'quick-note',\n        ].indexOf(this.form.controls[this.control.key].controlType) !== -1);\n    }\n    /**\n     * @return {?}\n     */\n    get requiresExtraSpacing() {\n        // Chips\n        if (this.form.controls[this.control.key].controlType === 'picker' && this.form.controls[this.control.key].multiple && this.hasValue) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} interaction\n     * @return {?}\n     */\n    executeInteraction(interaction) {\n        if (interaction.script && Helpers.isFunction(interaction.script)) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.fieldInteractionApi.form = this.form;\n                this.fieldInteractionApi.currentKey = this.control.key;\n                try {\n                    interaction.script(this.fieldInteractionApi, this.control.key);\n                }\n                catch (err) {\n                    console.info('Field Interaction Error!', this.control.key); // tslint:disable-line\n                    console.error(err); // tslint:disable-line\n                }\n            }));\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleTyping(event) {\n        this._focused = event && event.length;\n        this._enteredText = event;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} field\n     * @return {?}\n     */\n    handleFocus(event, field) {\n        this._focused = true;\n        this.focusedField = field;\n        if (!Helpers.isBlank(this.characterCountField) && this.characterCountField === field) {\n            this.showCount = true;\n        }\n        else if (this.form.controls[this.control.key].controlType === 'address' &&\n            field &&\n            !Helpers.isEmpty(this.form.value[this.control.key]) &&\n            !Helpers.isBlank(this.form.value[this.control.key][field])) {\n            this.handleAddressChange({ value: this.form.value[this.control.key][field], field });\n        }\n        this._focusEmitter.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleBlur(event) {\n        this._focused = false;\n        this.focusedField = '';\n        this.showCount = false;\n        this._blurEmitter.emit(event);\n    }\n    /**\n     * @return {?}\n     */\n    clearValue() {\n        this.form.controls[this.control.key].setValue(null);\n        this.formattedValue = null;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleTextAreaInput(event) {\n        this.emitChange(event);\n        this.restrictKeys(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    checkMaxLength(event) {\n        if (this.control && this.form.controls[this.control.key].maxlength) {\n            this.itemCount = event.target.value.length;\n            this.maxLengthMet = event.target.value.length >= this.form.controls[this.control.key].maxlength;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    modelChangeWithRaw(event) {\n        if (Helpers.isEmpty(event.value)) {\n            this._focused = false;\n            this._enteredText = '';\n        }\n        if (this.form.controls[this.control.key].controlType === 'picker' && this.form.controls[this.control.key].maxlength) {\n            this.itemCount = event.value ? event.value.length : 0;\n            this.maxLengthMet = this.itemCount >= this.form.controls[this.control.key].maxlength ? true : false;\n        }\n        this.form.controls[this.control.key].rawValue = event.rawValue;\n        this.change.emit(event.value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    modelChange(value) {\n        if (Helpers.isEmpty(value)) {\n            this._focused = false;\n            this._enteredText = '';\n        }\n        this.change.emit(value);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    validateNumberOnBlur(event) {\n        this._focused = false;\n        this.focusedField = '';\n        this.showCount = false;\n        if (this.form.controls[this.control.key].subType === 'number') {\n            this.validateIntegerInput();\n        }\n        this._blurEmitter.emit(event);\n    }\n    /**\n     * @return {?}\n     */\n    validateIntegerInput() {\n        /** @type {?} */\n        const NUMBERS_ONLY = /^[\\d\\-]\\d*$/;\n        if (this.form.controls[this.control.key].value && !NUMBERS_ONLY.test(this.form.controls[this.control.key].value)) {\n            this.form.controls[this.control.key].markAsInvalid(`${this.labels.invalidIntegerInput} ${this.form.controls[this.control.key].label.toUpperCase()}`);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    restrictKeys(event) {\n        /** @type {?} */\n        const NUMBERS_ONLY = /[0-9\\-]/;\n        /** @type {?} */\n        const NUMBERS_WITH_DECIMAL_DOT = /[0-9\\.\\-]/;\n        /** @type {?} */\n        const NUMBERS_WITH_DECIMAL_DOT_AND_COMMA = /[0-9\\.\\,\\-]/;\n        /** @type {?} */\n        const UTILITY_KEYS = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n        /** @type {?} */\n        const key = event.key;\n        // Numbers or numbers and decimal characters only\n        if (this.form.controls[this.control.key].subType === 'number' && !(NUMBERS_ONLY.test(key) || UTILITY_KEYS.includes(key))) {\n            event.preventDefault();\n        }\n        else if (['currency', 'float', 'percentage'].includes(this.form.controls[this.control.key].subType) &&\n            !((this.decimalSeparator === '.' && NUMBERS_WITH_DECIMAL_DOT.test(key)) ||\n                (this.decimalSeparator === ',' && NUMBERS_WITH_DECIMAL_DOT_AND_COMMA.test(key)) ||\n                UTILITY_KEYS.includes(key))) {\n            event.preventDefault();\n        }\n        // Max Length\n        if (this.form.controls[this.control.key].maxlength && event.target.value.length >= this.form.controls[this.control.key].maxlength) {\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handlePercentChange(event) {\n        /** @type {?} */\n        const value = event.target['value'];\n        /** @type {?} */\n        const percent = Helpers.isEmpty(value) ? null : Number((value / 100).toFixed(6).replace(/\\.?0*$/, ''));\n        if (!Helpers.isEmpty(percent)) {\n            this.change.emit(percent);\n            this.form.controls[this.control.key].setValue(percent);\n        }\n        else {\n            this.change.emit(null);\n            this.form.controls[this.control.key].setValue(null);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleTabForPickers(event) {\n        if (this.active && event && event.keyCode) {\n            if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.TAB) {\n                this.toggleActive(event, false);\n            }\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    emitChange(value) {\n        this.change.emit(value);\n        this.checkMaxLength(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleEdit(value) {\n        this.edit.emit(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleSave(value) {\n        this.save.emit(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleDelete(value) {\n        this.delete.emit(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleUpload(value) {\n        this.upload.emit(value);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    handleAddressChange(data) {\n        if (data &&\n            !Helpers.isBlank(data.value) &&\n            data.field &&\n            this.control.config[data.field] &&\n            !Helpers.isEmpty(this.control.config[data.field].maxlength)) {\n            this.itemCount = data.value.length;\n            this.characterCountField = data.field;\n            this.maxLength = this.control.config[data.field].maxlength;\n            this.showCount = true;\n            if (this.maxLength === this.itemCount) {\n                this.maxLengthMetErrorfields.push(data.field);\n            }\n            else {\n                this.maxLengthMetErrorfields = this.maxLengthMetErrorfields.filter((/**\n                 * @param {?} field\n                 * @return {?}\n                 */\n                (field) => field !== data.field));\n            }\n        }\n    }\n    /**\n     * @param {?} shouldEventBeEmitted\n     * @return {?}\n     */\n    updateValidity(shouldEventBeEmitted) {\n        /** @type {?} */\n        const emitEvent = shouldEventBeEmitted ? true : false;\n        this.form.controls[this.control.key].updateValueAndValidity({ emitEvent });\n    }\n}\nNovoControlElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-control',\n                template: `\n        <div class=\"novo-control-container\" [hidden]=\"form.controls[control.key].hidden || form.controls[control.key].type === 'hidden' || form.controls[control.key].controlType === 'hidden'\">\n            <!--Encrypted Field-->\n            <span [tooltip]=\"labels.encryptedFieldTooltip\" [tooltipPosition]=\"'right'\"><i [hidden]=\"!form.controls[control.key].encrypted\"\n            class=\"bhi-lock\"></i></span>\n            <!--Label (for horizontal)-->\n            <label [attr.for]=\"control.key\" *ngIf=\"form.layout !== 'vertical' && form.controls[control.key].label && !condensed\" [ngClass]=\"{'encrypted': form.controls[control.key].encrypted }\">\n                {{ form.controls[control.key].label }}\n            </label>\n            <div class=\"novo-control-outer-container\">\n                <!--Label (for vertical)-->\n                <label\n                    *ngIf=\"form.layout === 'vertical' && form.controls[control.key].label && !condensed\"\n                    class=\"novo-control-label\"\n                    [attr.for]=\"control.key\"\n                    [class.novo-control-empty]=\"!hasValue\"\n                    [class.novo-control-focused]=\"focused\"\n                    [class.novo-control-filled]=\"hasValue\"\n                    [class.novo-control-always-active]=\"alwaysActive || form.controls[control.key].placeholder\"\n                    [class.novo-control-extra-spacing]=\"requiresExtraSpacing\">\n                    {{ form.controls[control.key].label }}\n                </label>\n                <div class=\"novo-control-inner-container\" [class.required]=\"form.controls[control.key].required && !form.controls[control.key].readOnly\">\n                    <div class=\"novo-control-inner-input-container\" [class.novo-control-filled]=\"hasValue\" [class.novo-control-empty]=\"!hasValue\">\n                      <!--Required Indicator-->\n                        <i [hidden]=\"!form.controls[control.key].required || form.controls[control.key].readOnly\"\n                            class=\"required-indicator {{ form.controls[control.key].controlType }}\"\n                            [ngClass]=\"{'bhi-circle': !isValid, 'bhi-check': isValid}\" *ngIf=\"!condensed || form.controls[control.key].required\">\n                        </i>\n                        <!--Form Controls-->\n                        <div class=\"novo-control-input {{ form.controls[control.key].controlType }}\" [attr.data-automation-id]=\"control.key\" [class.control-disabled]=\"form.controls[control.key].disabled\">\n                            <!--TODO prefix/suffix on the control-->\n                            <ng-container *ngIf=\"templates\">\n                              <ng-container *ngTemplateOutlet=\"templates[form.controls[control.key].controlType]; context: templateContext\"></ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"!templates || loading\">\n                                <div class=\"novo-control-input-container novo-control-input-with-label\">\n                                  <input type=\"text\"/>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <!--Error Message-->\n                    <div class=\"field-message {{ form.controls[control.key].controlType }}\" *ngIf=\"!condensed\" [class.has-tip]=\"form.controls[control.key].tipWell\" [ngClass]=\"showErrorState || showMaxLengthMetMessage ? 'error-shown' : 'error-hidden'\">\n                        <div class=\"messages\" [ngClass]=\"showMessages ? 'count-shown messages-shown' : 'count-hidden messages-hidden'\">\n                            <span class=\"error-text\" *ngIf=\"showFieldMessage\"></span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.required && form.controls[control.key].controlType !== 'address'\">{{ form.controls[control.key].label | uppercase }} {{ labels.isRequired }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.minlength\">{{ form.controls[control.key].label | uppercase }} {{ labels.minLength }} {{ form.controls[control.key].minlength }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && maxLengthMet && focused && !errors?.maxlength && form.controls[control.key].controlType !== 'picker'\">{{ labels.maxlengthMet(form.controls[control.key].maxlength) }}</span>\n                            <span class=\"error-text\" *ngIf=\"errors?.maxlength && focused && !errors?.maxlengthFields\">{{ labels.invalidMaxlength(form.controls[control.key].maxlength) }}</span>\n                            <span class=\"error-text\" *ngIf=\"maxLengthMet && form.controls[control.key].controlType === 'picker'\">{{ labels.maxRecordsReached }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.invalidEmail\">{{ form.controls[control.key].label | uppercase }} {{ labels.invalidEmail }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && (errors?.integerTooLarge || errors?.doubleTooLarge)\">{{ form.controls[control.key].label | uppercase }} {{ labels.isTooLarge }}</span>\n                            <span *ngIf=\"isDirty && errors?.minYear\">{{ form.controls[control.key].label | uppercase }} {{ labels.notValidYear }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && (errors?.custom)\">{{ errors.custom }}</span>\n                            <span class=\"error-text\" *ngIf=\"errors?.maxlength && errors?.maxlengthFields && maxlengthErrorField && focused\">\n                                {{ labels.invalidMaxlengthWithField(control.config[maxlengthErrorField]?.label, control.config[maxlengthErrorField]?.maxlength) }}\n                            </span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && maxlengthMetField && focused && !errors?.maxlengthFields?.includes(maxlengthMetField)\">\n                              {{ labels.maxlengthMetWithField(control.config[maxlengthMetField]?.label, control.config[maxlengthMetField]?.maxlength) }}\n                            </span>\n                            <span *ngIf=\"isDirty && errors?.invalidAddress\">\n                                <span class=\"error-text\" *ngFor=\"let invalidAddressField of errors?.invalidAddressFields\">{{ invalidAddressField | uppercase }} {{ labels.isRequired }} </span>\n                            </span>\n                            <!--Field Hint-->\n                            <span class=\"description\" *ngIf=\"form.controls[control.key].description\">\n                                {{ form.controls[control.key].description }}\n                            </span>\n                            <span class=\"warning-text\" *ngIf=\"form.controls[control.key].warning\">{{ form.controls[control.key].warning }}</span>\n\n                        </div>\n                        <span class=\"character-count\" [class.error]=\"((errors?.maxlength && !errors?.maxlengthFields) || (errors?.maxlength && errors?.maxlengthFields && errors.maxlengthFields.includes(focusedField)))\" *ngIf=\"showCount && form.controls[control.key].controlType !== 'picker'\">{{ itemCount }}/{{ maxLength || form.controls[control.key].maxlength }}</span>\n                        <span class=\"record-count\" [class.zero-count]=\"itemCount === 0\" [class.row-picker]=\"form.controls[this.control.key].config.columns\" *ngIf=\"showCount && form.controls[control.key].controlType === 'picker'\">{{ itemCount }}/{{ maxLength || form.controls[control.key].maxlength }}</span>\n                    </div>\n                    <!--Tip Wel-->\n                    <novo-tip-well *ngIf=\"form.controls[control.key].tipWell\" [name]=\"control.key\" [tip]=\"form.controls[control.key]?.tipWell?.tip\" [icon]=\"form.controls[control.key]?.tipWell?.icon\" [button]=\"form.controls[control.key]?.tipWell?.button\" [sanitize]=\"form.controls[control.key]?.tipWell?.sanitize\"></novo-tip-well>\n                </div>\n                <i *ngIf=\"form.controls[control.key].fieldInteractionloading\" class=\"loading\">\n                    <svg version=\"1.1\"\n                     xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                     x=\"0px\" y=\"0px\" width=\"18.2px\" height=\"18.5px\" viewBox=\"0 0 18.2 18.5\" style=\"enable-background:new 0 0 18.2 18.5;\"\n                     xml:space=\"preserve\">\n                    <style type=\"text/css\">\n                        .spinner { fill:#FFFFFF; }\n                    </style>\n                        <path class=\"spinner\" d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                            c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                            c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"/>\n                    </svg>\n                </i>\n            </div>\n        </div>\n    `,\n                host: {\n                    '[class]': 'form.controls[control.key].controlType',\n                    '[attr.data-control-type]': 'form.controls[control.key].controlType',\n                    '[class.disabled]': 'form.controls[control.key].readOnly',\n                    '[class.hidden]': 'form.controls[control.key].hidden',\n                    '[attr.data-control-key]': 'control.key',\n                    '[class.inline-embedded]': 'control.isInlineEmbedded',\n                    '[class.embedded]': 'control.isEmbedded',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoControlElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: DateFormatService },\n    { type: FieldInteractionApi },\n    { type: NovoTemplateService },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nNovoControlElement.propDecorators = {\n    control: [{ type: Input }],\n    form: [{ type: Input }],\n    condensed: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    change: [{ type: Output }],\n    edit: [{ type: Output }],\n    save: [{ type: Output }],\n    delete: [{ type: Output }],\n    upload: [{ type: Output }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    onFocus: [{ type: Output, args: ['focus',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoControlElement.prototype.control;\n    /** @type {?} */\n    NovoControlElement.prototype.form;\n    /** @type {?} */\n    NovoControlElement.prototype.condensed;\n    /** @type {?} */\n    NovoControlElement.prototype.autoFocus;\n    /** @type {?} */\n    NovoControlElement.prototype.change;\n    /** @type {?} */\n    NovoControlElement.prototype.edit;\n    /** @type {?} */\n    NovoControlElement.prototype.save;\n    /** @type {?} */\n    NovoControlElement.prototype.delete;\n    /** @type {?} */\n    NovoControlElement.prototype.upload;\n    /** @type {?} */\n    NovoControlElement.prototype.maxLength;\n    /** @type {?} */\n    NovoControlElement.prototype.focusedField;\n    /** @type {?} */\n    NovoControlElement.prototype.formattedValue;\n    /** @type {?} */\n    NovoControlElement.prototype.percentValue;\n    /** @type {?} */\n    NovoControlElement.prototype.maxLengthMet;\n    /** @type {?} */\n    NovoControlElement.prototype.itemCount;\n    /** @type {?} */\n    NovoControlElement.prototype.maskOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype._blurEmitter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype._focusEmitter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype._focused;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype._enteredText;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.forceClearSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.percentChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.valueChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.dateChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype._showCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.characterCountField;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.maxLengthMetErrorfields;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.statusChangeSubscription;\n    /** @type {?} */\n    NovoControlElement.prototype.templates;\n    /** @type {?} */\n    NovoControlElement.prototype.templateContext;\n    /** @type {?} */\n    NovoControlElement.prototype.loading;\n    /** @type {?} */\n    NovoControlElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.dateFormatService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.fieldInteractionApi;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.templateService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlElement.prototype.locale;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/ControlGroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction NovoControlGroupAddConfig() { }\nif (false) {\n    /** @type {?} */\n    NovoControlGroupAddConfig.prototype.label;\n}\n/**\n * @record\n */\nfunction NovoControlGroupRowConfig() { }\nif (false) {\n    /** @type {?} */\n    NovoControlGroupRowConfig.prototype.edit;\n    /** @type {?} */\n    NovoControlGroupRowConfig.prototype.remove;\n}\nclass NovoControlGroup {\n    /**\n     * @param {?} formUtils\n     * @param {?} fb\n     * @param {?} ref\n     */\n    constructor(formUtils, fb, ref) {\n        this.formUtils = formUtils;\n        this.fb = fb;\n        this.ref = ref;\n        this._vertical = false;\n        this._remove = false;\n        this._edit = false;\n        this._collapsible = false;\n        this.onRemove = new EventEmitter();\n        this.onEdit = new EventEmitter();\n        this.onAdd = new EventEmitter();\n        this.change = new EventEmitter();\n        this.controlLabels = [];\n        this.toggled = false;\n        this.disabledArray = [];\n        this.currentIndex = 0;\n    }\n    // Sets the display of the group to either be row (default) or vertical via flex-box\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set vertical(v) {\n        this._vertical = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get vertical() {\n        return this._vertical;\n    }\n    // Hide/shows the remove button for removing a control\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set remove(v) {\n        this._remove = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get remove() {\n        return this._remove;\n    }\n    // Hide/shows the edit button for editing a control\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set edit(v) {\n        this._edit = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get edit() {\n        return this._edit;\n    }\n    // Allows the control to collapse or not\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set collapsible(v) {\n        this._collapsible = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get collapsible() {\n        return this._collapsible;\n    }\n    // Icon of the control group (can have bhi prefix or not)\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set icon(v) {\n        this._icon = v && v.indexOf('bhi') !== -1 ? v : `bhi-${v}`;\n    }\n    /**\n     * @return {?}\n     */\n    get icon() {\n        return this._icon;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this.key) {\n            throw new Error('novo-control-group must have the [key] attribute provided!');\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const initialValueChange = changes['initialValue'];\n        // If initial value changes, clear the controls\n        if (initialValueChange && initialValueChange.currentValue !== initialValueChange.previousValue && !initialValueChange.firstChange) {\n            this.clearControls();\n        }\n        // Check for array, add a control for each value\n        if (this.initialValue && Array.isArray(this.initialValue)) {\n            if (this.initialValue.length !== 0) {\n                this.currentIndex = 0;\n                this.initialValue.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                (value) => this.addNewControl(value)));\n            }\n        }\n        else if (this.initialValue) {\n            // If value is an object, just add one control\n            this.addNewControl(this.initialValue);\n        }\n        // If we are horizontal, grab the labels to help with layout\n        if (!this.vertical) {\n            this.controlLabels = (this.controls || []).map((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                return {\n                    value: control.label,\n                    width: control.width,\n                    required: control.required,\n                    key: control.key,\n                };\n            }));\n            this.ref.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.clearControls();\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        this.change.emit(this);\n    }\n    /**\n     * @return {?}\n     */\n    resetAddRemove() {\n        this.disabledArray.forEach((/**\n         * @param {?} item\n         * @param {?} idx\n         * @return {?}\n         */\n        (item, idx) => {\n            item.edit = this.checkCanEdit(idx);\n            item.remove = this.checkCanRemove(idx);\n        }));\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    addNewControl(value) {\n        /** @type {?} */\n        const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n        /** @type {?} */\n        const nestedFormGroup = this.buildNestedFormGroup(value);\n        if (controlsArray) {\n            controlsArray.push(nestedFormGroup);\n        }\n        else {\n            this.form.addControl(this.key, this.fb.array([nestedFormGroup]));\n            // Ensure that field interaction changes for nested forms originating from outside the form will be reflected in the nested elements\n            nestedFormGroup.fieldInteractionEvents.subscribe(this.onFieldInteractionEvent.bind(this));\n        }\n        this.disabledArray.push({\n            edit: true,\n            remove: true,\n        });\n        this.resetAddRemove();\n        if (!value) {\n            this.onAdd.emit();\n        }\n        this.currentIndex++;\n        this.assignIndexes();\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} index\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    removeControl(index, emitEvent = true) {\n        /** @type {?} */\n        const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n        /** @type {?} */\n        const nestedFormGroup = (/** @type {?} */ (controlsArray.at(index)));\n        nestedFormGroup.fieldInteractionEvents.unsubscribe();\n        if (emitEvent) {\n            this.onRemove.emit({ value: nestedFormGroup.value, index });\n        }\n        controlsArray.removeAt(index);\n        this.disabledArray = this.disabledArray.filter((/**\n         * @param {?} value\n         * @param {?} idx\n         * @return {?}\n         */\n        (value, idx) => idx !== index));\n        this.resetAddRemove();\n        this.currentIndex--;\n        this.assignIndexes();\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    editControl(index) {\n        /** @type {?} */\n        const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n        this.onEdit.emit({ value: controlsArray.at(index).value, index });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    toggle(event) {\n        Helpers.swallowEvent(event);\n        if (this.collapsible) {\n            this.toggled = !this.toggled;\n            this.ref.markForCheck();\n        }\n    }\n    /**\n     * @private\n     * @param {?=} value\n     * @return {?}\n     */\n    buildNestedFormGroup(value) {\n        /** @type {?} */\n        const newControls = this.getNewControls();\n        if (value) {\n            this.formUtils.setInitialValues(newControls, value);\n        }\n        return this.formUtils.toFormGroup(newControls);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    clearControls() {\n        /** @type {?} */\n        const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n        if (controlsArray) {\n            for (let i = controlsArray.length - 1; i >= 0; i--) {\n                this.removeControl(i, false);\n            }\n            this.currentIndex = 0;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    checkCanEdit(index) {\n        if (this.canEdit) {\n            /** @type {?} */\n            const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n            return this.canEdit(controlsArray.at(index).value, index);\n        }\n        return true;\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    checkCanRemove(index) {\n        if (this.canRemove) {\n            /** @type {?} */\n            const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n            if (controlsArray.at(index)) {\n                return this.canRemove(controlsArray.at(index).value, index);\n            }\n            return true;\n        }\n        return true;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getNewControls() {\n        /** @type {?} */\n        const ret = [];\n        (this.controls || []).forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            ret.push(new BaseControl(control.__type, control));\n        }));\n        return ret;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    assignIndexes() {\n        /** @type {?} */\n        const controlsArray = (/** @type {?} */ (this.form.controls[this.key]));\n        if (controlsArray) {\n            for (let i = 0; i < controlsArray.length; i++) {\n                /** @type {?} */\n                const form = (/** @type {?} */ (controlsArray.at(i)));\n                form.associations = Object.assign({}, form.associations, { index: i });\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    onFieldInteractionEvent() {\n        this.ref.markForCheck();\n    }\n}\nNovoControlGroup.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-control-group',\n                template: \"<h6 class=\\\"novo-section-header\\\" *ngIf=\\\"label\\\">\\n  <span (click)=\\\"toggle($event)\\\" [class.clickable]=\\\"collapsible\\\">\\n    <i *ngIf=\\\"icon && !collapsible\\\" [ngClass]=\\\"icon\\\" [attr.data-automation-id]=\\\"'novo-control-group-icon-' + key\\\"></i>\\n    <i *ngIf=\\\"collapsible\\\" class=\\\"bhi-next\\\" [class.toggled]=\\\"toggled\\\" [attr.data-automation-id]=\\\"'novo-control-group-collapse-' + key\\\"></i>\\n    <span [attr.data-automation-id]=\\\"'novo-control-group-label-' + key\\\">{{ label }}</span>\\n  </span>\\n  <label class=\\\"novo-control-group-description\\\" *ngIf=\\\"description\\\" [attr.data-automation-id]=\\\"'novo-control-group-description-' + key\\\">{{ description }}</label>\\n</h6>\\n<div class=\\\"novo-control-group-controls\\\" [class.vertical]=\\\"vertical\\\" [class.horizontal]=\\\"!vertical\\\" [class.hidden]=\\\"collapsible && !toggled\\\">\\n  <ng-template #defaultTemplate let-index=\\\"index\\\" let-form=\\\"form\\\" let-key=\\\"key\\\">\\n    <div class=\\\"novo-control-group-control\\\">\\n      <div *ngFor=\\\"let c of controls\\\" class=\\\"novo-control-container {{c.key}}\\\" [class.is-label]=\\\"c.controlType === 'read-only'\\\" [style.max-width.px]=\\\"c.width\\\">\\n        <novo-control (change)=\\\"onChange()\\\" [form]=\\\"(form?.controls)[key]['controls'][index]\\\" [control]=\\\"c\\\" [condensed]=\\\"!vertical || c.controlType === 'read-only'\\\"></novo-control>\\n      </div>\\n      <div class=\\\"novo-control-container last\\\" *ngIf=\\\"edit && !vertical\\\">\\n        <button [disabled]=\\\"!disabledArray[index].edit\\\" type=\\\"button\\\" *ngIf=\\\"edit && !vertical\\\" theme=\\\"icon\\\" icon=\\\"edit\\\" (click)=\\\"editControl(index)\\\" [attr.data-automation-id]=\\\"'novo-control-group-edit-' + key\\\" index=\\\"-1\\\"></button>\\n      </div>\\n      <div class=\\\"novo-control-container last\\\" *ngIf=\\\"remove && !vertical\\\">\\n        <button [disabled]=\\\"!disabledArray[index].remove\\\" type=\\\"button\\\" *ngIf=\\\"remove && !vertical\\\" theme=\\\"icon\\\" icon=\\\"delete-o\\\" (click)=\\\"removeControl(index)\\\" [attr.data-automation-id]=\\\"'novo-control-group-delete-' + key\\\" index=\\\"-1\\\"></button>\\n      </div>\\n    </div>\\n    <button [disabled]=\\\"!disabledArray[index].edit\\\" type=\\\"button\\\" *ngIf=\\\"edit && vertical\\\" theme=\\\"icon\\\" icon=\\\"edit\\\" (click)=\\\"editControl(index)\\\" [attr.data-automation-id]=\\\"'novo-control-group-edit-' + key\\\" index=\\\"-1\\\"></button>\\n    <button [disabled]=\\\"!disabledArray[index].remove\\\" type=\\\"button\\\" *ngIf=\\\"remove && vertical\\\" theme=\\\"icon\\\" icon=\\\"delete-o\\\" (click)=\\\"removeControl(index)\\\" [attr.data-automation-id]=\\\"'novo-control-group-delete-' + key\\\" index=\\\"-1\\\"></button>\\n  </ng-template>\\n  <ng-template #defaultColumnLabelTemplate let-form=\\\"form\\\" let-key=\\\"key\\\">\\n      <div class=\\\"novo-control-group-control-label {{ label.key }}\\\" *ngFor=\\\"let label of controlLabels\\\" [style.max-width.px]=\\\"label.width\\\" [class.column-required]=\\\"label.required\\\">\\n        <span [attr.data-automation-id]=\\\"'novo-control-group-label-' + label.value\\\">{{ label.value }}</span>\\n      </div>\\n      <div class=\\\"novo-control-group-control-label last\\\" *ngIf=\\\"edit\\\" [attr.data-automation-id]=\\\"'novo-control-group-edit-' + key\\\"></div>\\n      <div class=\\\"novo-control-group-control-label last\\\" *ngIf=\\\"remove\\\" [attr.data-automation-id]=\\\"'novo-control-group-delete-' + key\\\"></div>\\n  </ng-template>\\n  <ng-container *ngIf=\\\"!vertical && (form?.controls)[key] && (form?.controls)[key]['controls'].length !== 0\\\">\\n    <div class=\\\"novo-control-group-labels\\\" *ngIf=\\\"!vertical && (form?.controls)[key] && (form?.controls)[key]['controls'].length !== 0\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"columnLabelTemplate || defaultColumnLabelTemplate\\\" [ngTemplateOutletContext]=\\\"{ form: form, key: key, controlLabels: controlLabels }\\\">\\n      </ng-template>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"(form?.controls)[key]\\\">\\n    <div class=\\\"novo-control-group-row\\\" *ngFor=\\\"let control of (form?.controls)[key]['controls']; let index = index\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"rowTemplate || defaultTemplate\\\" [ngTemplateOutletContext]=\\\"{ form: form, index: index, key: key, controls: controls }\\\">\\n      </ng-template>\\n    </div>\\n  </ng-container>\\n  <div class=\\\"novo-control-group-empty\\\" *ngIf=\\\"(form?.controls)[key] && (form?.controls)[key]['controls'].length === 0\\\" [attr.data-automation-id]=\\\"'novo-control-group-empty-' + key\\\">\\n    {{ emptyMessage }}\\n  </div>\\n  <p *ngIf=\\\"add\\\">\\n    <button type=\\\"button\\\" theme=\\\"dialogue\\\" icon=\\\"add-thin\\\" (click)=\\\"addNewControl()\\\" [attr.data-automation-id]=\\\"'novo-control-group-bottom-add-' + key\\\" index=\\\"-1\\\">\\n      {{ add?.label }}\\n    </button>\\n  </p>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoControlGroup.ctorParameters = () => [\n    { type: FormUtils },\n    { type: FormBuilder },\n    { type: ChangeDetectorRef }\n];\nNovoControlGroup.propDecorators = {\n    vertical: [{ type: Input }],\n    add: [{ type: Input }],\n    remove: [{ type: Input }],\n    edit: [{ type: Input }],\n    collapsible: [{ type: Input }],\n    form: [{ type: Input }],\n    controls: [{ type: Input }],\n    key: [{ type: Input }],\n    label: [{ type: Input }],\n    description: [{ type: Input }],\n    emptyMessage: [{ type: Input }],\n    icon: [{ type: Input }],\n    initialValue: [{ type: Input }],\n    canEdit: [{ type: Input }],\n    canRemove: [{ type: Input }],\n    rowTemplate: [{ type: Input }],\n    columnLabelTemplate: [{ type: Input }],\n    onRemove: [{ type: Output }],\n    onEdit: [{ type: Output }],\n    onAdd: [{ type: Output }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype._vertical;\n    /** @type {?} */\n    NovoControlGroup.prototype.add;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype._remove;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype._edit;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype._collapsible;\n    /** @type {?} */\n    NovoControlGroup.prototype.form;\n    /** @type {?} */\n    NovoControlGroup.prototype.controls;\n    /** @type {?} */\n    NovoControlGroup.prototype.key;\n    /** @type {?} */\n    NovoControlGroup.prototype.label;\n    /** @type {?} */\n    NovoControlGroup.prototype.description;\n    /** @type {?} */\n    NovoControlGroup.prototype.emptyMessage;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype._icon;\n    /** @type {?} */\n    NovoControlGroup.prototype.initialValue;\n    /** @type {?} */\n    NovoControlGroup.prototype.canEdit;\n    /** @type {?} */\n    NovoControlGroup.prototype.canRemove;\n    /** @type {?} */\n    NovoControlGroup.prototype.rowTemplate;\n    /** @type {?} */\n    NovoControlGroup.prototype.columnLabelTemplate;\n    /** @type {?} */\n    NovoControlGroup.prototype.onRemove;\n    /** @type {?} */\n    NovoControlGroup.prototype.onEdit;\n    /** @type {?} */\n    NovoControlGroup.prototype.onAdd;\n    /** @type {?} */\n    NovoControlGroup.prototype.change;\n    /** @type {?} */\n    NovoControlGroup.prototype.controlLabels;\n    /** @type {?} */\n    NovoControlGroup.prototype.toggled;\n    /** @type {?} */\n    NovoControlGroup.prototype.disabledArray;\n    /** @type {?} */\n    NovoControlGroup.prototype.currentIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype.formUtils;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype.fb;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlGroup.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/ControlTemplates.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoControlTemplates {\n    /**\n     * @param {?} templates\n     */\n    constructor(templates) {\n        this.templates = templates;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.defaultTemplates && this.defaultTemplates.length) {\n            this.defaultTemplates.forEach((/**\n             * @param {?} template\n             * @return {?}\n             */\n            (template) => {\n                this.templates.addDefault(template.name, template.template);\n            }));\n        }\n    }\n}\nNovoControlTemplates.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-control-templates',\n                template: `\n        <!---Readonly--->\n        <ng-template novoTemplate=\"read-only\" let-form=\"form\" let-control>\n          <div>{{ form.value[control.key] }}</div>\n        </ng-template>\n        <!--Textbox--->\n        <ng-template novoTemplate=\"textbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container novo-control-input-with-label\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <input *ngIf=\"control?.type !== 'number' && control?.textMaskEnabled\" [textMask]=\"control.maskOptions\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (input)=\"methods.emitChange($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" autocomplete>\n            <input *ngIf=\"control?.type !== 'number' && !control?.textMaskEnabled\" [class.maxlength-error]=\"errors?.maxlength\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (input)=\"methods.emitChange($event)\" [maxlength]=\"control?.maxlength\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" autocomplete>\n            <input *ngIf=\"control?.type === 'number' && control?.subType !== 'percentage'\" [class.maxlength-error]=\"errors?.maxlength\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (keydown)=\"methods.restrictKeys($event)\" (input)=\"methods.emitChange($event)\" [maxlength]=\"control?.maxlength\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" step=\"any\" (mousewheel)=\"numberInput.blur()\" #numberInput>\n            <input *ngIf=\"control?.type === 'number' && control?.subType === 'percentage'\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (keydown)=\"methods.restrictKeys($event)\" [value]=\"control?.percentValue\" (input)=\"methods.handlePercentChange($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" step=\"any\" (mousewheel)=\"percentInput.blur()\" #percentInput>\n            <label class=\"input-label\" *ngIf=\"control?.subType === 'currency'\">{{ control.currencyFormat }}</label>\n            <label class=\"input-label\" *ngIf=\"control?.subType === 'percentage'\">%</label>\n          </div>\n        </ng-template>\n\n        <!--Textarea--->\n        <ng-template novoTemplate=\"text-area\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div class=\"textarea-container\" [formGroup]=\"form\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <textarea [class.maxlength-error]=\"errors?.maxlength\" [name]=\"control.key\" [attr.id]=\"control.key\" [placeholder]=\"control.placeholder\" [formControlName]=\"control.key\" autosize (input)=\"methods.handleTextAreaInput($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [maxlength]=\"control?.maxlength\"></textarea>\n          </div>\n        </ng-template>\n\n        <!--Editor-->\n        <ng-template novoTemplate=\"editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-editor [name]=\"control.key\" [formControlName]=\"control.key\" [startupFocus]=\"control.startupFocus\" [minimal]=\"control.minimal\" [fileBrowserImageUploadUrl]=\"control.fileBrowserImageUploadUrl\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [config]=\"control.config\"></novo-editor>\n          </div>\n        </ng-template>\n\n        <!--AceEditor-->\n        <ng-template novoTemplate=\"ace-editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-ace-editor [name]=\"control.key\" [formControlName]=\"control.key\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\"></novo-ace-editor>\n          </div>\n        </ng-template>\n\n        <!--HTML5 Select-->\n        <ng-template novoTemplate=\"native-select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <select [id]=\"control.key\" [formControlName]=\"control.key\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n                <option *ngIf=\"control.placeholder\" value=\"\" disabled selected hidden>{{ control.placeholder }}</option>\n                <option *ngFor=\"let opt of control.options\" [value]=\"opt.key\">{{opt.value}}</option>\n            </select>\n          </div>\n        </ng-template>\n\n        <!--File-->\n        <ng-template novoTemplate=\"file\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-file-input [formControlName]=\"control.key\" [id]=\"control.key\" [name]=\"control.key\" [placeholder]=\"control.placeholder\" [value]=\"control.value\" [multiple]=\"control.multiple\" [layoutOptions]=\"control.layoutOptions\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (edit)=\"methods.handleEdit($event)\" (save)=\"methods.handleSave($event)\" (delete)=\"methods.handleDelete($event)\" (upload)=\"methods.handleUpload($event)\"></novo-file-input>\n          </div>\n        </ng-template>\n\n        <!--Tiles-->\n        <ng-template novoTemplate=\"tiles\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-tiles [options]=\"control.options\" [formControlName]=\"control.key\" (onChange)=\"methods.modelChange($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [controlDisabled]=\"control.disabled\"></novo-tiles>\n          </div>\n        </ng-template>\n\n        <!--Picker-->\n        <ng-template novoTemplate=\"picker\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n            <novo-picker [config]=\"control.config\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" [parentScrollSelector]=\"control.parentScrollSelector\" *ngIf=\"!control.multiple\" (select)=\"methods.modelChange($event);\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-picker>\n            <novo-chips [source]=\"control.config\" [type]=\"control.config.type\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" [maxlength]=\"control?.maxlength\" *ngIf=\"control.multiple && !control.config.columns\" [closeOnSelect]=\"control.closeOnSelect\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-chips>\n            <novo-row-chips [source]=\"control.config\" [type]=\"control.config.type\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" *ngIf=\"control.multiple && control.config.columns\" [closeOnSelect]=\"control.closeOnSelect\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-row-chips>\n          </div>\n        </ng-template>\n\n        <!--Novo Select-->\n        <ng-template novoTemplate=\"select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-select [options]=\"control.options\" [headerConfig]=\"control.headerConfig\" [placeholder]=\"control.placeholder\" [formControlName]=\"control.key\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (onSelect)=\"methods.modelChange($event)\"></novo-select>\n          </div>\n        </ng-template>\n\n        <!--Radio-->\n        <ng-template novoTemplate=\"radio\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n            <novo-radio [name]=\"control.key\" [formControlName]=\"control.key\" *ngFor=\"let option of control.options\" [value]=\"option.value\" [label]=\"option.label\" [checked]=\"option.value === form.value[control.key] || (form.value[control.key] && option.value === form.value[control.key].id)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [button]=\"!!option.icon\" [icon]=\"option.icon\" [attr.data-automation-id]=\"control.key + '-' + (option?.label || option?.value)\"></novo-radio>\n          </div>\n        </ng-template>\n\n        <!--Time-->\n        <ng-template novoTemplate=\"time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-time-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" [military]=\"control.military\"></novo-time-picker-input>\n          </div>\n        </ng-template>\n\n        <!--Date-->\n        <ng-template novoTemplate=\"date\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-date-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [start]=\"control.startDate\" [end]=\"control.endDate\" [format]=\"control.dateFormat\" [allowInvalidDate]=\"control.allowInvalidDate\" [textMaskEnabled]=\"control.textMaskEnabled\" [placeholder]=\"control.placeholder\" [weekStart]=\"control.weekStart\" (focusEvent)=\"methods.handleFocus($event)\" (blurEvent)=\"methods.handleBlur($event)\" (changeEvent)=\"methods.emitChange($event)\"></novo-date-picker-input>\n          </div>\n        </ng-template>\n\n        <!--Date and Time-->\n        <ng-template novoTemplate=\"date-time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-date-time-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [start]=\"control.startDate\" [end]=\"control.endDate\" [placeholder]=\"control.placeholder\" [military]=\"control.military\" [weekStart]=\"control.weekStart\" (focusEvent)=\"methods.handleFocus($event)\" (blurEvent)=\"methods.handleBlur($event)\" (changeEvent)=\"methods.emitChange($event)\" ></novo-date-time-picker-input>\n          </div>\n        </ng-template>\n\n        <!--Address-->\n        <ng-template novoTemplate=\"address\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-address [formControlName]=\"control.key\" [config]=\"control?.config\" [readOnly]=\"control?.readOnly\" (change)=\"methods.handleAddressChange($event)\" (focus)=\"methods.handleFocus($event.event, $event.field)\" (blur)=\"methods.handleBlur($event.event, $event.field)\"  (validityChange)=\"methods.updateValidity()\"></novo-address>\n          </div>\n        </ng-template>\n\n        <!--Checkbox-->\n        <ng-template novoTemplate=\"checkbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-checkbox [formControlName]=\"control?.key\" [name]=\"control?.key\" [label]=\"control?.checkboxLabel\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [layoutOptions]=\"control?.layoutOptions\"></novo-checkbox>\n          </div>\n        </ng-template>\n\n        <!--Checklist-->\n        <ng-template novoTemplate=\"checklist\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-check-list [formControlName]=\"control.key\" [name]=\"control.key\" [options]=\"control?.options\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (onSelect)=\"methods.modelChange($event)\"></novo-check-list>\n          </div>\n        </ng-template>\n\n        <!--QuickNote-->\n        <ng-template novoTemplate=\"quick-note\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-quick-note [formControlName]=\"control.key\" [startupFocus]=\"control?.startupFocus\" [placeholder]=\"control?.placeholder\" [config]=\"control?.config\" (change)=\"methods.modelChange($event)\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [tooltipPreline]=\"control?.tooltipPreline\"></novo-quick-note>\n          </div>\n        </ng-template>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoControlTemplates.ctorParameters = () => [\n    { type: NovoTemplateService }\n];\nNovoControlTemplates.propDecorators = {\n    defaultTemplates: [{ type: ViewChildren, args: [NovoTemplate,] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoControlTemplates.prototype.defaultTemplates;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoControlTemplates.prototype.templates;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/DynamicForm.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFieldsetHeaderElement {\n}\nNovoFieldsetHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-fieldset-header',\n                template: `\n        <h6><i [class]=\"icon || 'bhi-section'\"></i>{{title}}</h6>\n    `\n            }] }\n];\nNovoFieldsetHeaderElement.propDecorators = {\n    title: [{ type: Input }],\n    icon: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoFieldsetHeaderElement.prototype.title;\n    /** @type {?} */\n    NovoFieldsetHeaderElement.prototype.icon;\n}\nclass NovoFieldsetElement {\n    constructor() {\n        this.controls = [];\n        this.isEmbedded = false;\n        this.isInlineEmbedded = false;\n        this.hidden = false;\n    }\n}\nNovoFieldsetElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-fieldset',\n                template: `\n        <div class=\"novo-fieldset-container\">\n            <novo-fieldset-header [icon]=\"icon\" [title]=\"title\" *ngIf=\"title\" [class.embedded]=\"isEmbedded\" [class.inline-embedded]=\"isInlineEmbedded\" [class.hidden]=\"hidden\"></novo-fieldset-header>\n            <ng-container *ngFor=\"let control of controls;let controlIndex = index;\">\n                <div class=\"novo-form-row\" [class.disabled]=\"control.disabled\" *ngIf=\"control.__type !== 'GroupedControl'\">\n                    <novo-control [autoFocus]=\"autoFocus && index === 0 && controlIndex === 0\" [control]=\"control\" [form]=\"form\"></novo-control>\n                </div>\n                <div *ngIf=\"control.__type === 'GroupedControl'\">TODO - GroupedControl</div>\n            </ng-container>\n        </div>\n    `\n            }] }\n];\nNovoFieldsetElement.propDecorators = {\n    controls: [{ type: Input }],\n    form: [{ type: Input }],\n    title: [{ type: Input }],\n    icon: [{ type: Input }],\n    index: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    isEmbedded: [{ type: Input }],\n    isInlineEmbedded: [{ type: Input }],\n    hidden: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoFieldsetElement.prototype.controls;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.form;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.title;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.icon;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.index;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.autoFocus;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.isEmbedded;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.isInlineEmbedded;\n    /** @type {?} */\n    NovoFieldsetElement.prototype.hidden;\n}\nclass NovoDynamicFormElement {\n    /**\n     * @param {?} element\n     * @param {?} templates\n     */\n    constructor(element, templates) {\n        this.element = element;\n        this.templates = templates;\n        this.controls = [];\n        this.fieldsets = [];\n        this.hideNonRequiredFields = true;\n        this.autoFocusFirstField = false;\n        this.allFieldsRequired = false;\n        this.allFieldsNotRequired = false;\n        this.showingAllFields = false;\n        this.showingRequiredFields = true;\n        this.numControls = 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ngOnChanges();\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.form.layout = this.layout;\n        if (!(this.fieldsets && this.fieldsets.length) && this.controls && this.controls.length) {\n            this.fieldsets = [\n                {\n                    controls: this.controls,\n                },\n            ];\n            this.numControls = this.controls.length;\n        }\n        else if (this.fieldsets) {\n            this.fieldsets.forEach((/**\n             * @param {?} fieldset\n             * @return {?}\n             */\n            (fieldset) => {\n                this.numControls = this.numControls + fieldset.controls.length;\n            }));\n        }\n        /** @type {?} */\n        const requiredFields = [];\n        /** @type {?} */\n        const nonRequiredFields = [];\n        this.fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            fieldset.controls.forEach((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                if (control.required) {\n                    requiredFields.push(control);\n                }\n                else {\n                    nonRequiredFields.push(control);\n                }\n            }));\n        }));\n        this.allFieldsRequired = requiredFields.length === this.numControls;\n        this.allFieldsNotRequired = nonRequiredFields.length === this.numControls;\n        if (this.allFieldsNotRequired && this.hideNonRequiredFields) {\n            this.fieldsets.forEach((/**\n             * @param {?} fieldset\n             * @return {?}\n             */\n            (fieldset) => {\n                fieldset.controls.forEach((/**\n                 * @param {?} control\n                 * @return {?}\n                 */\n                (control) => {\n                    this.form.controls[control.key].hidden = false;\n                }));\n            }));\n        }\n        this.form.fieldsets = [...this.fieldsets];\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.customTemplates && this.customTemplates.length) {\n            this.customTemplates.forEach((/**\n             * @param {?} template\n             * @return {?}\n             */\n            (template) => {\n                this.templates.addCustom(template.name, template.template);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    showAllFields() {\n        this.form.fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            fieldset.controls.forEach((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                /** @type {?} */\n                const ctl = this.form.controls[control.key];\n                if (!this.fieldsAlreadyHidden.includes(control.key)) {\n                    ctl.hidden = false;\n                }\n            }));\n        }));\n        this.showingAllFields = true;\n        this.showingRequiredFields = false;\n    }\n    /**\n     * @param {?} hideRequiredWithValue\n     * @return {?}\n     */\n    showOnlyRequired(hideRequiredWithValue) {\n        this.fieldsAlreadyHidden = [];\n        this.form.fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            fieldset.controls.forEach((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                /** @type {?} */\n                const ctl = this.form.controls[control.key];\n                if (ctl.hidden) {\n                    this.fieldsAlreadyHidden.push(control.key);\n                }\n                // Hide any non-required fields\n                if (!control.required) {\n                    ctl.hidden = true;\n                }\n                // Hide required fields that have been successfully filled out\n                if (hideRequiredWithValue &&\n                    !Helpers.isBlank(this.form.value[control.key]) &&\n                    (!control.isEmpty || (control.isEmpty && control.isEmpty(ctl)))) {\n                    ctl.hidden = true;\n                }\n                // Don't hide fields with errors\n                if (ctl.errors) {\n                    ctl.hidden = false;\n                }\n            }));\n        }));\n        this.showingAllFields = false;\n        this.showingRequiredFields = true;\n        this.forceValidation();\n    }\n    /**\n     * @return {?}\n     */\n    get values() {\n        return this.form ? this.form.value : null;\n    }\n    /**\n     * @return {?}\n     */\n    get isValid() {\n        return this.form ? this.form.valid : false;\n    }\n    /**\n     * @return {?}\n     */\n    updatedValues() {\n        /** @type {?} */\n        let ret = null;\n        this.form.fieldsets.forEach((/**\n         * @param {?} fieldset\n         * @return {?}\n         */\n        (fieldset) => {\n            fieldset.controls.forEach((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => {\n                if (this.form.controls[control.key].dirty || control.dirty) {\n                    if (!ret) {\n                        ret = {};\n                    }\n                    ret[control.key] = this.form.value[control.key];\n                }\n            }));\n        }));\n        return ret;\n    }\n    /**\n     * @return {?}\n     */\n    forceValidation() {\n        Object.keys(this.form.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            /** @type {?} */\n            const control = this.form.controls[key];\n            if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n                control.markAsDirty();\n                control.markAsTouched();\n            }\n        }));\n    }\n}\nNovoDynamicFormElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-dynamic-form',\n                template: `\n        <novo-control-templates></novo-control-templates>\n        <div class=\"novo-form-container\">\n            <header>\n                <ng-content select=\"form-title\"></ng-content>\n                <ng-content select=\"form-subtitle\"></ng-content>\n            </header>\n            <form class=\"novo-form\" [formGroup]=\"form\">\n                <ng-container *ngFor=\"let fieldset of form.fieldsets;let i = index\">\n                    <novo-fieldset *ngIf=\"fieldset.controls.length\" [index]=\"i\" [autoFocus]=\"autoFocusFirstField\" [icon]=\"fieldset.icon\" [controls]=\"fieldset.controls\" [title]=\"fieldset.title\" [form]=\"form\" [isEmbedded]=\"fieldset.isEmbedded\" [isInlineEmbedded]=\"fieldset.isInlineEmbedded\" [hidden]=\"fieldset.hidden\"></novo-fieldset>\n                </ng-container>\n            </form>\n        </div>\n    `,\n                providers: [NovoTemplateService]\n            }] }\n];\n/** @nocollapse */\nNovoDynamicFormElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoTemplateService }\n];\nNovoDynamicFormElement.propDecorators = {\n    controls: [{ type: Input }],\n    fieldsets: [{ type: Input }],\n    form: [{ type: Input }],\n    layout: [{ type: Input }],\n    hideNonRequiredFields: [{ type: Input }],\n    autoFocusFirstField: [{ type: Input }],\n    customTemplates: [{ type: ContentChildren, args: [NovoTemplate,] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.controls;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.fieldsets;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.form;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.layout;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.hideNonRequiredFields;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.autoFocusFirstField;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.customTemplates;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDynamicFormElement.prototype.fieldsAlreadyHidden;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.allFieldsRequired;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.allFieldsNotRequired;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.showingAllFields;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.showingRequiredFields;\n    /** @type {?} */\n    NovoDynamicFormElement.prototype.numControls;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDynamicFormElement.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoDynamicFormElement.prototype.templates;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/Form.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFormElement {\n    /**\n     * @param {?} templates\n     */\n    constructor(templates) {\n        this.templates = templates;\n        this.hideHeader = false;\n        this.showingAllFields = false;\n        this.showingRequiredFields = true;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this.form.getRawValue();\n    }\n    /**\n     * @return {?}\n     */\n    get isValid() {\n        return this.form.valid;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.form.layout = this.layout;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.customTemplates && this.customTemplates.length) {\n            this.customTemplates.forEach((/**\n             * @param {?} template\n             * @return {?}\n             */\n            (template) => {\n                this.templates.addCustom(template.name, template.template);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    showAllFields() {\n        Object.keys(this.form.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            this.form.controls[key].hidden = false;\n        }));\n        this.showingAllFields = true;\n        this.showingRequiredFields = false;\n    }\n    /**\n     * @param {?} hideRequiredWithValue\n     * @return {?}\n     */\n    showOnlyRequired(hideRequiredWithValue) {\n        Object.keys(this.form.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            // Hide any non-required fields\n            if (!this.form.controls[key].required) {\n                this.form.controls[key].hidden = true;\n            }\n            // Hide required fields that have been successfully filled out\n            if (hideRequiredWithValue && !Helpers.isBlank(this.form.value[key])) {\n                this.form.controls[key].hidden = true;\n            }\n            // Don't hide fields with errors\n            if (this.form.controls[key].errors) {\n                this.form.controls[key].hidden = false;\n            }\n        }));\n        this.showingAllFields = false;\n        this.showingRequiredFields = true;\n        this.forceValidation();\n    }\n    /**\n     * @return {?}\n     */\n    forceValidation() {\n        Object.keys(this.form.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            /** @type {?} */\n            const control = this.form.controls[key];\n            if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n                control.markAsDirty();\n                control.markAsTouched();\n            }\n        }));\n    }\n}\nNovoFormElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-form',\n                template: `\n        <novo-control-templates></novo-control-templates>\n        <div class=\"novo-form-container\">\n            <header *ngIf=\"!hideHeader\">\n                <ng-content select=\"form-title\"></ng-content>\n                <ng-content select=\"form-subtitle\"></ng-content>\n            </header>\n            <form class=\"novo-form\" [formGroup]=\"form\">\n                <ng-content></ng-content>\n            </form>\n        </div>\n    `,\n                providers: [NovoTemplateService]\n            }] }\n];\n/** @nocollapse */\nNovoFormElement.ctorParameters = () => [\n    { type: NovoTemplateService }\n];\nNovoFormElement.propDecorators = {\n    form: [{ type: Input }],\n    layout: [{ type: Input }],\n    hideHeader: [{ type: Input }],\n    customTemplates: [{ type: ContentChildren, args: [NovoTemplate,] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoFormElement.prototype.form;\n    /** @type {?} */\n    NovoFormElement.prototype.layout;\n    /** @type {?} */\n    NovoFormElement.prototype.hideHeader;\n    /** @type {?} */\n    NovoFormElement.prototype.customTemplates;\n    /** @type {?} */\n    NovoFormElement.prototype.showingAllFields;\n    /** @type {?} */\n    NovoFormElement.prototype.showingRequiredFields;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoFormElement.prototype.templates;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/radio/Radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoRadioElement)),\n    multi: true,\n};\nclass NovoRadioGroup {\n}\nNovoRadioGroup.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-radio-group',\n                template: '<ng-content></ng-content>'\n            }] }\n];\nclass NovoRadioElement {\n    /**\n     * @param {?} ref\n     */\n    constructor(ref) {\n        this.ref = ref;\n        this.button = false;\n        this.theme = 'secondary';\n        this.disabled = false;\n        this.change = new EventEmitter();\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    select(event) {\n        Helpers.swallowEvent(event);\n        // Only change the checked state if this is a new radio, they are not toggle buttons\n        if (!this.checked) {\n            this.checked = !this.checked;\n            this.change.emit(this.value);\n            this.onModelChange(this.value);\n            this.ref.markForCheck();\n        }\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n    }\n}\nNovoRadioElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-radio',\n                providers: [RADIO_VALUE_ACCESSOR],\n                template: `\n        <input [name]=\"name\" type=\"radio\" [checked]=\"checked\" [attr.id]=\"name\" (change)=\"select($event)\" [disabled]=\"disabled\">\n        <label [attr.for]=\"name\" (click)=\"select($event)\" [class.disabled]=\"disabled\">\n            <button *ngIf=\"button\" [ngClass]=\"{'unchecked': !checked, 'checked': checked, 'has-icon': !!icon}\" [theme]=\"theme\" [icon]=\"icon\">{{ label }}</button>\n            <div *ngIf=\"!button\">\n                <i [ngClass]=\"{'bhi-radio-empty': !checked, 'bhi-radio-filled': checked}\"></i>\n                {{ label }}\n                <ng-content></ng-content>\n            </div>\n        </label>\n    `,\n                host: {\n                    '[class.vertical]': 'vertical',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoRadioElement.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNovoRadioElement.propDecorators = {\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    checked: [{ type: Input }],\n    vertical: [{ type: Input }],\n    label: [{ type: Input }],\n    button: [{ type: Input }],\n    theme: [{ type: Input }],\n    icon: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoRadioElement.prototype.name;\n    /** @type {?} */\n    NovoRadioElement.prototype.value;\n    /** @type {?} */\n    NovoRadioElement.prototype.checked;\n    /** @type {?} */\n    NovoRadioElement.prototype.vertical;\n    /** @type {?} */\n    NovoRadioElement.prototype.label;\n    /** @type {?} */\n    NovoRadioElement.prototype.button;\n    /** @type {?} */\n    NovoRadioElement.prototype.theme;\n    /** @type {?} */\n    NovoRadioElement.prototype.icon;\n    /** @type {?} */\n    NovoRadioElement.prototype.disabled;\n    /** @type {?} */\n    NovoRadioElement.prototype.change;\n    /** @type {?} */\n    NovoRadioElement.prototype.model;\n    /** @type {?} */\n    NovoRadioElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoRadioElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoRadioElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/radio/Radio.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoRadioModule {\n}\nNovoRadioModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule],\n                declarations: [NovoRadioElement, NovoRadioGroup],\n                exports: [NovoRadioElement, NovoRadioGroup],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/quick-note/extras/quick-note-results/QuickNoteResults.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass QuickNoteResults extends PickerResults {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     * @param {?} ref\n     */\n    constructor(element, labels, ref) {\n        super(element, labels, ref);\n        this.labels = labels;\n        // Mode that the quick note is in for tagging\n        this.taggingMode = '';\n    }\n    /**\n     * @return {?}\n     */\n    get term() {\n        return this._term;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set term(value) {\n        this._term = value.searchTerm;\n        this.taggingMode = value.taggingMode;\n        this.hasError = false;\n        this.isLoading = true;\n        this.search(value, this.taggingMode).subscribe((/**\n         * @param {?} results\n         * @return {?}\n         */\n        (results) => {\n            this.matches = this.isStatic ? this.filterData(results) : results;\n            this.isLoading = false;\n        }), (/**\n         * @return {?}\n         */\n        () => {\n            this.hasError = true;\n            this.isLoading = false;\n        }));\n    }\n    /**\n     * @param {?} term\n     * @param {?} taggingMode\n     * @return {?}\n     */\n    search(term, taggingMode) {\n        /** @type {?} */\n        const searchCall = this.config.options[taggingMode];\n        return from(new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            // Check if there is match data\n            if (searchCall) {\n                // Resolve the data\n                if (Array.isArray(searchCall)) {\n                    this.isStatic = true;\n                    // Arrays are returned immediately\n                    resolve(this.structureArray(searchCall));\n                }\n                else if ((searchCall.hasOwnProperty('reject') && searchCall.hasOwnProperty('resolve')) ||\n                    Object.getPrototypeOf(searchCall).hasOwnProperty('then')) {\n                    this.isStatic = false;\n                    // Promises (ES6 or Deferred) are resolved whenever they resolve\n                    searchCall.then(this.structureArray.bind(this)).then(resolve, reject);\n                }\n                else if (typeof searchCall === 'function') {\n                    this.isStatic = false;\n                    // Promises (ES6 or Deferred) are resolved whenever they resolve\n                    searchCall(term)\n                        .then(this.structureArray.bind(this))\n                        .then(resolve, reject);\n                }\n                else {\n                    // All other kinds of data are rejected\n                    reject('The data provided is not an array or a promise');\n                    throw new Error('The data provided is not an array or a promise');\n                }\n            }\n            else {\n                // No data gets rejected\n                reject('error');\n            }\n        })));\n    }\n    /**\n     * \\@name structureArray\n     * \\@description This function structures an array of nodes into an array of objects with a\n     * 'name' field by default.\n     * @param {?} collection - the data once getData resolves it\n     *\n     * @return {?}\n     */\n    structureArray(collection) {\n        if (collection && (typeof collection[0] === 'string' || typeof collection[0] === 'number')) {\n            return collection.map((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                return {\n                    value: item,\n                    label: item,\n                };\n            }));\n        }\n        return collection.map((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            /** @type {?} */\n            const value = this.config.field ? data[this.config.field[this.taggingMode]] : data.value || data;\n            /** @type {?} */\n            const label = this.config.format ? Helpers.interpolate(this.config.format[this.taggingMode], data) : data.label || String(value);\n            return { value, label, data };\n        }));\n    }\n    /**\n     * \\@name selectMatch\n     * \\@description\n     * @param {?} event\n     *\n     * @return {?}\n     */\n    selectMatch(event) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        /** @type {?} */\n        const selected = this.activeMatch;\n        if (selected) {\n            this.parent.onSelected(this.taggingMode, selected);\n            this.parent.hideResults();\n        }\n        return false;\n    }\n}\nQuickNoteResults.decorators = [\n    { type: Component, args: [{\n                selector: 'quick-note-results',\n                host: {\n                    class: 'active',\n                },\n                template: `\n        <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n        <novo-list *ngIf=\"matches.length > 0\">\n            <novo-list-item\n                *ngFor=\"let match of matches\"\n                (click)=\"selectMatch($event)\"\n                [class.active]=\"match===activeMatch\"\n                (mouseenter)=\"selectActive(match)\">\n                <item-content>\n                    <p [innerHtml]=\"highlight(match.label, term)\"></p>\n                </item-content>\n            </novo-list-item>\n        </novo-list>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.quickNoteError }}</p>\n        <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.quickNoteEmpty }}</p>\n    `\n            }] }\n];\n/** @nocollapse */\nQuickNoteResults.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nif (false) {\n    /** @type {?} */\n    QuickNoteResults.prototype.taggingMode;\n    /** @type {?} */\n    QuickNoteResults.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/quick-note/QuickNote.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst QUICK_NOTE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => QuickNoteElement)),\n    multi: true,\n};\nclass QuickNoteElement extends OutsideClick {\n    /**\n     * @param {?} zone\n     * @param {?} element\n     * @param {?} componentUtils\n     */\n    constructor(zone, element, componentUtils) {\n        super(element);\n        this.zone = zone;\n        this.componentUtils = componentUtils;\n        this.startupFocus = false;\n        // Emitter for selects\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.placeholderVisible = false;\n        this._placeholderElement = null;\n        // in pixels - configured by stylesheet\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        // Bind to the active change event from the OutsideClick\n        this.onActiveChange.subscribe((/**\n         * @param {?} active\n         * @return {?}\n         */\n        (active) => {\n            if (!active) {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.hideResults();\n                }));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Make sure we have a proper config\n        if (!this.config) {\n            throw new Error('No config set for QuickNote!');\n        }\n        // Make sure that we have triggers\n        if (!this.config.triggers) {\n            throw new Error('QuickNote config must supply triggers!');\n        }\n        // Make sure that we have options\n        if (!this.config.options) {\n            throw new Error('QuickNote config must supply options!');\n        }\n        // Allow for callers to use a custom results template class in the config\n        this.resultsComponent = this.config.resultsTemplate || QuickNoteResults;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Tear down the CKEditor instance\n        if (this.ckeInstance) {\n            this.ckeInstance.focusManager.blur(true); // Remove focus from editor\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.ckeInstance.removeAllListeners();\n                CKEDITOR.instances[this.ckeInstance.name].destroy();\n                this.ckeInstance.destroy();\n                this.ckeInstance = null;\n            }));\n        }\n    }\n    /**\n     * Connect to key/mouse events from CKEditor after the editor has been initialized\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!CKEDITOR) {\n            console.error('Make sure to include CKEditor sources in your dependencies!');\n            return;\n        }\n        // Replace the textarea with an instance of CKEditor\n        this.ckeInstance = CKEDITOR.replace(this.host.nativeElement, this.getCKEditorConfig());\n        // Set initial value of the note in the editor\n        this.writeValue(this.model);\n        // Connect to the key event in CKEditor for showing results dropdown\n        this.ckeInstance.on('key', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this.onKey(event.data.domEvent.$)) {\n                event.cancel();\n            }\n        }));\n        // Connect to the change event in CKEditor for debouncing user modifications\n        this.ckeInstance.on('change', (/**\n         * @return {?}\n         */\n        () => {\n            // Debounce update\n            if (this.debounceTimeout) {\n                clearTimeout(this.debounceTimeout);\n            }\n            this.debounceTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Run within the context of this angular element since we don't need to cancel event\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.onValueChange();\n                }));\n                this.debounceTimeout = null;\n            }), 250);\n        }));\n        // Propagate blur events from CKEditor to the Element's listeners\n        this.ckeInstance.on('blur', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.showPlaceholder();\n            this.blur.emit(event);\n        }));\n        // Propagate blur events from CKEditor to the Element's listeners\n        this.ckeInstance.on('focus', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.hidePlaceholder();\n            this.focus.emit(event);\n        }));\n        // Show placeholder if the note is empty, after the editor is instantiated\n        this.ckeInstance.on('instanceReady', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.showPlaceholder();\n            // Set editor to readOnly\n            if (this.config.readOnly) {\n                this.ckeInstance.setReadOnly(this.config.readOnly);\n            }\n        }));\n    }\n    // Set touched on blur\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onTouched(event) {\n        this.onModelTouched();\n    }\n    /**\n     * Handles setting the model and the view from the outside caller or the user's typing\n     *\n     * @param {?} model A model that has a note (html content) and references (array of objects)\n     * @return {?}\n     */\n    writeValue(model) {\n        // Set value of the model\n        if (model && (model.references || model.note)) {\n            this.model = {\n                note: model.note || '',\n                references: model.references || {},\n            };\n        }\n        else {\n            this.model = {\n                note: model,\n                references: {},\n            };\n        }\n        // Set the note html value in the editor\n        if (this.ckeInstance) {\n            this.ckeInstance.setData(this.model.note);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    /**\n     * If a renderer is not provided, the QuickNote will default to using this one, an anchor tag with no href\n     * @private\n     * @param {?} symbol\n     * @param {?} item\n     * @return {?}\n     */\n    static defaultRenderer(symbol, item) {\n        return `<a>${symbol}${item.label}</a>`;\n    }\n    /**\n     * Returns the renderer for a given tagging mode if it exists in the config, otherwise the default.\n     * @private\n     * @param {?} taggingMode\n     * @return {?}\n     */\n    getRenderer(taggingMode) {\n        return this.config.renderer ? this.config.renderer[taggingMode] : QuickNoteElement.defaultRenderer;\n    }\n    /**\n     * Called every time a keystroke is made in the editor. Listens for particular keys (e.g. UP arrow, ESC, etc.)\n     * to handle certain behaviors of the picker.\n     *\n     * Runs within the context of the CKEditor, so actions that affect the view have to be run back inside of the\n     * Angular zone of this class.\n     *\n     * @private\n     * @param {?} event The key press event\n     * @return {?} true to allow the event to occur, false to cancel the event\n     */\n    onKey(event) {\n        if (event.key) {\n            if (this.quickNoteResults) {\n                // Hide results on escape key\n                if (event.keyCode === KeyCodes.ESC) {\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.hideResults();\n                    }));\n                    return false;\n                }\n                // Navigation inside the results\n                if (event.keyCode === KeyCodes.UP) {\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.quickNoteResults.instance.prevActiveMatch();\n                    }));\n                    return false;\n                }\n                if (event.keyCode === KeyCodes.DOWN) {\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.quickNoteResults.instance.nextActiveMatch();\n                    }));\n                    return false;\n                }\n                if (event.keyCode === KeyCodes.ENTER) {\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.quickNoteResults.instance.selectActiveMatch();\n                    }));\n                    return false;\n                }\n            }\n            else {\n                // Loop through all triggers and turn on tagging mode if the user just pressed a trigger character\n                /** @type {?} */\n                const triggers = this.config.triggers || {};\n                Object.keys(triggers).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    const trigger = triggers[key] || {};\n                    if (event.key === trigger) {\n                        this.isTagging = true;\n                        this.taggingMode = key;\n                    }\n                }));\n            }\n        }\n        return true;\n    }\n    /**\n     * Debounced method that is run in the proper Angular context when the user has modified the CKEditor.\n     * After the value has been updated in CKEditor, this will propagate that change to the model and listeners.\n     * @private\n     * @return {?}\n     */\n    onValueChange() {\n        // Get the html text in CKEditor\n        /** @type {?} */\n        let value = this.ckeInstance.getData();\n        // Remove empty 'ZERO WIDTH SPACE' characters that can get added erroneously by the editor\n        /** @type {?} */\n        const regex = new RegExp(String.fromCharCode(8203), 'g');\n        value = value.replace(regex, '');\n        // Make sure that any references in the model are still valid\n        this.validateReferences();\n        // Possibly show results if the user has entered a search term\n        this.showResults();\n        // Propagate change to ngModel for form validation, and send null if the note is empty\n        /** @type {?} */\n        let newModel = null;\n        if (value) {\n            newModel = {\n                note: value,\n                references: this.model.references,\n            };\n        }\n        // Inform listeners to the ngModel change event that something has changed\n        this.onModelChange(newModel);\n        // Inform listeners of the `@Output() change` event that the model has been updated\n        this.change.emit(newModel);\n        // Inform listeners to the ngModel touched event that something has changed\n        this.onTouched();\n    }\n    /**\n     * Creates an instance of the results (called popup) and adds all the bindings to that instance.\n     * @private\n     * @return {?}\n     */\n    showResults() {\n        if (this.isTagging) {\n            /** @type {?} */\n            const searchTerm = this.getSearchTerm();\n            if (searchTerm.length) {\n                // Update Matches\n                if (this.quickNoteResults) {\n                    // Update existing list\n                    this.quickNoteResults.instance.term = {\n                        searchTerm,\n                        taggingMode: this.taggingMode,\n                    };\n                }\n                else {\n                    // Create the results DOM element\n                    this.quickNoteResults = this.componentUtils.append(this.resultsComponent, this.results);\n                    this.quickNoteResults.instance.parent = this;\n                    this.quickNoteResults.instance.config = this.config;\n                    this.quickNoteResults.instance.term = {\n                        searchTerm,\n                        taggingMode: this.taggingMode,\n                    };\n                    this.positionResultsDropdown();\n                }\n            }\n            else if (this.quickNoteResults) {\n                this.quickNoteResults.destroy();\n                this.quickNoteResults = null;\n            }\n            // Tell the OutsideClick base class to start listening for an outside clicks\n            this.toggleActive(null, true);\n        }\n    }\n    /**\n     * Deletes the picker results from the DOM.\n     * @private\n     * @return {?}\n     */\n    hideResults() {\n        this.isTagging = false;\n        if (this.quickNoteResults) {\n            this.quickNoteResults.destroy();\n            this.quickNoteResults = null;\n        }\n    }\n    /**\n     * Handles the selection from the QuickNoteResults Component. Called by the QuickNoteResults component on it's\n     * parent (this element).\n     *\n     * @private\n     * @param {?} taggingMode - type of tags we are looking for\n     * @param {?} selected - selected object from the picker that has a label and value\n     * @return {?}\n     */\n    onSelected(taggingMode, selected) {\n        // Turn off tagging\n        this.isTagging = false;\n        // Replace searchTerm with link\n        /** @type {?} */\n        const symbol = this.config.triggers[taggingMode];\n        /** @type {?} */\n        const renderer = this.getRenderer(taggingMode);\n        /** @type {?} */\n        const renderedText = renderer(symbol, selected);\n        this.replaceWordAtCursor(renderedText);\n        // Add the new reference, if it doesn't already exist\n        this.model.references = this.model.references || {};\n        this.model.references[taggingMode] = this.model.references[taggingMode] || [];\n        /** @type {?} */\n        const matchingItems = this.model.references[taggingMode].filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => JSON.stringify(item) === JSON.stringify(selected)));\n        if (matchingItems.length === 0) {\n            this.model.references[taggingMode].push(selected);\n        }\n        // Update the quick note with the changes due to the user's selection of an item in the dropdown\n        this.onValueChange();\n    }\n    /**\n     * Convenience method that gets the current word that the cursor is on, minus the tag.\n     * Also, trims any whitespace before/after the term to aid in searching.\n     * @private\n     * @return {?}\n     */\n    getSearchTerm() {\n        /** @type {?} */\n        let word = this.getWordAtCursor().trim();\n        if (this.isTagging) {\n            /** @type {?} */\n            const symbol = this.config.triggers[this.taggingMode];\n            if (!word.includes(symbol)) {\n                this.hideResults();\n                return '';\n            }\n            word = word.slice(word.indexOf(symbol) + symbol.length);\n        }\n        return word;\n    }\n    /**\n     * Gets the current word that the cursor is on CKEditor. Current word starts at the beginning of the line or a\n     * tag character if we are in tagging mode. Current word ends at the end of the line or an empty space.\n     *\n     * @private\n     * @return {?} plain text string (removes all html formatting)\n     */\n    getWordAtCursor() {\n        /** @type {?} */\n        const range = this.ckeInstance.getSelection().getRanges()[0];\n        /** @type {?} */\n        const start = range.startContainer;\n        if (start.type === CKEDITOR.NODE_TEXT && range.startOffset) {\n            /** @type {?} */\n            const text = start.getText();\n            /** @type {?} */\n            const symbol = this.config.triggers[this.taggingMode];\n            /** @type {?} */\n            let wordStart = text.lastIndexOf(symbol, range.startOffset - 1);\n            if (wordStart > 0) {\n                /** @type {?} */\n                const beforeSymbol = text.charAt(wordStart - 1);\n                // We don't want to trigger the lookup call unless the symbol was preceded by whitespace\n                if (beforeSymbol !== '\\u200B' && /\\S/.test(beforeSymbol)) {\n                    return '';\n                }\n            }\n            else if (start.hasPrevious() && /\\S$/.test(start.getPrevious().getText())) {\n                // When wordStart is <= 0, we need to check the previous node's text to see if it ended with whitespace or not\n                return '';\n            }\n            /** @type {?} */\n            let wordEnd = text.indexOf(' ', range.startOffset + 1);\n            if (wordStart === -1) {\n                wordStart = 0;\n            }\n            if (wordEnd === -1) {\n                wordEnd = text.length;\n            }\n            return text.substring(wordStart, wordEnd);\n        }\n        // Selection starts at the 0 index of the text node or there's no previous text node in contents\n        return '';\n    }\n    /**\n     * Replaces the word that the user is on with the given html.\n     *\n     * CKEditor gives us access to the current line of html in the editor, so we replace the content of\n     * the line, replacing only the current word.\n     * @private\n     * @param {?} newWord\n     * @return {?}\n     */\n    replaceWordAtCursor(newWord) {\n        /** @type {?} */\n        const originalWord = this.getWordAtCursor().trim();\n        /** @type {?} */\n        const range = this.ckeInstance.getSelection().getRanges()[0];\n        /** @type {?} */\n        const start = range.startContainer;\n        /** @type {?} */\n        const parentNode = start.getParent();\n        if (start.type === CKEDITOR.NODE_TEXT && parentNode) {\n            /** @type {?} */\n            const line = parentNode.getHtml();\n            /** @type {?} */\n            const index = line.lastIndexOf(originalWord);\n            if (index >= 0) {\n                // Add a space after the replaced word so that multiple references can be added back to back\n                /** @type {?} */\n                const newLine = line.substring(0, index) + newWord + ' ' + line.substring(index + originalWord.length);\n                parentNode.setHtml(newLine);\n                // Place selection at the end of the line\n                range.moveToPosition(parentNode, CKEDITOR.POSITION_BEFORE_END);\n                this.ckeInstance.getSelection().selectRanges([range]);\n            }\n        }\n    }\n    /**\n     * Returns current references, minus any from the model that have been removed from the editor.\n     * @private\n     * @return {?}\n     */\n    validateReferences() {\n        /** @type {?} */\n        let html = this.ckeInstance.document.getBody().getHtml();\n        // CKEditor stopped supporting the config.forceSimpleAmpersand setting, so we have to convert '&amp;' to '&'\n        // when we pull html from the editor - see: https://dev.ckeditor.com/ticket/13723\n        /** @type {?} */\n        const ampRegex = new RegExp('&amp;', 'g');\n        html = html.replace(ampRegex, '&');\n        Object.keys(this.model.references).forEach((/**\n         * @param {?} taggingMode\n         * @return {?}\n         */\n        (taggingMode) => {\n            /** @type {?} */\n            const array = this.model.references[taggingMode] || [];\n            /** @type {?} */\n            const symbol = this.config.triggers[taggingMode];\n            /** @type {?} */\n            const renderer = this.getRenderer(taggingMode);\n            this.model.references[taggingMode] = array.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                /** @type {?} */\n                const renderedText = renderer(symbol, item);\n                return html.includes(renderedText);\n            }));\n            // If no references, then delete the key\n            if (this.model.references[taggingMode].length === 0) {\n                delete this.model.references[taggingMode];\n            }\n        }));\n    }\n    /**\n     * Configures the CKEditor for QuickNote functionality.\n     *\n     * Sets the height of the CKEditor dynamically to the height of the wrapper upon initialization.\n     * Removes the toolbar on the bottom and configures a slimmed down version of the toolbar.\n     * Removes plugins and turns off setting to allow browser based spell checking.\n     * @private\n     * @return {?}\n     */\n    getCKEditorConfig() {\n        // Use the height of the wrapper element to set the initial height of the editor, then\n        // set it to 100% to allow the editor to resize using the grippy.\n        /** @type {?} */\n        const editorHeight = this.wrapper.nativeElement.clientHeight - QuickNoteElement.TOOLBAR_HEIGHT;\n        this.wrapper.nativeElement.style.setProperty('height', '100%');\n        return {\n            enterMode: CKEDITOR.ENTER_BR,\n            shiftEnterMode: CKEDITOR.ENTER_P,\n            disableNativeSpellChecker: false,\n            height: editorHeight,\n            startupFocus: this.startupFocus,\n            removePlugins: 'liststyle,tabletools,contextmenu',\n            // allows browser based spell checking\n            toolbar: [\n                {\n                    name: 'basicstyles',\n                    items: [\n                        'Styles',\n                        'FontSize',\n                        'Bold',\n                        'Italic',\n                        'Underline',\n                        'TextColor',\n                        '-',\n                        'NumberedList',\n                        'BulletedList',\n                        'Outdent',\n                        'Indent',\n                        'Link',\n                    ],\n                },\n            ],\n        };\n    }\n    /**\n     * Returns the current screen position of the cursor in CKEditor, accounting for any scrolling in the editor.\n     * @private\n     * @return {?}\n     */\n    getCursorPosition() {\n        /** @type {?} */\n        const range = this.ckeInstance.getSelection().getRanges()[0];\n        /** @type {?} */\n        const parentElement = range.startContainer.$.parentElement;\n        /** @type {?} */\n        const editorElement = this.ckeInstance.editable().$;\n        // Since the editor is a text node in the DOM that does not know about it's position, a temporary element has to\n        // be inserted in order to locate the cursor position.\n        /** @type {?} */\n        const cursorElement = document.createElement('img');\n        cursorElement.setAttribute('src', 'null');\n        cursorElement.setAttribute('width', '0');\n        cursorElement.setAttribute('height', '0');\n        parentElement.appendChild(cursorElement);\n        /** @type {?} */\n        const cursorPosition = {\n            top: cursorElement.offsetTop - editorElement.scrollTop,\n            left: cursorElement.offsetLeft - editorElement.scrollLeft,\n        };\n        cursorElement.remove();\n        return cursorPosition;\n    }\n    /**\n     * Positions the results dropdown based on the location of the cursor in the text field\n     * @private\n     * @return {?}\n     */\n    positionResultsDropdown() {\n        /** @type {?} */\n        const MIN_MARGIN_TOP = QuickNoteElement.TOOLBAR_HEIGHT * 2;\n        /** @type {?} */\n        const MAX_MARGIN_TOP = this.getContentHeight() + QuickNoteElement.TOOLBAR_HEIGHT;\n        /** @type {?} */\n        const cursorPosition = this.getCursorPosition();\n        /** @type {?} */\n        let marginTop = cursorPosition.top + QuickNoteElement.TOOLBAR_HEIGHT;\n        // Check that the margin is within the visible bounds\n        marginTop = Math.max(marginTop, MIN_MARGIN_TOP);\n        marginTop = Math.min(marginTop, MAX_MARGIN_TOP);\n        // Set the margin-top of the dropdown\n        this.quickNoteResults.instance.element.nativeElement.style.setProperty('margin-top', marginTop + 'px');\n    }\n    /**\n     * Returns the height in pixels of the content area - the text that the user has entered.\n     * @private\n     * @return {?}\n     */\n    getContentHeight() {\n        /** @type {?} */\n        let contentHeight = 0;\n        if (this.ckeInstance.ui &&\n            this.ckeInstance.ui.contentsElement &&\n            this.ckeInstance.ui.contentsElement.$ &&\n            this.ckeInstance.ui.contentsElement.$.style) {\n            /** @type {?} */\n            const cssText = this.ckeInstance.ui.contentsElement.$.style.cssText;\n            if (cssText.indexOf('height: ') !== -1) {\n                /** @type {?} */\n                let height = cssText.split('height: ')[1];\n                height = height.split('px')[0];\n                contentHeight = parseInt(height, 10);\n            }\n        }\n        return contentHeight;\n    }\n    /**\n     * Show the placeholder text if the editor is empty\n     * @private\n     * @return {?}\n     */\n    showPlaceholder() {\n        if (!this.ckeInstance.getData() && !this.startupFocus) {\n            this.ckeInstance\n                .editable()\n                .getParent()\n                .$.appendChild(this.placeholderElement);\n            this.placeholderVisible = true;\n        }\n    }\n    /**\n     * Hide the placeholder text by removing the placeholder element from the DOM\n     * @private\n     * @return {?}\n     */\n    hidePlaceholder() {\n        if (this.placeholderVisible) {\n            this.ckeInstance\n                .editable()\n                .getParent()\n                .$.removeChild(this.placeholderElement);\n            this.placeholderVisible = false;\n        }\n    }\n    /**\n     * Get or create the single placeholder object that is constructed only when needed.\n     * @private\n     * @return {?}\n     */\n    get placeholderElement() {\n        if (!this._placeholderElement) {\n            this._placeholderElement = document.createElement('div');\n            this._placeholderElement.className = 'placeholder';\n            this._placeholderElement.style.cssText =\n                'margin: 20px; color: #AAAAAA; font-family: sans-serif; font-size: 13px; line-height: 20px; position: absolute; top: 0';\n            this._placeholderElement.textContent = this.placeholder;\n        }\n        return this._placeholderElement;\n    }\n}\nQuickNoteElement.TOOLBAR_HEIGHT = 40; // in pixels - configured by stylesheet\nQuickNoteElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-quick-note',\n                providers: [QUICK_NOTE_VALUE_ACCESSOR],\n                template: `\n    <div class=\"quick-note-wrapper\" #wrapper><textarea #host></textarea> <span #results></span></div>\n  `\n            }] }\n];\n/** @nocollapse */\nQuickNoteElement.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ComponentUtils }\n];\nQuickNoteElement.propDecorators = {\n    wrapper: [{ type: ViewChild, args: ['wrapper', { static: true },] }],\n    host: [{ type: ViewChild, args: ['host', { static: true },] }],\n    results: [{ type: ViewChild, args: ['results', { read: ViewContainerRef, static: true },] }],\n    config: [{ type: Input }],\n    startupFocus: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    focus: [{ type: Output }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.TOOLBAR_HEIGHT;\n    /** @type {?} */\n    QuickNoteElement.prototype.wrapper;\n    /** @type {?} */\n    QuickNoteElement.prototype.host;\n    /** @type {?} */\n    QuickNoteElement.prototype.results;\n    /** @type {?} */\n    QuickNoteElement.prototype.config;\n    /** @type {?} */\n    QuickNoteElement.prototype.startupFocus;\n    /** @type {?} */\n    QuickNoteElement.prototype.placeholder;\n    /** @type {?} */\n    QuickNoteElement.prototype.focus;\n    /** @type {?} */\n    QuickNoteElement.prototype.blur;\n    /** @type {?} */\n    QuickNoteElement.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.resultsComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.quickNoteResults;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.isTagging;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.taggingMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.model;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.ckeInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.debounceTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.placeholderVisible;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype._placeholderElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.onModelChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.onModelTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    QuickNoteElement.prototype.componentUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/quick-note/QuickNote.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoQuickNoteModule {\n}\nNovoQuickNoteModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoLoadingModule, NovoListModule],\n                declarations: [QuickNoteElement, QuickNoteResults],\n                exports: [QuickNoteElement, QuickNoteResults],\n                entryComponents: [QuickNoteResults],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/header/Header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoHeaderSpacer {\n}\nNovoHeaderSpacer.decorators = [\n    { type: Component, args: [{\n                selector: 'header-spacer',\n                template: `\n    <ng-content></ng-content>\n  `\n            }] }\n];\nclass NovoUtilsComponent {\n}\nNovoUtilsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'utils',\n                template: `\n    <ng-content></ng-content>\n  `\n            }] }\n];\nclass NovoUtilActionComponent {\n}\nNovoUtilActionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'util-action, novo-action',\n                template: `\n    <button theme=\"icon\" [icon]=\"icon\" [attr.inverse]=\"inverse\" [disabled]=\"disabled\">\n      <ng-content></ng-content>\n    </button>\n  `\n            }] }\n];\nNovoUtilActionComponent.propDecorators = {\n    icon: [{ type: Input }],\n    inverse: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoUtilActionComponent.prototype.icon;\n    /** @type {?} */\n    NovoUtilActionComponent.prototype.inverse;\n    /** @type {?} */\n    NovoUtilActionComponent.prototype.disabled;\n}\nclass NovoHeaderComponent {\n    constructor() {\n        this.headerClass = 'novo-header';\n        this.condensed = false;\n        this.inverse = 'inverse';\n    }\n    /**\n     * @param {?} theme\n     * @return {?}\n     */\n    set theme(theme) {\n        this._theme = theme;\n        this.inverse = theme === 'white' || theme === 'off-white' || theme === 'light' ? undefined : 'inverse';\n    }\n    /**\n     * @return {?}\n     */\n    get theme() {\n        return this._theme;\n    }\n    /**\n     * @param {?} icon\n     * @return {?}\n     */\n    set icon(icon) {\n        this._icon = `bhi-${icon}`;\n    }\n    /**\n     * @return {?}\n     */\n    get icon() {\n        return this._icon;\n    }\n}\nNovoHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'header[theme]',\n                template: `\n    <section>\n      <div class=\"header-title\">\n        <ng-container *ngIf=\"title\">\n          <i *ngIf=\"icon\" class=\"header-icon\" [ngClass]=\"icon\"></i>\n          <div class=\"header-titles\">\n            <h1>{{ title }}</h1>\n            <small *ngIf=\"subTitle\">{{ subTitle }}</small>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!title\">\n          <ng-content select=\"novo-icon, [novo-icon]\"></ng-content>\n          <div class=\"header-titles\">\n            <ng-content select=\"h1, h2, h3, h4, h5, h6, small, [novo-title], [novo-subtitle]\"></ng-content>\n          </div>\n        </ng-container>\n      </div>\n      <ng-content select=\"section\"></ng-content>\n      <span flex></span>\n      <ng-content select=\"utils\"></ng-content>\n      <ng-content select=\"novo-action\"></ng-content>\n    </section>\n    <ng-content></ng-content>\n  `\n            }] }\n];\nNovoHeaderComponent.propDecorators = {\n    headerClass: [{ type: HostBinding, args: ['class',] }],\n    condensed: [{ type: HostBinding, args: ['class.condensed',] }, { type: Input }],\n    title: [{ type: Input }],\n    subTitle: [{ type: Input }],\n    theme: [{ type: HostBinding, args: ['attr.theme',] }, { type: Input }],\n    icon: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoHeaderComponent.prototype.headerClass;\n    /** @type {?} */\n    NovoHeaderComponent.prototype.condensed;\n    /** @type {?} */\n    NovoHeaderComponent.prototype.title;\n    /** @type {?} */\n    NovoHeaderComponent.prototype.subTitle;\n    /** @type {?} */\n    NovoHeaderComponent.prototype.inverse;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoHeaderComponent.prototype._theme;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoHeaderComponent.prototype._icon;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/header/Header.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoHeaderModule {\n}\nNovoHeaderModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule],\n                declarations: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n                exports: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tip-well/TipWell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTipWellElement {\n    /**\n     * @param {?} labels\n     * @param {?} sanitizer\n     */\n    constructor(labels, sanitizer) {\n        this.labels = labels;\n        this.sanitizer = sanitizer;\n        this.button = true;\n        this.sanitize = true;\n        this.confirmed = new EventEmitter();\n        this.isActive = true;\n        this.isActive = true;\n        // Check if localStorage is enabled\n        this.isLocalStorageEnabled = ((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let isEnabled = false;\n            if (typeof localStorage === 'object') {\n                try {\n                    localStorage.setItem('lsTest', '1');\n                    localStorage.removeItem('lsTest');\n                    isEnabled = true;\n                }\n                catch (e) {\n                    console.warn('This web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.');\n                }\n            }\n            return isEnabled;\n        }))();\n    }\n    // Trusts the HTML in order to show CSS styles\n    /**\n     * @return {?}\n     */\n    get tipWithStyles() {\n        if (!this._tipWithStyles || this._lastTipStyled !== this.tip) {\n            this._tipWithStyles = this.sanitizer.bypassSecurityTrustHtml(this.tip);\n            this._lastTipStyled = this.tip;\n        }\n        return this._tipWithStyles;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.tip = this.tip || '';\n        this.buttonText = this.buttonText || this.labels.okGotIt;\n        this.button = typeof this.button === 'string' ? this.button === 'true' : this.button;\n        this.icon = this.icon || null;\n        // Set a (semi) unique name for the tip-well\n        this.name = this.name || Math.round(Math.random() * 100);\n        this.localStorageKey = `novo-tw_${this.name}`;\n        // Check localStorage for state\n        if (this.isLocalStorageEnabled) {\n            /** @type {?} */\n            const storedValue = JSON.parse(localStorage.getItem(this.localStorageKey));\n            this.isActive = storedValue !== false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hideTip() {\n        if (this.isLocalStorageEnabled) {\n            localStorage.setItem(this.localStorageKey, JSON.stringify(false));\n        }\n        this.isActive = false;\n        this.confirmed.emit();\n    }\n}\nNovoTipWellElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tip-well',\n                template: `\n    <div *ngIf=\"isActive\">\n      <div>\n        <i class=\"bhi-{{ icon }}\" *ngIf=\"icon\" [attr.data-automation-id]=\"'novo-tip-well-icon-' + name\"></i>\n        <p *ngIf=\"sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\">{{ tip }}</p>\n        <p *ngIf=\"!sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\" [innerHTML]=\"tipWithStyles\"></p>\n      </div>\n      <button theme=\"dialogue\" (click)=\"hideTip()\" *ngIf=\"button\" [attr.data-automation-id]=\"'novo-tip-well-button-' + name\">\n        {{ buttonText }}\n      </button>\n    </div>\n  `,\n                host: {\n                    '[class.active]': 'isActive',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoTipWellElement.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: DomSanitizer }\n];\nNovoTipWellElement.propDecorators = {\n    name: [{ type: Input }],\n    tip: [{ type: Input }],\n    buttonText: [{ type: Input }],\n    button: [{ type: Input }],\n    icon: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    confirmed: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTipWellElement.prototype.name;\n    /** @type {?} */\n    NovoTipWellElement.prototype.tip;\n    /** @type {?} */\n    NovoTipWellElement.prototype.buttonText;\n    /** @type {?} */\n    NovoTipWellElement.prototype.button;\n    /** @type {?} */\n    NovoTipWellElement.prototype.icon;\n    /** @type {?} */\n    NovoTipWellElement.prototype.sanitize;\n    /** @type {?} */\n    NovoTipWellElement.prototype.confirmed;\n    /** @type {?} */\n    NovoTipWellElement.prototype.isActive;\n    /** @type {?} */\n    NovoTipWellElement.prototype.isLocalStorageEnabled;\n    /** @type {?} */\n    NovoTipWellElement.prototype.localStorageKey;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTipWellElement.prototype._tipWithStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTipWellElement.prototype._lastTipStyled;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTipWellElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTipWellElement.prototype.sanitizer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tip-well/TipWell.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTipWellModule {\n}\nNovoTipWellModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule],\n                declarations: [NovoTipWellElement],\n                exports: [NovoTipWellElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/modal/Modal.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoModalModule {\n}\nNovoModalModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule],\n                declarations: [NovoModalContainerElement, NovoModalElement, NovoModalNotificationElement],\n                exports: [NovoModalElement, NovoModalNotificationElement],\n                entryComponents: [NovoModalContainerElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/form/Form.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoFormModule {\n}\nNovoFormModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule,\n                    NovoRadioModule,\n                    NovoTilesModule,\n                    NovoSelectModule,\n                    NovoPickerModule,\n                    NovoChipsModule,\n                    NovoDatePickerModule,\n                    NovoTimePickerModule,\n                    NovoNovoCKEditorModule,\n                    NovoFormExtrasModule,\n                    NovoQuickNoteModule,\n                    NovoDateTimePickerModule,\n                    NovoHeaderModule,\n                    NovoTooltipModule,\n                    NovoDragulaModule,\n                    TextMaskModule,\n                    NovoTipWellModule,\n                    NovoModalModule,\n                    NovoButtonModule,\n                    NovoAceEditorModule,\n                    NovoCommonModule,\n                ],\n                declarations: [\n                    NovoAutoSize,\n                    NovoControlElement,\n                    NovoDynamicFormElement,\n                    NovoFormElement,\n                    NovoFieldsetElement,\n                    NovoFieldsetHeaderElement,\n                    ControlConfirmModal,\n                    ControlPromptModal,\n                    NovoControlGroup,\n                    NovoControlTemplates,\n                ],\n                exports: [\n                    NovoAutoSize,\n                    NovoDynamicFormElement,\n                    NovoControlElement,\n                    NovoFormElement,\n                    NovoFieldsetHeaderElement,\n                    NovoControlGroup,\n                    NovoControlTemplates,\n                ],\n                entryComponents: [ControlConfirmModal, ControlPromptModal],\n                providers: [NovoTemplateService],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/icon/Icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoIconComponent {\n    /**\n     * @param {?} element\n     * @param {?} cdr\n     */\n    constructor(element, cdr) {\n        this.element = element;\n        this.cdr = cdr;\n        this.size = 'medium';\n        this.role = 'img';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set alt(value) {\n        this.ariaLabel = value;\n    }\n    /**\n     * @return {?}\n     */\n    get alt() {\n        return this.ariaLabel;\n    }\n    /**\n     * @param {?} iconName\n     * @return {?}\n     */\n    set name(iconName) {\n        this.iconName = `bhi-${iconName}`;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this.iconName;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.element.nativeElement.textContent.trim()) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.name = this.element.nativeElement.textContent.trim();\n                this.cdr.markForCheck();\n            }));\n        }\n    }\n}\nNovoIconComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-icon',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n        <i [class]=\"iconName\"><span><ng-content></ng-content></span></i>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoIconComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNovoIconComponent.propDecorators = {\n    raised: [{ type: HostBinding, args: ['attr.raised',] }, { type: Input }],\n    size: [{ type: HostBinding, args: ['attr.size',] }, { type: Input }],\n    theme: [{ type: HostBinding, args: ['attr.theme',] }, { type: Input }],\n    color: [{ type: HostBinding, args: ['attr.color',] }, { type: Input }],\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    ariaLabel: [{ type: HostBinding, args: ['attr.aria-label',] }],\n    alt: [{ type: Input }],\n    name: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoIconComponent.prototype.raised;\n    /** @type {?} */\n    NovoIconComponent.prototype.size;\n    /** @type {?} */\n    NovoIconComponent.prototype.theme;\n    /** @type {?} */\n    NovoIconComponent.prototype.color;\n    /** @type {?} */\n    NovoIconComponent.prototype.role;\n    /** @type {?} */\n    NovoIconComponent.prototype.ariaLabel;\n    /** @type {?} */\n    NovoIconComponent.prototype.iconName;\n    /** @type {?} */\n    NovoIconComponent.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoIconComponent.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/icon/Icon.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoIconModule {\n}\nNovoIconModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [NovoIconComponent],\n                declarations: [NovoIconComponent],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/multi-picker/MultiPicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Value accessor for the component (supports ngModel)\n/** @type {?} */\nconst CHIPS_VALUE_ACCESSOR$2 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NovoMultiPickerElement)),\n    multi: true,\n};\n/**\n * @record\n */\nfunction Item() { }\nif (false) {\n    /** @type {?} */\n    Item.prototype.type;\n    /** @type {?} */\n    Item.prototype.label;\n    /** @type {?} */\n    Item.prototype.value;\n}\nclass NovoMultiPickerElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     */\n    constructor(element, labels) {\n        this.element = element;\n        this.labels = labels;\n        this.placeholder = '';\n        this.changed = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.items = [];\n        this._items = new ReplaySubject(1);\n        this.selected = null;\n        this.config = {};\n        // private data model\n        this._value = {};\n        this.notShown = {};\n        this.onModelChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onModelTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.chipsCount = 4;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} selectedItems\n     * @return {?}\n     */\n    set value(selectedItems) {\n        if (selectedItems) {\n            this.types.forEach((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => (this._value[x.value] = selectedItems[x.value])));\n        }\n        else {\n            this._value = {};\n            this.types.forEach((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => (this._value[x.value] = [])));\n        }\n        this.changed.emit(selectedItems);\n        this.onModelChange(selectedItems);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.selectAllOption = this.source.selectAllOption || false;\n        this.chipsCount = this.source.chipsCount || 4;\n        this.strictRelationship = this.source.strictRelationship || false;\n        this.setupOptions();\n    }\n    /**\n     * @return {?}\n     */\n    clearValue() {\n        this.types.forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => this.modifyAllOfType(type.value, 'unselect')));\n        this.items = [];\n        this._items.next(this.items);\n        this.setInitialValue(null);\n        this.onModelChange(this.value);\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    removeFromDisplay(event, item) {\n        this.remove(true, item);\n        this.modifyAffectedParentsOrChildren(false, item);\n    }\n    /**\n     * @return {?}\n     */\n    setupOptions() {\n        this.options = this.source.options || [];\n        this._options = [];\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                /** @type {?} */\n                const formattedOption = this.setupOptionsByType(option);\n                this._options.push(formattedOption);\n            }));\n        }\n        this.source.options = this._options;\n    }\n    /**\n     * @param {?} section\n     * @return {?}\n     */\n    setupOptionsByType(section) {\n        /** @type {?} */\n        const formattedSection = {\n            type: section.type,\n            label: section.label || section.type,\n        };\n        formattedSection.data = section.data.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            return this.formatOption(section, item);\n        }));\n        if (this.selectAllOption) {\n            /** @type {?} */\n            const selectAll = this.createSelectAllOption(section);\n            formattedSection.data.splice(0, 0, selectAll);\n        }\n        formattedSection.originalData = formattedSection.data.slice();\n        return formattedSection;\n    }\n    /**\n     * @param {?} section\n     * @param {?} item\n     * @return {?}\n     */\n    formatOption(section, item) {\n        /** @type {?} */\n        const obj = {\n            value: section.field ? item[section.field] : item.value || item,\n            label: section.format ? Helpers.interpolate(section.format, item) : item.label || String(item.value || item),\n            type: section.type,\n            checked: undefined,\n            isParentOf: section.isParentOf,\n            isChildOf: section.isChildOf,\n        };\n        if (obj.isChildOf) {\n            obj[section.isChildOf] = item[section.isChildOf];\n        }\n        return obj;\n    }\n    /**\n     * @param {?} section\n     * @return {?}\n     */\n    createSelectAllOption(section) {\n        /** @type {?} */\n        const selectAll = {\n            value: 'ALL',\n            label: `All ${section.type}`,\n            type: section.type,\n            checked: this.model && this.model.length && this.model.indexOf('ALL') !== -1,\n            isParentOf: section.isParentOf,\n            isChildOf: section.isChildOf,\n        };\n        if (section.isChildOf) {\n            /** @type {?} */\n            const allParents = section.data.reduce((/**\n             * @param {?} accum\n             * @param {?} next\n             * @return {?}\n             */\n            (accum, next) => {\n                return accum.concat(next[section.isChildOf]);\n            }), []);\n            selectAll[section.isChildOf] = allParents;\n        }\n        return selectAll;\n    }\n    /**\n     * @return {?}\n     */\n    deselectAll() {\n        this.selected = null;\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    select(event, item) {\n        this.blur.emit(event);\n        this.deselectAll();\n        this.selected = item;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onFocus(e) {\n        this.element.nativeElement.classList.add('selected');\n        this.focus.emit(e);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    clickOption(event) {\n        if (event && !(event instanceof Event)) {\n            if (event.checked === false) {\n                this.remove(null, event);\n            }\n            else {\n                this.add(event);\n            }\n            this.modifyAffectedParentsOrChildren(event.checked, event);\n            // Set focus on the picker\n            /** @type {?} */\n            const input = this.element.nativeElement.querySelector('novo-picker > input');\n            if (input) {\n                input.focus();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    add(event) {\n        if (event.value === 'ALL') {\n            this.modifyAllOfType(event.type, 'select');\n        }\n        else {\n            this.updateDisplayItems(event, 'add');\n            this.value[event.type].push(event.value);\n            this.updateAllItemState(event.type);\n            this.triggerValueUpdate();\n        }\n        this.updateParentOrChildren(event, 'select');\n        this.select(null, event);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    updateAllItemState(type) {\n        /** @type {?} */\n        const allOfType = this.getAllOfType(type);\n        /** @type {?} */\n        const allOfTypeSelected = this.allItemsSelected(allOfType, type);\n        if (allOfTypeSelected) {\n            this.selectAll(allOfType, type);\n        }\n        return { allOfType, allOfTypeSelected };\n    }\n    /**\n     * @param {?} allOfType\n     * @param {?} status\n     * @return {?}\n     */\n    setIndeterminateState(allOfType, status) {\n        if (!this.selectAllOption) {\n            return;\n        }\n        /** @type {?} */\n        const allItem = allOfType[0];\n        allItem.indeterminate = status;\n    }\n    /**\n     * @param {?} item\n     * @param {?} action\n     * @return {?}\n     */\n    updateDisplayItems(item, action) {\n        /** @type {?} */\n        const adding = action === 'add';\n        if (adding) {\n            this.items.push(item);\n        }\n        else {\n            if (this.items.indexOf(item) > -1) {\n                this.items.splice(this.items.indexOf(item), 1);\n            }\n        }\n        this.updateDisplayText(this.items);\n        this._items.next(this.items);\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    updateDisplayText(items) {\n        this.notShown = [];\n        /** @type {?} */\n        const notShown = items.slice(this.chipsCount);\n        if (notShown.length > 0) {\n            this.types.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                /** @type {?} */\n                let count;\n                /** @type {?} */\n                const selectedOfType = notShown.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                (x) => x.type === type.value));\n                if (selectedOfType.length === 1 && selectedOfType[0].value === 'ALL') {\n                    count = this.getAllOfType(type.value).length - 1;\n                }\n                else {\n                    count = selectedOfType.length;\n                }\n                /** @type {?} */\n                const displayType = count === 1 ? type.singular : type.plural || type.value;\n                if (count > 0) {\n                    this.notShown.push({ type: displayType, count });\n                }\n            }));\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} item\n     * @return {?}\n     */\n    remove(event, item) {\n        /** @type {?} */\n        let triggeredByEvent;\n        if (event) {\n            triggeredByEvent = true;\n        }\n        /** @type {?} */\n        const itemToRemove = item;\n        if (itemToRemove.value === 'ALL') {\n            triggeredByEvent = false;\n            this.modifyAllOfType(itemToRemove.type, 'unselect');\n        }\n        else if (this.allOfTypeSelected(itemToRemove.type)) {\n            this.handleRemoveItemIfAllSelected(itemToRemove);\n        }\n        this.removeItem(item, triggeredByEvent);\n    }\n    /**\n     * @param {?} item\n     * @param {?=} triggeredByEvent\n     * @return {?}\n     */\n    removeItem(item, triggeredByEvent) {\n        item.checked = false;\n        this.deselectAll();\n        this.removeValue(item);\n        if (item.value !== 'ALL') {\n            this.updateParentOrChildren(item, 'unselect');\n        }\n        if (triggeredByEvent) {\n            this.modifyAffectedParentsOrChildren(false, item);\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    removeValue(item) {\n        /** @type {?} */\n        const updatedValues = this.value[item.type].filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x !== item.value));\n        this.value[item.type] = updatedValues;\n        this.triggerValueUpdate();\n        this.updateDisplayItems(item, 'remove');\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        if (event.keyCode === KeyCodes.BACKSPACE) {\n            if (event.target && event.target.value.length === 0 && this.items.length) {\n                if (event) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                if (this.selected) {\n                    this.remove(null, this.selected);\n                }\n                else {\n                    this.select(event, this.items[this.items.length - 1]);\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    allOfTypeSelected(type) {\n        return this.items.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.type === type && x.value === 'ALL')).length > 0;\n    }\n    /**\n     * @param {?} type\n     * @param {?} action\n     * @return {?}\n     */\n    modifyAllOfType(type, action) {\n        /** @type {?} */\n        const selecting = action === 'select';\n        /** @type {?} */\n        const allOfType = this.getAllOfType(type);\n        allOfType.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            item.checked = selecting;\n            item.indeterminate = false;\n        }));\n        if (selecting) {\n            this.selectAll(allOfType, type);\n        }\n        else {\n            this.items = [...this.items.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                (x) => x.type !== type))];\n            this._items.next(this.items);\n            this.value[type] = [];\n        }\n        if (this.selectAllOption) {\n            this.updateAllParentsOrChildren(allOfType[0], action);\n        }\n        this.triggerValueUpdate();\n    }\n    /**\n     * @return {?}\n     */\n    triggerValueUpdate() {\n        /** @type {?} */\n        const updatedObject = {};\n        this.types.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => (updatedObject[x.value] = this.value[x.value])));\n        this.value = updatedObject;\n    }\n    /**\n     * @param {?} allOfType\n     * @param {?} type\n     * @return {?}\n     */\n    selectAll(allOfType, type) {\n        if (!this.selectAllOption) {\n            return;\n        }\n        allOfType[0].checked = true;\n        /** @type {?} */\n        const values = allOfType.map((/**\n         * @param {?} i\n         * @return {?}\n         */\n        (i) => {\n            return i.value;\n        }));\n        // remove 'ALL' value\n        values.splice(0, 1);\n        this.value[type] = values;\n        /** @type {?} */\n        const updatedItems = this.items.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.type !== type));\n        this.items = updatedItems;\n        this.updateDisplayItems(allOfType[0], 'add');\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    handleRemoveItemIfAllSelected(item) {\n        if (!this.selectAllOption) {\n            return;\n        }\n        /** @type {?} */\n        const type = item.type;\n        /** @type {?} */\n        const allOfType = this.getAllOfType(type);\n        /** @type {?} */\n        const allItem = allOfType[0];\n        this.removeItem(allItem);\n        allItem.indeterminate = true;\n        /** @type {?} */\n        const selectedItems = allOfType.filter((/**\n         * @param {?} i\n         * @return {?}\n         */\n        (i) => i.checked === true));\n        this.items = [...this.items, ...selectedItems];\n        /** @type {?} */\n        const values = selectedItems.map((/**\n         * @param {?} i\n         * @return {?}\n         */\n        (i) => {\n            return i.value;\n        }));\n        this.value[type] = [...values];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleOutsideClick(event) {\n        // If the elements doesn't contain the target element, it is an outside click\n        if (!this.element.nativeElement.contains(event.target)) {\n            this.blur.emit(event);\n            this.deselectAll();\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getAllOfType(type) {\n        return this._options.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.type === type))[0].originalData;\n    }\n    /**\n     * @param {?} item\n     * @param {?} action\n     * @return {?}\n     */\n    updateParentOrChildren(item, action) {\n        if (this.strictRelationship && item.isParentOf) {\n            this.updateChildrenValue(item, action);\n        }\n        else if (item.isChildOf && this.selectAllOption) {\n            this.updateParentValue(item, action);\n        }\n    }\n    /**\n     * @param {?} selecting\n     * @param {?} itemChanged\n     * @return {?}\n     */\n    modifyAffectedParentsOrChildren(selecting, itemChanged) {\n        if (!itemChanged.isChildOf && !itemChanged.isParentOf) {\n            return;\n        }\n        /** @type {?} */\n        const parent = this.types.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => !!x.isParentOf))[0];\n        /** @type {?} */\n        const parentType = parent.value;\n        /** @type {?} */\n        const allParentType = this.getAllOfType(parentType);\n        /** @type {?} */\n        const childType = allParentType[0].isParentOf;\n        /** @type {?} */\n        const allChildren = this.getAllOfType(childType);\n        /** @type {?} */\n        const allCheckedChildren = allChildren.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => !!x.checked));\n        allParentType.forEach((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        (obj) => {\n            if (obj.value === 'ALL') {\n                return;\n            }\n            /** @type {?} */\n            const selectedChildrenOfParent = allCheckedChildren.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            (x) => {\n                return x[parentType].filter((/**\n                 * @param {?} y\n                 * @return {?}\n                 */\n                (y) => y === obj.value)).length > 0;\n            }));\n            if (selecting) {\n                if (obj.checked) {\n                    return;\n                }\n                obj.indeterminate = selectedChildrenOfParent.length > 0;\n            }\n            else {\n                /** @type {?} */\n                const allChildrenOfParent = allChildren.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                (x) => {\n                    return x.value !== 'ALL' && x[parentType].filter((/**\n                     * @param {?} y\n                     * @return {?}\n                     */\n                    (y) => y === obj.value)).length > 0;\n                }));\n                if (selectedChildrenOfParent.length > 0) {\n                    if (obj.checked) {\n                        if (this.strictRelationship && allChildrenOfParent.length !== selectedChildrenOfParent.length) {\n                            obj.indeterminate = true;\n                            obj.checked = false;\n                            this.removeValue(obj);\n                            this.addIndividualChildren(selectedChildrenOfParent);\n                        }\n                    }\n                    else {\n                        obj.indeterminate = true;\n                    }\n                    if (this.strictRelationship && itemChanged.type !== parentType) {\n                        if (obj.checked) {\n                            obj.checked = false;\n                            this.removeValue(obj);\n                            this.addIndividualChildren(selectedChildrenOfParent);\n                        }\n                    }\n                }\n                else {\n                    obj.indeterminate = false;\n                    if (allChildrenOfParent.length === 0) {\n                        // if it has no children and is checked, it should stay checked\n                        return;\n                    }\n                    else if (this.strictRelationship && itemChanged.type !== parentType) {\n                        this.remove(null, obj);\n                    }\n                }\n            }\n        }));\n        if (this.selectAllOption) {\n            this.updateIndeterminateStates(allParentType, allChildren, allCheckedChildren);\n        }\n    }\n    /**\n     * @param {?} allItem\n     * @param {?} action\n     * @return {?}\n     */\n    updateAllParentsOrChildren(allItem, action) {\n        if (allItem.isParentOf) {\n            this.updateAllChildrenValue(allItem, action);\n        }\n        else if (allItem.isChildOf) {\n            this.updateAllParentValue(allItem, action);\n        }\n    }\n    /**\n     * @param {?} item\n     * @param {?} action\n     * @return {?}\n     */\n    updateAllChildrenValue(item, action) {\n        /** @type {?} */\n        const selecting = action === 'select';\n        /** @type {?} */\n        const childType = item.isParentOf;\n        /** @type {?} */\n        const potentialChildren = this.getAllOfType(childType);\n        if (this.selectAllOption && this.allOfTypeSelected(childType) && !selecting) {\n            this.remove(null, potentialChildren[0]);\n            return;\n        }\n        potentialChildren.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            if (x.value === 'ALL' && !x.checked) {\n                if (selecting) {\n                    x.checked = true;\n                }\n                x.indeterminate = selecting;\n            }\n            else {\n                if (x.checked && !selecting) {\n                    this.remove(null, x);\n                }\n                x.checked = selecting;\n            }\n        }));\n    }\n    /**\n     * @param {?} item\n     * @param {?} action\n     * @return {?}\n     */\n    updateAllParentValue(item, action) {\n        /** @type {?} */\n        const selecting = action === 'select';\n        /** @type {?} */\n        const parentType = item.isChildOf;\n        /** @type {?} */\n        const potentialParents = this.getAllOfType(parentType);\n        potentialParents.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            if (!x.checked) {\n                x.indeterminate = selecting;\n            }\n        }));\n    }\n    /**\n     * @param {?} allParentType\n     * @param {?} allChildren\n     * @param {?} allCheckedChildren\n     * @return {?}\n     */\n    updateIndeterminateStates(allParentType, allChildren, allCheckedChildren) {\n        /** @type {?} */\n        const allCheckedOrIndeterminateParents = allParentType.filter((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => (!!x.checked || !!x.indeterminate) && x.value !== 'ALL'));\n        /** @type {?} */\n        const isParentIndeterminate = !!allParentType[0].checked ? false : allCheckedOrIndeterminateParents.length > 0;\n        /** @type {?} */\n        const isChildIndeterminate = !!allChildren[0].checked ? false : allCheckedChildren.length > 0;\n        this.setIndeterminateState(allParentType, isParentIndeterminate);\n        this.setIndeterminateState(allChildren, isChildIndeterminate);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} action\n     * @return {?}\n     */\n    updateChildrenValue(parent, action) {\n        /** @type {?} */\n        const selecting = action === 'select';\n        /** @type {?} */\n        const childType = parent.isParentOf;\n        /** @type {?} */\n        const potentialChildren = this.getAllOfType(childType);\n        potentialChildren.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            if (x.value === 'ALL') {\n                return;\n            }\n            if (x[parent.type].filter((/**\n             * @param {?} y\n             * @return {?}\n             */\n            (y) => y === parent.value)).length > 0) {\n                if (x.checked && !selecting) {\n                    x.checked = false;\n                    if (this.allOfTypeSelected(childType)) {\n                        this.handleRemoveItemIfAllSelected(x);\n                    }\n                    else {\n                        this.removeValue(x);\n                    }\n                }\n                x.checked = selecting;\n            }\n        }));\n    }\n    /**\n     * @param {?} child\n     * @param {?} action\n     * @return {?}\n     */\n    updateParentValue(child, action) {\n        /** @type {?} */\n        const allParentType = this.getAllOfType(child.isChildOf);\n        if (allParentType[0].checked && action !== 'select') {\n            this.handleRemoveItemIfAllSelected(allParentType[0]);\n        }\n    }\n    /**\n     * @param {?} children\n     * @return {?}\n     */\n    addIndividualChildren(children) {\n        /** @type {?} */\n        let parentAlreadySelected = false;\n        children.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            if (x.isChildOf) {\n                // only add children if their parents are not already selected\n                x[x.isChildOf].forEach((/**\n                 * @param {?} parent\n                 * @return {?}\n                 */\n                (parent) => {\n                    if (this.value[x.isChildOf].filter((/**\n                     * @param {?} p\n                     * @return {?}\n                     */\n                    (p) => p === parent)).length > 0) {\n                        parentAlreadySelected = true;\n                    }\n                }));\n            }\n            if (this.value[x.type].filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item === x.value)).length === 0 && !parentAlreadySelected) {\n                this.add(x);\n            }\n        }));\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    setInitialValue(model) {\n        this.items = [];\n        this.value = model || {};\n        if (!this.types) {\n            return;\n        }\n        this.types.forEach((/**\n         * @param {?} typeObj\n         * @return {?}\n         */\n        (typeObj) => {\n            /** @type {?} */\n            const type = typeObj.value;\n            if (this.value[type]) {\n                /** @type {?} */\n                let indeterminateIsSet = false;\n                /** @type {?} */\n                const options = this.updateAllItemState(type);\n                /** @type {?} */\n                const optionsByType = options.allOfType;\n                /** @type {?} */\n                const allSelected = options.allOfTypeSelected;\n                this.value[type].forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => {\n                    if (!allSelected && !indeterminateIsSet) {\n                        indeterminateIsSet = true;\n                        this.setIndeterminateState(optionsByType, true);\n                    }\n                    /** @type {?} */\n                    const value = optionsByType.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    (x) => x.value === item))[0];\n                    value.checked = true;\n                    if (!allSelected) {\n                        this.updateDisplayItems(value, 'add');\n                    }\n                    if (this.strictRelationship && value.isParentOf) {\n                        this.updateChildrenValue(value, 'select');\n                    }\n                }));\n                if (typeObj.isChildOf) {\n                    this.modifyAffectedParentsOrChildren(true, { value: type, isChildOf: true });\n                }\n            }\n            else {\n                this.value[type] = [];\n            }\n        }));\n    }\n    /**\n     * @param {?} optionsByType\n     * @param {?} type\n     * @return {?}\n     */\n    allItemsSelected(optionsByType, type) {\n        return this.value[type].length === optionsByType.length - 1;\n    }\n    // Set touched on blur\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onTouched(e) {\n        this.element.nativeElement.classList.remove('selected');\n        this.onModelTouched();\n        this.blur.emit(e);\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    writeValue(model) {\n        this.model = model;\n        this.setInitialValue(model);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n}\nNovoMultiPickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'multi-picker',\n                providers: [CHIPS_VALUE_ACCESSOR$2],\n                template: `\n    <chip\n      *ngFor=\"let item of (_items | async | slice: 0:chipsCount)\"\n      [type]=\"item.type\"\n      [class.selected]=\"item == selected\"\n      (remove)=\"removeFromDisplay($event, item)\"\n      (select)=\"select($event, item)\"\n    >\n      {{ item.label }}\n    </chip>\n    <div *ngIf=\"items.length > chipsCount\">\n      <ul class=\"summary\">\n        <li *ngFor=\"let type of notShown\">+ {{ type.count }} {{ labels.more }} {{ type.type }}</li>\n      </ul>\n    </div>\n    <div class=\"chip-input-container\">\n      <novo-picker\n        clearValueOnSelect=\"true\"\n        [config]=\"source\"\n        [placeholder]=\"placeholder\"\n        (select)=\"clickOption($event)\"\n        (keydown)=\"onKeyDown($event)\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onTouched($event)\"\n        [overrideElement]=\"element\"\n      >\n      </novo-picker>\n    </div>\n    <i class=\"bhi-search\" [class.has-value]=\"items.length\"></i>\n    <label class=\"clear-all\" *ngIf=\"items.length\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n  `,\n                host: {\n                    '[class.with-value]': 'items.length > 0',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoMultiPickerElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService }\n];\nNovoMultiPickerElement.propDecorators = {\n    source: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    types: [{ type: Input }],\n    changed: [{ type: Output }],\n    focus: [{ type: Output }],\n    blur: [{ type: Output }],\n    value: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.source;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.placeholder;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.types;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.changed;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.focus;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.blur;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.items;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype._items;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.options;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype._options;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.selected;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.config;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.chipsCount;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.selectAllOption;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.strictRelationship;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype._value;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.notShown;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.model;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.onModelChange;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.onModelTouched;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.element;\n    /** @type {?} */\n    NovoMultiPickerElement.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/multi-picker/MultiPicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoMultiPickerModule {\n}\nNovoMultiPickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoPickerModule, NovoChipsModule],\n                declarations: [NovoMultiPickerElement],\n                exports: [NovoMultiPickerElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/global/global.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Global() { }\n/**\n * @abstract\n */\nclass GlobalRef {\n}\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    GlobalRef.prototype.nativeGlobal = function () { };\n}\nclass BrowserGlobalRef extends GlobalRef {\n    /**\n     * @return {?}\n     */\n    get nativeGlobal() {\n        return (/** @type {?} */ (window));\n    }\n}\nclass NodeGlobalRef extends GlobalRef {\n    /**\n     * @return {?}\n     */\n    get nativeGlobal() {\n        throw new Error('global doesn\\'t compile for some reason');\n        // return global as Global;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/storage/storage.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LocalStorageService {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    setItem(key, value) {\n        localStorage.setItem(key, value);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    getItem(key) {\n        return localStorage.getItem(key);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    removeItem(key) {\n        localStorage.removeItem(key);\n    }\n}\nLocalStorageService.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/places/places.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GooglePlacesService {\n    /**\n     * @param {?} _http\n     * @param {?} platformId\n     * @param {?} _global\n     * @param {?} _localStorageService\n     */\n    constructor(_http, platformId, _global, _localStorageService) {\n        this._http = _http;\n        this.platformId = platformId;\n        this._global = _global;\n        this._localStorageService = _localStorageService;\n    }\n    /**\n     * @param {?} url\n     * @param {?} query\n     * @return {?}\n     */\n    getPredictions(url, query) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            this._http.get(url + '?query=' + query).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                if (data) {\n                    resolve(data);\n                }\n                else {\n                    resolve(false);\n                }\n            }));\n        }));\n    }\n    /**\n     * @param {?} url\n     * @param {?} lat\n     * @param {?} lng\n     * @return {?}\n     */\n    getLatLngDetail(url, lat, lng) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            this._http.get(url + '?lat=' + lat + '&lng=' + lng).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                if (data) {\n                    resolve(data);\n                }\n                else {\n                    resolve(false);\n                }\n            }));\n        }));\n    }\n    /**\n     * @param {?} url\n     * @param {?} placeId\n     * @return {?}\n     */\n    getPlaceDetails(url, placeId) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            this._http.get(url + '?query=' + placeId).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                if (data) {\n                    resolve(data);\n                }\n                else {\n                    resolve(false);\n                }\n            }));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    getGeoCurrentLocation() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (isPlatformBrowser(this.platformId)) {\n                /** @type {?} */\n                const _window = this._global.nativeGlobal;\n                if (_window.navigator.geolocation) {\n                    _window.navigator.geolocation.getCurrentPosition((/**\n                     * @param {?} pos\n                     * @return {?}\n                     */\n                    (pos) => {\n                        /** @type {?} */\n                        const latlng = { lat: parseFloat(pos.coords.latitude + ''), lng: parseFloat(pos.coords.longitude + '') };\n                        resolve(latlng);\n                    }));\n                }\n                else {\n                    resolve(false);\n                }\n            }\n            else {\n                resolve(false);\n            }\n        }));\n    }\n    /**\n     * @param {?} latlng\n     * @return {?}\n     */\n    getGeoLatLngDetail(latlng) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (isPlatformBrowser(this.platformId)) {\n                /** @type {?} */\n                const _window = this._global.nativeGlobal;\n                /** @type {?} */\n                const geocoder = new _window.google.maps.Geocoder();\n                geocoder.geocode({ location: latlng }, (/**\n                 * @param {?} results\n                 * @param {?} status\n                 * @return {?}\n                 */\n                (results, status) => {\n                    if (status === 'OK') {\n                        this.getGeoPlaceDetail(results[0].place_id).then((/**\n                         * @param {?} result\n                         * @return {?}\n                         */\n                        (result) => {\n                            if (result) {\n                                resolve(result);\n                            }\n                            else {\n                                resolve(false);\n                            }\n                        }));\n                    }\n                    else {\n                        resolve(false);\n                    }\n                }));\n            }\n            else {\n                resolve(false);\n            }\n        }));\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    getGeoPrediction(params) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (isPlatformBrowser(this.platformId)) {\n                /** @type {?} */\n                const _window = this._global.nativeGlobal;\n                /** @type {?} */\n                const placesService = new _window.google.maps.places.AutocompleteService();\n                /** @type {?} */\n                let queryInput = {};\n                /** @type {?} */\n                const promiseArr = [];\n                if (params.countryRestriction.length) {\n                    queryInput = {\n                        input: params.query,\n                        componentRestrictions: { country: params.countryRestriction },\n                    };\n                }\n                else {\n                    queryInput = {\n                        input: params.query,\n                    };\n                }\n                if (params.geoLocation) {\n                    queryInput.location = new _window.google.maps.LatLng(parseFloat(params.geoLocation[0]), parseFloat(params.geoLocation[1]));\n                    queryInput.radius = params.radius;\n                }\n                if (params.geoTypes.length) {\n                    for (let i = 0; i < params.geoTypes.length; i++) {\n                        /** @type {?} */\n                        const _tempQuery = queryInput;\n                        _tempQuery['types'] = new Array(params.geoTypes[i]);\n                        promiseArr.push(this.geoPredictionCall(placesService, _tempQuery));\n                    }\n                }\n                else {\n                    promiseArr.push(this.geoPredictionCall(placesService, queryInput));\n                }\n                Promise.all(promiseArr).then((/**\n                 * @param {?} values\n                 * @return {?}\n                 */\n                (values) => {\n                    /** @type {?} */\n                    const val = values;\n                    if (val.length > 1) {\n                        /** @type {?} */\n                        let _tempArr = [];\n                        for (let j = 0; j < val.length; j++) {\n                            if (val[j] && val[j].length) {\n                                _tempArr = _tempArr.concat(val[j]);\n                            }\n                        }\n                        _tempArr = this.getUniqueResults(_tempArr);\n                        resolve(_tempArr);\n                    }\n                    else {\n                        resolve(values[0]);\n                    }\n                }));\n            }\n            else {\n                resolve(false);\n            }\n        }));\n    }\n    /**\n     * @param {?} placeId\n     * @return {?}\n     */\n    getGeoPlaceDetail(placeId) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (isPlatformBrowser(this.platformId)) {\n                /** @type {?} */\n                const _window = this._global.nativeGlobal;\n                /** @type {?} */\n                const placesService = new _window.google.maps.places.PlacesService(document.createElement('div'));\n                placesService.getDetails({ placeId }, (/**\n                 * @param {?} result\n                 * @param {?} status\n                 * @return {?}\n                 */\n                (result, status) => {\n                    if (result === null || result.length === 0) {\n                        this.getGeoPaceDetailByReferance(result.referance).then((/**\n                         * @param {?} referanceData\n                         * @return {?}\n                         */\n                        (referanceData) => {\n                            if (!referanceData) {\n                                resolve(false);\n                            }\n                            else {\n                                resolve(referanceData);\n                            }\n                        }));\n                    }\n                    else {\n                        resolve(result);\n                    }\n                }));\n            }\n            else {\n                resolve(false);\n            }\n        }));\n    }\n    /**\n     * @param {?} referance\n     * @return {?}\n     */\n    getGeoPaceDetailByReferance(referance) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            if (isPlatformBrowser(this.platformId)) {\n                /** @type {?} */\n                const _window = this._global.nativeGlobal;\n                /** @type {?} */\n                const placesService = new _window.google.maps.places.PlacesService();\n                placesService.getDetails({ reference: referance }, (/**\n                 * @param {?} result\n                 * @param {?} status\n                 * @return {?}\n                 */\n                (result, status) => {\n                    if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n                        resolve(result);\n                    }\n                    else {\n                        resolve(false);\n                    }\n                }));\n            }\n            else {\n                resolve(false);\n            }\n        }));\n    }\n    /**\n     * @param {?} localStorageName\n     * @param {?} result\n     * @param {?} itemSavedLength\n     * @return {?}\n     */\n    addRecentList(localStorageName, result, itemSavedLength) {\n        this.getRecentList(localStorageName).then((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            if (data) {\n                for (let i = 0; i < data.length; i++) {\n                    if (data[i].description === result.description) {\n                        data.splice(i, 1);\n                        break;\n                    }\n                }\n                data.unshift(result);\n                if (data.length > itemSavedLength) {\n                    data.pop();\n                }\n                this._localStorageService.setItem(localStorageName, JSON.stringify(data));\n            }\n        }));\n    }\n    /**\n     * @param {?} localStorageName\n     * @return {?}\n     */\n    getRecentList(localStorageName) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            /** @type {?} */\n            let value = this._localStorageService.getItem(localStorageName);\n            if (value) {\n                value = JSON.parse(value);\n            }\n            else {\n                value = [];\n            }\n            resolve(value);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} arr\n     * @return {?}\n     */\n    getUniqueResults(arr) {\n        return Array.from(arr.reduce((/**\n         * @param {?} m\n         * @param {?} t\n         * @return {?}\n         */\n        (m, t) => m.set(t.place_id, t)), new Map()).values());\n    }\n    /**\n     * @private\n     * @param {?} placesService\n     * @param {?} queryInput\n     * @return {?}\n     */\n    geoPredictionCall(placesService, queryInput) {\n        /** @type {?} */\n        const _window = this._global.nativeGlobal;\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            placesService.getPlacePredictions(queryInput, (/**\n             * @param {?} result\n             * @param {?} status\n             * @return {?}\n             */\n            (result, status) => {\n                if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n                    resolve(result);\n                }\n                else {\n                    resolve(false);\n                }\n            }));\n        }));\n    }\n}\nGooglePlacesService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nGooglePlacesService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: GlobalRef },\n    { type: LocalStorageService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    GooglePlacesService.prototype._http;\n    /**\n     * @type {?}\n     * @private\n     */\n    GooglePlacesService.prototype.platformId;\n    /**\n     * @type {?}\n     * @private\n     */\n    GooglePlacesService.prototype._global;\n    /**\n     * @type {?}\n     * @private\n     */\n    GooglePlacesService.prototype._localStorageService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/places/places.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Settings() { }\nif (false) {\n    /** @type {?|undefined} */\n    Settings.prototype.geoPredictionServerUrl;\n    /** @type {?|undefined} */\n    Settings.prototype.geoLatLangServiceUrl;\n    /** @type {?|undefined} */\n    Settings.prototype.geoLocDetailServerUrl;\n    /** @type {?|undefined} */\n    Settings.prototype.geoCountryRestriction;\n    /** @type {?|undefined} */\n    Settings.prototype.geoTypes;\n    /** @type {?|undefined} */\n    Settings.prototype.geoLocation;\n    /** @type {?|undefined} */\n    Settings.prototype.geoRadius;\n    /** @type {?|undefined} */\n    Settings.prototype.serverResponseListHierarchy;\n    /** @type {?|undefined} */\n    Settings.prototype.serverResponseatLangHierarchy;\n    /** @type {?|undefined} */\n    Settings.prototype.serverResponseDetailHierarchy;\n    /** @type {?|undefined} */\n    Settings.prototype.resOnSearchButtonClickOnly;\n    /** @type {?|undefined} */\n    Settings.prototype.useGoogleGeoApi;\n    /** @type {?|undefined} */\n    Settings.prototype.inputPlaceholderText;\n    /** @type {?|undefined} */\n    Settings.prototype.inputString;\n    /** @type {?|undefined} */\n    Settings.prototype.showSearchButton;\n    /** @type {?|undefined} */\n    Settings.prototype.showRecentSearch;\n    /** @type {?|undefined} */\n    Settings.prototype.showCurrentLocation;\n    /** @type {?|undefined} */\n    Settings.prototype.recentStorageName;\n    /** @type {?|undefined} */\n    Settings.prototype.noOfRecentSearchSave;\n    /** @type {?|undefined} */\n    Settings.prototype.currentLocIconUrl;\n    /** @type {?|undefined} */\n    Settings.prototype.searchIconUrl;\n    /** @type {?|undefined} */\n    Settings.prototype.locationIconUrl;\n}\nclass PlacesListComponent {\n    /**\n     * @param {?} platformId\n     * @param {?} _elmRef\n     * @param {?} _global\n     * @param {?} _googlePlacesService\n     */\n    constructor(platformId, _elmRef, _global, _googlePlacesService) {\n        this.platformId = platformId;\n        this._elmRef = _elmRef;\n        this._global = _global;\n        this._googlePlacesService = _googlePlacesService;\n        this.term = '';\n        this.termChange = new EventEmitter();\n        this.select = new EventEmitter();\n        this.locationInput = '';\n        this.gettingCurrentLocationFlag = false;\n        this.dropdownOpen = false;\n        this.recentDropdownOpen = false;\n        this.queryItems = [];\n        this.isSettingsError = false;\n        this.settingsErrorMsg = '';\n        this.settings = {};\n        this.moduleinit = false;\n        this.selectedDataIndex = -1;\n        this.recentSearchData = [];\n        this.userSelectedOption = '';\n        this.defaultSettings = {\n            geoPredictionServerUrl: '',\n            geoLatLangServiceUrl: '',\n            geoLocDetailServerUrl: '',\n            geoCountryRestriction: [],\n            geoTypes: [],\n            geoLocation: [],\n            geoRadius: 0,\n            serverResponseListHierarchy: [],\n            serverResponseatLangHierarchy: [],\n            serverResponseDetailHierarchy: [],\n            resOnSearchButtonClickOnly: false,\n            useGoogleGeoApi: true,\n            inputPlaceholderText: 'Enter Area Name',\n            inputString: '',\n            showSearchButton: true,\n            showRecentSearch: true,\n            showCurrentLocation: true,\n            recentStorageName: 'recentSearches',\n            noOfRecentSearchSave: 5,\n            currentLocIconUrl: '',\n            searchIconUrl: '',\n            locationIconUrl: '',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.moduleinit) {\n            this.moduleInit();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.moduleinit = true;\n        this.moduleInit();\n        this.searchinputCallback(null);\n    }\n    // function called when click event happens in input box. (Binded with view)\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    searchinputClickCallback(event) {\n        event.target.select();\n        this.searchinputCallback(event);\n    }\n    // function called when there is a change in input. (Binded with view)\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    searchinputCallback(event) {\n        /** @type {?} */\n        const inputVal = this.locationInput;\n        if (inputVal) {\n            this.getListQuery(inputVal);\n        }\n        else {\n            this.queryItems = [];\n            if (this.userSelectedOption) {\n                this.userQuerySubmit('false');\n            }\n            this.userSelectedOption = '';\n            if (this.settings.showRecentSearch) {\n                this.showRecentSearch();\n            }\n            else {\n                this.dropdownOpen = false;\n            }\n        }\n    }\n    // function to execute when user hover over autocomplete list.(binded with view)\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    activeListNode(index) {\n        for (let i = 0; i < this.queryItems.length; i++) {\n            if (index === i) {\n                this.queryItems[i].active = true;\n                this.selectedDataIndex = index;\n            }\n            else {\n                this.queryItems[i].active = false;\n            }\n        }\n    }\n    // function to execute when user select the autocomplete list.(binded with view)\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    selectedListNode(event, index) {\n        this.dropdownOpen = false;\n        if (this.recentDropdownOpen) {\n            this.setRecentLocation(this.queryItems[index]);\n        }\n        else {\n            this.getPlaceLocationInfo(this.queryItems[index]);\n        }\n    }\n    // function to close the autocomplete list when clicked outside. (binded with view)\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    closeAutocomplete(event) {\n        if (!this._elmRef.nativeElement.contains(event.target)) {\n            this.selectedDataIndex = -1;\n            this.dropdownOpen = false;\n        }\n    }\n    // function to manually trigger the callback to parent component when clicked search button.\n    /**\n     * @param {?=} selectedOption\n     * @return {?}\n     */\n    userQuerySubmit(selectedOption) {\n        /** @type {?} */\n        const _userOption = selectedOption === 'false' ? '' : this.userSelectedOption;\n        if (_userOption) {\n            this.select.emit(this.userSelectedOption);\n        }\n        else {\n            // this.select.emit(false);\n        }\n    }\n    // function to get user current location from the device.\n    /**\n     * @return {?}\n     */\n    currentLocationSelected() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.gettingCurrentLocationFlag = true;\n            this.dropdownOpen = false;\n            this._googlePlacesService.getGeoCurrentLocation().then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                if (!result) {\n                    this.gettingCurrentLocationFlag = false;\n                }\n                else {\n                    this.getCurrentLocationInfo(result);\n                }\n            }));\n        }\n    }\n    // module initialization happens. function called by ngOninit and ngOnChange\n    /**\n     * @private\n     * @return {?}\n     */\n    moduleInit() {\n        this.settings = this.setUserSettings();\n        // condition to check if Radius is set without location detail.\n        if (this.settings.geoRadius) {\n            if (this.settings.geoLocation.length !== 2) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg =\n                    this.settingsErrorMsg + 'Radius should be used with GeoLocation. Please use \"geoLocation\" key to set lat and lng. ';\n            }\n        }\n        // condition to check if lat and lng is set and radious is not set then it will set to 20,000KM by default\n        if (this.settings.geoLocation.length === 2 && !this.settings.geoRadius) {\n            this.settings.geoRadius = 20000000;\n        }\n        if (this.settings.showRecentSearch) {\n            this.getRecentLocations();\n        }\n        if (!this.settings.useGoogleGeoApi) {\n            if (!this.settings.geoPredictionServerUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg =\n                    this.settingsErrorMsg + 'Prediction custom server url is not defined. Please use \"geoPredictionServerUrl\" key to set. ';\n            }\n            if (!this.settings.geoLatLangServiceUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg =\n                    this.settingsErrorMsg + 'Latitude and longitude custom server url is not defined. Please use \"geoLatLangServiceUrl\" key to set. ';\n            }\n            if (!this.settings.geoLocDetailServerUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg =\n                    this.settingsErrorMsg + 'Location detail custom server url is not defined. Please use \"geoLocDetailServerUrl\" key to set. ';\n            }\n        }\n        this.locationInput = this.term;\n    }\n    // function to process the search query when pressed enter.\n    /**\n     * @private\n     * @return {?}\n     */\n    processSearchQuery() {\n        if (this.queryItems.length) {\n            if (this.selectedDataIndex > -1) {\n                this.selectedListNode(null, this.selectedDataIndex);\n            }\n            else {\n                this.selectedListNode(null, 0);\n            }\n        }\n    }\n    // function to set user settings if it is available.\n    /**\n     * @private\n     * @return {?}\n     */\n    setUserSettings() {\n        /** @type {?} */\n        const _tempObj = {};\n        if (this.userSettings && typeof this.userSettings === 'object') {\n            /** @type {?} */\n            const keys = Object.keys(this.defaultSettings);\n            for (const value of keys) {\n                _tempObj[value] = this.userSettings[value] !== undefined ? this.userSettings[value] : this.defaultSettings[value];\n            }\n            return _tempObj;\n        }\n        else {\n            return this.defaultSettings;\n        }\n    }\n    // function to get the autocomplete list based on user input.\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    getListQuery(value) {\n        this.recentDropdownOpen = false;\n        if (this.settings.useGoogleGeoApi) {\n            /** @type {?} */\n            const _tempParams = {\n                query: value,\n                countryRestriction: this.settings.geoCountryRestriction,\n                geoTypes: this.settings.geoTypes,\n            };\n            if (this.settings.geoLocation.length === 2) {\n                _tempParams.geoLocation = this.settings.geoLocation;\n                _tempParams.radius = this.settings.geoRadius;\n            }\n            this._googlePlacesService.getGeoPrediction(_tempParams).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                this.updateListItem(result);\n            }));\n        }\n        else {\n            this._googlePlacesService.getPredictions(this.settings.geoPredictionServerUrl, value).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                result = this.extractServerList(this.settings.serverResponseListHierarchy, result);\n                this.updateListItem(result);\n            }));\n        }\n    }\n    // function to extratc custom data which is send by the server.\n    /**\n     * @private\n     * @param {?} arrayList\n     * @param {?} data\n     * @return {?}\n     */\n    extractServerList(arrayList, data) {\n        if (arrayList.length) {\n            /** @type {?} */\n            let _tempData = data;\n            for (const key of arrayList) {\n                _tempData = _tempData[key];\n            }\n            return _tempData;\n        }\n        else {\n            return data;\n        }\n    }\n    // function to update the predicted list.\n    /**\n     * @private\n     * @param {?} listData\n     * @return {?}\n     */\n    updateListItem(listData) {\n        this.queryItems = listData ? listData : [];\n        this.dropdownOpen = true;\n    }\n    // function to show the recent search result.\n    /**\n     * @private\n     * @return {?}\n     */\n    showRecentSearch() {\n        this.recentDropdownOpen = true;\n        this.dropdownOpen = true;\n        this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((/**\n         * @param {?} result\n         * @return {?}\n         */\n        (result) => {\n            if (result) {\n                this.queryItems = result;\n            }\n            else {\n                this.queryItems = [];\n            }\n        }));\n    }\n    // //function to navigate through list when up and down keyboard key is pressed;\n    // private navigateInList(keyCode: number): any {\n    //     let arrayIndex: number = 0;\n    //     //arrow down\n    //     if (keyCode === 40) {\n    //         if (this.selectedDataIndex >= 0) {\n    //             arrayIndex = ((this.selectedDataIndex + 1) <= (this.queryItems.length - 1)) ? (this.selectedDataIndex + 1) : 0;\n    //         }\n    //         this.activeListNode(arrayIndex);\n    //     } else if (keyCode === 38) {//arrow up\n    //         if (this.selectedDataIndex >= 0) {\n    //             arrayIndex = ((this.selectedDataIndex - 1) >= 0) ? (this.selectedDataIndex - 1) : (this.queryItems.length - 1);\n    //         } else {\n    //             arrayIndex = this.queryItems.length - 1;\n    //         }\n    //         this.activeListNode(arrayIndex);\n    //     } else {\n    //         this.processSearchQuery();\n    //     }\n    // }\n    // function to execute to get location detail based on latitude and longitude.\n    /**\n     * @private\n     * @param {?} latlng\n     * @return {?}\n     */\n    getCurrentLocationInfo(latlng) {\n        if (this.settings.useGoogleGeoApi) {\n            this._googlePlacesService.getGeoLatLngDetail(latlng).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                if (result) {\n                    this.setRecentLocation(result);\n                }\n                this.gettingCurrentLocationFlag = false;\n            }));\n        }\n        else {\n            this._googlePlacesService.getLatLngDetail(this.settings.geoLatLangServiceUrl, latlng.lat, latlng.lng).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                if (result) {\n                    result = this.extractServerList(this.settings.serverResponseatLangHierarchy, result);\n                    this.setRecentLocation(result);\n                }\n                this.gettingCurrentLocationFlag = false;\n            }));\n        }\n    }\n    // function to retrive the location info based on goovle place id.\n    /**\n     * @private\n     * @param {?} selectedData\n     * @return {?}\n     */\n    getPlaceLocationInfo(selectedData) {\n        if (this.settings.useGoogleGeoApi) {\n            this._googlePlacesService.getGeoPlaceDetail(selectedData.place_id).then((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                if (data) {\n                    this.setRecentLocation(data);\n                }\n            }));\n        }\n        else {\n            this._googlePlacesService.getPlaceDetails(this.settings.geoLocDetailServerUrl, selectedData.place_id).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                if (result) {\n                    result = this.extractServerList(this.settings.serverResponseDetailHierarchy, result);\n                    this.setRecentLocation(result);\n                }\n            }));\n        }\n    }\n    // function to store the selected user search in the localstorage.\n    /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n    setRecentLocation(data) {\n        data = JSON.parse(JSON.stringify(data));\n        data.description = data.description ? data.description : data.formatted_address;\n        data.active = false;\n        this.selectedDataIndex = -1;\n        this.locationInput = data.description;\n        if (this.settings.showRecentSearch) {\n            this._googlePlacesService.addRecentList(this.settings.recentStorageName, data, this.settings.noOfRecentSearchSave);\n            this.getRecentLocations();\n        }\n        this.userSelectedOption = data;\n        // below code will execute only when user press enter or select any option selection and it emit a callback to the parent component.\n        if (!this.settings.resOnSearchButtonClickOnly) {\n            this.select.emit(data);\n            this.termChange.emit(data);\n        }\n    }\n    // function to retrive the stored recent user search from the localstorage.\n    /**\n     * @private\n     * @return {?}\n     */\n    getRecentLocations() {\n        this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.recentSearchData = data && data.length ? data : [];\n        }));\n    }\n}\nPlacesListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'google-places-list',\n                template: `\n        <novo-list direction=\"vertical\">\n            <novo-list-item *ngFor=\"let data of queryItems;let $index = index\" (click)=\"selectedListNode($event, $index)\">\n                <item-header>\n                    <item-avatar icon=\"location\"></item-avatar>\n                    <item-title>{{data.structured_formatting?.main_text ? data.structured_formatting.main_text : data.description}}</item-title>\n                </item-header>\n                <item-content>{{data.structured_formatting?.secondary_text}}</item-content>\n            </novo-list-item>\n        </novo-list>\n    `\n            }] }\n];\n/** @nocollapse */\nPlacesListComponent.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: ElementRef },\n    { type: GlobalRef },\n    { type: GooglePlacesService }\n];\nPlacesListComponent.propDecorators = {\n    userSettings: [{ type: Input }],\n    term: [{ type: Input }],\n    termChange: [{ type: Output }],\n    select: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    PlacesListComponent.prototype.userSettings;\n    /** @type {?} */\n    PlacesListComponent.prototype.term;\n    /** @type {?} */\n    PlacesListComponent.prototype.termChange;\n    /** @type {?} */\n    PlacesListComponent.prototype.select;\n    /** @type {?} */\n    PlacesListComponent.prototype.locationInput;\n    /** @type {?} */\n    PlacesListComponent.prototype.gettingCurrentLocationFlag;\n    /** @type {?} */\n    PlacesListComponent.prototype.dropdownOpen;\n    /** @type {?} */\n    PlacesListComponent.prototype.recentDropdownOpen;\n    /** @type {?} */\n    PlacesListComponent.prototype.queryItems;\n    /** @type {?} */\n    PlacesListComponent.prototype.isSettingsError;\n    /** @type {?} */\n    PlacesListComponent.prototype.settingsErrorMsg;\n    /** @type {?} */\n    PlacesListComponent.prototype.settings;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.moduleinit;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.selectedDataIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.recentSearchData;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.userSelectedOption;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.defaultSettings;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype.platformId;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype._elmRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype._global;\n    /**\n     * @type {?}\n     * @private\n     */\n    PlacesListComponent.prototype._googlePlacesService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/places/places.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass GooglePlacesModule {\n}\nGooglePlacesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [PlacesListComponent],\n                imports: [CommonModule, HttpClientModule, FormsModule, NovoListModule],\n                exports: [PlacesListComponent],\n                providers: [GooglePlacesService],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/popover/PopOverContent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PopOverContent {\n    /**\n     * @param {?} element\n     * @param {?} cdr\n     */\n    constructor(element, cdr) {\n        this.element = element;\n        this.cdr = cdr;\n        this.placement = 'top';\n        this.animation = true;\n        this.onCloseFromOutside = new EventEmitter();\n        this.top = -10000;\n        this.left = -10000;\n        this.displayType = 'none';\n        this.isHidden = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.show();\n        this.cdr.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    toggle() {\n        if (this.isHidden) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        if (!this.popover || !this.popover.getElement()) {\n            return;\n        }\n        /** @type {?} */\n        const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n        this.displayType = 'block';\n        this.top = p.top;\n        this.left = p.left;\n        this.isHidden = false;\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        this.top = -10000;\n        this.left = -10000;\n        this.isHidden = true;\n        this.popover.hide();\n    }\n    /**\n     * @return {?}\n     */\n    hideFromPopover() {\n        this.top = -10000;\n        this.left = -10000;\n    }\n    /**\n     * @protected\n     * @param {?} hostEl\n     * @param {?} targetEl\n     * @param {?} positionStr\n     * @param {?=} appendToBody\n     * @return {?}\n     */\n    positionElements(hostEl, targetEl, positionStr, appendToBody = false) {\n        /** @type {?} */\n        const positionStrParts = positionStr.split('-');\n        /** @type {?} */\n        const mainSide = (this.effectivePlacement = this.getEffectivePlacement(positionStrParts[0] || 'right', hostEl, targetEl));\n        /** @type {?} */\n        const orientation = (this.effectiveAlignment = positionStrParts[1] || 'center');\n        /** @type {?} */\n        const hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n        /** @type {?} */\n        const targetElWidth = targetEl.offsetWidth;\n        /** @type {?} */\n        const targetElHeight = targetEl.offsetHeight;\n        /** @type {?} */\n        const shiftWidth = {\n            /**\n             * @return {?}\n             */\n            center() {\n                return hostElPos.left + (hostElPos.width - targetElWidth) / 2;\n            },\n            /**\n             * @return {?}\n             */\n            right() {\n                return hostElPos.left;\n            },\n            /**\n             * @return {?}\n             */\n            left() {\n                return hostElPos.left + (hostElPos.width - targetElWidth);\n            },\n        };\n        /** @type {?} */\n        const shiftHeight = {\n            /**\n             * @return {?}\n             */\n            center() {\n                return hostElPos.top + (hostElPos.height - targetElHeight) / 2;\n            },\n            /**\n             * @return {?}\n             */\n            bottom() {\n                return hostElPos.top;\n            },\n            /**\n             * @return {?}\n             */\n            top() {\n                return hostElPos.top + (hostElPos.height - targetElHeight);\n            },\n        };\n        /** @type {?} */\n        let targetElPos;\n        switch (mainSide) {\n            case 'right':\n                targetElPos = {\n                    top: shiftHeight[orientation](),\n                    left: hostElPos.left + hostElPos.width,\n                };\n                break;\n            case 'left':\n                targetElPos = {\n                    top: shiftHeight[orientation](),\n                    left: hostElPos.left - targetElWidth,\n                };\n                break;\n            case 'bottom':\n                targetElPos = {\n                    top: hostElPos.top + hostElPos.height,\n                    left: shiftWidth[orientation](),\n                };\n                break;\n            default:\n                targetElPos = {\n                    top: hostElPos.top - targetElHeight,\n                    left: shiftWidth[orientation](),\n                };\n                break;\n        }\n        return targetElPos;\n    }\n    /**\n     * @protected\n     * @param {?} nativeEl\n     * @return {?}\n     */\n    position(nativeEl) {\n        /** @type {?} */\n        let offsetParentBCR = { top: 0, left: 0 };\n        /** @type {?} */\n        const elBCR = this.offset(nativeEl);\n        /** @type {?} */\n        const offsetParentEl = this.parentOffsetEl(nativeEl);\n        if (offsetParentEl !== window.document) {\n            offsetParentBCR = this.offset(offsetParentEl);\n            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n        /** @type {?} */\n        const boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: elBCR.top - offsetParentBCR.top,\n            left: elBCR.left - offsetParentBCR.left,\n        };\n    }\n    /**\n     * @protected\n     * @param {?} nativeEl\n     * @return {?}\n     */\n    offset(nativeEl) {\n        /** @type {?} */\n        const boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),\n            left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft),\n        };\n    }\n    /**\n     * @protected\n     * @param {?} nativeEl\n     * @param {?} cssProp\n     * @return {?}\n     */\n    getStyle(nativeEl, cssProp) {\n        if (((/** @type {?} */ (nativeEl))).currentStyle) {\n            return ((/** @type {?} */ (nativeEl))).currentStyle[cssProp];\n        }\n        if (window.getComputedStyle) {\n            return ((/** @type {?} */ (window.getComputedStyle)))(nativeEl)[cssProp];\n        }\n        return ((/** @type {?} */ (nativeEl.style)))[cssProp];\n    }\n    /**\n     * @protected\n     * @param {?} nativeEl\n     * @return {?}\n     */\n    isStaticPositioned(nativeEl) {\n        return (this.getStyle(nativeEl, 'position') || 'static') === 'static';\n    }\n    /**\n     * @protected\n     * @param {?} nativeEl\n     * @return {?}\n     */\n    parentOffsetEl(nativeEl) {\n        /** @type {?} */\n        let offsetParent = nativeEl.offsetParent || window.document;\n        while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || window.document;\n    }\n    /**\n     * @protected\n     * @param {?} desiredPlacement\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @return {?}\n     */\n    getEffectivePlacement(desiredPlacement, hostElement, targetElement) {\n        /** @type {?} */\n        const hostElBoundingRect = hostElement.getBoundingClientRect();\n        if (desiredPlacement === 'top' && hostElBoundingRect.top - targetElement.offsetHeight < 0) {\n            return 'bottom';\n        }\n        if (desiredPlacement === 'bottom' && hostElBoundingRect.bottom + targetElement.offsetHeight > window.innerHeight) {\n            return 'top';\n        }\n        if (desiredPlacement === 'left' && hostElBoundingRect.left - targetElement.offsetWidth < 0) {\n            return 'right';\n        }\n        if (desiredPlacement === 'right' && hostElBoundingRect.right + targetElement.offsetWidth > window.innerWidth) {\n            return 'left';\n        }\n        return desiredPlacement;\n    }\n}\nPopOverContent.decorators = [\n    { type: Component, args: [{\n                selector: 'popover-content',\n                template: `\n        <div #popoverDiv\n            class=\"popover {{ effectivePlacement }}\"\n            [style.top]=\"top + 'px'\"\n            [style.left]=\"left + 'px'\"\n            [class.fade]=\"animation\"\n            style=\"display: block\"\n            role=\"popover\">\n            <div class=\"arrow {{effectiveAlignment}}\"></div>\n            <h4 class=\"popover-title\" [hidden]=\"!title\">{{ title }}</h4>\n            <div class=\"popover-content\">\n                <ng-content></ng-content>\n                <div class=\"popover-content-text\">{{ content }}</div>\n            </div>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nPopOverContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nPopOverContent.propDecorators = {\n    content: [{ type: Input }],\n    placement: [{ type: Input }],\n    title: [{ type: Input }],\n    animation: [{ type: Input }],\n    popoverDiv: [{ type: ViewChild, args: ['popoverDiv', { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    PopOverContent.prototype.content;\n    /** @type {?} */\n    PopOverContent.prototype.placement;\n    /** @type {?} */\n    PopOverContent.prototype.title;\n    /** @type {?} */\n    PopOverContent.prototype.animation;\n    /** @type {?} */\n    PopOverContent.prototype.popoverDiv;\n    /** @type {?} */\n    PopOverContent.prototype.popover;\n    /** @type {?} */\n    PopOverContent.prototype.onCloseFromOutside;\n    /** @type {?} */\n    PopOverContent.prototype.top;\n    /** @type {?} */\n    PopOverContent.prototype.left;\n    /** @type {?} */\n    PopOverContent.prototype.displayType;\n    /** @type {?} */\n    PopOverContent.prototype.effectivePlacement;\n    /** @type {?} */\n    PopOverContent.prototype.effectiveAlignment;\n    /** @type {?} */\n    PopOverContent.prototype.isHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverContent.prototype.element;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverContent.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/popover/PopOver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PopOverDirective {\n    /**\n     * @param {?} viewContainerRef\n     * @param {?} resolver\n     */\n    constructor(viewContainerRef, resolver) {\n        this.viewContainerRef = viewContainerRef;\n        this.resolver = resolver;\n        this.PopoverComponent = PopOverContent;\n        this.popoverOnHover = false;\n        this.popoverDismissTimeout = 0;\n        this.onShown = new EventEmitter();\n        this.onHidden = new EventEmitter();\n    }\n    // ---------------------------------------------------\n    // Event listeners\n    // ---------------------------------------------------\n    /**\n     * @return {?}\n     */\n    showOrHideOnClick() {\n        if (this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.toggle();\n    }\n    /**\n     * @return {?}\n     */\n    showOnHover() {\n        if (!this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.show();\n    }\n    /**\n     * @return {?}\n     */\n    hideOnHover() {\n        if (!this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.hide();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['popoverDisabled']) {\n            if (changes['popoverDisabled'].currentValue) {\n                this.hide();\n            }\n        }\n        if (changes['popoverAlways']) {\n            if (changes['popoverAlways'].currentValue) {\n                this.show();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toggle() {\n        if (!this.visible) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        if (this.visible) {\n            return;\n        }\n        this.visible = true;\n        if (typeof this.content === 'string') {\n            /** @type {?} */\n            const factory = this.resolver.resolveComponentFactory(this.PopoverComponent);\n            if (!this.visible) {\n                return;\n            }\n            this.popover = this.viewContainerRef.createComponent(factory);\n            /** @type {?} */\n            const popover = (/** @type {?} */ (this.popover.instance));\n            popover.popover = this;\n            popover.content = (/** @type {?} */ (this.content));\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            popover.onCloseFromOutside.subscribe((/**\n             * @return {?}\n             */\n            () => this.hide()));\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.hide()), this.popoverDismissTimeout);\n            }\n        }\n        else {\n            /** @type {?} */\n            const popover = (/** @type {?} */ (this.content));\n            popover.popover = this;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            popover.onCloseFromOutside.subscribe((/**\n             * @return {?}\n             */\n            () => this.hide()));\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.hide()), this.popoverDismissTimeout);\n            }\n            popover.show();\n        }\n        this.onShown.emit(this);\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (!this.visible) {\n            return;\n        }\n        this.visible = false;\n        if (this.popover) {\n            this.popover.destroy();\n        }\n        if (this.content instanceof PopOverContent) {\n            ((/** @type {?} */ (this.content))).hideFromPopover();\n        }\n        this.onHidden.emit(this);\n    }\n    /**\n     * @return {?}\n     */\n    getElement() {\n        return this.viewContainerRef.element.nativeElement;\n    }\n}\nPopOverDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[popover]',\n            },] }\n];\n/** @nocollapse */\nPopOverDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver }\n];\nPopOverDirective.propDecorators = {\n    content: [{ type: Input, args: ['popover',] }],\n    popoverDisabled: [{ type: Input }],\n    popoverAlways: [{ type: Input }],\n    popoverAnimation: [{ type: Input }],\n    popoverPlacement: [{ type: Input }],\n    popoverTitle: [{ type: Input }],\n    popoverOnHover: [{ type: Input }],\n    popoverDismissTimeout: [{ type: Input }],\n    onShown: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    showOrHideOnClick: [{ type: HostListener, args: ['click',] }],\n    showOnHover: [{ type: HostListener, args: ['focusin',] }, { type: HostListener, args: ['mouseenter',] }],\n    hideOnHover: [{ type: HostListener, args: ['focusout',] }, { type: HostListener, args: ['mouseleave',] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverDirective.prototype.PopoverComponent;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverDirective.prototype.popover;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverDirective.prototype.visible;\n    /** @type {?} */\n    PopOverDirective.prototype.content;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverDisabled;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverAlways;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverAnimation;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverPlacement;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverTitle;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverOnHover;\n    /** @type {?} */\n    PopOverDirective.prototype.popoverDismissTimeout;\n    /** @type {?} */\n    PopOverDirective.prototype.onShown;\n    /** @type {?} */\n    PopOverDirective.prototype.onHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverDirective.prototype.viewContainerRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopOverDirective.prototype.resolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/popover/PopOver.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoPopOverModule {\n}\nNovoPopOverModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [PopOverContent, PopOverDirective],\n                exports: [PopOverContent, PopOverDirective],\n                entryComponents: [PopOverContent],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/activity-table-renderers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ActivityTableRenderers {\n    /**\n     * @template T\n     * @param {?} prop\n     * @return {?}\n     */\n    static propertyRenderer(prop) {\n        /** @type {?} */\n        const ret = (/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            // TODO - allow for dots and sub props\n            return data[prop];\n        });\n        return ret;\n    }\n    /**\n     * @template T\n     * @param {?} prop\n     * @return {?}\n     */\n    static dateRenderer(prop) {\n        /** @type {?} */\n        const ret = (/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            return data[prop] ? new Date(data[prop]).toLocaleDateString() : '';\n        });\n        return ret;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoActivityTableState {\n    constructor() {\n        this.id = Math.random();\n        this.sort = undefined;\n        this.filter = undefined;\n        this.page = 0;\n        this.pageSize = undefined;\n        this.globalSearch = undefined;\n        this.selectedRows = new Map();\n        this.updates = new EventEmitter();\n        this.onReset = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get userFiltered() {\n        return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n    }\n    /**\n     * @param {?=} fireUpdate\n     * @param {?=} persistUserFilters\n     * @return {?}\n     */\n    reset(fireUpdate = true, persistUserFilters) {\n        if (!persistUserFilters) {\n            this.sort = undefined;\n            this.globalSearch = undefined;\n            this.filter = undefined;\n        }\n        this.page = 0;\n        this.selectedRows.clear();\n        this.onReset.emit(true);\n        if (fireUpdate) {\n            this.updates.emit({\n                sort: this.sort,\n                filter: this.filter,\n                globalSearch: this.globalSearch,\n            });\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NovoActivityTableState.prototype.id;\n    /** @type {?} */\n    NovoActivityTableState.prototype.sort;\n    /** @type {?} */\n    NovoActivityTableState.prototype.filter;\n    /** @type {?} */\n    NovoActivityTableState.prototype.page;\n    /** @type {?} */\n    NovoActivityTableState.prototype.pageSize;\n    /** @type {?} */\n    NovoActivityTableState.prototype.globalSearch;\n    /** @type {?} */\n    NovoActivityTableState.prototype.selectedRows;\n    /** @type {?} */\n    NovoActivityTableState.prototype.outsideFilter;\n    /** @type {?} */\n    NovoActivityTableState.prototype.updates;\n    /** @type {?} */\n    NovoActivityTableState.prototype.onReset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSortFilter {\n    /**\n     * @param {?} state\n     */\n    constructor(state) {\n        this.state = state;\n    }\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @param {?} transform\n     * @return {?}\n     */\n    filter(id, value, transform) {\n        /** @type {?} */\n        let filter;\n        if (!Helpers.isBlank(value)) {\n            filter = { id, value, transform };\n        }\n        else {\n            filter = undefined;\n        }\n        this.state.filter = filter;\n        this.state.reset(false, true);\n        this.state.updates.next({ filter, sort: this.state.sort });\n    }\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @param {?} transform\n     * @return {?}\n     */\n    sort(id, value, transform) {\n        /** @type {?} */\n        const sort = { id, value, transform };\n        this.state.sort = sort;\n        this.state.reset(false, true);\n        this.state.updates.next({ sort, filter: this.state.filter });\n    }\n}\nNovoSortFilter.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSortFilter]',\n            },] }\n];\n/** @nocollapse */\nNovoSortFilter.ctorParameters = () => [\n    { type: NovoActivityTableState }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSortFilter.prototype.state;\n}\nclass NovoSelection {\n    /**\n     * @param {?} state\n     */\n    constructor(state) {\n        this.state = state;\n        this.novoSelectAllToggle = new EventEmitter();\n        this.allRows = new Map();\n    }\n    /**\n     * @param {?} id\n     * @param {?} row\n     * @return {?}\n     */\n    register(id, row) {\n        this.allRows.set(id, row);\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    deregister(id) {\n        this.allRows.delete(id);\n        this.state.selectedRows.delete(id);\n        clearTimeout(this.throttleTimeout);\n        this.throttleTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.state.selectedRows.size === 0) {\n                this.novoSelectAllToggle.emit(false);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.allRows.clear();\n        this.state.selectedRows.clear();\n    }\n    /**\n     * @param {?} id\n     * @param {?} selected\n     * @param {?} row\n     * @return {?}\n     */\n    toggle(id, selected, row) {\n        if (selected) {\n            this.state.selectedRows.set(id, row);\n        }\n        else {\n            this.state.selectedRows.delete(id);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    selectAll(value) {\n        if (value) {\n            this.state.selectedRows = new Map(this.allRows);\n        }\n        else {\n            this.state.selectedRows.clear();\n        }\n        this.novoSelectAllToggle.emit(value);\n    }\n}\nNovoSelection.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSelection]',\n            },] }\n];\n/** @nocollapse */\nNovoSelection.ctorParameters = () => [\n    { type: NovoActivityTableState }\n];\nNovoSelection.propDecorators = {\n    novoSelectAllToggle: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSelection.prototype.novoSelectAllToggle;\n    /** @type {?} */\n    NovoSelection.prototype.allRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSelection.prototype.throttleTimeout;\n    /** @type {?} */\n    NovoSelection.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n * @type {?}\n */\nconst _NovoCellDef = CdkCellDef;\n/** @type {?} */\nconst _NovoHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\nconst _NovoColumnDef = CdkColumnDef;\n/** @type {?} */\nconst _NovoHeaderCell = CdkHeaderCell;\n/** @type {?} */\nconst _NovoCell = CdkCell;\nclass NovoSimpleCellDef extends _NovoCellDef {\n}\nNovoSimpleCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: NovoSimpleCellDef }],\n            },] }\n];\nclass NovoSimpleHeaderCellDef extends _NovoHeaderCellDef {\n}\nNovoSimpleHeaderCellDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: NovoSimpleHeaderCellDef }],\n            },] }\n];\nclass NovoSimpleColumnDef extends _NovoColumnDef {\n}\nNovoSimpleColumnDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleColumnDef]',\n                providers: [{ provide: CdkColumnDef, useExisting: NovoSimpleColumnDef }],\n            },] }\n];\nNovoSimpleColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['novoSimpleColumnDef',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleColumnDef.prototype.name;\n}\n/**\n * @template T\n */\nclass NovoSimpleHeaderCell extends _NovoHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(columnDef, elementRef, renderer) {\n        super(columnDef, elementRef);\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.role = 'columnheader';\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-simple-header-cell');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.width) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n        }\n    }\n}\nNovoSimpleHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-simple-header-cell',\n            },] }\n];\n/** @nocollapse */\nNovoSimpleHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNovoSimpleHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    column: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleHeaderCell.prototype.role;\n    /** @type {?} */\n    NovoSimpleHeaderCell.prototype.column;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleHeaderCell.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleHeaderCell.prototype.renderer;\n}\nclass NovoSimpleEmptyHeaderCell extends _NovoHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(columnDef, elementRef, renderer) {\n        super(columnDef, elementRef);\n        this.role = 'columnheader';\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-simple-empty-header-cell');\n    }\n}\nNovoSimpleEmptyHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-simple-empty-header-cell',\n            },] }\n];\n/** @nocollapse */\nNovoSimpleEmptyHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNovoSimpleEmptyHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleEmptyHeaderCell.prototype.role;\n}\nclass NovoSimpleCheckboxHeaderCell extends _NovoHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} ref\n     * @param {?} _selection\n     */\n    constructor(columnDef, elementRef, renderer, ref, _selection) {\n        super(columnDef, elementRef);\n        this._selection = _selection;\n        this.role = 'columnheader';\n        this.selectAll = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-header-cell');\n        this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            this.selectAll = value;\n            ref.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.selectAllSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this._selection.selectAll(value);\n    }\n}\nNovoSimpleCheckboxHeaderCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-checkbox-header-cell',\n                template: `<novo-checkbox [(ngModel)]=\"selectAll\" (ngModelChange)=\"toggle($event)\"></novo-checkbox>`\n            }] }\n];\n/** @nocollapse */\nNovoSimpleCheckboxHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: NovoSelection, decorators: [{ type: Optional }] }\n];\nNovoSimpleCheckboxHeaderCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleCheckboxHeaderCell.prototype.role;\n    /** @type {?} */\n    NovoSimpleCheckboxHeaderCell.prototype.selectAll;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCheckboxHeaderCell.prototype.selectAllSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCheckboxHeaderCell.prototype._selection;\n}\n/**\n * @template T\n */\nclass NovoSimpleCell extends _NovoCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(columnDef, elementRef, renderer) {\n        super(columnDef, elementRef);\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.role = 'gridcell';\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-simple-cell');\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.customClass) {\n            this.renderer.addClass(this.elementRef.nativeElement, this.column.customClass(this.row));\n        }\n        if (this.column.width) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n            // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n            // this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.column.width - 20}px`);\n            // this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.column.width - 20}px`);\n            // this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.column.width - 20}px`);\n        }\n        // else {\n        //     // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n        //     this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n        //     this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n        //     this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n        // }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        Helpers.swallowEvent(event);\n        if (this.column.onClick) {\n            this.column.onClick(this.row);\n        }\n        return;\n    }\n}\nNovoSimpleCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-cell',\n                template: `\n    <span [class.clickable]=\"!!column.onClick\" (click)=\"onClick($event)\" #span>{{ column.renderer(row) }}</span>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoSimpleCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNovoSimpleCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }],\n    column: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleCell.prototype.role;\n    /** @type {?} */\n    NovoSimpleCell.prototype.row;\n    /** @type {?} */\n    NovoSimpleCell.prototype.column;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCell.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCell.prototype.renderer;\n}\nclass NovoSimpleCheckboxCell extends _NovoCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} _selection\n     */\n    constructor(columnDef, elementRef, renderer, _selection) {\n        super(columnDef, elementRef);\n        this.columnDef = columnDef;\n        this._selection = _selection;\n        this.role = 'gridcell';\n        this.selected = false;\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n        renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-cell');\n        this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            this.selected = value;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selection.register(this.row.id || this.index, this.row);\n        this.selected = this._selection.state.selectedRows.has(this.row.id || this.index);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._selection.deregister(this.row.id || this.index);\n        this.selectAllSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this._selection.toggle(this.row.id || this.index, value, this.row);\n    }\n}\nNovoSimpleCheckboxCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-checkbox-cell',\n                template: `\n    <novo-checkbox [ngModel]=\"selected\" (ngModelChange)=\"toggle($event)\"></novo-checkbox>\n  `\n            }] }\n];\n/** @nocollapse */\nNovoSimpleCheckboxCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoSelection, decorators: [{ type: Optional }] }\n];\nNovoSimpleCheckboxCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }],\n    index: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype.role;\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype.row;\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype.index;\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype.selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCheckboxCell.prototype.selectAllSubscription;\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype.columnDef;\n    /** @type {?} */\n    NovoSimpleCheckboxCell.prototype._selection;\n}\n/**\n * @template T\n */\nclass NovoSimpleActionCell extends _NovoCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} labels\n     */\n    constructor(columnDef, elementRef, renderer, labels) {\n        super(columnDef, elementRef);\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.labels = labels;\n        this.role = 'gridcell';\n        renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-action-column-${columnDef.cssClassFriendlyName}`);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.options) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-dropdown-cell');\n        }\n        else {\n            this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-button-cell');\n        }\n    }\n    /**\n     * @param {?} check\n     * @param {?} row\n     * @return {?}\n     */\n    isDisabled(check, row) {\n        if (check.disabled === true) {\n            return true;\n        }\n        if (check.disabledCheck) {\n            return check.disabledCheck(row);\n        }\n        return false;\n    }\n}\nNovoSimpleActionCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-action-cell',\n                template: `\n    <ng-container *ngIf=\"!column.options\">\n      <button theme=\"icon\" [icon]=\"column.icon\" (click)=\"column.onClick(row)\" [disabled]=\"isDisabled(column, row)\"></button>\n    </ng-container>\n    <ng-container *ngIf=\"column.options\">\n      <novo-dropdown parentScrollSelector=\".novo-simple-table\" containerClass=\"novo-table-dropdown-cell\">\n        <button type=\"button\" theme=\"dialogue\" icon=\"collapse\" inverse>{{ column.label || labels.actions }}</button>\n        <list>\n          <item *ngFor=\"let option of column.options\" (action)=\"option.onClick(row)\" [disabled]=\"isDisabled(option, row)\">\n            <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n          </item>\n        </list>\n      </novo-dropdown>\n    </ng-container>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoSimpleActionCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NovoLabelService }\n];\nNovoSimpleActionCell.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    row: [{ type: Input }],\n    column: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleActionCell.prototype.role;\n    /** @type {?} */\n    NovoSimpleActionCell.prototype.row;\n    /** @type {?} */\n    NovoSimpleActionCell.prototype.column;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleActionCell.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleActionCell.prototype.renderer;\n    /** @type {?} */\n    NovoSimpleActionCell.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/cell-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSimpleFilterFocus {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.element.nativeElement.focus();\n    }\n}\nNovoSimpleFilterFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleFilterFocus]',\n            },] }\n];\n/** @nocollapse */\nNovoSimpleFilterFocus.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleFilterFocus.prototype.element;\n}\nclass NovoSimpleCellHeader {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} labels\n     * @param {?} state\n     * @param {?} _sort\n     * @param {?} _cdkColumnDef\n     */\n    constructor(changeDetectorRef, labels, state, _sort, _cdkColumnDef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.labels = labels;\n        this.state = state;\n        this._sort = _sort;\n        this._cdkColumnDef = _cdkColumnDef;\n        this.icon = 'sortable';\n        this.filterActive = false;\n        this.sortActive = false;\n        this.showCustomRange = false;\n        this._rerenderSubscription = state.updates.subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            if (change.sort && change.sort.id === this.id) {\n                this.icon = `sort-${change.sort.value}`;\n                this.sortActive = true;\n            }\n            else {\n                this.icon = 'sortable';\n                this.sortActive = false;\n            }\n            if (change.filter && change.filter.id === this.id) {\n                this.filterActive = true;\n                this.filter = change.filter.value;\n            }\n            else {\n                this.filterActive = false;\n                this.filter = undefined;\n            }\n            changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get config() {\n        return this._config;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set config(v) {\n        if (!v) {\n            this._config = {\n                sortable: false,\n                filterable: false,\n                filterConfig: {\n                    type: 'text',\n                },\n            };\n        }\n        else {\n            this._config = {\n                sortable: coerceBooleanProperty(v.sortable),\n                filterable: coerceBooleanProperty(v.filterable),\n                transforms: v.transforms || {},\n                filterConfig: v.filterConfig || {\n                    type: 'text',\n                },\n            };\n            if (this._config.filterConfig.type === 'date' && !this._config.filterConfig.options) {\n                this._config.filterConfig.options = this.getDefaultDateFilterOptions();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._cdkColumnDef) {\n            this.id = this._cdkColumnDef.name;\n        }\n        if (this.defaultSort && this.id === this.defaultSort.id) {\n            this.icon = `sort-${this.defaultSort.value}`;\n            this.sortActive = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    sort() {\n        if (this.changeTimeout) {\n            clearTimeout(this.changeTimeout);\n        }\n        this.changeTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.direction = this.getNextSortDirection(this.direction);\n            this._sort.sort(this.id, this.direction, this._config.transforms.sort);\n            this.changeDetectorRef.markForCheck();\n        }), 300);\n    }\n    /**\n     * @param {?} event\n     * @param {?} value\n     * @return {?}\n     */\n    toggleCustomRange(event, value) {\n        Helpers.swallowEvent(event);\n        this.showCustomRange = value;\n        this.changeDetectorRef.markForCheck();\n        this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n    }\n    /**\n     * @param {?=} filter\n     * @return {?}\n     */\n    filterData(filter) {\n        /** @type {?} */\n        let actualFilter = filter;\n        if (this.config.filterConfig.type === 'date' && filter) {\n            this.activeDateFilter = filter.label || this.labels.customDateRange;\n            if (filter.startDate && filter.endDate) {\n                actualFilter = {\n                    min: startOfDay(filter.startDate.date),\n                    max: startOfDay(addDays(startOfDay(filter.endDate.date), 1)),\n                };\n            }\n            else {\n                actualFilter = {\n                    min: filter.min ? addDays(startOfToday(), filter.min) : startOfToday(),\n                    max: filter.max ? addDays(startOfTomorrow(), filter.max) : startOfTomorrow(),\n                };\n            }\n        }\n        if (actualFilter && actualFilter.hasOwnProperty('value')) {\n            actualFilter = filter.value;\n        }\n        if (this.changeTimeout) {\n            clearTimeout(this.changeTimeout);\n        }\n        this.changeTimeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (actualFilter === '') {\n                actualFilter = undefined;\n            }\n            this._sort.filter(this.id, actualFilter, this.config.transforms.filter);\n            this.changeDetectorRef.markForCheck();\n        }), 300);\n    }\n    /**\n     * @return {?}\n     */\n    clearFilter() {\n        this.filter = undefined;\n        this.activeDateFilter = undefined;\n        this.filterData();\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    getNextSortDirection(direction) {\n        if (!direction) {\n            return 'asc';\n        }\n        if (direction === 'asc') {\n            return 'desc';\n        }\n        return 'asc';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDefaultDateFilterOptions() {\n        /** @type {?} */\n        const opts = [\n            { label: this.labels.past1Day, min: -1, max: 0 },\n            { label: this.labels.past7Days, min: -7, max: 0 },\n            { label: this.labels.past30Days, min: -30, max: 0 },\n            { label: this.labels.past90Days, min: -90, max: 0 },\n            { label: this.labels.past1Year, min: -366, max: 0 },\n            { label: this.labels.next1Day, min: 0, max: 1 },\n            { label: this.labels.next7Days, min: 0, max: 7 },\n            { label: this.labels.next30Days, min: 0, max: 30 },\n            { label: this.labels.next90Days, min: 0, max: 90 },\n            { label: this.labels.next1Year, min: 0, max: 366 },\n        ];\n        return opts;\n    }\n}\nNovoSimpleCellHeader.decorators = [\n    { type: Component, args: [{\n                selector: '[novo-simple-cell-config]',\n                template: `\n    <label (click)=\"sort()\" data-automation-id=\"novo-activity-table-label\" [class.sort-disabled]=\"!config.sortable\">\n      <ng-content></ng-content>\n    </label>\n    <div>\n      <button\n        *ngIf=\"config.sortable\"\n        theme=\"icon\"\n        [icon]=\"icon\"\n        (click)=\"sort()\"\n        [class.active]=\"sortActive\"\n        data-automation-id=\"novo-activity-table-sort\"\n      ></button>\n      <novo-dropdown\n        *ngIf=\"config.filterable\"\n        side=\"right\"\n        parentScrollSelector=\".novo-simple-table\"\n        containerClass=\"simple-table-dropdown\"\n        data-automation-id=\"novo-activity-table-filter\"\n      >\n        <button type=\"button\" theme=\"icon\" icon=\"filter\" [class.active]=\"filterActive\"></button>\n        <div class=\"header\">\n          <span>{{ labels.filters }}</span>\n          <button\n            theme=\"dialogue\"\n            color=\"negative\"\n            icon=\"times\"\n            (click)=\"clearFilter()\"\n            *ngIf=\"filter\"\n            data-automation-id=\"novo-activity-table-filter-clear\"\n          >\n            {{ labels.clear }}\n          </button>\n        </div>\n        <ng-container [ngSwitch]=\"config.filterConfig.type\">\n          <list *ngSwitchCase=\"'date'\">\n            <ng-container *ngIf=\"!showCustomRange\">\n              <item\n                [class.active]=\"activeDateFilter === option.label\"\n                *ngFor=\"let option of config.filterConfig.options\"\n                (click)=\"filterData(option)\"\n                [attr.data-automation-id]=\"'novo-activity-table-filter-' + option.label\"\n              >\n                {{ option.label }} <i class=\"bhi-check\" *ngIf=\"activeDateFilter === option.label\"></i>\n              </item>\n            </ng-container>\n            <item\n              [class.active]=\"labels.customDateRange === activeDateFilter\"\n              (click)=\"toggleCustomRange($event, true)\"\n              *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\"\n              [keepOpen]=\"true\"\n            >\n              {{ labels.customDateRange }} <i class=\"bhi-check\" *ngIf=\"labels.customDateRange === activeDateFilter\"></i>\n            </item>\n            <div class=\"calendar-container\" *ngIf=\"showCustomRange\">\n              <div (click)=\"toggleCustomRange($event, false)\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n              <novo-date-picker (onSelect)=\"filterData($event)\" [(ngModel)]=\"filter\" range=\"true\"></novo-date-picker>\n            </div>\n          </list>\n          <list *ngSwitchCase=\"'select'\">\n            <item\n              [class.active]=\"filter === option\"\n              *ngFor=\"let option of config.filterConfig.options\"\n              (click)=\"filterData(option)\"\n              [attr.data-automation-id]=\"'novo-activity-table-filter-' + (option?.label || option)\"\n            >\n              <span>{{ option?.label || option }}</span>\n              <i class=\"bhi-check\" *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"></i>\n            </item>\n          </list>\n          <list *ngSwitchDefault>\n            <item class=\"filter-search\" keepOpen=\"true\">\n              <input\n                type=\"text\"\n                [(ngModel)]=\"filter\"\n                (ngModelChange)=\"filterData($event)\"\n                novoSimpleFilterFocus\n                data-automation-id=\"novo-activity-table-filter-input\"\n              />\n            </item>\n          </list>\n        </ng-container>\n      </novo-dropdown>\n    </div>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoSimpleCellHeader.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoLabelService },\n    { type: NovoActivityTableState },\n    { type: NovoSortFilter, decorators: [{ type: Optional }] },\n    { type: CdkColumnDef, decorators: [{ type: Optional }] }\n];\nNovoSimpleCellHeader.propDecorators = {\n    dropdown: [{ type: ViewChild, args: [NovoDropdownElement, { static: false },] }],\n    defaultSort: [{ type: Input }],\n    config: [{ type: Input, args: ['novo-simple-cell-config',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.dropdown;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.defaultSort;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCellHeader.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCellHeader.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCellHeader.prototype.changeTimeout;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.icon;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.id;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.filter;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.direction;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.filterActive;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.sortActive;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.showCustomRange;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.activeDateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCellHeader.prototype.changeDetectorRef;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleCellHeader.prototype.state;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype._sort;\n    /** @type {?} */\n    NovoSimpleCellHeader.prototype._cdkColumnDef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/pagination.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_PAGE_SIZE = 50;\nclass NovoSimpleTablePagination {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} labels\n     * @param {?} state\n     */\n    constructor(changeDetectorRef, labels, state) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.labels = labels;\n        this.state = state;\n        this._page = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this.pageChange = new EventEmitter();\n        if (state && state.onReset) {\n            this.resetSubscription = this.state.onReset.subscribe((/**\n             * @param {?} clear\n             * @return {?}\n             */\n            (clear) => {\n                if (clear) {\n                    this.page = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    set page(page) {\n        this._page = page;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.state.page = this._page;\n    }\n    /**\n     * @return {?}\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * @param {?} length\n     * @return {?}\n     */\n    set length(length) {\n        this._length = length;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    }\n    /**\n     * @return {?}\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    set pageSize(pageSize) {\n        this._pageSize = pageSize;\n        this.updateDisplayedPageSizeOptions();\n        this.state.pageSize = this._pageSize;\n    }\n    /**\n     * @return {?}\n     */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    /**\n     * @param {?} pageSizeOptions\n     * @return {?}\n     */\n    set pageSizeOptions(pageSizeOptions) {\n        this._pageSizeOptions = pageSizeOptions;\n        this.updateDisplayedPageSizeOptions();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this.updateDisplayedPageSizeOptions();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.resetSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        this.page++;\n        this.emitPageEvent();\n    }\n    /**\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        this.page--;\n        this.emitPageEvent();\n    }\n    /**\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.page >= 1 && this.pageSize !== 0;\n    }\n    /**\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n        return this.page < numberOfPages && this.pageSize !== 0;\n    }\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    changePageSize(pageSize) {\n        this.page = 0;\n        this.pageSize = pageSize;\n        this.emitPageEvent();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length !== 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this.displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this.displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this.displayedPageSizeOptions.push(this.pageSize);\n        }\n        this.displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    emitPageEvent() {\n        /** @type {?} */\n        const event = {\n            page: this.page,\n            pageSize: this.pageSize,\n            length: this.length,\n        };\n        this.pageChange.next(event);\n        this.state.page = this.page;\n        this.state.pageSize = this.pageSize;\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.state.updates.next(event);\n    }\n}\nNovoSimpleTablePagination.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-table-pagination',\n                template: `\n        <div class=\"novo-simple-table-pagination-size\">\n            <novo-tiles *ngIf=\"displayedPageSizeOptions.length > 1\"\n                        [(ngModel)]=\"pageSize\"\n                        [options]=\"displayedPageSizeOptions\"\n                        (onChange)=\"changePageSize($event)\"\n                        data-automation-id=\"novo-simple-table-pagination-tiles\">\n            </novo-tiles>\n            <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n        </div>\n\n        <div class=\"novo-simple-table-range-label-long\"data-automation-id=\"novo-simple-table-pagination-range-label-long\">\n            {{ longRangeLabel }}\n        </div>\n        <div class=\"novo-simple-table-range-label-short\"data-automation-id=\"novo-simple-table-pagination-range-label-short\">\n            {{ shortRangeLabel }}\n        </div>\n\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-simple-table-pagination-navigation-previous\"\n                (click)=\"previousPage()\"\n                icon=\"previous\"\n                side=\"left\"\n                [disabled]=\"!hasPreviousPage()\"\n                data-automation-id=\"novo-simple-table-pagination-previous\">\n            <span>{{ labels.previous }}</span>\n        </button>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-simple-table-pagination-navigation-next\"\n                (click)=\"nextPage()\"\n                icon=\"next\"\n                side=\"right\"\n                [disabled]=\"!hasNextPage()\"\n                data-automation-id=\"novo-simple-table-pagination-next\">\n            <span>{{ labels.next }}</span>\n        </button>\n    `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoSimpleTablePagination.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoLabelService },\n    { type: NovoActivityTableState }\n];\nNovoSimpleTablePagination.propDecorators = {\n    page: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    pageChange: [{ type: Output }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype._initialized;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype._page;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype._pageSizeOptions;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype.pageChange;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype.displayedPageSizeOptions;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype.longRangeLabel;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype.shortRangeLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype.resetSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype.changeDetectorRef;\n    /** @type {?} */\n    NovoSimpleTablePagination.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSimpleTablePagination.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n * @type {?}\n */\nconst _NovoHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\nconst _NovoCdkRowDef = CdkRowDef;\n/** @type {?} */\nconst _NovoHeaderRow = CdkHeaderRow;\n/** @type {?} */\nconst _NovoRow = CdkRow;\nclass NovoSimpleHeaderRowDef extends _NovoHeaderRowDef {\n}\nNovoSimpleHeaderRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: NovoSimpleHeaderRowDef }],\n            },] }\n];\nNovoSimpleHeaderRowDef.propDecorators = {\n    columns: [{ type: Input, args: ['novoSimpleHeaderRowDef',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleHeaderRowDef.prototype.columns;\n}\n/**\n * @template T\n */\nclass NovoSimpleRowDef extends _NovoCdkRowDef {\n}\nNovoSimpleRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoSimpleRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: NovoSimpleRowDef }],\n            },] }\n];\nNovoSimpleRowDef.propDecorators = {\n    columns: [{ type: Input, args: ['novoSimpleRowDefColumns',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleRowDef.prototype.columns;\n}\nclass NovoSimpleHeaderRow extends _NovoHeaderRow {\n    constructor() {\n        super(...arguments);\n        this.rowClass = 'novo-simple-header-row';\n        this.role = 'row';\n    }\n}\nNovoSimpleHeaderRow.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-header-row',\n                template: CDK_ROW_TEMPLATE,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nNovoSimpleHeaderRow.propDecorators = {\n    rowClass: [{ type: HostBinding, args: ['class',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleHeaderRow.prototype.rowClass;\n    /** @type {?} */\n    NovoSimpleHeaderRow.prototype.role;\n}\nclass NovoSimpleRow extends _NovoRow {\n    constructor() {\n        super(...arguments);\n        this.rowClass = 'novo-simple-row';\n        this.role = 'row';\n    }\n}\nNovoSimpleRow.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-row',\n                template: CDK_ROW_TEMPLATE,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nNovoSimpleRow.propDecorators = {\n    rowClass: [{ type: HostBinding, args: ['class',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSimpleRow.prototype.rowClass;\n    /** @type {?} */\n    NovoSimpleRow.prototype.role;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/table-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction ActivityTableService() { }\nif (false) {\n    /**\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?} page\n     * @param {?} pageSize\n     * @param {?=} globalSearch\n     * @param {?=} outsideFilter\n     * @return {?}\n     */\n    ActivityTableService.prototype.getTableResults = function (sort, filter, page, pageSize, globalSearch, outsideFilter) { };\n}\n/**\n * @abstract\n * @template T\n */\nclass RemoteActivityTableService {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?} page\n     * @param {?} pageSize\n     * @param {?=} globalSearch\n     * @param {?=} outsideFilter\n     * @return {?}\n     */\n    RemoteActivityTableService.prototype.getTableResults = function (sort, filter, page, pageSize, globalSearch, outsideFilter) { };\n}\n/**\n * @template T\n */\nclass StaticActivityTableService {\n    /**\n     * @param {?=} data\n     */\n    constructor(data = []) {\n        this.data = data;\n    }\n    /**\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?=} page\n     * @param {?=} pageSize\n     * @param {?=} globalSearch\n     * @param {?=} outsideFilter\n     * @return {?}\n     */\n    getTableResults(sort, filter, page = 0, pageSize, globalSearch, outsideFilter) {\n        /** @type {?} */\n        let ret = Helpers.deepClone(this.data);\n        if (ret.length !== 0) {\n            if (globalSearch) {\n                ret = ret.filter((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => Object.keys(item).some((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())))));\n            }\n            if (filter) {\n                /** @type {?} */\n                const value = Helpers.isString(filter.value) ? filter.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : filter.value;\n                ret = ret.filter(Helpers.filterByField(filter.id, value));\n            }\n            if (sort) {\n                ret = ret.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n            }\n            if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n                ret = ret.slice(page * pageSize, (page + 1) * pageSize);\n            }\n        }\n        return of({ results: ret, total: this.data.length });\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StaticActivityTableService.prototype.data;\n}\n/**\n * @template T\n */\nclass ActivityTableDataSource extends DataSource {\n    /**\n     * @param {?} tableService\n     * @param {?} state\n     * @param {?} ref\n     */\n    constructor(tableService, state, ref) {\n        super();\n        this.tableService = tableService;\n        this.state = state;\n        this.ref = ref;\n        this.total = 0;\n        this.current = 0;\n        this.loading = false;\n        this.pristine = true;\n    }\n    /**\n     * @return {?}\n     */\n    get totallyEmpty() {\n        return this.total === 0;\n    }\n    /**\n     * @return {?}\n     */\n    get currentlyEmpty() {\n        return this.current === 0;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        /** @type {?} */\n        const displayDataChanges = [this.state.updates];\n        return merge(...displayDataChanges).pipe(startWith(null), switchMap((/**\n         * @return {?}\n         */\n        () => {\n            this.pristine = false;\n            this.loading = true;\n            return this.tableService.getTableResults(this.state.sort, this.state.filter, this.state.page, this.state.pageSize, this.state.globalSearch, this.state.outsideFilter);\n        })), map((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            this.loading = false;\n            this.total = data.total;\n            this.current = data.results.length;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.ref.markForCheck();\n            }));\n            return data.results;\n        })), catchError((/**\n         * @param {?} error\n         * @return {?}\n         */\n        (error) => {\n            console.error(error); // tslint: disable-line\n            this.loading = false;\n            return of(null);\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /** @type {?} */\n    ActivityTableDataSource.prototype.total;\n    /** @type {?} */\n    ActivityTableDataSource.prototype.current;\n    /** @type {?} */\n    ActivityTableDataSource.prototype.loading;\n    /** @type {?} */\n    ActivityTableDataSource.prototype.pristine;\n    /**\n     * @type {?}\n     * @private\n     */\n    ActivityTableDataSource.prototype.tableService;\n    /**\n     * @type {?}\n     * @private\n     */\n    ActivityTableDataSource.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    ActivityTableDataSource.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n * @type {?}\n */\nconst _NovoTable = CdkTable;\n/**\n * @template T\n */\nclass NovoTable extends _NovoTable {\n}\nNovoTable.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-simple-table',\n                template: CDK_TABLE_TEMPLATE,\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nclass NovoActivityTableActions {\n}\nNovoActivityTableActions.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-activity-table-actions',\n            },] }\n];\nclass NovoActivityTableCustomHeader {\n}\nNovoActivityTableCustomHeader.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-activity-table-custom-header',\n            },] }\n];\nclass NovoActivityTableCustomFilter {\n}\nNovoActivityTableCustomFilter.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-activity-table-custom-filter',\n            },] }\n];\nclass NovoActivityTableEmptyMessage {\n}\nNovoActivityTableEmptyMessage.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-activity-table-empty-message',\n            },] }\n];\nclass NovoActivityTableNoResultsMessage {\n}\nNovoActivityTableNoResultsMessage.decorators = [\n    { type: Directive, args: [{\n                selector: 'novo-activity-table-no-results-message',\n            },] }\n];\n/**\n * @template T\n */\nclass NovoActivityTable {\n    /**\n     * @param {?} labels\n     * @param {?} ref\n     * @param {?} state\n     */\n    constructor(labels, ref, state) {\n        this.labels = labels;\n        this.ref = ref;\n        this.state = state;\n        this.globalSearchHiddenClassToggle = false;\n        this.loading = true;\n        notify('[Deprecated]: The simple table is deprecated. Please migrate to novo-data-tables!');\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set customFilter(v) {\n        this._customFilter = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get customFilter() {\n        return this._customFilter;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set forceShowHeader(v) {\n        this._forceShowHeader = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get forceShowHeader() {\n        return this._forceShowHeader;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set hideGlobalSearch(v) {\n        this._hideGlobalSearch = coerceBooleanProperty(v);\n        this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n    }\n    /**\n     * @return {?}\n     */\n    get hideGlobalSearch() {\n        return this._hideGlobalSearch;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set debug(v) {\n        this._debug = coerceBooleanProperty(v);\n    }\n    /**\n     * @return {?}\n     */\n    get debug() {\n        return this._debug;\n    }\n    /**\n     * @return {?}\n     */\n    get empty() {\n        return this.dataSource && this.dataSource.totallyEmpty;\n    }\n    /**\n     * @return {?}\n     */\n    get loadingClass() {\n        return this.loading || (this.dataSource && this.dataSource.loading);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.loading = changes['activityService'] && !changes['activityService'].currentValue;\n        this.ref.detectChanges();\n        if (changes['activityService'] && changes['activityService'].currentValue) {\n            this.loading = false;\n            this.dataSource = new ActivityTableDataSource(this.activityService, this.state, this.ref);\n            this.ref.detectChanges();\n        }\n        if (changes['outsideFilter'] && changes['outsideFilter'].currentValue) {\n            if (!this.outsideFilterSubscription) {\n                this.outsideFilterSubscription = this.outsideFilter.subscribe((/**\n                 * @param {?} filter\n                 * @return {?}\n                 */\n                (filter) => {\n                    this.state.outsideFilter = filter;\n                    this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n                    this.ref.markForCheck();\n                }));\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.outsideFilterSubscription) {\n            this.outsideFilterSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.paginationOptions && !this.paginationOptions.page) {\n            this.paginationOptions.page = 0;\n        }\n        if (this.paginationOptions && !this.paginationOptions.pageSize) {\n            this.paginationOptions.pageSize = 50;\n        }\n        if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n            this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n        }\n        this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n        this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    onSearchChange(term) {\n        this.state.globalSearch = term;\n        this.state.reset(false, true);\n        this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n    }\n}\nNovoActivityTable.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-activity-table',\n                template: `\n        <div *ngIf=\"debug\">\n            <p>Total: {{ dataSource?.total }}</p>\n            <p>Current: {{ dataSource?.current }}</p>\n            <p>Totally Empty: {{ dataSource?.totallyEmpty }}</p>\n            <p>Currently Empty: {{ dataSource?.currentlyEmpty }}</p>\n            <p>Loading (DataSource): {{ dataSource?.loading }}</p>\n            <p>User Filtered: {{ state.userFiltered }}</p>\n            <p>Loading (Table): {{ loading }}</p>\n        </div>\n        <header *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\">\n            <ng-content select=\"[novo-activity-table-custom-header]\"></ng-content>\n            <novo-search\n                alwaysOpen=\"true\"\n                (searchChanged)=\"onSearchChange($event)\"\n                [(ngModel)]=\"state.globalSearch\"\n                *ngIf=\"!hideGlobalSearch\"\n                [placeholder]=\"searchOptions?.placeholder\"\n                [hint]=\"searchOptions?.tooltip\">\n            </novo-search>\n            <novo-simple-table-pagination\n                *ngIf=\"paginationOptions\"\n                [length]=\"dataSource?.total\"\n                [page]=\"paginationOptions.page\"\n                [pageSize]=\"paginationOptions.pageSize\"\n                [pageSizeOptions]=\"paginationOptions.pageSizeOptions\">\n            </novo-simple-table-pagination>\n            <div class=\"novo-activity-table-actions\">\n                <ng-content select=\"[novo-activity-table-actions]\"></ng-content>\n            </div>\n        </header>\n        <div class=\"novo-activity-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-activity-table-loading\">\n            <novo-loading></novo-loading>\n        </div>\n        <div class=\"novo-activity-table-filter-container\">\n            <div class=\"novo-activity-table-custom-filter\" *ngIf=\"customFilter\">\n                <ng-content select=\"[novo-activity-table-custom-filter]\"></ng-content>\n            </div>\n            <div class=\"novo-activity-table-container\">\n                <novo-simple-table *ngIf=\"(columns?.length > 0)\" [dataSource]=\"dataSource\" novoSortFilter novoSelection [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\" [hidden]=\"dataSource?.totallyEmpty && !state.userFiltered\">\n                    <ng-content></ng-content>\n                    <ng-container novoSimpleColumnDef=\"selection\">\n                        <novo-simple-checkbox-header-cell *novoSimpleHeaderCellDef></novo-simple-checkbox-header-cell>\n                        <novo-simple-checkbox-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [index]=\"i\"></novo-simple-checkbox-cell>\n                    </ng-container>\n                    <ng-container *ngFor=\"let column of actionColumns\" [novoSimpleColumnDef]=\"column.id\">\n                        <novo-simple-empty-header-cell [class.button-header-cell]=\"!column.options\" [class.dropdown-header-cell]=\"column.options\" *novoSimpleHeaderCellDef></novo-simple-empty-header-cell>\n                        <novo-simple-action-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [column]=\"column\"></novo-simple-action-cell>\n                    </ng-container>\n                    <ng-container *ngFor=\"let column of columns\" [novoSimpleColumnDef]=\"column.id\">\n                        <novo-simple-header-cell *novoSimpleHeaderCellDef [column]=\"column\" [novo-simple-cell-config]=\"column.config\" [defaultSort]=\"defaultSort\">{{ column.label }}</novo-simple-header-cell>\n                        <novo-simple-cell *novoSimpleCellDef=\"let row\" [column]=\"column\" [row]=\"row\"></novo-simple-cell>\n                    </ng-container>\n                    <novo-simple-header-row *novoSimpleHeaderRowDef=\"displayedColumns\"></novo-simple-header-row>\n                    <novo-simple-row *novoSimpleRowDef=\"let row; columns: displayedColumns;\"></novo-simple-row>\n                </novo-simple-table>\n                <div class=\"novo-activity-table-no-results-container\" *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\">\n                    <div #filtered><ng-content select=\"[novo-activity-table-no-results-message]\"></ng-content></div>\n                    <div class=\"novo-activity-table-empty-message\" *ngIf=\"filtered.childNodes.length == 0\">\n                        <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n                    </div>\n                </div>\n                <div class=\"novo-activity-table-empty-container\" *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\">\n                    <div #empty><ng-content select=\"[novo-activity-table-empty-message]\"></ng-content></div>\n                    <div class=\"novo-activity-table-empty-message\" *ngIf=\"empty.childNodes.length == 0\">\n                        <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [NovoActivityTableState]\n            }] }\n];\n/** @nocollapse */\nNovoActivityTable.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef },\n    { type: NovoActivityTableState }\n];\nNovoActivityTable.propDecorators = {\n    globalSearchHiddenClassToggle: [{ type: HostBinding, args: ['class.global-search-hidden',] }],\n    activityService: [{ type: Input }],\n    columns: [{ type: Input }],\n    displayedColumns: [{ type: Input }],\n    actionColumns: [{ type: Input }],\n    paginationOptions: [{ type: Input }],\n    searchOptions: [{ type: Input }],\n    defaultSort: [{ type: Input }],\n    outsideFilter: [{ type: Input }],\n    customFilter: [{ type: Input }],\n    forceShowHeader: [{ type: Input }],\n    hideGlobalSearch: [{ type: Input }],\n    debug: [{ type: Input }],\n    empty: [{ type: HostBinding, args: ['class.empty',] }],\n    loadingClass: [{ type: HostBinding, args: ['class.loading',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoActivityTable.prototype.globalSearchHiddenClassToggle;\n    /** @type {?} */\n    NovoActivityTable.prototype.activityService;\n    /** @type {?} */\n    NovoActivityTable.prototype.columns;\n    /** @type {?} */\n    NovoActivityTable.prototype.displayedColumns;\n    /** @type {?} */\n    NovoActivityTable.prototype.actionColumns;\n    /** @type {?} */\n    NovoActivityTable.prototype.paginationOptions;\n    /** @type {?} */\n    NovoActivityTable.prototype.searchOptions;\n    /** @type {?} */\n    NovoActivityTable.prototype.defaultSort;\n    /** @type {?} */\n    NovoActivityTable.prototype.outsideFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype._customFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype._forceShowHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype._hideGlobalSearch;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype._debug;\n    /** @type {?} */\n    NovoActivityTable.prototype.dataSource;\n    /** @type {?} */\n    NovoActivityTable.prototype.loading;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype.outsideFilterSubscription;\n    /** @type {?} */\n    NovoActivityTable.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoActivityTable.prototype.ref;\n    /** @type {?} */\n    NovoActivityTable.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/simple-table/simple-table.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSimpleTableModule {\n}\nNovoSimpleTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    NovoDatePickerModule,\n                    CdkTableModule,\n                    CommonModule,\n                    FormsModule,\n                    NovoButtonModule,\n                    NovoDropdownModule,\n                    NovoFormExtrasModule,\n                    NovoLoadingModule,\n                    NovoTilesModule,\n                    NovoSearchBoxModule,\n                ],\n                exports: [\n                    NovoTable,\n                    NovoSimpleCellDef,\n                    NovoSimpleHeaderCellDef,\n                    NovoSimpleColumnDef,\n                    NovoActivityTableEmptyMessage,\n                    NovoActivityTableNoResultsMessage,\n                    NovoSimpleHeaderRowDef,\n                    NovoSimpleRowDef,\n                    NovoSimpleCellHeader,\n                    NovoSortFilter,\n                    NovoSimpleActionCell,\n                    NovoSimpleEmptyHeaderCell,\n                    NovoSimpleHeaderCell,\n                    NovoSimpleCell,\n                    NovoSimpleHeaderRow,\n                    NovoSimpleRow,\n                    NovoSimpleFilterFocus,\n                    NovoSimpleTablePagination,\n                    NovoActivityTableCustomHeader,\n                    NovoSimpleCheckboxCell,\n                    NovoSimpleCheckboxHeaderCell,\n                    NovoSelection,\n                    NovoActivityTable,\n                    NovoActivityTableActions,\n                    NovoActivityTableCustomFilter,\n                ],\n                declarations: [\n                    NovoTable,\n                    NovoSimpleCellDef,\n                    NovoSimpleHeaderCellDef,\n                    NovoSimpleColumnDef,\n                    NovoActivityTableEmptyMessage,\n                    NovoActivityTableNoResultsMessage,\n                    NovoSimpleHeaderRowDef,\n                    NovoSimpleRowDef,\n                    NovoSimpleCellHeader,\n                    NovoSortFilter,\n                    NovoSimpleActionCell,\n                    NovoSimpleEmptyHeaderCell,\n                    NovoSimpleHeaderCell,\n                    NovoSimpleCell,\n                    NovoSimpleHeaderRow,\n                    NovoSimpleRow,\n                    NovoSimpleFilterFocus,\n                    NovoSimpleTablePagination,\n                    NovoActivityTableCustomHeader,\n                    NovoSimpleCheckboxCell,\n                    NovoSimpleCheckboxHeaderCell,\n                    NovoSelection,\n                    NovoActivityTable,\n                    NovoActivityTableActions,\n                    NovoActivityTableCustomFilter,\n                ],\n                providers: [NovoActivityTableState],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/slider/Slider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSliderElement {\n    /**\n     * @param {?} element\n     * @param {?} labels\n     */\n    constructor(element, labels) {\n        this.element = element;\n        this.labels = labels;\n        this.currentSlide = 0;\n        this.start = true;\n        this.end = true;\n        this.currSlides = ['active'];\n        this.handleKeyDownFunc = this.handleKeyDown.bind(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        for (let i = 0; i < this.slides; i++) {\n            this.currSlides[i] = i > 0 ? 'inactive' : 'active';\n        }\n        // Catch Tab Events\n        this.element.nativeElement.addEventListener('keydown', this.handleKeyDownFunc);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('keydown', this.handleKeyDownFunc);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        if (event.keyCode === 9) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    changeSlide(direction) {\n        if (direction === 'next') {\n            if (this.currentSlide === this.slides - 1) {\n                return;\n            }\n            this.currentSlide++;\n        }\n        else {\n            if (this.currentSlide === 0) {\n                return;\n            }\n            this.currentSlide--;\n        }\n        for (let i = 0; i < this.slides; i++) {\n            this.currSlides[i] = 'inactive';\n        }\n        this.currSlides[this.currentSlide] = 'active';\n        this.start = this.currentSlide === 0;\n        this.end = this.currentSlide === this.slides - 1;\n        this.currentClass = `slide-${this.currentSlide}`;\n    }\n}\nNovoSliderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-slider',\n                template: `\n        <section class=\"slides\">\n            <ng-content select=\"div[slide]\"></ng-content>\n        </section>\n        <div class=\"controls\">\n            <button *ngIf=\"!start\" theme=\"icon\" icon=\"previous\" (click)=\"changeSlide('back')\"></button>\n            <div class=\"indicators\">\n                <div class=\"indicator-circle\" *ngFor=\"let indicator of currSlides; let i = index\" [ngClass]=\"indicator\"></div>\n            </div>\n            <button *ngIf=\"!end\" theme=\"primary\" icon=\"next\" (click)=\"changeSlide('next')\">{{ labels.next }}</button>\n            <ng-content select=\"button\" *ngIf=\"end\"></ng-content>\n        </div>\n    `,\n                host: {\n                    '[class]': 'currentClass',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoSliderElement.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NovoLabelService }\n];\nNovoSliderElement.propDecorators = {\n    slides: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoSliderElement.prototype.slides;\n    /** @type {?} */\n    NovoSliderElement.prototype.currentSlide;\n    /** @type {?} */\n    NovoSliderElement.prototype.start;\n    /** @type {?} */\n    NovoSliderElement.prototype.end;\n    /** @type {?} */\n    NovoSliderElement.prototype.currSlides;\n    /** @type {?} */\n    NovoSliderElement.prototype.handleKeyDownFunc;\n    /** @type {?} */\n    NovoSliderElement.prototype.currentClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoSliderElement.prototype.element;\n    /** @type {?} */\n    NovoSliderElement.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/slider/Slider.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoSliderModule {\n}\nNovoSliderModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NovoButtonModule],\n                declarations: [NovoSliderElement],\n                exports: [NovoSliderElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/step-label.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoStepLabel extends CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        super(template);\n    }\n}\nNovoStepLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoStepLabel]',\n            },] }\n];\n/** @nocollapse */\nNovoStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/step-header.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _focusMonitor\n     * @param {?} _element\n     */\n    constructor(_focusMonitor, _element) {\n        super(_element);\n        this._focusMonitor = _focusMonitor;\n        this._element = _element;\n        _focusMonitor.monitor(_element.nativeElement, true);\n    }\n    /**\n     * Index of the given step.\n     * @return {?}\n     */\n    get index() {\n        return this._index;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set index(value) {\n        this._index = coerceNumberProperty(value);\n    }\n    /**\n     * Whether the given step is selected.\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the given step label is active.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        this._active = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the given step label is active.\n     * @return {?}\n     */\n    get touched() {\n        return this.selected || this.state === 'edit' || this.state === 'done';\n    }\n    /**\n     * Whether the given step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof NovoStepLabel ? null : this.label;\n    }\n    /**\n     * Returns NovoStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof NovoStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nNovoStepHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-step-header',\n                template: \"<div [class.novo-step-icon]=\\\"touched\\\"\\n     [class.novo-step-icon-not-touched]=\\\"!touched\\\">\\n  <ng-container *ngIf=\\\"icon\\\">\\n    <novo-icon size=\\\"small\\\" raised=\\\"true\\\" [theme]=\\\"theme\\\">{{icon}}</novo-icon>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!icon\\\">\\n    <span class=\\\"novo-step-number\\\">{{index + 1}}</span>\\n  </ng-container>\\n</div>\\n<div class=\\\"novo-step-label\\\"\\n     [class.novo-step-label-active]=\\\"active\\\"\\n     [class.novo-step-label-selected]=\\\"selected\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- It there is no label template, fall back to the text label. -->\\n  <div class=\\\"novo-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n</div>\\n<novo-step-status [state]=\\\"state\\\"></novo-step-status>\\n\",\n                host: {\n                    class: 'novo-step-header',\n                    role: 'tab',\n                },\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@-webkit-keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@-webkit-keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@-webkit-keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@-webkit-keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}@keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}.novo-step-header{overflow:visible;outline:0;cursor:pointer;position:relative}.novo-step-optional{font-size:12px}.novo-step-icon,.novo-step-icon-not-touched{border-radius:50%;height:24px;width:24px;align-items:center;justify-content:center;display:flex}.novo-step-icon .novo-step-number,.novo-step-icon-not-touched .novo-step-number{font-size:1em;min-width:1.6em;height:1.6em;box-shadow:2px 2px 0 rgba(0,0,0,.2);display:flex;align-items:center;justify-content:center;border-radius:4px}.novo-step-icon .novo-step-number{background:#4a89dc;color:#fff}.novo-step-icon-not-touched .novo-step-number{background:#a9adbb;color:#fff}.novo-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;text-align:center;padding:4px 0}.novo-step-text-label{text-align:center;text-overflow:ellipsis;overflow:hidden}\"]\n            }] }\n];\n/** @nocollapse */\nNovoStepHeader.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nNovoStepHeader.propDecorators = {\n    theme: [{ type: Input }],\n    color: [{ type: Input }],\n    icon: [{ type: Input }],\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoStepHeader.prototype.theme;\n    /** @type {?} */\n    NovoStepHeader.prototype.color;\n    /** @type {?} */\n    NovoStepHeader.prototype.icon;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    NovoStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    NovoStepHeader.prototype.label;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    NovoStepHeader.prototype.iconOverrides;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._index;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._optional;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoStepHeader.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/stepper.animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Novo steppers.\n * @type {?}\n */\nconst novoStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/stepper.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _NovoStep = CdkStep;\n/** @type {?} */\nconst _NovoStepper = CdkStepper;\nclass NovoStep extends CdkStep {\n    /**\n     * @param {?} stepper\n     */\n    constructor(stepper) {\n        super(stepper);\n    }\n}\nNovoStep.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NovoStepper)),] }] }\n];\nNovoStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [NovoStepLabel, { static: false },] }],\n    theme: [{ type: Input }],\n    color: [{ type: Input }],\n    icon: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Content for step label given by `<ng-template novoStepLabel>`.\n     * @type {?}\n     */\n    NovoStep.prototype.stepLabel;\n    /** @type {?} */\n    NovoStep.prototype.theme;\n    /** @type {?} */\n    NovoStep.prototype.color;\n    /** @type {?} */\n    NovoStep.prototype.icon;\n}\nclass NovoStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n    }\n    /**\n     * @return {?}\n     */\n    get completed() {\n        try {\n            /** @type {?} */\n            const steps = this._steps.toArray();\n            /** @type {?} */\n            const length = steps.length - 1;\n            return steps[length].completed && length === this.selectedIndex;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this._stateChanged()));\n    }\n    /**\n     * @return {?}\n     */\n    complete() {\n        try {\n            /** @type {?} */\n            const steps = this._steps.toArray();\n            steps[this.selectedIndex].completed = true;\n            this.next();\n            this._stateChanged();\n        }\n        catch (err) {\n            // do nothing\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getIndicatorType(index) {\n        /** @type {?} */\n        const steps = this._steps.toArray();\n        if (index === this.selectedIndex) {\n            if (steps[index] && index === steps.length - 1 && steps[index].completed) {\n                return 'done';\n            }\n            return 'edit';\n        }\n        if (index < this.selectedIndex) {\n            return 'done';\n        }\n        return 'none';\n    }\n}\nNovoStepper.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoStepper]',\n            },] }\n];\nNovoStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [NovoStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [NovoStep,] }],\n    _icons: [{ type: ContentChildren, args: [NovoIconComponent,] }]\n};\nif (false) {\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    NovoStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    NovoStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    NovoStepper.prototype._icons;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    NovoStepper.prototype._iconOverrides;\n}\nclass NovoHorizontalStepper extends NovoStepper {\n}\nNovoHorizontalStepper.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-horizontal-stepper',\n                template: \"<div class=\\\"novo-horizontal-stepper-header-container\\\">\\n    <div class=\\\"novo-stepper-horizontal-line complete\\\"></div>\\n  <ng-container *ngFor=\\\"let step of _steps; let i = index; let isLast = last\\\">\\n    <novo-step-header  class=\\\"novo-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [index]=\\\"i\\\"\\n                     [theme]=\\\"step.theme\\\"\\n                     [color]=\\\"step.color\\\"\\n                     [icon]=\\\"step.icon\\\"\\n                     [state]=\\\"getIndicatorType(i)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\">\\n    </novo-step-header>\\n  </ng-container>\\n  <div class=\\\"novo-stepper-horizontal-line\\\" [class.complete]=\\\"completed\\\"></div>\\n</div>\\n\\n<div class=\\\"novo-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of _steps; let i = index\\\"\\n       class=\\\"novo-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                host: {\n                    class: 'novo-stepper-horizontal',\n                    'aria-orientation': 'horizontal',\n                    role: 'tablist',\n                },\n                animations: [novoStepperAnimations.horizontalStepTransition],\n                providers: [{ provide: NovoStepper, useExisting: NovoHorizontalStepper }],\n                // encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@-webkit-keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@-webkit-keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@-webkit-keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@-webkit-keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}@keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}.novo-stepper-horizontal,.novo-stepper-vertical{display:block}.novo-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center;justify-content:center;margin-bottom:1em;background:#f4f4f4}.novo-stepper-horizontal-line{border-bottom:1px solid #d9dadc;flex:auto;min-width:0;height:80px}.novo-stepper-horizontal-line.complete{border-bottom:1px solid #4a89dc}.novo-horizontal-stepper-header{display:flex;height:80px;flex-flow:column;overflow:visible;align-items:center;justify-content:center;padding:0 24px}.novo-horizontal-stepper-header .novo-step-status{display:flex;width:100%;justify-content:center;align-items:center;position:absolute;height:1px;bottom:0}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line{width:100%;position:absolute}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:before{content:\\\"\\\";display:block;width:calc(50% - 8px);margin-right:8px;border-bottom:1px solid #d9dadc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:after{content:\\\"\\\";display:block;width:calc(50% - 8px);margin-left:calc(50% + 8px);margin-top:-1px;border-top:1px solid #d9dadc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:before,.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.edit:before{border-bottom:1px solid #4a89dc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:after{border-top:1px solid #4a89dc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon{position:relative}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon:before{content:\\\"\\\";display:block;background:#fff;border-radius:50%;position:absolute;z-index:0;top:1px;left:1px;bottom:1px;right:1px}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon>*{position:relative;z-index:1}.novo-vertical-stepper-header{display:flex;align-items:center;padding:24px;max-height:24px}.novo-vertical-stepper-header .novo-step-icon,.novo-vertical-stepper-header .novo-step-icon-not-touched{margin-right:12px}[dir=rtl] .novo-vertical-stepper-header .novo-step-icon,[dir=rtl] .novo-vertical-stepper-header .novo-step-icon-not-touched{margin-right:0;margin-left:12px}.novo-horizontal-stepper-content{overflow:hidden}.novo-horizontal-stepper-content[aria-expanded=false]{height:0}.novo-horizontal-content-container{overflow:hidden;padding:0 24px 24px}.novo-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .novo-vertical-content-container{margin-left:0;margin-right:36px}.novo-stepper-vertical-line:before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;z-index:-1;border-left:1px solid #d9dadc}[dir=rtl] .novo-stepper-vertical-line:before{left:auto;right:0}.novo-stepper-vertical-line.done:after,.novo-stepper-vertical-line.done:before,.novo-stepper-vertical-line.edit:before{border-left-color:1px solid #4a89dc}.novo-stepper-vertical novo-step-status{position:absolute;left:35px;top:25px;transform:scale(.8)}.novo-vertical-stepper-content{overflow:hidden}.novo-vertical-content{padding:0 24px 24px}.novo-step:last-child .novo-vertical-content-container{border:none}\"]\n            }] }\n];\nNovoHorizontalStepper.propDecorators = {\n    selectedIndex: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoHorizontalStepper.prototype.selectedIndex;\n}\nclass NovoVerticalStepper extends NovoStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(dir, changeDetectorRef) {\n        super(dir, changeDetectorRef);\n        this._orientation = 'vertical';\n    }\n}\nNovoVerticalStepper.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-vertical-stepper',\n                template: \"<div class=\\\"novo-step\\\" *ngFor=\\\"let step of _steps; let i = index; let isLast = last\\\">\\n    <novo-step-header  class=\\\"novo-vertical-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                     [index]=\\\"i\\\"\\n                     [theme]=\\\"step.theme\\\"\\n                     [color]=\\\"step.color\\\"\\n                     [icon]=\\\"step.icon\\\"\\n                     [state]=\\\"getIndicatorType(i)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\">\\n    </novo-step-header>\\n\\n    <div class=\\\"novo-vertical-content-container\\\" [class.novo-stepper-vertical-line]=\\\"!isLast\\\" [ngClass]=\\\"getIndicatorType(i)\\\">\\n      <div class=\\\"novo-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <div class=\\\"novo-vertical-content\\\">\\n          <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\",\n                host: {\n                    class: 'novo-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    role: 'tablist',\n                },\n                animations: [novoStepperAnimations.verticalStepTransition],\n                providers: [{ provide: NovoStepper, useExisting: NovoVerticalStepper }],\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@-webkit-keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@keyframes rotate{0%{transform:rotateZ(0)}75%{transform:rotateZ(200deg)}100%{transform:rotateZ(180deg)}}@-webkit-keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@keyframes half-rotate{0%{transform:rotateZ(45deg)}75%{transform:rotateZ(100deg)}100%{transform:rotateZ(90deg)}}@-webkit-keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@keyframes rotateBack{0%{transform:rotateZ(90deg)}100%{transform:rotateZ(0)}}@-webkit-keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}@keyframes show{0%{opacity:0;transform:translateX(-100%)}75%{transform:translateX(0)}100%{opacity:1;transform:translateX(0)}}.novo-stepper-horizontal,.novo-stepper-vertical{display:block}.novo-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center;justify-content:center;margin-bottom:1em;background:#f4f4f4}.novo-stepper-horizontal-line{border-bottom:1px solid #d9dadc;flex:auto;min-width:0;height:80px}.novo-stepper-horizontal-line.complete{border-bottom:1px solid #4a89dc}.novo-horizontal-stepper-header{display:flex;height:80px;flex-flow:column;overflow:visible;align-items:center;justify-content:center;padding:0 24px}.novo-horizontal-stepper-header .novo-step-status{display:flex;width:100%;justify-content:center;align-items:center;position:absolute;height:1px;bottom:0}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line{width:100%;position:absolute}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:before{content:\\\"\\\";display:block;width:calc(50% - 8px);margin-right:8px;border-bottom:1px solid #d9dadc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:after{content:\\\"\\\";display:block;width:calc(50% - 8px);margin-left:calc(50% + 8px);margin-top:-1px;border-top:1px solid #d9dadc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:before,.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.edit:before{border-bottom:1px solid #4a89dc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:after{border-top:1px solid #4a89dc}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon{position:relative}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon:before{content:\\\"\\\";display:block;background:#fff;border-radius:50%;position:absolute;z-index:0;top:1px;left:1px;bottom:1px;right:1px}.novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon>*{position:relative;z-index:1}.novo-vertical-stepper-header{display:flex;align-items:center;padding:24px;max-height:24px}.novo-vertical-stepper-header .novo-step-icon,.novo-vertical-stepper-header .novo-step-icon-not-touched{margin-right:12px}[dir=rtl] .novo-vertical-stepper-header .novo-step-icon,[dir=rtl] .novo-vertical-stepper-header .novo-step-icon-not-touched{margin-right:0;margin-left:12px}.novo-horizontal-stepper-content{overflow:hidden}.novo-horizontal-stepper-content[aria-expanded=false]{height:0}.novo-horizontal-content-container{overflow:hidden;padding:0 24px 24px}.novo-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .novo-vertical-content-container{margin-left:0;margin-right:36px}.novo-stepper-vertical-line:before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;z-index:-1;border-left:1px solid #d9dadc}[dir=rtl] .novo-stepper-vertical-line:before{left:auto;right:0}.novo-stepper-vertical-line.done:after,.novo-stepper-vertical-line.done:before,.novo-stepper-vertical-line.edit:before{border-left-color:1px solid #4a89dc}.novo-stepper-vertical novo-step-status{position:absolute;left:35px;top:25px;transform:scale(.8)}.novo-vertical-stepper-content{overflow:hidden}.novo-vertical-content{padding:0 24px 24px}.novo-step:last-child .novo-vertical-content-container{border:none}\"]\n            }] }\n];\n/** @nocollapse */\nNovoVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nNovoVerticalStepper.propDecorators = {\n    selectedIndex: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoVerticalStepper.prototype.selectedIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/step-status.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoStepStatus {\n    /**\n     * @param {?} stepper\n     * @param {?} step\n     */\n    constructor(stepper, step) { }\n}\nNovoStepStatus.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-step-status',\n                template: \"<div class=\\\"novo-stepper-status-line\\\" [ngClass]=\\\"state\\\"></div>\\n<div [ngSwitch]=\\\"state\\\" class=\\\"novo-stepper-status-icon\\\">\\n  <novo-icon size=\\\"small\\\" color=\\\"positive\\\" *ngSwitchCase=\\\"'edit'\\\">check-circle</novo-icon>\\n  <novo-icon size=\\\"small\\\" color=\\\"positive\\\" *ngSwitchCase=\\\"'done'\\\">check-circle-filled</novo-icon>\\n  <novo-icon size=\\\"small\\\" color=\\\"positive\\\" *ngSwitchDefault>circle-o</novo-icon>\\n</div>\\n\",\n                // encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    class: 'novo-step-status',\n                }\n            }] }\n];\n/** @nocollapse */\nNovoStepStatus.ctorParameters = () => [\n    { type: NovoStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NovoStepper)),] }] },\n    { type: NovoStepHeader, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NovoStepHeader)),] }] }\n];\nNovoStepStatus.propDecorators = {\n    state: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoStepStatus.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/stepper/stepper.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoStepperModule {\n}\nNovoStepperModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, PortalModule, NovoButtonModule, CdkStepperModule, NovoIconModule, A11yModule],\n                exports: [NovoHorizontalStepper, NovoVerticalStepper, NovoStep, NovoStepLabel, NovoStepper, NovoStepHeader, NovoStepStatus],\n                declarations: [NovoHorizontalStepper, NovoVerticalStepper, NovoStep, NovoStepLabel, NovoStepper, NovoStepHeader, NovoStepStatus],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tabbed-group-picker/TabbedGroupPicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTabbedGroupPickerElement {\n    /**\n     * @param {?} labelService\n     * @param {?} ref\n     */\n    constructor(labelService, ref) {\n        this.labelService = labelService;\n        this.ref = ref;\n        this.selectionChange = new EventEmitter();\n        this.displayTabIndex = 0;\n        this.filterText = new BehaviorSubject('');\n        this.loading = true;\n        this.showClearAll = false;\n        // Initial height based on 13 px font rendered in chrome. Actual height retrieved onDropdownToggled.\n        this.scrollViewportHeight = 351;\n        this.virtualScrollItemSize = 39;\n        this.getSelectedState = (/**\n         * @param {?} childArray\n         * @return {?}\n         */\n        (childArray) => {\n            /** @type {?} */\n            const numberOfSelectedItems = childArray.filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ selected }) => selected)).length;\n            if (!numberOfSelectedItems) {\n                return undefined;\n            }\n            return numberOfSelectedItems === childArray.length ? 'selected' : 'indeterminate';\n        });\n        this.filter = (/**\n         * @param {?} searchTerm\n         * @return {?}\n         */\n        (searchTerm) => {\n            this.displayTabs.forEach((/**\n             * @param {?} displayTab\n             * @param {?} i\n             * @return {?}\n             */\n            (displayTab, i) => (displayTab.data = this.tabs[i].data.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item[displayTab.labelField].toLowerCase().includes(searchTerm.toLowerCase()))))));\n            this.ref.markForCheck();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get displayTab() {\n        return this.displayTabs[this.displayTabIndex];\n    }\n    /**\n     * @param {?} tab\n     * @return {?}\n     */\n    set displayTab(tab) {\n        this.displayTabIndex = this.tabs.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName)).indexOf(tab.typeName);\n    }\n    /**\n     * @return {?}\n     */\n    get minBufferPx() {\n        return this.scrollViewportHeight; // render at least 2x the number of items visible (viewport + min buffer)\n    }\n    /**\n     * @return {?}\n     */\n    get maxBufferPx() {\n        return 2 * this.scrollViewportHeight; // render at most 3x the number of items visible (viewport + max buffer)\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setupDisplayData();\n        this.createChildrenReferences();\n        this.initializeDescendantSelection();\n        this.updateParentsAndQuickSelect();\n        this.updateClearAll();\n        this.loading = false;\n        this.filterTextSubscription = this.filterText.pipe(debounceTime(300)).subscribe({\n            next: this.filter,\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.filterTextSubscription) {\n            this.filterTextSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} tab\n     * @return {?}\n     */\n    changeTab(tab) {\n        this.displayTab = tab;\n        if (this.scrollableInstance) {\n            this.scrollableInstance.scrollTo({ behavior: 'auto', top: 0 });\n        }\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    getPixelHeight(element) {\n        return Number(getComputedStyle(element, '').height.match(/(\\d+(\\.\\d+)?)px$/)[1]);\n    }\n    /**\n     * @return {?}\n     */\n    setupDisplayData() {\n        // shallow copy here so that reassigning displayTabs[i].data doesn't mutate tabs[i].data\n        // but both data values point to the same items\n        this.displayTabs = this.tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => (Object.assign({}, tab))));\n        this.displayTab = this.tabs[0];\n    }\n    // Replace each parent's child object with a reference to the child to avoid\n    // a child lookup for selected status; linking references allows M x N\n    // time complexity instead of M x N^2\n    /**\n     * @return {?}\n     */\n    createChildrenReferences() {\n        this.tabs.forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            // would rather filter but TypeScript still wants a type narrowing here\n            if ('childTypeName' in tab) {\n                /** @type {?} */\n                const childTab = this.tabs.find((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ({ typeName }) => typeName === tab.childTypeName));\n                /** @type {?} */\n                const compareFunction = this.makeCompareFunction(childTab.valueField);\n                /** @type {?} */\n                const warnFunction = this.makeWarningFunction(tab.typeName, childTab.typeName, childTab.valueField);\n                /** @type {?} */\n                const sortedChildren = childTab.data.slice().sort(compareFunction);\n                tab.data\n                    .filter((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ({ children }) => children && children.length))\n                    .forEach((/**\n                 * @param {?} parent\n                 * @return {?}\n                 */\n                (parent) => this.replaceChildrenWithReferences((/** @type {?} */ (parent)), sortedChildren, compareFunction, warnFunction)));\n            }\n        }));\n        if (this.quickSelectConfig) {\n            this.quickSelectConfig.items\n                .filter((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            (parent) => 'all' in parent))\n                .forEach((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            (parent) => {\n                parent.children = this.tabs.find((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ({ typeName }) => parent.childTypeName === typeName)).data;\n            }));\n            this.quickSelectConfig.items\n                .filter((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            (parent) => !('all' in parent)))\n                .forEach((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            (parent) => {\n                /** @type {?} */\n                const childTab = this.tabs.find((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ({ typeName }) => typeName === parent.childTypeName));\n                /** @type {?} */\n                const compareFunction = this.makeCompareFunction(childTab.valueField);\n                /** @type {?} */\n                const warnFunction = this.makeWarningFunction(parent.label, childTab.typeName, childTab.valueField);\n                /** @type {?} */\n                const sortedChildren = childTab.data.slice().sort(compareFunction);\n                this.replaceChildrenWithReferences((/** @type {?} */ (parent)), sortedChildren, compareFunction, warnFunction);\n            }));\n        }\n    }\n    /**\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    makeCompareFunction(key) {\n        return (/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const aValue = (a && a[key]) || a;\n            /** @type {?} */\n            const bValue = (b && b[key]) || b;\n            if (aValue < bValue) {\n                return -1;\n            }\n            else if (aValue > bValue) {\n                return 1;\n            }\n            else if (aValue === bValue) {\n                return 0;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    /**\n     * @param {?} parent\n     * @param {?} sortedData\n     * @param {?} compareFunction\n     * @param {?} warnFunction\n     * @return {?}\n     */\n    replaceChildrenWithReferences(parent, sortedData, compareFunction, warnFunction) {\n        parent.children = parent.children\n            .map((/**\n         * @param {?} child\n         * @return {?}\n         */\n        (child) => binarySearch(child, sortedData, compareFunction) || warnFunction(child)))\n            .filter(Boolean); // since map can return undefined, remove undefined elements\n    }\n    /**\n     * @param {?} parentLabel\n     * @param {?} childLabel\n     * @param {?} childValueField\n     * @return {?}\n     */\n    makeWarningFunction(parentLabel, childLabel, childValueField) {\n        return (/**\n         * @param {?} child\n         * @return {?}\n         */\n        (child) => {\n            /** @type {?} */\n            const childValue = child[childValueField] || child;\n            console.warn(`No ${childLabel} found with value ${childValue} for parent ${parentLabel}`);\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDropdownToggle(event) {\n        if (event) {\n            this.scrollViewportHeight = this.getPixelHeight(this.scrollableInstance.getElementRef().nativeElement);\n            this.virtualScrollItemSize = this.getPixelHeight(this.scrollableInstance.getElementRef().nativeElement.querySelector('novo-list-item'));\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    onItemToggled(item) {\n        if (Array.isArray(item.children)) {\n            this.updateDescendants(item.selected, item.children);\n        }\n        this.updateParentsAndQuickSelect();\n        this.updateClearAll(item.selected);\n        this.emitSelectedValues();\n        this.ref.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    initializeDescendantSelection() {\n        this.tabs.forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            if ('childTypeName' in tab && tab.data && tab.data.length) {\n                tab.data.forEach((/**\n                 * @param {?} parent\n                 * @return {?}\n                 */\n                (parent) => {\n                    if (parent.selected && parent.children && parent.children.length) {\n                        parent.children.forEach((/**\n                         * @param {?} child\n                         * @return {?}\n                         */\n                        (child) => {\n                            child.selected = true;\n                        }));\n                    }\n                }));\n            }\n        }));\n    }\n    /**\n     * @param {?} parentIsSelected\n     * @param {?} children\n     * @return {?}\n     */\n    updateDescendants(parentIsSelected, children) {\n        children.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            parentIsSelected ? (item.selected = true) : delete item.selected;\n            if (Array.isArray(item.children)) {\n                this.updateDescendants(item.selected, item.children);\n            }\n        }));\n    }\n    /**\n     * @param {?=} itemWasJustSelected\n     * @return {?}\n     */\n    updateClearAll(itemWasJustSelected) {\n        this.showClearAll = itemWasJustSelected\n            ? true\n            : this.tabs.some((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            (tab) => {\n                if (((/** @type {?} */ (tab))).childTypeName) {\n                    return tab.data.some((/**\n                     * @param {?} __0\n                     * @return {?}\n                     */\n                    ({ selected, indeterminate }) => selected || indeterminate));\n                }\n                else {\n                    return tab.data.some((/**\n                     * @param {?} __0\n                     * @return {?}\n                     */\n                    ({ selected }) => selected));\n                }\n            }));\n    }\n    /**\n     * @return {?}\n     */\n    updateParentsAndQuickSelect() {\n        // mutate here to avoid dereferencing the objects in displayTabs\n        this.tabs\n            .filter((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => 'childTypeName' in tab && !!tab.childTypeName))\n            .forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            /** @type {?} */\n            const parents = tab.data.filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ children }) => children && children.length));\n            parents.forEach((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            (parent) => {\n                ['indeterminate', 'selected'].forEach((/**\n                 * @param {?} selectedStateOption\n                 * @return {?}\n                 */\n                (selectedStateOption) => delete parent[selectedStateOption]));\n                /** @type {?} */\n                const selectedState = this.getSelectedState(parent.children);\n                if (selectedState) {\n                    parent[selectedState] = true;\n                }\n            }));\n        }));\n        if (this.quickSelectConfig) {\n            this.quickSelectConfig.items.forEach((/**\n             * @param {?} quickSelect\n             * @return {?}\n             */\n            (quickSelect) => {\n                delete quickSelect.selected;\n                /** @type {?} */\n                const selectedState = this.getSelectedState((/** @type {?} */ (quickSelect.children)));\n                if (selectedState) {\n                    quickSelect[selectedState] = true;\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    emitSelectedValues() {\n        /** @type {?} */\n        const selectedValues = this.tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => (Object.assign({}, tab, { data: tab.data.filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ selected }) => selected)) }))));\n        this.selectionChange.emit(selectedValues);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    deselectEverything(event) {\n        Helpers.swallowEvent(event);\n        this.showClearAll = false;\n        if (this.quickSelectConfig) {\n            this.quickSelectConfig.items.forEach((/**\n             * @param {?} quickSelect\n             * @return {?}\n             */\n            (quickSelect) => {\n                delete quickSelect.selected;\n            }));\n        }\n        this.tabs.forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            if (((/** @type {?} */ (tab))).childTypeName) {\n                tab.data.forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => {\n                    delete item.selected;\n                    delete item.indeterminate;\n                    item.children.forEach((/**\n                     * @param {?} child\n                     * @return {?}\n                     */\n                    (child) => delete child.selected));\n                }));\n            }\n            else {\n                ((/** @type {?} */ (tab))).data.forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => delete item.selected));\n            }\n        }));\n        this.emitSelectedValues();\n        this.ref.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClearFilter(event) {\n        Helpers.swallowEvent(event);\n        this.filterText.next('');\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onFilter(event) {\n        this.filterText.next(event.target.value);\n    }\n}\nNovoTabbedGroupPickerElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-tabbed-group-picker',\n                template: \"<novo-dropdown (toggled)=\\\"onDropdownToggle($event)\\\">\\n  <button\\n    class=\\\"tabbed-group-picker-button\\\"\\n    [theme]=\\\"buttonConfig.theme\\\"\\n    [side]=\\\"buttonConfig.side\\\"\\n    [icon]=\\\"buttonConfig.icon\\\"\\n    [loading]=\\\"loading\\\"\\n  >\\n    <div class=\\\"tabbed-group-picker-button-label\\\">{{ buttonConfig.label }}</div>\\n  </button>\\n  <div class=\\\"tabbed-group-picker-search\\\" data-automation-id=\\\"tabbed-group-picker-search\\\">\\n    <input type=\\\"text\\\" [placeholder]=\\\"labelService.search\\\" [value]=\\\"filterText | async\\\" (input)=\\\"onFilter($event)\\\" />\\n    <i class=\\\"bhi-search\\\" *ngIf=\\\"!(filterText | async)\\\"></i>\\n    <i class=\\\"bhi-times\\\" *ngIf=\\\"(filterText | async)\\\" (click)=\\\"onClearFilter($event)\\\"></i>\\n  </div>\\n  <div class=\\\"tabbed-group-picker-column-container\\\">\\n    <div class=\\\"tabbed-group-picker-column left\\\">\\n      <novo-nav theme=\\\"white\\\" direction=\\\"vertical\\\">\\n        <novo-tab *ngFor=\\\"let tab of displayTabs\\\" [attr.data-automation-id]=\\\"tab.typeName\\\" (activeChange)=\\\"changeTab(tab)\\\">\\n          <span>{{ tab.typeLabel }} ({{ tab.data.length }})</span><i class=\\\"bhi-next\\\"></i>\\n        </novo-tab>\\n      </novo-nav>\\n      <button *ngIf=\\\"showClearAll\\\" class=\\\"clear-all-button\\\" theme=\\\"dialogue\\\" icon=\\\"times\\\" side=\\\"right\\\" color=\\\"grapefruit\\\" (click)=\\\"deselectEverything($event)\\\">{{ labelService.clear }}</button>\\n    </div>\\n    <div class=\\\"tabbed-group-picker-column right\\\">\\n      <div class=\\\"quick-select\\\" *ngIf=\\\"quickSelectConfig && !(filterText | async)\\\">\\n        <div class=\\\"quick-select-label\\\">{{ quickSelectConfig.label }}</div>\\n        <novo-list class=\\\"quick-select-list\\\" direction=\\\"vertical\\\">\\n          <novo-list-item\\n            class=\\\"quick-select-item\\\"\\n            *ngFor=\\\"let quickSelect of quickSelectConfig.items\\\"\\n            [attr.data-automation-id]=\\\"quickSelect.label\\\"\\n            (click)=\\\"quickSelect.selected = !quickSelect.selected; onItemToggled(quickSelect)\\\"\\n          >\\n            <item-content>\\n              <novo-checkbox\\n                [label]=\\\"quickSelect.label\\\"\\n                [name]=\\\"'selected'\\\"\\n                [(ngModel)]=\\\"quickSelect.selected\\\"\\n                (ngModelChange)=\\\"onItemToggled(quickSelect)\\\"\\n              ></novo-checkbox>\\n            </item-content>\\n          </novo-list-item>\\n        </novo-list>\\n      </div>\\n      <novo-list *ngIf=\\\"displayTab.data.length\\\" direction=\\\"vertical\\\">\\n        <cdk-virtual-scroll-viewport\\n          [itemSize]=\\\"virtualScrollItemSize\\\"\\n          [maxBufferPx]=\\\"maxBufferPx\\\"\\n          [minBufferPx]=\\\"minBufferPx\\\"\\n          #tabbedGroupPickerVirtualScrollViewport\\n        >\\n          <novo-list-item\\n            *cdkVirtualFor=\\\"let item of displayTab.data\\\"\\n            [attr.data-automation-id]=\\\"item[displayTab.labelField]\\\"\\n            (click)=\\\"item.selected = !item.selected; onItemToggled(item)\\\"\\n          >\\n            <item-content>\\n              <novo-checkbox\\n                [label]=\\\"item[displayTab.labelField]\\\"\\n                [name]=\\\"'selected'\\\"\\n                [indeterminate]=\\\"item.indeterminate\\\"\\n                [(ngModel)]=\\\"item.selected\\\"\\n                (ngModelChange)=\\\"onItemToggled(item)\\\"\\n              >\\n              </novo-checkbox>\\n            </item-content>\\n          </novo-list-item>\\n        </cdk-virtual-scroll-viewport>\\n      </novo-list>\\n      <div class=\\\"tabbed-group-picker-empty-item\\\" *ngIf=\\\"!displayTab.data.length && (filterText | async)\\\">\\n        <i class=\\\"{{ displayTab.icon || 'bhi-search' }}\\\"></i>\\n        <div class=\\\"empty-item-main-message\\\">{{ labelService.tabbedGroupPickerEmpty }}</div>\\n        <div class=\\\"empty-item-sub-message\\\">{{ labelService.tabbedGroupClearSuggestion(displayTab.typeLabel) }}</div>\\n      </div>\\n    </div>\\n  </div>\\n</novo-dropdown>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNovoTabbedGroupPickerElement.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: ChangeDetectorRef }\n];\nNovoTabbedGroupPickerElement.propDecorators = {\n    scrollableInstance: [{ type: ViewChild, args: ['tabbedGroupPickerVirtualScrollViewport', { static: false },] }],\n    buttonConfig: [{ type: Input }],\n    tabs: [{ type: Input }],\n    quickSelectConfig: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTabbedGroupPickerElement.prototype.scrollableInstance;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.buttonConfig;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.tabs;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.quickSelectConfig;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.selectionChange;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.displayTabs;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.displayTabIndex;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.filterText;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.filterTextSubscription;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.loading;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.showClearAll;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.scrollViewportHeight;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.virtualScrollItemSize;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.getSelectedState;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.filter;\n    /** @type {?} */\n    NovoTabbedGroupPickerElement.prototype.labelService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTabbedGroupPickerElement.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/tabbed-group-picker/TabbedGroupPicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTabbedGroupPickerModule {\n}\nNovoTabbedGroupPickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ScrollingModule,\n                    NovoTabModule,\n                    NovoListModule,\n                    NovoFormExtrasModule,\n                    NovoButtonModule,\n                    NovoDropdownModule,\n                ],\n                providers: [NovoLabelService],\n                declarations: [NovoTabbedGroupPickerElement],\n                exports: [NovoTabbedGroupPickerElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/base-renderer/BaseRenderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BaseRenderer {\n    constructor() {\n        this.data = {};\n        this.value = '';\n        this.meta = {};\n    }\n}\nif (false) {\n    /** @type {?} */\n    BaseRenderer.prototype.data;\n    /** @type {?} */\n    BaseRenderer.prototype.value;\n    /** @type {?} */\n    BaseRenderer.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/date-cell/DateCell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DateCell extends BaseRenderer {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        super();\n        this.labels = labels;\n    }\n    /**\n     * @return {?}\n     */\n    getFormattedDate() {\n        return this.labels.formatDate(this.value);\n    }\n}\nDateCell.decorators = [\n    { type: Component, args: [{\n                selector: 'date-cell',\n                template: `\n        <div class=\"date-cell\">\n            <label>{{ getFormattedDate() }}</label>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nDateCell.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nDateCell.propDecorators = {\n    value: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    DateCell.prototype.value;\n    /** @type {?} */\n    DateCell.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/dropdown-cell/DropdownCell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction INovoDropdownCellConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    INovoDropdownCellConfig.prototype.category;\n    /** @type {?|undefined} */\n    INovoDropdownCellConfig.prototype.callback;\n    /** @type {?} */\n    INovoDropdownCellConfig.prototype.options;\n}\nclass NovoDropdownCell extends BaseRenderer {\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Check for and fix bad config\n        if (!this.meta.dropdownCellConfig) {\n            throw new Error('Missing \"dropdownCellConfig\" on the column setup');\n        }\n    }\n    /**\n     * @param {?} config\n     * @param {?} option\n     * @param {?} value\n     * @return {?}\n     */\n    onClick(config, option, value) {\n        /** @type {?} */\n        const callback = option.callback || config.callback;\n        callback(this.data, value || option);\n    }\n}\nNovoDropdownCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-dropdown-cell',\n                template: `\n    <novo-dropdown parentScrollSelector=\".table-container\" containerClass=\"novo-table-dropdown-cell\">\n      <button type=\"button\" theme=\"secondary\" icon=\"collapse\" inverse>\n        <span data-automation-id=\"novo-dropdown-cell-value\">{{ value }}</span>\n      </button>\n      <list>\n        <ng-container *ngFor=\"let config of meta.dropdownCellConfig; let i = index\">\n          <dropdown-item-header *ngIf=\"config.category\">{{ config.category }}</dropdown-item-header>\n          <item *ngFor=\"let option of config.options\" (action)=\"onClick(config, option, option.value)\"\n                [class.active]=\"(option || option.value) === value\">\n            <span [attr.data-automation-id]=\"option.label || option\">{{ option.label || option }}</span>\n            <i *ngIf=\"(option || option.value) === value\" class=\"bhi-check\"></i>\n          </item>\n          <hr *ngIf=\"i < meta.dropdownCellConfig.length - 1\"/>\n        </ng-container>\n      </list>\n    </novo-dropdown>\n  `\n            }] }\n];\nNovoDropdownCell.propDecorators = {\n    meta: [{ type: Input }],\n    value: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoDropdownCell.prototype.meta;\n    /** @type {?} */\n    NovoDropdownCell.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/keep-filter-focus/KeepFilterFocus.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableKeepFilterFocus {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.element.nativeElement.focus();\n    }\n}\nNovoTableKeepFilterFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[keepFilterFocused]',\n            },] }\n];\n/** @nocollapse */\nNovoTableKeepFilterFocus.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTableKeepFilterFocus.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/pagination/Pagination.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Page() { }\nif (false) {\n    /** @type {?} */\n    Page.prototype.num;\n    /** @type {?} */\n    Page.prototype.text;\n    /** @type {?} */\n    Page.prototype.active;\n}\nclass Pagination {\n    /**\n     * @param {?} labels\n     */\n    constructor(labels) {\n        this.labels = labels;\n        this.itemsPerPage = 10;\n        this.pageChange = new EventEmitter();\n        this.itemsPerPageChange = new EventEmitter();\n        this.onPageChange = new EventEmitter();\n        this.maxPagesDisplayed = 5;\n    }\n    /**\n     * @return {?}\n     */\n    get disablePageSelection() {\n        return this.pageSelectDisabled;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set disablePageSelection(val) {\n        this.pageSelectDisabled = coerceBooleanProperty(val);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.label = this.label || this.labels.itemsPerPage;\n        this.rowOptions = this.rowOptions || this.getDefaultRowOptions();\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.page = this.page || 1;\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @return {?}\n     */\n    getDefaultRowOptions() {\n        return [{ value: 10, label: '10' }, { value: 25, label: '25' }, { value: 50, label: '50' }, { value: 100, label: '100' }];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPageSizeChanged(event) {\n        this.page = 1;\n        this.itemsPerPage = event.selected;\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.pageChange.emit(this.page);\n        this.itemsPerPageChange.emit(this.itemsPerPage);\n        this.onPageChange.emit({\n            page: this.page,\n            itemsPerPage: this.itemsPerPage,\n        });\n    }\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        this.page = page;\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.pageChange.emit(this.page);\n        this.onPageChange.emit({\n            page: this.page,\n            itemsPerPage: this.itemsPerPage,\n        });\n    }\n    /**\n     * @return {?}\n     */\n    noPrevious() {\n        return this.page === 1;\n    }\n    /**\n     * @return {?}\n     */\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    // Create page object used in template\n    /**\n     * @param {?} num\n     * @param {?} text\n     * @param {?} isActive\n     * @return {?}\n     */\n    makePage(num, text, isActive) {\n        return (/** @type {?} */ ({ num, text, active: isActive, }));\n    }\n    /**\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = this.maxPagesDisplayed < totalPages;\n        // recompute if maxPagesDisplayed\n        if (isMaxSized) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(this.maxPagesDisplayed / 2), 1);\n            endPage = startPage + this.maxPagesDisplayed - 1;\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n                endPage = totalPages;\n                startPage = endPage - this.maxPagesDisplayed + 1;\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        return pages;\n    }\n    /**\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPagination.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-pagination',\n                template: `\n        <h5 class=\"rows\">{{label}}</h5>\n        <novo-select [options]=\"rowOptions\" [placeholder]=\"labels.select\" [(ngModel)]=\"itemsPerPage\" (onSelect)=\"onPageSizeChanged($event)\" data-automation-id=\"pager-select\"></novo-select>\n        <span class=\"spacer\"></span>\n        <ul class=\"pager\" data-automation-id=\"pager\">\n            <li class=\"page\" (click)=\"selectPage(page-1)\" [ngClass]=\"{'disabled': noPrevious()}\"><i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i></li>\n            <li class=\"page\" [ngClass]=\"{active: p.active}\" [class.disabled]=\"disablePageSelection\" *ngFor=\"let p of pages\" (click)=\"selectPage(p.num, $event)\">{{p.text}}</li>\n            <li class=\"page\" (click)=\"selectPage(page+1)\" [ngClass]=\"{'disabled': noNext()}\"><i class=\"bhi-next\" data-automation-id=\"pager-next\"></i></li>\n        </ul>\n  `\n            }] }\n];\n/** @nocollapse */\nPagination.ctorParameters = () => [\n    { type: NovoLabelService }\n];\nPagination.propDecorators = {\n    page: [{ type: Input }],\n    totalItems: [{ type: Input }],\n    itemsPerPage: [{ type: Input }],\n    rowOptions: [{ type: Input }],\n    label: [{ type: Input }],\n    disablePageSelection: [{ type: Input }],\n    pageChange: [{ type: Output }],\n    itemsPerPageChange: [{ type: Output }],\n    onPageChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    Pagination.prototype.page;\n    /** @type {?} */\n    Pagination.prototype.totalItems;\n    /** @type {?} */\n    Pagination.prototype.itemsPerPage;\n    /** @type {?} */\n    Pagination.prototype.rowOptions;\n    /** @type {?} */\n    Pagination.prototype.label;\n    /** @type {?} */\n    Pagination.prototype.pageChange;\n    /** @type {?} */\n    Pagination.prototype.itemsPerPageChange;\n    /** @type {?} */\n    Pagination.prototype.onPageChange;\n    /** @type {?} */\n    Pagination.prototype.pageSelectDisabled;\n    /** @type {?} */\n    Pagination.prototype.maxPagesDisplayed;\n    /** @type {?} */\n    Pagination.prototype.totalPages;\n    /** @type {?} */\n    Pagination.prototype.pages;\n    /** @type {?} */\n    Pagination.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/percentage-cell/PercentageCell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PercentageCell extends BaseRenderer {\n}\nPercentageCell.decorators = [\n    { type: Component, args: [{\n                selector: 'percentage-cell',\n                template: `\n        <div class=\"percentage\" *ngIf=\"value || value === 0\">{{ value | percent:'1.0-2' }}</div>\n    `\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/row-details/RowDetails.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass RowDetails {\n    /**\n     * @param {?} element\n     * @param {?} componentUtils\n     */\n    constructor(element, componentUtils) {\n        this.element = element;\n        this.componentUtils = componentUtils;\n        this.value = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.renderer) {\n            if (this.renderer.prototype instanceof BaseRenderer) {\n                /** @type {?} */\n                const componentRef = this.componentUtils.append(this.renderer, this.container);\n                componentRef.instance['data'] = this.data;\n            }\n            else {\n                this.value = this.renderer(this.data);\n            }\n        }\n        else {\n            // this.value = this.row[this.column.name];\n        }\n    }\n}\nRowDetails.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-row-details',\n                template: `\n    <span #container></span> <span>{{ value }}</span>\n  `\n            }] }\n];\n/** @nocollapse */\nRowDetails.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ComponentUtils }\n];\nRowDetails.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef, static: true },] }],\n    data: [{ type: Input }],\n    renderer: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    RowDetails.prototype.container;\n    /** @type {?} */\n    RowDetails.prototype.data;\n    /** @type {?} */\n    RowDetails.prototype.renderer;\n    /** @type {?} */\n    RowDetails.prototype.value;\n    /**\n     * @type {?}\n     * @private\n     */\n    RowDetails.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    RowDetails.prototype.componentUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/table-actions/TableActions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableActionsElement {\n}\nNovoTableActionsElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-table-actions',\n                template: '<ng-content></ng-content>'\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/table-cell/TableCell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TableCell {\n    /**\n     * @param {?} element\n     * @param {?} componentUtils\n     */\n    constructor(element, componentUtils) {\n        this.element = element;\n        this.componentUtils = componentUtils;\n        this.value = '';\n        this.element = element;\n        this.componentUtils = componentUtils;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.column._type = this.column.type || 'text';\n        if (this.column.renderer) {\n            if (this.column.renderer.prototype instanceof BaseRenderer) {\n                this.column._type = 'custom';\n                /** @type {?} */\n                const componentRef = (/** @type {?} */ (this.componentUtils.append(this.column.renderer, this.container)));\n                componentRef.instance.meta = this.column;\n                componentRef.instance.data = this.row;\n                componentRef.instance.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n                // TODO - save ref to this and update in the valueChanges below!!\n            }\n            else {\n                // TODO - wtf to do here?\n                this.value = this.column.renderer(this.row);\n            }\n        }\n        else {\n            this.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n        }\n        if (this.form && this.hasEditor) {\n            this.valueChangeSubscription = this.form.valueChanges\n                .pipe(debounceTime(300), distinctUntilChanged())\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => {\n                this.value = value[this.column.name];\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (this.column.onClick) {\n            this.column.onClick(this.row);\n        }\n    }\n}\nTableCell.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-table-cell',\n                template: `\n    <div [ngSwitch]=\"column._type\">\n      <span #container></span>\n      <date-cell *ngSwitchCase=\"'date'\" [value]=\"value\"></date-cell>\n      <a *ngSwitchCase=\"'link'\" (click)=\"onClick($event)\">{{ value }}</a> <span *ngSwitchDefault>{{ value }}</span>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nTableCell.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ComponentUtils }\n];\nTableCell.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef, static: true },] }],\n    column: [{ type: Input }],\n    row: [{ type: Input }],\n    form: [{ type: Input }],\n    hasEditor: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    TableCell.prototype.container;\n    /** @type {?} */\n    TableCell.prototype.column;\n    /** @type {?} */\n    TableCell.prototype.row;\n    /** @type {?} */\n    TableCell.prototype.form;\n    /** @type {?} */\n    TableCell.prototype.hasEditor;\n    /** @type {?} */\n    TableCell.prototype.value;\n    /**\n     * @type {?}\n     * @private\n     */\n    TableCell.prototype.valueChangeSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    TableCell.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    TableCell.prototype.componentUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/table-filter/TableFilter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TableFilter {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this.element = element;\n        this.renderer = renderer;\n        this.onFilterChange = new EventEmitter();\n        this.element = element;\n        this.renderer = renderer;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ngOnChanges();\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        let label = '';\n        if (this.config.freetextFilter) {\n            label = this.config.freetextFilter;\n        }\n        else if (this.config.filter) {\n            label = this.config.filter;\n        }\n        this.renderer.setProperty(this.element, 'value', label);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChangeFilter(event) {\n        clearTimeout(this.filterThrottle);\n        if (KeyCodes.ENTER === event.keyCode) {\n            this.config.filter = ((/** @type {?} */ (event.target))).value;\n            this.onFilterChange.emit({ filtering: this.config });\n        }\n        else {\n            this.filterThrottle = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.config.filter = ((/** @type {?} */ (event.target))).value;\n                this.onFilterChange.emit({ filtering: this.config });\n            }), 300);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        Helpers.swallowEvent(event);\n    }\n}\nTableFilter.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoTableFilter]',\n            },] }\n];\n/** @nocollapse */\nTableFilter.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nTableFilter.propDecorators = {\n    config: [{ type: Input, args: ['novoTableFilter',] }],\n    onFilterChange: [{ type: Output }],\n    onChangeFilter: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    TableFilter.prototype.config;\n    /** @type {?} */\n    TableFilter.prototype.onFilterChange;\n    /** @type {?} */\n    TableFilter.prototype.filterThrottle;\n    /**\n     * @type {?}\n     * @private\n     */\n    TableFilter.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    TableFilter.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/table-footer/TableFooter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableFooterElement {\n}\nNovoTableFooterElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-table-footer',\n                template: '<ng-content></ng-content>'\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/table-header/TableHeader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableHeaderElement {\n}\nNovoTableHeaderElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-table-header',\n                template: '<ng-content></ng-content>'\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/th-orderable/ThOrderable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ThOrderable {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.element = element;\n        this.onOrderChange = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    get index() {\n        /** @type {?} */\n        let index = null;\n        if (this.element.nativeElement && this.element.nativeElement.parentNode) {\n            /** @type {?} */\n            const children = Array.prototype.slice.call(this.element.nativeElement.parentNode.children);\n            index = children.indexOf(this.element.nativeElement);\n        }\n        return index;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.column.ordering) {\n            this.element.nativeElement.setAttribute('draggable', true);\n            this.table = this.findTable(this.element.nativeElement);\n        }\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragStart(event) {\n        if (this.column.ordering) {\n            this.element.nativeElement.classList.add('dragging');\n            event.dataTransfer.effectAllowed = 'move';\n            event.dataTransfer.setData('text/plain', JSON.stringify(this.column));\n            this.clone = this.table.cloneNode(true);\n            this.clone.style.position = 'absolute';\n            this.clone.style.left = '100%';\n            this.clone.style.width = '150px';\n            this.deleteColumns(this.clone);\n            document.body.appendChild(this.clone);\n            event.dataTransfer.setDragImage(this.clone, 75, 30);\n        }\n    }\n    /**\n     * @param {?} table\n     * @return {?}\n     */\n    deleteColumns(table) {\n        // TODO: `table` should be immutable and this method should return the modified data to its caller\n        if (table.rows.length > 0) {\n            /** @type {?} */\n            const allRows = table.rows;\n            for (let i = 0; i < allRows.length; i++) {\n                if (i > 10) {\n                    table.deleteRow(-1);\n                }\n                else {\n                    /** @type {?} */\n                    const cellLength = allRows[i].cells.length;\n                    for (let c = 0; c < cellLength; c++) {\n                        if (c < this.index) {\n                            allRows[i].deleteCell(0);\n                        }\n                        else if (c > this.index) {\n                            allRows[i].deleteCell(-1);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    findTable(start) {\n        /** @type {?} */\n        let htmlElementNode = start;\n        while (htmlElementNode) {\n            htmlElementNode = htmlElementNode.parentNode;\n            if (htmlElementNode && htmlElementNode.tagName.toLowerCase() === 'table') {\n                return htmlElementNode;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDrag(event) {\n        Helpers.swallowEvent(event);\n        return false;\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragEnd(event) {\n        Helpers.swallowEvent(event);\n        this.element.nativeElement.classList.remove('over');\n        this.element.nativeElement.classList.remove('dragging');\n        document.body.removeChild(this.clone);\n        return false;\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDrop(event) {\n        Helpers.swallowEvent(event);\n        this.element.nativeElement.classList.remove('over');\n        /** @type {?} */\n        const data = JSON.parse(event.dataTransfer.getData('text/plain'));\n        this.onOrderChange.emit({\n            first: data,\n            second: this.column,\n        });\n        return false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        Helpers.swallowEvent(event);\n        event.dataTransfer.dropEffect = 'move';\n        return false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnter(event) {\n        this.element.nativeElement.classList.add('over');\n        this.target = event.target;\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        this.element.nativeElement.classList.remove('over');\n    }\n}\nThOrderable.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoThOrderable]',\n                host: {\n                    '(dragstart)': 'onDragStart($event)',\n                    '(dragover)': 'onDragOver($event)',\n                    '(dragenter)': 'onDragEnter($event)',\n                    '(dragleave)': 'onDragLeave($event)',\n                    '(dragend)': 'onDragEnd($event)',\n                    '(drop)': 'onDrop($event)',\n                },\n            },] }\n];\n/** @nocollapse */\nThOrderable.ctorParameters = () => [\n    { type: ElementRef }\n];\nThOrderable.propDecorators = {\n    column: [{ type: Input, args: ['novoThOrderable',] }],\n    onOrderChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    ThOrderable.prototype.column;\n    /** @type {?} */\n    ThOrderable.prototype.onOrderChange;\n    /** @type {?} */\n    ThOrderable.prototype.table;\n    /** @type {?} */\n    ThOrderable.prototype.clone;\n    /** @type {?} */\n    ThOrderable.prototype.target;\n    /**\n     * @type {?}\n     * @private\n     */\n    ThOrderable.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/th-sortable/ThSortable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ThSortable {\n    constructor() {\n        this.onSortChange = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onToggleSort(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.config && this.column && this.config.sorting !== false && this.column.sorting !== false) {\n            switch (this.column.sort) {\n                case 'asc':\n                    this.column.sort = 'desc';\n                    break;\n                default:\n                    this.column.sort = 'asc';\n                    break;\n            }\n            this.onSortChange.emit(this.column);\n        }\n    }\n}\nThSortable.decorators = [\n    { type: Directive, args: [{\n                selector: '[novoThSortable]',\n                host: {\n                    '(click)': 'onToggleSort($event)',\n                },\n            },] }\n];\nThSortable.propDecorators = {\n    config: [{ type: Input, args: ['novoThSortable',] }],\n    column: [{ type: Input }],\n    onSortChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    ThSortable.prototype.config;\n    /** @type {?} */\n    ThSortable.prototype.column;\n    /** @type {?} */\n    ThSortable.prototype.onSortChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/extras/TableExtras.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableExtrasModule {\n}\nNovoTableExtrasModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, NovoSelectModule, NovoDropdownModule, NovoButtonModule],\n                declarations: [\n                    NovoTableHeaderElement,\n                    NovoTableFooterElement,\n                    NovoTableActionsElement,\n                    NovoTableKeepFilterFocus,\n                    Pagination,\n                    RowDetails,\n                    TableCell,\n                    TableFilter,\n                    ThOrderable,\n                    ThSortable,\n                    DateCell,\n                    PercentageCell,\n                    NovoDropdownCell,\n                ],\n                exports: [\n                    NovoTableHeaderElement,\n                    NovoTableFooterElement,\n                    NovoTableActionsElement,\n                    NovoTableKeepFilterFocus,\n                    Pagination,\n                    RowDetails,\n                    TableCell,\n                    TableFilter,\n                    ThOrderable,\n                    ThSortable,\n                    DateCell,\n                    PercentageCell,\n                    NovoDropdownCell,\n                ],\n                entryComponents: [DateCell, PercentageCell, NovoDropdownCell],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/data-provider/CollectionEvent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CollectionEvent {\n    /**\n     * @param {?=} type\n     * @param {?=} data\n     */\n    constructor(type = 'Collection.REFRESH', data = []) {\n        this.type = '';\n        this.data = [];\n        this.type = type;\n        this.data = data;\n    }\n}\nCollectionEvent.REFRESH = 'Collection.REFRESH';\nCollectionEvent.ADD = 'Collection.ADD';\nCollectionEvent.REMOVE = 'Collection.REMOVE';\nCollectionEvent.REMOVE_ALL = 'Collection.REMOVE_ALL';\nCollectionEvent.REPLACE = 'Collection.REPLACE';\nCollectionEvent.INVALIDATE_ALL = 'Collection.INVALIDATE_ALL';\nCollectionEvent.SORT = 'Collection.SORT';\nCollectionEvent.FILTER = 'Collection.FILTER';\nCollectionEvent.CHANGE = 'Collection.CHANGE';\nCollectionEvent.CURRENTPAGE_CHANGE = 'Collection.CURRENTPAGE_CHANGE';\nCollectionEvent.PAGESIZE_CHANGE = 'Collection.PAGESIZE_CHANGE';\nCollectionEvent.NUMBEROFPAGES_CHANGE = 'Collection.NUMBEROFPAGES_CHANGE';\nif (false) {\n    /** @type {?} */\n    CollectionEvent.REFRESH;\n    /** @type {?} */\n    CollectionEvent.ADD;\n    /** @type {?} */\n    CollectionEvent.REMOVE;\n    /** @type {?} */\n    CollectionEvent.REMOVE_ALL;\n    /** @type {?} */\n    CollectionEvent.REPLACE;\n    /** @type {?} */\n    CollectionEvent.INVALIDATE_ALL;\n    /** @type {?} */\n    CollectionEvent.SORT;\n    /** @type {?} */\n    CollectionEvent.FILTER;\n    /** @type {?} */\n    CollectionEvent.CHANGE;\n    /** @type {?} */\n    CollectionEvent.CURRENTPAGE_CHANGE;\n    /** @type {?} */\n    CollectionEvent.PAGESIZE_CHANGE;\n    /** @type {?} */\n    CollectionEvent.NUMBEROFPAGES_CHANGE;\n    /** @type {?} */\n    CollectionEvent.prototype.type;\n    /** @type {?} */\n    CollectionEvent.prototype.data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/data-provider/ArrayCollection.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base Class for all Collection based data providers\n *\n * \\@example\n *  var dp:DataProvider = new DataProvider();\n *  dp.addItem({label:\"Item 1\"});\n *  dp.addItem({label:\"Item 2\"});\n *  dp.addItem({label:\"Item 3\"});\n *  dp.addItem({label:\"Item 4\"});\n *  var myList:List = new List();\n *  myList.dataProvider = dp;\n * @template T\n */\nclass ArrayCollection {\n    /**\n     * @param {?=} source\n     */\n    constructor(source = []) {\n        this.dataChange = new EventEmitter();\n        this.source = [];\n        this.editData = [];\n        this.isEditing = false;\n        this.filterData = [];\n        this._filter = {};\n        this._sort = [];\n        this.source = source;\n        this.editData = this.copy(this.source);\n        this.filterData = this.source.slice();\n    }\n    /**\n     * @return {?}\n     */\n    get length() {\n        return this.filterData.length;\n    }\n    /**\n     * @return {?}\n     */\n    get total() {\n        return this.filterData.length;\n    }\n    /**\n     * @return {?}\n     */\n    get list() {\n        return this.filterData;\n    }\n    /**\n     * @return {?}\n     */\n    isEmpty() {\n        return this.length <= 0 && !this.isLoading() && !this.hasErrors();\n    }\n    /**\n     * @return {?}\n     */\n    hasErrors() {\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    isLoading() {\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    isFiltered() {\n        return Object.keys(this._filter).length > 0;\n    }\n    /**\n     * Method to switch the isEditingflag for the data source\n     * @return {?}\n     */\n    edit() {\n        this.isEditing = true;\n        this.editData = this.copy(this.source);\n    }\n    /**\n     * Method to leave edit mode and reset source\n     * @return {?}\n     */\n    undo() {\n        this.isEditing = false;\n        this.source = this.copy(this.editData);\n        this.refresh();\n    }\n    /**\n     * Method to leave edit mode and save editData\n     * @return {?}\n     */\n    commit() {\n        this.isEditing = false;\n        this.source = this.filterData.slice();\n        this.refresh();\n    }\n    /**\n     * Appends an item to the end of the data provider.\n     *\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this.isEditing ? this.editData.push(item) : this.source.push(item);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n        this.refresh();\n    }\n    /**\n     * Adds a new item to the data provider at the specified index.\n     *\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} item\n     * @param {?} index\n     * @return {?}\n     */\n    addItemAt(item, index) {\n        this.isEditing ? this.editData.splice(index, 0, item) : this.source.splice(index, 0, item);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n        this.refresh();\n    }\n    /**\n     *  Appends multiple items to the end of the DataProvider and dispatches a CollectionEvent.ADD event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} items\n     * @return {?}\n     */\n    addItems(items) {\n        this.isEditing ? this.editData.push(...items) : this.source.push(...items);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, items));\n        this.refresh();\n    }\n    /**\n     * Adds several items to the data provider at the specified index and dispatches a CollectionEvent.ADD event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} items\n     * @param {?} index\n     * @return {?}\n     */\n    addItemsAt(items, index) {\n        this.isEditing ? this.editData.splice(index, 0, ...items) : this.source.splice(index, 0, ...items);\n    }\n    /**\n     * Creates a copy of the current ArrayCollection any.\n     *\n     * \\@memberOf ArrayCollection\n     * @return {?}\n     */\n    clone() {\n        return new ArrayCollection(this.isEditing ? this.copy(this.editData) : this.copy(this.source));\n    }\n    /**\n     * Creates a copy of the current ArrayCollection any.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} array\n     * @return {?}\n     */\n    copy(array) {\n        return Helpers.deepClone(array);\n    }\n    /**\n     * Concatenates the specified items to the end of the current data provider.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} items\n     * @return {?}\n     */\n    concat(items) {\n        this.addItems(items);\n    }\n    /**\n     * Returns the item at the specified index.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} index\n     * @return {?}\n     */\n    getItemAt(index) {\n        return this.isEditing ? this.editData[index] : this.source[index];\n    }\n    /**\n     *  Returns the index of the specified item.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} item\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this.isEditing ? this.editData.indexOf(item) : this.source.indexOf(item);\n    }\n    /**\n     * Invalidates all the data items that the DataProvider contains and dispatches a CollectionEvent.INVALIDATE_ALL event.\n     *\n     * \\@memberOf ArrayCollection\n     * @return {?}\n     */\n    invalidate() {\n        this.onDataChange(new CollectionEvent(CollectionEvent.INVALIDATE_ALL));\n    }\n    /**\n       * Invalidates the specified item.\n       *\n       * @memberOf ArrayCollection\n       */\n    // invalidateItem(item:any):void {}\n    /**\n       * Invalidates the item at the specified index.\n       *\n       * @memberOf ArrayCollection\n       */\n    // invalidateItemAt(index:number):void {}\n    /**\n     * Appends the specified data into the data that the data provider contains and removes any duplicate items.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} newData\n     * @return {?}\n     */\n    merge(newData) {\n        for (const obj of newData) {\n            /** @type {?} */\n            const existing = ~this.getItemIndex(obj);\n            if (existing) {\n                this.replaceItem(obj, existing);\n            }\n            else {\n                this.addItem(obj);\n            }\n        }\n    }\n    /**\n     * Removes all items from the data provider and dispatches a CollectionEvent.REMOVE_ALL event.\n     *\n     * \\@memberOf ArrayCollection\n     * @return {?}\n     */\n    removeAll() {\n        this.source = [];\n        this.editData = [];\n        this.filterData = [];\n        this.onDataChange(new CollectionEvent(CollectionEvent.REMOVE_ALL, []));\n        this.refresh();\n    }\n    /**\n     * Removes the specified item from the data provider and dispatches a CollectionEvent.REMOVE event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        /** @type {?} */\n        const index = this.getItemIndex(item);\n        return this.removeItemAt(index);\n    }\n    /**\n     * Removes the item at the specified index and dispatches a CollectionEvent.REMOVE event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} index\n     * @return {?}\n     */\n    removeItemAt(index) {\n        /** @type {?} */\n        const success = !!this.source.splice(index, 1);\n        this.refresh();\n        return success;\n    }\n    /**\n     * Replaces an existing item with a new item and dispatches a CollectionEvent.REPLACE event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} newItem\n     * @param {?} oldItem\n     * @return {?}\n     */\n    replaceItem(newItem, oldItem) {\n        /** @type {?} */\n        const index = this.getItemIndex(oldItem);\n        if (index >= 0) {\n            this.replaceItemAt(newItem, index);\n        }\n    }\n    /**\n     * Replaces the item at the specified index and dispatches a CollectionEvent.REPLACE event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} newItem\n     * @param {?} index\n     * @return {?}\n     */\n    replaceItemAt(newItem, index) {\n        this.filterData.splice(index, 1, newItem);\n    }\n    /**\n     * Sorts the items that the data provider contains and dispatches a CollectionEvent.SORT event.\n     *\n     * \\@memberOf ArrayCollection\n     * @return {?}\n     */\n    get sort() {\n        return this._sort;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sort(value) {\n        this._sort = value;\n        this.refresh();\n    }\n    /**\n     * Sorts the items that the data provider contains by the specified field and dispatches a CollectionEvent.SORT event.\n     *\n     * \\@memberOf ArrayCollection\n     * @param {?} fieldName\n     * @param {?=} reverse\n     * @return {?}\n     */\n    sortOn(fieldName, reverse = false) {\n        this.filterData = this.filterData.sort(Helpers.sortByField(fieldName, reverse));\n        this.onDataChange(new CollectionEvent(CollectionEvent.SORT));\n        return this.filterData;\n    }\n    /**\n     * @return {?}\n     */\n    get filter() {\n        return this._filter;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set filter(value) {\n        this._filter = value;\n        this.refresh();\n    }\n    /**\n     * @param {?} fieldName\n     * @param {?=} value\n     * @return {?}\n     */\n    filterOn(fieldName, value = null) {\n        this.filterData = this.filterData.filter(Helpers.filterByField(fieldName, value));\n        return this.filterData;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDataChange(event) {\n        this.dataChange.emit(event);\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n        for (const item of this._sort.reverse()) {\n            this.sortOn(item.field, item.reverse);\n        }\n        for (const key in this._filter) {\n            if (key) {\n                this.filterOn(key, this._filter[key]);\n            }\n        }\n        this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n    }\n    /**\n     * Creates an Array any representation of the data that the data provider contains.\n     *\n     * \\@memberOf ArrayCollection\n     * @return {?}\n     */\n    toArray() {\n        return this.isEditing ? this.editData : this.source;\n    }\n    /**\n     * @return {?}\n     */\n    toJSON() {\n        return this.isEditing ? this.editData : this.source;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ArrayCollection.prototype.dataChange;\n    /** @type {?} */\n    ArrayCollection.prototype.source;\n    /** @type {?} */\n    ArrayCollection.prototype.editData;\n    /** @type {?} */\n    ArrayCollection.prototype.isEditing;\n    /** @type {?} */\n    ArrayCollection.prototype.filterData;\n    /** @type {?} */\n    ArrayCollection.prototype._filter;\n    /** @type {?} */\n    ArrayCollection.prototype._sort;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/data-provider/PagedArrayCollection.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass PagedArrayCollection extends ArrayCollection {\n    /**\n     * @param {?=} source\n     */\n    constructor(source = []) {\n        super(source);\n        this._page = 1;\n        this._numberOfPages = 1;\n        this._pageSize = 10;\n    }\n    /**\n     * @return {?}\n     */\n    get numberOfPages() {\n        /** @type {?} */\n        let result = this.source.length / this.pageSize;\n        result = Math.ceil(result);\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        this._page = value;\n        this.refresh();\n    }\n    /**\n     * @return {?}\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = value;\n        this.refresh();\n    }\n    /**\n     * @return {?}\n     */\n    next() {\n        if (this.page === this.numberOfPages) {\n            return this.page;\n        }\n        this.page++;\n        return this.page;\n    }\n    /**\n     * @return {?}\n     */\n    prev() {\n        if (this._page === 1) {\n            return this.page;\n        }\n        this.page--;\n        return this.page;\n    }\n    /**\n     * @return {?}\n     */\n    first() {\n        if (this.page === 1) {\n            return this.page;\n        }\n        this.page = 1;\n        return this.page;\n    }\n    /**\n     * @return {?}\n     */\n    last() {\n        if (this.page === this.numberOfPages) {\n            return this.page;\n        }\n        this.page = this.numberOfPages;\n        return this.page;\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n        for (const item of this._sort.reverse()) {\n            this.sortOn(item.field, item.reverse);\n        }\n        for (const key in this._filter) {\n            if (key) {\n                this.filterOn(key, this._filter[key]);\n            }\n        }\n        if (this.page >= 0) {\n            /** @type {?} */\n            const start = (this.page - 1) * this.pageSize;\n            /** @type {?} */\n            const end = start + this.pageSize;\n            /** @type {?} */\n            const result = this.filterData.slice(start, end);\n            this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, result));\n        }\n        else {\n            this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    PagedArrayCollection.prototype._page;\n    /** @type {?} */\n    PagedArrayCollection.prototype._numberOfPages;\n    /** @type {?} */\n    PagedArrayCollection.prototype._pageSize;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/Table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction NovoTableConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.paging;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.footers;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.filtering;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.sorting;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.ordering;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.resizing;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.rowSelectionStyle;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.rowSelect;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.hasDetails;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.detailsRenderer;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.expandAll;\n    /** @type {?|undefined} */\n    NovoTableConfig.prototype.selectAllEnabled;\n}\n/** @enum {number} */\nconst NovoTableMode = {\n    VIEW: 1,\n    EDIT: 2,\n};\nNovoTableMode[NovoTableMode.VIEW] = 'VIEW';\nNovoTableMode[NovoTableMode.EDIT] = 'EDIT';\nclass NovoTableElement {\n    /**\n     * @param {?} labels\n     * @param {?} formUtils\n     * @param {?} builder\n     */\n    constructor(labels, formUtils, builder) {\n        this.labels = labels;\n        this.formUtils = formUtils;\n        this.builder = builder;\n        this.config = {};\n        this.skipSortAndFilterClear = false;\n        this.mode = NovoTableMode.VIEW;\n        this.editable = false;\n        this.rowIdentifier = 'id';\n        this.name = 'table';\n        this.onRowClick = new EventEmitter();\n        this.onRowSelect = new EventEmitter();\n        this.onTableChange = new EventEmitter();\n        this._rows = [];\n        this.selected = [];\n        this.activeId = 0;\n        this.master = false;\n        this.expandAll = false;\n        this.indeterminate = false;\n        this.lastPage = 0;\n        this.selectedPageCount = 0;\n        this.showSelectAllMessage = false;\n        this.pagedData = [];\n        // Map to keep track of what dropdowns are toggled\n        // Used to properly *ngIf the <list> so that the keepFilterFocused Directive\n        // will properly fire the ngAfterViewInit event\n        this.toggledDropdownMap = {};\n        this.NovoTableMode = NovoTableMode;\n        this.tableForm = new FormGroup({});\n        this.footers = [];\n        this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = false;\n        this.loading = false;\n        notify('[Deprecated]: The table is deprecated. Please migrate to novo-data-tables!');\n    }\n    /**\n     * @param {?} rows\n     * @return {?}\n     */\n    set rows(rows) {\n        this.dataProvider = rows;\n        if (rows && rows.length > 0) {\n            this.setupColumnDefaults();\n        }\n        // this is a temporary/hacky fix until async dataloading is handled within the table\n        if (!this.skipSortAndFilterClear) {\n            this.clearAllSortAndFilters();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * @param {?} dp\n     * @return {?}\n     */\n    set dataProvider(dp) {\n        this._dataProvider = Array.isArray(dp) ? new PagedArrayCollection(dp) : dp;\n        this._dataProvider.dataChange.pipe(debounceTime(100)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            switch (event.type) {\n                case CollectionEvent.CHANGE:\n                    this._rows = event.data;\n                    // Setup form\n                    this.tableForm = this.builder.group({\n                        rows: this.builder.array([]),\n                    });\n                    // Remove all selection on sort change if selection is on\n                    if (this.config.rowSelectionStyle === 'checkbox') {\n                        this.pagedData = event.data;\n                        this.pageSelected = this.pagedData.filter((/**\n                         * @param {?} r\n                         * @return {?}\n                         */\n                        (r) => r._selected));\n                        this.rowSelectHandler();\n                    }\n                    // Find that columns we might need to sum up via the footer\n                    /** @type {?} */\n                    let columnsToSum = [];\n                    /** @type {?} */\n                    const columnSums = {};\n                    if (this.config.footers) {\n                        this.config.footers.forEach((/**\n                         * @param {?} config\n                         * @return {?}\n                         */\n                        (config) => {\n                            columnsToSum.push(...config.columns);\n                        }));\n                        // Only have unique columns, filter out duplicates\n                        columnsToSum = columnsToSum.filter((/**\n                         * @param {?} item\n                         * @param {?} index\n                         * @param {?} array\n                         * @return {?}\n                         */\n                        (item, index, array) => array.indexOf(item) === index));\n                    }\n                    // Make a form for each row\n                    /** @type {?} */\n                    const tableFormRows = (/** @type {?} */ (this.tableForm.controls['rows']));\n                    this._rows.forEach((/**\n                     * @param {?} row\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    (row, index) => {\n                        /** @type {?} */\n                        const rowControls = [];\n                        row.controls = {};\n                        row._editing = {};\n                        row._expanded = this.config.expandAll;\n                        row.rowId = this._rows.length;\n                        this.columns.forEach((/**\n                         * @param {?} column\n                         * @return {?}\n                         */\n                        (column) => {\n                            // Use the control passed or use a ReadOnlyControl so that the form has the values\n                            /** @type {?} */\n                            const control = column.editorConfig\n                                ? ControlFactory.create(column.editorType, column.editorConfig)\n                                : new ReadOnlyControl({ key: column.name });\n                            row.controls[column.name] = control;\n                            rowControls.push(control);\n                        }));\n                        this.formUtils.setInitialValues(rowControls, row, false);\n                        tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n                        // Setup the total footer if configured\n                        // Array of keys to total\n                        if (columnsToSum.length !== 0) {\n                            columnsToSum.forEach((/**\n                             * @param {?} column\n                             * @return {?}\n                             */\n                            (column) => {\n                                if (Helpers.isBlank(columnSums[column])) {\n                                    columnSums[column] = 0;\n                                }\n                                columnSums[column] += row[column];\n                            }));\n                        }\n                    }));\n                    if (this.mode === NovoTableMode.EDIT) {\n                        this.setTableEdit();\n                    }\n                    // Setup the footers (if any)\n                    if (this.config.footers) {\n                        this.footers = [];\n                        this.config.footers.forEach((/**\n                         * @param {?} footerConfig\n                         * @param {?} footerConfigIndex\n                         * @return {?}\n                         */\n                        (footerConfig, footerConfigIndex) => {\n                            /** @type {?} */\n                            const footer = {};\n                            footer[footerConfig.labelColumn] = footerConfig.label;\n                            footerConfig.columns.forEach((/**\n                             * @param {?} column\n                             * @return {?}\n                             */\n                            (column) => {\n                                if (footerConfig.method === 'AVG' && this._rows.length !== 0) {\n                                    footer[column] = columnSums[column] / this._rows.length;\n                                }\n                                else {\n                                    footer[column] = columnSums[column];\n                                }\n                            }));\n                            this.footers.push(footer);\n                        }));\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }));\n        if (this.config.paging) {\n            this._dataProvider.page = this.config.paging.current;\n            this._dataProvider.pageSize = this.config.paging.itemsPerPage;\n        }\n        else {\n            // Paging turned off, return basically all of the data\n            this._dataProvider.page = 1;\n            this._dataProvider.pageSize = 500;\n        }\n        if (dp && dp.length > 0) {\n            this.setupColumnDefaults();\n        }\n        this._dataProvider.refresh();\n    }\n    /**\n     * @return {?}\n     */\n    get dataProvider() {\n        return this._dataProvider;\n    }\n    /**\n     * @return {?}\n     */\n    get editing() {\n        return this.mode === NovoTableMode.EDIT;\n    }\n    /**\n     * @return {?}\n     */\n    get formValue() {\n        return this.tableForm.value;\n    }\n    /**\n     * @param {?} event\n     * @param {?} column\n     * @return {?}\n     */\n    onDropdownToggled(event, column) {\n        this.toggledDropdownMap[column] = event;\n    }\n    /**\n     * @return {?}\n     */\n    focusInput() {\n        if (this.filterInputs && this.filterInputs.length) {\n            this.filterInputs.forEach((/**\n             * @param {?} filterInput\n             * @return {?}\n             */\n            (filterInput) => {\n                if (filterInput.nativeElement) {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => filterInput.nativeElement.focus()), 0);\n                }\n            }));\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPageChange(event) {\n        // this.dataProvider.page = event.page;\n        // this.dataProvider.pageSize = event.itemsPerPage;\n    }\n    /**\n     * @param {?} option\n     * @return {?}\n     */\n    getOptionDataAutomationId(option) {\n        if (!Helpers.isBlank(option.value)) {\n            return option.value;\n        }\n        return option;\n    }\n    /**\n     * @return {?}\n     */\n    setupColumnDefaults() {\n        // Check columns for cell option types\n        this.columns.forEach((/**\n         * @param {?} column\n         * @return {?}\n         */\n        (column) => {\n            if (column && column.type) {\n                switch (column.type) {\n                    case 'date':\n                        // Set options based on dates if there are none\n                        column.options = column.options || this.getDefaultOptions(column);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.config.paging && this.config.paging.current !== this.lastPage) {\n            this.rowSelectHandler();\n            this.showSelectAllMessage = false;\n        }\n        this.lastPage = this.config.paging ? this.config.paging.current : 1;\n    }\n    /**\n     * @return {?}\n     */\n    getPageStart() {\n        return this.config.paging ? (this.dataProvider.page - 1) * this.dataProvider.pageSize : 0;\n    }\n    /**\n     * @return {?}\n     */\n    getPageEnd() {\n        return this.config.paging && this.dataProvider.pageSize > -1 ? this.getPageStart() + this.dataProvider.pageSize : this.rows.length;\n    }\n    /**\n     * @param {?} i\n     * @return {?}\n     */\n    getRowControlForm(i) {\n        /** @type {?} */\n        const tableFormRows = (/** @type {?} */ (this.tableForm.controls['rows']));\n        return tableFormRows.controls[i];\n    }\n    /**\n     * @param {?} column\n     * @param {?} filter\n     * @return {?}\n     */\n    onFilterClick(column, filter) {\n        if (filter.range && !column.calendarShow) {\n            column.calenderShow = true;\n            return;\n        }\n        if (Array.isArray(column.filter) && column.multiple) {\n            if (~column.filter.indexOf(filter)) {\n                // Remove filter\n                column.filter.splice(column.filter.indexOf(filter), 1);\n                if (filter.range) {\n                    column.calenderShow = false;\n                }\n                if (column.filter.length === 0) {\n                    column.filter = null;\n                }\n            }\n            else {\n                // Add filter\n                column.filter.push(filter);\n            }\n        }\n        else if (column.multiple) {\n            column.filter = new Array();\n            column.filter.push(Helpers.isBlank(filter.value) ? filter : filter.value);\n        }\n        else {\n            column.filter = Helpers.isBlank(filter.value) ? filter : filter.value;\n        }\n        this.onFilterChange();\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    onFilterClear(column) {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            column.filter = null;\n            column.freetextFilter = null;\n            this.onFilterChange();\n            if (column.originalOptions) {\n                column.options = column.originalOptions;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    clearAllSortAndFilters() {\n        if (this.config.filtering) {\n            this.columns.forEach((/**\n             * @param {?} column\n             * @return {?}\n             */\n            (column) => {\n                column.filter = null;\n                column.sort = null;\n            }));\n        }\n    }\n    /**\n     * \\@description This method updates the row data to reflect the active filters.\n     * @param {?=} event\n     * @return {?}\n     */\n    onFilterChange(event) {\n        if (this.config.filtering) {\n            // Array of filters\n            /** @type {?} */\n            const filters = this.columns.filter((/**\n             * @param {?} col\n             * @return {?}\n             */\n            (col) => !Helpers.isEmpty(col.filter)));\n            if (filters.length) {\n                /** @type {?} */\n                let query = {};\n                for (const column of filters) {\n                    if (Helpers.isFunction(column.match)) {\n                        query[column.name] = (/**\n                         * @param {?} value\n                         * @param {?} record\n                         * @return {?}\n                         */\n                        (value, record) => {\n                            return column.match(record, column.filter);\n                        });\n                    }\n                    else if (column.preFilter && Helpers.isFunction(column.preFilter)) {\n                        query = Object.assign({}, query, column.preFilter(this.escapeCharacters(column.filter)));\n                    }\n                    else if (Array.isArray(column.filter)) {\n                        // The filters are an array (multi-select), check value\n                        /** @type {?} */\n                        let options = column.filter;\n                        // We have an array of {value: '', labels: ''}\n                        if (options[0].value || options[0].label) {\n                            options = column.filter.map((/**\n                             * @param {?} opt\n                             * @return {?}\n                             */\n                            (opt) => opt.value));\n                        }\n                        query[column.name] = { any: options };\n                    }\n                    else if (column.type && column.type === 'date') {\n                        if (column.filter.startDate && column.filter.endDate) {\n                            query[column.name] = {\n                                min: startOfDay(column.filter.startDate),\n                                max: startOfDay(addDays(startOfDay(column.filter.endDate), 1)),\n                            };\n                        }\n                        else {\n                            query[column.name] = {\n                                min: column.filter.min ? addDays(startOfToday(), column.filter.min) : startOfToday(),\n                                max: column.filter.max ? addDays(startOfTomorrow(), column.filter.max) : startOfTomorrow(),\n                            };\n                        }\n                    }\n                    else {\n                        query[column.name] = column.filter;\n                    }\n                }\n                if (Helpers.isFunction(this.config.filtering)) {\n                    this.config.filtering(query);\n                }\n                else {\n                    this._dataProvider.filter = query;\n                }\n            }\n            else {\n                this._dataProvider.filter = {};\n            }\n            // Trickle down to keep sort\n            // this.onSortChange(this.currentSortColumn);\n            this.fireTableChangeEvent();\n            // If paging, reset page\n            if (this.config.paging) {\n                this.config.paging.current = 1;\n            }\n            // Remove all selection on sort change if selection is on\n            if (this.config.rowSelectionStyle === 'checkbox') {\n                this.selectAll(false);\n            }\n        }\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    escapeCharacters(filter) {\n        if (typeof filter === 'string') {\n            return filter.replace(/'/g, '\\'\\'');\n        }\n        return filter;\n    }\n    /**\n     * @param {?} column\n     * @param {?} filter\n     * @return {?}\n     */\n    isFilterActive(column, filter) {\n        // TODO: This needs to be refactored\n        /** @type {?} */\n        let isActive = false;\n        if (column && !Helpers.isBlank(column.filter) && !Helpers.isBlank(filter)) {\n            if (Array.isArray(column.filter)) {\n                if (typeof filter !== 'string') {\n                    isActive = column.filter.some((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => {\n                        return item.label === filter.label;\n                    }));\n                }\n                else {\n                    isActive = column.filter.includes(filter);\n                }\n            }\n            else {\n                if (typeof column.filter === typeof filter) {\n                    isActive = column.filter === filter;\n                }\n                else {\n                    isActive = column.filter === filter.value;\n                }\n            }\n        }\n        return isActive;\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    onSortChange(column) {\n        this.currentSortColumn = column;\n        /** @type {?} */\n        const sortedColumns = this.columns.filter((/**\n         * @param {?} thisColumn\n         * @return {?}\n         */\n        (thisColumn) => {\n            return thisColumn.sort && thisColumn !== this.currentSortColumn;\n        }));\n        for (const sortedColumn of sortedColumns) {\n            sortedColumn.sort = null;\n        }\n        if (column) {\n            if (Helpers.isFunction(this.config.sorting)) {\n                this.config.sorting();\n            }\n            else if (Helpers.isFunction(column.preSort)) {\n                this._dataProvider.sort = [].concat(column.preSort(column));\n            }\n            else {\n                this._dataProvider.sort = [{ field: column.compare || column.name, reverse: column.sort === 'desc' }];\n            }\n        }\n        // Fire table change event\n        // this.fireTableChangeEvent();\n        // If paging, reset page\n        if (this.config.paging) {\n            this.config.paging.current = 1;\n        }\n        // Remove all selection on sort change if selection is on\n        if (this.config.rowSelectionStyle === 'checkbox') {\n            this.selectAll(false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    fireTableChangeEvent() {\n        // Construct a table change object\n        /** @type {?} */\n        const onTableChange = {};\n        /** @type {?} */\n        const filters = this.columns.filter((/**\n         * @param {?} col\n         * @return {?}\n         */\n        (col) => col.filter && col.filter.length));\n        onTableChange.filter = filters.length ? filters : false;\n        onTableChange.sort = this.currentSortColumn ? this.currentSortColumn : false;\n        onTableChange.rows = this.rows;\n        // Emit event\n        this.onTableChange.emit(onTableChange);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    findColumnIndex(value) {\n        for (let i = 0; i < this.columns.length; i += 1) {\n            if (this.columns[i].name === value) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onOrderChange(event) {\n        /** @type {?} */\n        const oldIndex = this.findColumnIndex(event.first.name);\n        /** @type {?} */\n        const newIndex = this.findColumnIndex(event.second.name);\n        this.columns.splice(newIndex, 0, this.columns.splice(oldIndex, 1)[0]);\n        this.onSortChange(this.currentSortColumn);\n    }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    expandAllOnPage(expanded) {\n        this.config.expandAll = !expanded;\n        for (const row of this.dataProvider.list) {\n            row._expanded = this.config.expandAll;\n        }\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    selectPage(data) {\n        if (!this.master) {\n            this.selectAll(false);\n            // Only show the select all message when there is only one new page selected at a time\n            this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n            this.showSelectAllMessage = false;\n        }\n        else {\n            this.indeterminate = false;\n            // this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n            for (const row of this.pagedData) {\n                row._selected = this.master;\n            }\n            this.selected = this.dataProvider.list.filter((/**\n             * @param {?} r\n             * @return {?}\n             */\n            (r) => r._selected));\n            this.pageSelected = this.pagedData.filter((/**\n             * @param {?} r\n             * @return {?}\n             */\n            (r) => r._selected));\n            this.emitSelected(this.selected);\n            // Only show the select all message when there is only one new page selected at a time\n            this.selectedPageCount++;\n            this.showSelectAllMessage = this.selectedPageCount === 1 && this.selected.length !== this.dataProvider.total;\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    selectAll(value) {\n        this.master = value;\n        this.indeterminate = false;\n        for (const row of this.dataProvider.list) {\n            row._selected = value;\n        }\n        this.selected = value ? this.dataProvider.list : [];\n        this.showSelectAllMessage = false;\n        this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n        this.rowSelectHandler();\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    rowSelectHandler(data) {\n        // this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n        this.pageSelected = this.pagedData.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => r._selected));\n        this.selected = this.dataProvider.list.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => r._selected));\n        if (this.pageSelected.length === 0) {\n            this.master = false;\n            this.indeterminate = false;\n        }\n        else if (this.pageSelected.length === this.pagedData.length) {\n            this.master = true;\n            this.indeterminate = false;\n        }\n        else {\n            this.master = false;\n            this.indeterminate = true;\n            // Breaking the selected page count\n            this.showSelectAllMessage = false;\n            this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n        }\n        this.emitSelected(this.selected);\n    }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    emitSelected(selected) {\n        this.onRowSelect.emit({ length: selected.length, selected });\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    rowClickHandler(row) {\n        if (this.config.rowSelect) {\n            this.activeId = row.id || 0;\n            this.onRowClick.emit(row);\n        }\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    getDefaultOptions(column) {\n        // TODO - needs to come from label service - https://github.com/bullhorn/novo-elements/issues/116\n        /** @type {?} */\n        const opts = [\n            { label: this.labels.past1Day, min: -1, max: 0 },\n            { label: this.labels.past7Days, min: -7, max: 0 },\n            { label: this.labels.past30Days, min: -30, max: 0 },\n            { label: this.labels.past90Days, min: -90, max: 0 },\n            { label: this.labels.past1Year, min: -366, max: 0 },\n            { label: this.labels.next1Day, min: 0, max: 1 },\n            { label: this.labels.next7Days, min: 0, max: 7 },\n            { label: this.labels.next30Days, min: 0, max: 30 },\n            { label: this.labels.next90Days, min: 0, max: 90 },\n            { label: this.labels.next1Year, min: 0, max: 366 },\n        ];\n        if (column && column.range) {\n            opts.push({\n                label: this.labels.customDateRange,\n                range: true,\n            });\n        }\n        return opts;\n    }\n    /**\n     * @param {?} column\n     * @param {?} event\n     * @return {?}\n     */\n    onCalenderSelect(column, event) {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (event.startDate && event.endDate) {\n                this.onFilterChange();\n            }\n        }), 10);\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    onFilterKeywords(config) {\n        if (config && config.filtering && config.filtering.freetextFilter) {\n            /** @type {?} */\n            const filterKeywords = config.filtering.freetextFilter.toLowerCase();\n            if (!config.filtering.originalOptions) {\n                config.filtering.originalOptions = config.filtering.options;\n            }\n            /** @type {?} */\n            const newOptions = config.filtering.originalOptions.filter((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                /** @type {?} */\n                let value = option && option.label ? option.label : option;\n                value = value.toLowerCase() ? value.toLowerCase() : value;\n                if (value === filterKeywords) {\n                    return true;\n                }\n                else if (~value.indexOf(filterKeywords) || ~value.indexOf(filterKeywords)) {\n                    return true;\n                }\n                return false;\n            }));\n            config.filtering.options = newOptions;\n            config.filtering.filter = config.filtering.freetextFilter;\n        }\n        else {\n            config.filtering.options = config.filtering.originalOptions;\n        }\n        this.onFilterChange();\n    }\n    /**\n     * \\@description Sets the Table into EDIT mode, based on the row/column passed you can enter in a few states\n     * (1) setTableEdit() - don't pass any to put the FULL table into edit mode\n     * (2) setTableEdit(1) - pass only row to put that FULL row of the table into edit mode\n     * (3) setTableEdit(1, 1) - pass row and column to put that column of the row of the table into edit mode\n     * \\@memberOf NovoTableElement\n     * @param {?=} rowNumber\n     * @param {?=} columnNumber\n     * @return {?}\n     */\n    setTableEdit(rowNumber, columnNumber) {\n        this.mode = NovoTableMode.EDIT;\n        this._dataProvider.edit();\n        this._rows.forEach((/**\n         * @param {?} row\n         * @param {?} rowIndex\n         * @return {?}\n         */\n        (row, rowIndex) => {\n            row._editing = row._editing || {};\n            this.columns.forEach((/**\n             * @param {?} column\n             * @param {?} columnIndex\n             * @return {?}\n             */\n            (column, columnIndex) => {\n                if (column.viewOnly) {\n                    row._editing[column.name] = false;\n                }\n                else if (Helpers.isEmpty(rowNumber) && Helpers.isEmpty(columnNumber)) {\n                    row._editing[column.name] = true;\n                }\n                else if (!Helpers.isEmpty(rowNumber) && rowIndex === Number(rowNumber) && Helpers.isEmpty(columnNumber)) {\n                    row._editing[column.name] = true;\n                }\n                else if (!Helpers.isEmpty(rowNumber) &&\n                    !Helpers.isEmpty(columnNumber) &&\n                    rowIndex === Number(rowNumber) &&\n                    columnIndex === Number(columnNumber)) {\n                    row._editing[column.name] = true;\n                }\n                else {\n                    row._editing[column.name] = false;\n                }\n            }));\n        }));\n    }\n    /**\n     * \\@description Leaves edit mode for the Table and puts everything back to VIEW only\n     * \\@memberOf NovoTableElement\n     * @private\n     * @param {?} cancel - whether or not to save data or undo\n     * @return {?}\n     */\n    leaveEditMode(cancel) {\n        this.mode = NovoTableMode.VIEW;\n        this._rows.forEach((/**\n         * @param {?} row\n         * @return {?}\n         */\n        (row) => {\n            row._editing = row._editing || {};\n            this.columns.forEach((/**\n             * @param {?} column\n             * @return {?}\n             */\n            (column) => {\n                row._editing[column.name] = false;\n            }));\n        }));\n        if (cancel) {\n            this._dataProvider.undo();\n        }\n        else {\n            this._dataProvider.commit();\n        }\n        this.hideToastMessage();\n    }\n    /**\n     * \\@description Adds a new row into the table to be edited, can be called from a local reference of the table in your template\n     * \\@memberOf NovoTableElement\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    addEditableRow(defaultValue = {}) {\n        /** @type {?} */\n        const tableFormRows = (/** @type {?} */ (this.tableForm.controls['rows']));\n        /** @type {?} */\n        const row = {};\n        /** @type {?} */\n        const rowControls = [];\n        row.controls = {};\n        row._editing = {};\n        row.rowId = this._rows.length + 1;\n        this.columns.forEach((/**\n         * @param {?} column\n         * @return {?}\n         */\n        (column) => {\n            // Use the control passed or use a ReadOnlyControl so that the form has the values\n            /** @type {?} */\n            const control = column.editorConfig\n                ? ControlFactory.create(column.editorType, column.editorConfig)\n                : new ReadOnlyControl({ key: column.name });\n            control.value = null; // remove copied column value\n            row.controls[column.name] = control;\n            row._editing[column.name] = !column.viewOnly;\n            rowControls.push(control);\n        }));\n        this.formUtils.setInitialValues(rowControls, defaultValue, false);\n        tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n        this._rows.push(row);\n    }\n    /**\n     * \\@description Validates the Form inside of the Table, if there are errors it will display/return the errors for each row.\n     * If there are no errors, then it will return ONLY the changed data for each row, the data returned will be in the form:\n     * { id: ID_OF_RECORD, key: value } -- data that was updated\n     * { id: undefined, key: value } -- data that was added\n     * \\@memberOf NovoTableElement\n     * @return {?}\n     */\n    validateAndGetUpdatedData() {\n        if (this.tableForm && this.tableForm.controls && this.tableForm.controls['rows']) {\n            /** @type {?} */\n            const changedRows = [];\n            /** @type {?} */\n            const errors = [];\n            // Go over the FormArray's controls\n            ((/** @type {?} */ (this.tableForm.controls['rows']))).controls.forEach((/**\n             * @param {?} formGroup\n             * @param {?} index\n             * @return {?}\n             */\n            (formGroup, index) => {\n                /** @type {?} */\n                let changedRow = null;\n                /** @type {?} */\n                let error = null;\n                // Go over the form group controls\n                Object.keys(formGroup.controls).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    const control = formGroup.controls[key];\n                    // Handle value changing\n                    if (control && control.dirty && !control.errors) {\n                        if (!changedRow) {\n                            // Append the ID, so we have some key to save against\n                            changedRow = {};\n                            if (this._rows[index].id) {\n                                changedRow.id = this._rows[index].id;\n                            }\n                        }\n                        // If dirty, grab value off the form\n                        changedRow[key] = this.tableForm.value['rows'][index][key];\n                        // Set value back to row (should be already done via the server call, but do it anyway)\n                        this._rows[index][key] = changedRow[key];\n                    }\n                    else if (control && control.errors) {\n                        // Handle errors\n                        if (!error) {\n                            error = {};\n                        }\n                        error[key] = control.errors;\n                        control.markAsDirty();\n                        control.markAsTouched();\n                    }\n                }));\n                if (changedRow) {\n                    changedRows.push(changedRow);\n                }\n                if (error) {\n                    errors.push({ errors: error, row: this._rows[index], index });\n                }\n            }));\n            // Return errors if any, otherwise return the changed rows\n            if (errors.length === 0) {\n                return { changed: changedRows };\n            }\n            return { errors };\n        }\n    }\n    /**\n     * \\@description Refresh the data provider and leave edit mode\n     * \\@memberOf NovoTableElement\n     * @return {?}\n     */\n    cancelEditing() {\n        this.leaveEditMode(true);\n    }\n    /**\n     * \\@description Refresh the data provider and leave edit mode\n     * \\@memberOf NovoTableElement\n     * @return {?}\n     */\n    saveChanges() {\n        this.leaveEditMode(false);\n    }\n    /**\n     * \\@description Displays a toast message inside of the table\n     * \\@memberOf NovoTableElement\n     * @param {?} toast\n     * @param {?=} hideDelay\n     * @return {?}\n     */\n    displayToastMessage(toast, hideDelay) {\n        this.loading = false;\n        this.toast = toast;\n        if (hideDelay) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.hideToastMessage()), hideDelay);\n        }\n    }\n    /**\n     * \\@description Force hide the toast message\n     * \\@memberOf NovoTableElement\n     * @return {?}\n     */\n    hideToastMessage() {\n        this.toast = null;\n        // Hack to make the table display properly after hiding the toast\n        this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = true;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = false;\n        }));\n    }\n    /**\n     * \\@description display the loading overlay on the table\n     * \\@memberOf NovoTableElement\n     * @param {?} show\n     * @return {?}\n     */\n    toggleLoading(show) {\n        this.loading = show;\n    }\n    /**\n     * \\@description hide a column in edit or view mode\n     * \\@memberOf NovoTableElement\n     * @param {?} column\n     * @return {?}\n     */\n    isColumnHidden(column) {\n        return this.editing ? !!column.hideColumnOnEdit : !!column.hideColumnOnView;\n    }\n}\nNovoTableElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-table',\n                host: {\n                    '[attr.theme]': 'theme',\n                    '[class.editing]': 'mode === NovoTableMode.EDIT',\n                    '[class.novo-table-loading]': 'loading',\n                },\n                // directives: [],\n                template: `\n        <header *ngIf=\"columns.length\">\n            <ng-content select=\"novo-table-header\"></ng-content>\n            <div class=\"header-actions\">\n                <novo-pagination *ngIf=\"config.paging && !(dataProvider.isEmpty() && !dataProvider.isFiltered())\"\n                                 [rowOptions]=\"config.paging.rowOptions\"\n                                 [disablePageSelection]=\"config.paging.disablePageSelection\"\n                                 [(page)]=\"dataProvider.page\"\n                                 [(itemsPerPage)]=\"dataProvider.pageSize\"\n                                 [totalItems]=\"dataProvider.total\"\n                                 (onPageChange)=\"onPageChange($event)\">\n                </novo-pagination>\n                <ng-content select=\"novo-table-actions\"></ng-content>\n            </div>\n        </header>\n        <div class=\"novo-table-loading-overlay\" *ngIf=\"loading || dataProvider.isLoading()\">\n            <novo-loading></novo-loading>\n        </div>\n        <novo-toast *ngIf=\"toast\" [theme]=\"toast?.theme\" [icon]=\"toast?.icon\" [message]=\"toast?.message\"></novo-toast>\n        <div class=\"table-container\" *ngIf=\"!grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast\">\n            <novo-form hideHeader=\"true\" [form]=\"tableForm\">\n                <table class=\"table table-striped dataTable\" [class.table-details]=\"config.hasDetails\" role=\"grid\">\n                <!-- skipSortAndFilterClear is a hack right now, will be removed once Canvas is refactored -->\n                <thead *ngIf=\"columns.length && (!dataProvider.isEmpty() || dataProvider.isFiltered() || skipSortAndFilterClear || editing)\">\n                    <tr role=\"row\">\n                        <!-- DETAILS -->\n                        <th class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                            <button theme=\"icon\" icon=\"next\" (click)=\"expandAllOnPage(config.expandAll)\" *ngIf=\"!config.expandAll\" data-automation-id=\"expand-all\"></button>\n                            <button theme=\"icon\" icon=\"sort-desc\" (click)=\"expandAllOnPage(config.expandAll)\" *ngIf=\"config.expandAll\" data-automation-id=\"collapse-all\"></button>\n                        </th>\n                        <!-- CHECKBOX -->\n                        <th class=\"row-actions checkbox mass-action\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                            <novo-checkbox [(ngModel)]=\"master\" [indeterminate]=\"pageSelected.length > 0 && pageSelected.length < pagedData.length\" (ngModelChange)=\"selectPage($event)\" data-automation-id=\"select-all-checkbox\" [tooltip]=\"master ? labels.deselectAll : labels.selectAllOnPage\" tooltipPosition=\"right\"></novo-checkbox>\n                        </th>\n                        <!-- TABLE HEADERS -->\n                        <th *ngFor=\"let column of columns\" [ngClass]=\"{ 'mass-action': config?.rowSelectionStyle === 'checkbox', 'actions': column?.actions?.items?.length > 0, 'preview': column?.name === 'preview' }\" [novoThOrderable]=\"column\" (onOrderChange)=\"onOrderChange($event)\" [hidden]=\"isColumnHidden(column)\">\n                            <div class=\"th-group\" [attr.data-automation-id]=\"column.id || column.name\" *ngIf=\"!column.hideHeader\">\n                                <!-- LABEL & SORT ARROWS -->\n                                <div class=\"th-title\" [ngClass]=\"(config.sorting !== false && column.sorting !== false) ? 'sortable' : ''\" [novoThSortable]=\"config\" [column]=\"column\" (onSortChange)=\"onSortChange($event)\">\n                                    <label>{{ column.title || column.label }}</label>\n                                    <div class=\"table-sort-icons\" tooltipPosition=\"bottom\" [tooltip]=\"labels.sort\" [ngClass]=\"column.sort || ''\" *ngIf=\"config.sorting !== false && column.sorting !== false\">\n                                        <i class=\"bhi-arrow-up\"></i>\n                                        <i class=\"bhi-arrow-down\"></i>\n                                    </div>\n                                </div>\n                                <!-- FILTER DROP-DOWN -->\n                                <novo-dropdown side=\"right\" *ngIf=\"config.filtering !== false && column.filtering !== false\" class=\"column-filters\" (toggled)=\"onDropdownToggled($event, column.name)\" parentScrollSelector=\".table-container\" containerClass=\"table-dropdown\">\n                                    <button type=\"button\" theme=\"icon\" icon=\"filter\" tooltipPosition=\"bottom\" [tooltip]=\"labels.filters\" [class.filtered]=\"column.filter || column.filter===false\" (click)=\"focusInput()\"></button>\n                                    <!-- FILTER OPTIONS LIST -->\n                                    <list *ngIf=\"(column?.options?.length || column?.originalOptions?.length) && column?.type !== 'date' && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter || column.filter===false\">{{ labels.clear }}</button>\n                                            </div>\n                                            <input type=\"text\" *ngIf=\"!!column.allowCustomTextOption\" [attr.id]=\"column.name + '-input'\" [novoTableFilter]=\"column\" (onFilterChange)=\"onFilterKeywords($event)\" [(ngModel)]=\"column.freetextFilter\" keepFilterFocused #filterInput/>\n                                        </item>\n                                        <item [ngClass]=\"{ active: isFilterActive(column, option) }\" *ngFor=\"let option of column.options\" (click)=\"onFilterClick(column, option)\" [attr.data-automation-id]=\"getOptionDataAutomationId(option)\">\n                                            <span>{{ option?.label || option }}</span> <i class=\"bhi-check\" *ngIf=\"isFilterActive(column, option)\"></i>\n                                        </item>\n                                    </list>\n                                    <!-- FILTER SEARCH INPUT -->\n                                    <list *ngIf=\"!(column?.options?.length || column?.originalOptions?.length) && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">{{ labels.clear }}</button>\n                                            </div>\n                                            <input type=\"text\" [attr.id]=\"column.name + '-input'\" [novoTableFilter]=\"column\" (onFilterChange)=\"onFilterChange($event)\" [(ngModel)]=\"column.filter\" keepFilterFocused #filterInput/>\n                                        </item>\n                                    </list>\n                                    <!-- FILTER DATE OPTIONS -->\n                                    <list *ngIf=\"column?.options?.length && column?.type === 'date' && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\" *ngIf=\"!column.calenderShow\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">{{ labels.clear }}</button>\n                                            </div>\n                                        </item>\n                                        <item [ngClass]=\"{ active: isFilterActive(column, option) }\" *ngFor=\"let option of column.options\" (click)=\"onFilterClick(column, option)\" [keepOpen]=\"option.range\" [hidden]=\"column.calenderShow\" [attr.data-automation-id]=\"(option?.label || option)\">\n                                            {{ option?.label || option }} <i class=\"bhi-check\" *ngIf=\"isFilterActive(column, option)\"></i>\n                                        </item>\n                                        <div class=\"calendar-container\" [hidden]=\"!column.calenderShow\">\n                                            <div (click)=\"column.calenderShow=false\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n                                            <novo-date-picker #rangePicker (onSelect)=\"onCalenderSelect(column, $event)\" [(ngModel)]=\"column.filter\" range=\"true\"></novo-date-picker>\n                                        </div>\n                                    </list>\n                                </novo-dropdown>\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <!-- TABLE DATA -->\n                <tbody *ngIf=\"!dataProvider.isEmpty() || editing\">\n                    <tr class=\"table-selection-row\" *ngIf=\"config.rowSelectionStyle === 'checkbox' && showSelectAllMessage && config.selectAllEnabled\" data-automation-id=\"table-selection-row\">\n                        <td colspan=\"100%\">\n                            {{labels.selectedRecords(selected.length)}} <a (click)=\"selectAll(true)\" data-automation-id=\"all-matching-records\">{{labels.totalRecords(dataProvider.total)}}</a>\n                        </td>\n                    </tr>\n                    <ng-template ngFor let-row=\"$implicit\" let-i=\"index\" [ngForOf]=\"rows\">\n                        <tr class=\"table-row\" [ngClass]=\"row.customClass || ''\" [id]=\"name + '-' + row[rowIdentifier]\" [attr.data-automation-id]=\"row.id\" (click)=\"rowClickHandler(row)\" [class.active]=\"row.id === activeId\">\n                            <td class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                                <button theme=\"icon\" icon=\"next\" (click)=\"row._expanded=!row._expanded\" *ngIf=\"!row._expanded\"></button>\n                                <button theme=\"icon\" icon=\"sort-desc\" (click)=\"row._expanded=!row._expanded\" *ngIf=\"row._expanded\"></button>\n                            </td>\n                            <td class=\"row-actions checkbox\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                                <novo-checkbox [(ngModel)]=\"row._selected\" (ngModelChange)=\"rowSelectHandler(row)\" data-automation-id=\"select-row-checkbox\"></novo-checkbox>\n                            </td>\n                            <td *ngFor=\"let column of columns\" [attr.data-automation-id]=\"column.id || column.name\" [class.novo-form-row]=\"editable\" [hidden]=\"isColumnHidden(column)\">\n                                <novo-table-cell *ngIf=\"row._editing && !row._editing[column.name]\" [hasEditor]=\"editable\" [column]=\"column\" [row]=\"row\" [form]=\"getRowControlForm(i)\"></novo-table-cell>\n                                <novo-control *ngIf=\"row._editing && row._editing[column.name]\" condensed=\"true\" [form]=\"getRowControlForm(i)\" [control]=\"row.controls[column.name]\"></novo-control>\n                            </td>\n                        </tr>\n                        <tr class=\"details-row\" *ngIf=\"config.hasDetails\" [hidden]=\"!row._expanded\" [attr.data-automation-id]=\"'details-row-'+row.id\">\n                            <td class=\"row-actions\"></td>\n                            <td [attr.colspan]=\"config.rowSelectionStyle === 'checkbox' ? (columns.length + 1) : columns.length\">\n                                <novo-row-details [data]=\"row\" [renderer]=\"config.detailsRenderer\"></novo-row-details>\n                            </td>\n                        </tr>\n                    </ng-template>\n                </tbody>\n                <!-- NO TABLE DATA PLACEHOLDER -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.isEmpty() && !dataProvider.isFiltered() && !editing\" data-automation-id=\"empty-table\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #emptymessage><ng-content select=\"[table-empty-message]\"></ng-content></div>\n                            <div class=\"table-empty-message\" *ngIf=\"emptymessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <!-- NO MATCHING RECORDS -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.isEmpty() && dataProvider.isFiltered()\" data-automation-id=\"empty-table\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #nomatchmessage><ng-content select=\"[table-no-matching-records-message]\"></ng-content></div>\n                            <div class=\"no-matching-records\" *ngIf=\"nomatchmessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <!-- TABLE DATA ERROR PLACEHOLDER -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.hasErrors()\" data-automation-id=\"table-errors\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #errormessage><ng-content select=\"[table-error-message]\"></ng-content></div>\n                            <div class=\"table-error-message\" *ngIf=\"errormessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-caution\"></i> {{ labels.erroredTableMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <tfoot *ngIf=\"!config.footers\" [ngClass]=\"dataProvider.length % 2 == 0 ? 'odd' : 'even'\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <ng-content select=\"novo-table-footer\"></ng-content>\n                        </td>\n                    </tr>\n                </tfoot>\n                <tfoot *ngFor=\"let footer of footers;let i = index;\" class=\"novo-table-total-footer\">\n                    <tr>\n                        <td *ngFor=\"let column of columns\" [attr.data-automation-id]=\"(column.id || column.name) + '-total-' + i\">{{ footer[column.name] }}</td>\n                    </tr>\n                </tfoot>\n            </table>\n        </novo-form>\n    </div>\n    `\n            }] }\n];\n/** @nocollapse */\nNovoTableElement.ctorParameters = () => [\n    { type: NovoLabelService },\n    { type: FormUtils },\n    { type: FormBuilder }\n];\nNovoTableElement.propDecorators = {\n    filterInputs: [{ type: ViewChildren, args: ['filterInput', { read: ElementRef },] }],\n    config: [{ type: Input }],\n    columns: [{ type: Input }],\n    theme: [{ type: Input }],\n    skipSortAndFilterClear: [{ type: Input }],\n    mode: [{ type: Input }],\n    editable: [{ type: Input }],\n    rowIdentifier: [{ type: Input }],\n    name: [{ type: Input }],\n    onRowClick: [{ type: Output }],\n    onRowSelect: [{ type: Output }],\n    onTableChange: [{ type: Output }],\n    rows: [{ type: Input }],\n    dataProvider: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NovoTableElement.prototype.filterInputs;\n    /** @type {?} */\n    NovoTableElement.prototype.config;\n    /** @type {?} */\n    NovoTableElement.prototype.columns;\n    /** @type {?} */\n    NovoTableElement.prototype.theme;\n    /** @type {?} */\n    NovoTableElement.prototype.skipSortAndFilterClear;\n    /** @type {?} */\n    NovoTableElement.prototype.mode;\n    /** @type {?} */\n    NovoTableElement.prototype.editable;\n    /** @type {?} */\n    NovoTableElement.prototype.rowIdentifier;\n    /** @type {?} */\n    NovoTableElement.prototype.name;\n    /** @type {?} */\n    NovoTableElement.prototype.onRowClick;\n    /** @type {?} */\n    NovoTableElement.prototype.onRowSelect;\n    /** @type {?} */\n    NovoTableElement.prototype.onTableChange;\n    /** @type {?} */\n    NovoTableElement.prototype._dataProvider;\n    /** @type {?} */\n    NovoTableElement.prototype._rows;\n    /** @type {?} */\n    NovoTableElement.prototype.selected;\n    /** @type {?} */\n    NovoTableElement.prototype.activeId;\n    /** @type {?} */\n    NovoTableElement.prototype.master;\n    /** @type {?} */\n    NovoTableElement.prototype.expandAll;\n    /** @type {?} */\n    NovoTableElement.prototype.indeterminate;\n    /** @type {?} */\n    NovoTableElement.prototype.lastPage;\n    /** @type {?} */\n    NovoTableElement.prototype.selectedPageCount;\n    /** @type {?} */\n    NovoTableElement.prototype.showSelectAllMessage;\n    /** @type {?} */\n    NovoTableElement.prototype.currentSortColumn;\n    /** @type {?} */\n    NovoTableElement.prototype.pagedData;\n    /** @type {?} */\n    NovoTableElement.prototype.pageSelected;\n    /** @type {?} */\n    NovoTableElement.prototype.toggledDropdownMap;\n    /** @type {?} */\n    NovoTableElement.prototype.NovoTableMode;\n    /** @type {?} */\n    NovoTableElement.prototype.tableForm;\n    /** @type {?} */\n    NovoTableElement.prototype.toast;\n    /** @type {?} */\n    NovoTableElement.prototype.footers;\n    /** @type {?} */\n    NovoTableElement.prototype.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast;\n    /** @type {?} */\n    NovoTableElement.prototype.loading;\n    /** @type {?} */\n    NovoTableElement.prototype.labels;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTableElement.prototype.formUtils;\n    /**\n     * @type {?}\n     * @private\n     */\n    NovoTableElement.prototype.builder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/toast/Toast.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoToastModule {\n}\nNovoToastModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [NovoToastElement],\n                exports: [NovoToastElement],\n                entryComponents: [NovoToastElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/table/Table.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoTableModule {\n}\nNovoTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    NovoFormModule,\n                    NovoTableExtrasModule,\n                    NovoToastModule,\n                    NovoButtonModule,\n                    NovoTooltipModule,\n                    NovoDropdownModule,\n                    NovoLoadingModule,\n                    NovoDatePickerModule,\n                    NovoFormExtrasModule,\n                    TextMaskModule,\n                ],\n                declarations: [NovoTableElement],\n                exports: [NovoTableElement],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: services/security/Security.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Security {\n    constructor() {\n        this.credentials = [];\n        this.change = new EventEmitter();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    grant(data) {\n        /** @type {?} */\n        const parsed = [];\n        if (data instanceof Array) {\n            for (const permission of data) {\n                parsed.push(permission.replace(/\\s/gi, ''));\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (data[key] instanceof Array) {\n                    for (const permission of data[key]) {\n                        parsed.push(`${key}.${permission}`);\n                    }\n                }\n            }\n        }\n        this.credentials = [].concat(this.credentials, parsed);\n        this.change.emit(this.credentials);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    has(value) {\n        return this.credentials.indexOf(value) > -1;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    revoke(value) {\n        /** @type {?} */\n        const i = this.credentials.indexOf(value);\n        this.credentials.splice(i, 1);\n        this.change.emit(this.credentials);\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        this.credentials = [];\n        this.change.emit(this.credentials);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    subscribe(fn) {\n        this.change.subscribe(fn);\n    }\n    /**\n     * @param {?} routes\n     * @param {?} options\n     * @return {?}\n     */\n    checkRoutes(routes, options) {\n        /** @type {?} */\n        const filtered = [];\n        for (const route of routes) {\n            if (route.entities && ~route.entities.indexOf(options.entityType)) {\n                if (route.permissions instanceof Function) {\n                    if (route.permissions(options, this)) {\n                        filtered.push(route);\n                    }\n                }\n                else if (route.permissions && route.permissions.length) {\n                    if (route.permissions.every((/**\n                     * @param {?} perm\n                     * @return {?}\n                     */\n                    (perm) => this.has(perm)))) {\n                        filtered.push(route);\n                    }\n                }\n                else {\n                    filtered.push(route);\n                }\n            }\n        }\n        return filtered;\n    }\n}\nSecurity.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /** @type {?} */\n    Security.prototype.credentials;\n    /** @type {?} */\n    Security.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/unless/Unless.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Unless {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainer\n     * @param {?} security\n     */\n    constructor(templateRef, viewContainer, security) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.security = security;\n        this.permissions = '';\n        this.isDisplayed = false;\n        this.security.subscribe(this.check.bind(this));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set bhUnless(value) {\n        this.permissions = value || '';\n        this.check();\n    }\n    /**\n     * @return {?}\n     */\n    check() {\n        /** @type {?} */\n        let display = false;\n        if (~this.permissions.indexOf('||')) {\n            /** @type {?} */\n            const ps = this.permissions.split('||');\n            for (const p of ps) {\n                if (this.security.has(p.trim())) {\n                    display = true;\n                }\n            }\n        }\n        else {\n            display = this.permissions.split('&&').every((/**\n             * @param {?} p\n             * @return {?}\n             */\n            (p) => this.security.has(p.trim())));\n        }\n        if (display) {\n            if (!this.isDisplayed) {\n                this.isDisplayed = true;\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            }\n        }\n        else {\n            this.isDisplayed = false;\n            this.viewContainer.clear();\n        }\n    }\n}\nUnless.decorators = [\n    { type: Directive, args: [{\n                selector: '[bhUnless]',\n            },] }\n];\n/** @nocollapse */\nUnless.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: Security }\n];\nUnless.propDecorators = {\n    bhUnless: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    Unless.prototype.permissions;\n    /** @type {?} */\n    Unless.prototype.isDisplayed;\n    /**\n     * @type {?}\n     * @private\n     */\n    Unless.prototype.templateRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    Unless.prototype.viewContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Unless.prototype.security;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/unless/Unless.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UnlessModule {\n}\nUnlessModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [Unless],\n                exports: [Unless],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/value/EntityList.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass EntityList {\n    constructor() {\n        this.baseEntity = '';\n        this.ENTITY_SHORT_NAMES = {\n            Lead: 'lead',\n            ClientContact: 'contact',\n            ClientContact1: 'contact',\n            ClientContact2: 'contact',\n            ClientContact3: 'contact',\n            ClientContact4: 'contact',\n            ClientContact5: 'contact',\n            ClientCorporation: 'company',\n            ClientCorporation1: 'company',\n            ClientCorporation2: 'company',\n            ClientCorporation3: 'company',\n            ClientCorporation4: 'company',\n            ClientCorporation5: 'company',\n            Opportunity: 'opportunity',\n            Task: 'task',\n            Note: 'note',\n            CorporateUser: 'user',\n            Candidate: 'candidate',\n            JobOrder: 'job',\n            JobOrder1: 'job',\n            JobOrder2: 'job',\n            JobOrder3: 'job',\n            JobOrder4: 'job',\n            JobOrder5: 'job',\n            Placement: 'placement',\n            JobSubmission: 'submission',\n            CandidateReference: 'references',\n            DistributionList: 'distributionList',\n            Appointment: 'appointment',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // use a local copy of the meta to set the type to TO_ONE for proper display\n        // without changing the input object\n        this.metaDisplay = Helpers.deepClone(this.meta);\n        this.metaDisplay.type = 'TO_ONE';\n        this.baseEntity = this.meta.associatedEntity.entity;\n        for (const entity of this.data.data) {\n            entity.isLinkable = this.isLinkable(entity);\n            entity.class = this.getClass(entity);\n        }\n    }\n    /**\n     * @param {?} entity\n     * @return {?}\n     */\n    getClass(entity) {\n        return this.ENTITY_SHORT_NAMES[entity.personSubtype];\n    }\n    /**\n     * @param {?} entity\n     * @return {?}\n     */\n    openLink(entity) {\n        entity.openLink(entity);\n    }\n    /**\n     * @param {?} entity\n     * @return {?}\n     */\n    isLinkable(entity) {\n        return entity.openLink;\n    }\n}\nEntityList.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-entity-list',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n        <div *ngFor=\"let entity of data.data\" class=\"entity\">\n            <a *ngIf=\"entity.isLinkable\" (click)=\"openLink(entity)\">\n                <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render : metaDisplay }}\n            </a>\n            <span *ngIf=\"!entity.isLinkable && entity.personSubtype\">\n                <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render : metaDisplay }}\n            </span>\n            <span *ngIf=\"!entity.isLinkable && !entity.personSubtype\">\n                {{ entity | render : metaDisplay }}\n            </span>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nEntityList.ctorParameters = () => [];\nEntityList.propDecorators = {\n    data: [{ type: Input }],\n    meta: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    EntityList.prototype.data;\n    /** @type {?} */\n    EntityList.prototype.meta;\n    /** @type {?} */\n    EntityList.prototype.baseEntity;\n    /** @type {?} */\n    EntityList.prototype.metaDisplay;\n    /** @type {?} */\n    EntityList.prototype.ENTITY_SHORT_NAMES;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/value/Render.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@classdesc\n * Renders data appropriately based on the data type found in Meta\n * All data types defined by bullhorn should be supported:\n *\n * - **String**: trims value and returns\n * - **Integer**: return value\n * - **Double**: return value fixed to 2 decimals\n * - **BigDecimal**: return value fixed to 2 decimals\n * - **Address**: only city and/or state returned\n * - **Address1**: only city and/or state returned\n * - **AddressWithoutCountry**: only city and/or state returned\n * - **Currency**: put a $ in front\n * - **Percentage**: divide by 100 fix to 2 decimals place and return\n * - **Options**: returns the appropriate 'label' for the 'value' from 'options'\n * - **Array**: returns list comma separated\n * - **DateTime**: formats the date\n * - **TimeStamp**: formats the date\n * - **ToOne**: return the entity specific name (ie. name, firstName lastName, title, ...)\n * - **ToMany**: return an array of the entity specific names (ie. name, firstName lastName, title, ...)\n *\n * \\@example\n * ```\n * {{ expression | render:field }}\n * ```\n */\nclass RenderPipe {\n    /**\n     * @param {?} changeDetector\n     * @param {?} sanitizationService\n     * @param {?} labels\n     */\n    constructor(changeDetector, sanitizationService, labels) {\n        this.changeDetector = changeDetector;\n        this.sanitizationService = sanitizationService;\n        this.labels = labels;\n    }\n    /**\n     * @param {?} objectOne\n     * @param {?} objectTwo\n     * @return {?}\n     */\n    equals(objectOne, objectTwo) {\n        if (objectOne === objectTwo) {\n            return true;\n        }\n        if (objectOne === null || objectTwo === null) {\n            return false;\n        }\n        if (objectOne !== objectOne && objectTwo !== objectTwo) {\n            return true;\n        }\n        /** @type {?} */\n        const t1 = typeof objectOne;\n        /** @type {?} */\n        const t2 = typeof objectTwo;\n        /** @type {?} */\n        let length;\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let keySet;\n        if (t1 === t2 && t1 === 'object') {\n            if (Array.isArray(objectOne)) {\n                if (!Array.isArray(objectTwo)) {\n                    return false;\n                }\n                length = objectOne.length;\n                if (length === objectTwo.length) {\n                    for (key = 0; key < length; key++) {\n                        if (!this.equals(objectOne[key], objectTwo[key])) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n            }\n            else {\n                if (Array.isArray(objectTwo)) {\n                    return false;\n                }\n                keySet = Object.create(null);\n                for (key in objectOne) {\n                    if (objectOne[key]) {\n                        if (!this.equals(objectOne[key], objectTwo[key])) {\n                            return false;\n                        }\n                        keySet[key] = true;\n                    }\n                }\n                for (key in objectTwo) {\n                    if (!(key in keySet) && typeof objectTwo[key] !== 'undefined') {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} item\n     * @param {?} entity\n     * @return {?}\n     */\n    getEntityLabel(item, entity) {\n        switch (entity) {\n            case 'CorporateUser':\n            case 'ClientContact':\n            case 'ClientContact1':\n            case 'ClientContact2':\n            case 'ClientContact3':\n            case 'ClientContact4':\n            case 'ClientContact5':\n            case 'Lead':\n            case 'Candidate':\n            case 'Person':\n                return `${item.firstName || ''} ${item.lastName || ''}`.trim();\n            case 'ClientCorporation':\n            case 'ClientCorporation1':\n            case 'ClientCorporation2':\n            case 'ClientCorporation3':\n            case 'ClientCorporation4':\n            case 'ClientCorporation5':\n                return `${item.name || ''}`.trim();\n            case 'JobOrder':\n            case 'JobOrder1':\n            case 'JobOrder2':\n            case 'JobOrder3':\n            case 'JobOrder4':\n            case 'JobOrder5':\n            case 'Opportunity':\n                return `${item.title || ''}`.trim();\n            case 'Placement':\n                /** @type {?} */\n                let label = '';\n                if (item.candidate) {\n                    label = `${item.candidate.firstName} ${item.candidate.lastName}`.trim();\n                }\n                if (item.jobOrder) {\n                    label = `${label} - ${item.jobOrder.title}`.trim();\n                }\n                return label;\n            default:\n                return '';\n        }\n    }\n    /**\n     * Define the fields to set or retrieve for the given entity. Getter and Setter methods will automagically\n     * be set up on the entity once the fields are defined.\n     * @param {?} value\n     * @param {?} args - fields can either be sent as a list of arguments or as an Array\n     * @return {?} text\n     */\n    render(value, args) {\n        /** @type {?} */\n        let type = null;\n        /** @type {?} */\n        let text = value;\n        // Handle when we don't have meta, but passing an entity\n        if (value && value._subtype && !args) {\n            return this.getEntityLabel(value, value._subtype);\n        }\n        // Stop logic for nulls\n        if (value === undefined || value === null || !args) {\n            return text;\n        }\n        if (args.formatter && typeof args.formatter === 'function') {\n            return args.formatter(value, args);\n        }\n        // TODO move this to a service\n        // Determine TYPE because its not just 1 value that determines this.\n        if (args.type === 'TO_MANY') {\n            type = 'ToMany';\n        }\n        else if (args.type === 'TO_ONE') {\n            type = args.associatedEntity.entity;\n        }\n        else if (args.dataSpecialization === 'DATETIME') {\n            type = 'DateTime';\n        }\n        else if (args.dataSpecialization === 'YEAR') {\n            type = 'Year';\n        }\n        else if (args.dataSpecialization === 'DATE' && args.dataType === 'Date') {\n            type = 'Date';\n        }\n        else if (args.dataType === 'Timestamp') {\n            type = 'Timestamp';\n        }\n        else if (['mobile', 'phone', 'phone1', 'phone2', 'phone3', 'workPhone'].indexOf(args.name) > -1) {\n            type = 'Phone';\n        }\n        else if (args.name && args.name.substring(0, 5) === 'email') {\n            type = 'Email';\n        }\n        else if ((args.name && args.name === 'address.countryID') || args.optionsType === 'Country') {\n            type = 'Country';\n        }\n        else if (args.optionsType === 'SkillText') {\n            type = 'SkillText';\n        }\n        else if (args.options || args.inputType === 'SELECT' || args.inputType === 'CHECKBOX') {\n            type = 'Options';\n        }\n        else if (['MONEY', 'PERCENTAGE', 'HTML', 'SSN'].indexOf(args.dataSpecialization) > -1) {\n            type = this.capitalize(args.dataSpecialization.toLowerCase());\n        }\n        else {\n            type = args.dataType || 'default';\n        }\n        // Transform data here\n        try {\n            switch (type) {\n                case 'Address':\n                case 'Address1':\n                case 'AddressWithoutCountry':\n                case 'SecondaryAddress':\n                case 'BillingAddress':\n                    /** @type {?} */\n                    const country = findByCountryId(Number(value.countryName));\n                    text = '';\n                    if (value.address1 || value.address2) {\n                        text += `${value.address1 || ''} ${value.address2 || ''}<br />\\n`;\n                    }\n                    text += `${value.city || ''} ${value.state || ''} ${value.zip || ''}${value.city || value.state || value.zip ? '<br />\\n' : ''}`;\n                    text += `${country ? country.name : value.countryName || ''}${country || value.countryName ? '<br />\\n' : ''}`;\n                    text = this.sanitizationService.bypassSecurityTrustHtml(text.trim());\n                    break;\n                case 'DateTime':\n                case 'Timestamp':\n                    text = this.labels.formatDateShort(value);\n                    break;\n                case 'Date':\n                    text = this.labels.formatDate(new Date(value));\n                    break;\n                case 'Year':\n                    text = new Date(value).getFullYear();\n                    break;\n                case 'Phone':\n                case 'Email':\n                    text = value;\n                    break;\n                case 'Money':\n                    text = this.labels.formatCurrency(value);\n                    break;\n                case 'Percentage':\n                    text = this.labels.formatNumber(parseFloat(value).toString(), { style: 'percent', minimumFractionDigits: 2 });\n                    break;\n                case 'Double':\n                case 'BigDecimal':\n                    text = this.labels.formatNumber(value, { minimumFractionDigits: this.getNumberDecimalPlaces(value) });\n                    break;\n                case 'Integer':\n                    text = value;\n                    break;\n                case 'BusinessSector':\n                case 'Category':\n                case 'Certification':\n                case 'ClientCorporation':\n                case 'CorporationDepartment':\n                case 'DistributionList':\n                case 'Skill':\n                case 'Tearsheet':\n                case 'Specialty':\n                    text = value.label || value.name || '';\n                    break;\n                case 'SkillText':\n                    text = Array.isArray(value) ? value.join(', ') : value;\n                    break;\n                case 'Lead':\n                case 'Candidate':\n                case 'ClientContact':\n                case 'CorporateUser':\n                case 'Person':\n                    text = value.label || `${value.firstName || ''} ${value.lastName || ''}`;\n                    break;\n                case 'Opportunity':\n                case 'JobOrder':\n                    text = value.label || value.title || '';\n                    break;\n                case 'Placement':\n                    if (value.candidate) {\n                        text = `${value.candidate.firstName || ''} ${value.candidate.lastName || ''}`;\n                    }\n                    if (value.jobOrder) {\n                        text = value.candidate ? `${text} - ${value.jobOrder.title || ''}` : `${value.jobOrder.title || ''}`;\n                    }\n                    break;\n                case 'JobSubmission':\n                    text =\n                        value.label ||\n                            `${value.jobOrder ? `${value.jobOrder.title} - ` : ''} ${value.candidate ? value.candidate.firstName : ''} ${value.candidate ? value.candidate.lastName : ''}`;\n                    break;\n                case 'WorkersCompensationRate':\n                    text = `${value.compensation ? `${value.compensation.code} - ` : ''} ${value.compensation ? value.compensation.name : ''}`;\n                    break;\n                case 'Options':\n                    text = this.options(value, args.options, args);\n                    break;\n                case 'ToMany':\n                    if (['Candidate', 'CorporateUser', 'Person'].indexOf(args.associatedEntity.entity) > -1) {\n                        text = this.concat(value.data, 'firstName', 'lastName');\n                        if (value.data.length < value.total) {\n                            text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n                        }\n                    }\n                    else if (['Category', 'BusinessSector', 'Skill', 'Specialty', 'ClientCorporation', 'CorporationDepartment'].indexOf(args.associatedEntity.entity) > -1) {\n                        text = this.concat(value.data, 'name');\n                        if (value.data.length < value.total) {\n                            text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n                        }\n                    }\n                    else if (args.associatedEntity.entity === 'MailListPushHistoryDetail') {\n                        text = this.concat(value.data, 'externalListName');\n                    }\n                    else {\n                        text = `${value.total || ''}`;\n                    }\n                    break;\n                case 'Country':\n                    /** @type {?} */\n                    const countryObj = findByCountryId(Number(value));\n                    text = countryObj ? countryObj.name : value;\n                    break;\n                case 'Html':\n                    if (Array.isArray(value)) {\n                        value = value.join(' ');\n                    }\n                    if (typeof text === 'string') {\n                        text = this.sanitizationService.bypassSecurityTrustHtml(value.replace(/\\<a/gi, '<a target=\"_blank\"'));\n                    }\n                    break;\n                case 'CandidateComment':\n                    text = value.comments ? `${this.labels.formatDateShort(value.dateLastModified)} (${value.name}) - ${value.comments}` : '';\n                    break;\n                default:\n                    text = value.trim ? value.trim() : value;\n                    break;\n            }\n            return text;\n        }\n        catch (e) {\n            console.error(`WARNING: There was a problem rendering the value of the field: ${args.label}. Please check the configuration`);\n            console.error(e);\n            return text;\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} args\n     * @return {?}\n     */\n    updateValue(value, args) {\n        this.value = this.render(value, args);\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * @param {?=} value\n     * @param {?=} args\n     * @return {?}\n     */\n    transform(value, args) {\n        if (value === undefined || value === null) {\n            return '';\n        }\n        if (this.equals(value, this.lastValue) && this.equals(args, this.lastArgs)) {\n            return this.value;\n        }\n        this.lastValue = value;\n        this.lastArgs = args;\n        this.updateValue(this.lastValue, this.lastArgs);\n        return this.value;\n    }\n    /**\n     * Simple function concat a list of fields from a list of objects\n     * @param {?} list - the list of values to use\n     * @param {...?} fields - list of fields to extract\n     * @return {?}\n     */\n    concat(list, ...fields) {\n        /** @type {?} */\n        const data = [];\n        for (const item of list) {\n            /** @type {?} */\n            const label = [];\n            for (const field of fields) {\n                label.push(`${item[field]}`);\n            }\n            data.push(label.join(' '));\n        }\n        return data.join(', ');\n    }\n    /**\n     * Simple function to look up the **label** to display from options\n     * @param {?} value - the value to find\n     * @param {?} list - list of options (label/value pairs)\n     * @param {?} args\n     * @return {?}\n     */\n    options(value, list, args) {\n        if (!Array.isArray(value)) {\n            value = [value];\n        }\n        try {\n            return value.map((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => {\n                for (const option of list) {\n                    if (option.value === item) {\n                        return option.label;\n                    }\n                }\n                return item;\n            }));\n        }\n        catch (e) {\n            if (!args.optionsType) {\n                throw Error(e);\n            }\n            return value;\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getNumberDecimalPlaces(value) {\n        /** @type {?} */\n        let decimalPlaces;\n        if (value) {\n            /** @type {?} */\n            const numberString = parseFloat(value).toString();\n            /** @type {?} */\n            const decimalPlace = (numberString || '').split('.')[1] || '';\n            decimalPlaces = decimalPlace.length;\n        }\n        return decimalPlaces || 1;\n    }\n    /**\n     * Capitalizes the first letter\n     * @param {?} value\n     * @return {?}\n     */\n    capitalize(value) {\n        return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n}\nRenderPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'render',\n                pure: false,\n            },] },\n    { type: Injectable }\n];\n/** @nocollapse */\nRenderPipe.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DomSanitizer },\n    { type: NovoLabelService }\n];\nif (false) {\n    /** @type {?} */\n    RenderPipe.prototype.value;\n    /** @type {?} */\n    RenderPipe.prototype.lastValue;\n    /** @type {?} */\n    RenderPipe.prototype.lastArgs;\n    /**\n     * @type {?}\n     * @private\n     */\n    RenderPipe.prototype.changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    RenderPipe.prototype.sanitizationService;\n    /**\n     * @type {?}\n     * @private\n     */\n    RenderPipe.prototype.labels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/value/Value.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst NOVO_VALUE_TYPE = {\n    DEFAULT: 0,\n    ENTITY_LIST: 1,\n    LINK: 2,\n    INTERNAL_LINK: 3,\n};\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.DEFAULT] = 'DEFAULT';\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.ENTITY_LIST] = 'ENTITY_LIST';\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.LINK] = 'LINK';\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.INTERNAL_LINK] = 'INTERNAL_LINK';\n/** @enum {number} */\nconst NOVO_VALUE_THEME = {\n    DEFAULT: 0,\n    MOBILE: 1,\n};\nNOVO_VALUE_THEME[NOVO_VALUE_THEME.DEFAULT] = 'DEFAULT';\nNOVO_VALUE_THEME[NOVO_VALUE_THEME.MOBILE] = 'MOBILE';\nclass NovoValueElement {\n    constructor() {\n        // TODO use interface\n        this.meta = { type: 'SCALAR', label: '' }; // TODO use interface\n        // TODO use interface\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.NOVO_VALUE_TYPE = NOVO_VALUE_TYPE;\n        this.NOVO_VALUE_THEME = NOVO_VALUE_THEME;\n        this.customClass = '';\n    }\n    /**\n     * @param {?} lbl\n     * @return {?}\n     */\n    set label(lbl) {\n        this.meta.label = lbl;\n    }\n    /**\n     * @return {?}\n     */\n    get label() {\n        return this.meta.label;\n    }\n    /**\n     * @param {?} typ\n     * @return {?}\n     */\n    set type(typ) {\n        this.meta.type = typ;\n    }\n    /**\n     * @return {?}\n     */\n    get type() {\n        return this.meta.type;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (Helpers.isEmpty(this.meta)) {\n            this.meta = {\n                label: '',\n            };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isMobile() {\n        return this.theme === NOVO_VALUE_THEME.MOBILE;\n    }\n    /**\n     * @param {?} icon\n     * @return {?}\n     */\n    iconClass(icon) {\n        /** @type {?} */\n        let iconClass = '';\n        if (icon && icon.iconCls) {\n            iconClass = `bhi-${icon.iconCls} actions`;\n            if (icon.onIconClick) {\n                iconClass = `${iconClass} clickable`;\n            }\n            return iconClass;\n        }\n        return iconClass;\n    }\n    /**\n     * @return {?}\n     */\n    get isDefault() {\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    get showLabel() {\n        return (this._type === NOVO_VALUE_TYPE.INTERNAL_LINK || this._type === NOVO_VALUE_TYPE.LINK || this._type === NOVO_VALUE_TYPE.ENTITY_LIST);\n    }\n    /**\n     * @return {?}\n     */\n    get showIcon() {\n        return this.meta && this.meta.icons && this.meta.icons.length && !Helpers.isEmpty(this.data);\n    }\n    /**\n     * @param {?} icon\n     * @return {?}\n     */\n    onValueClick(icon) {\n        if (icon.onIconClick && typeof icon.onIconClick === 'function') {\n            icon.onIconClick(this.data, this.meta);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    openLink() {\n        if (this.meta && this.meta.openLink && typeof this.meta.openLink === 'function') {\n            this.meta.openLink(this.data, this.meta);\n        }\n    }\n    /**\n     * @param {?=} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this.meta && this.isLinkField(this.meta, this.data)) {\n            this._type = NOVO_VALUE_TYPE.LINK;\n            // Make sure the value has a protocol, otherwise the URL will be relative\n            /** @type {?} */\n            const hasProtocol = new RegExp('^(http|https)://', 'i');\n            if (!hasProtocol.test(this.data)) {\n                this.url = `http://${this.data}`;\n            }\n            else {\n                this.url = this.data;\n            }\n        }\n        else if (this.isEntityList(this.meta.type)) {\n            this._type = NOVO_VALUE_TYPE.ENTITY_LIST;\n        }\n        else if (this.isHTMLField(this.meta)) {\n            this.customClass = this.meta.customClass ? this.meta.customClass : '';\n            if (this.meta.stripHTML && this.data && this.data.replace) {\n                this.data = this.data.replace(/<(?!style|\\/style).+?>/gi, '').trim();\n            }\n        }\n        else if (this.meta && this.meta.associatedEntity) {\n            switch (this.meta.associatedEntity.entity) {\n                case 'ClientCorporation':\n                case 'ClientContact':\n                case 'Candidate':\n                case 'Opportunity':\n                case 'JobOrder':\n                case 'Placement':\n                case 'Lead':\n                    this._type = NOVO_VALUE_TYPE.INTERNAL_LINK;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    /**\n     * @param {?} field\n     * @param {?} data\n     * @return {?}\n     */\n    isLinkField(field, data) {\n        /** @type {?} */\n        const linkFields = ['companyURL', 'clientCorporationCompanyURL'];\n        /** @type {?} */\n        const regex = new RegExp('^(https?://(?:www.|(?!www))[^s.]+.[^s]{2,}|www.[^s]+.[^s]{2,})$', 'gi');\n        /** @type {?} */\n        const isURL = Helpers.isString(data) && regex.exec(data.trim());\n        return linkFields.indexOf(field.name) > -1 || !!isURL || field.type === NOVO_VALUE_TYPE.LINK;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isEntityList(type) {\n        return type === 'TO_MANY';\n    }\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    isHTMLField(meta) {\n        return meta.dataSpecialization === 'HTML' || meta.inputType === 'TEXTAREA';\n    }\n}\nNovoValueElement.decorators = [\n    { type: Component, args: [{\n                selector: 'novo-value',\n                template: `\n      <ng-container [ngSwitch]=\"_type\">\n          <div class=\"value-outer\" *ngIf=\"showLabel\">\n              <label>{{ meta.label }}</label>\n              <span class=\"value\">\n                <i *ngIf=\"meta.showEntityIcon\" class=\"bhi-circle {{meta.entityIconClass}}\"></i>\n                <a *ngSwitchCase=\"NOVO_VALUE_TYPE.INTERNAL_LINK\" (click)=\"openLink()\" [innerHTML]=\"data | render : meta\"></a>\n                <a *ngSwitchCase=\"NOVO_VALUE_TYPE.LINK\" class=\"value\" [href]=\"url\" target=\"_blank\" [innerHTML]=\"data | render : meta\"></a>\n              </span>\n              <novo-entity-list *ngSwitchCase=\"NOVO_VALUE_TYPE.ENTITY_LIST\" [data]='data' [meta]=\"meta\"></novo-entity-list>\n          </div>\n          <div *ngSwitchDefault class=\"value-outer\" [ngClass]=\"customClass\">\n              <label>{{ meta.label }}</label>\n              <div *ngIf=\"isDefault\" class=\"value\" [innerHTML]=\"data | render : meta\"></div>\n          </div>\n          <div class=\"actions\" *ngIf=\"showIcon\">\n              <i *ngFor=\"let icon of meta.icons\" [class]=\"iconClass(icon)\" (click)=\"onValueClick(icon)\"></i>\n          </div>\n      </ng-container>\n    `\n            }] }\n];\nNovoValueElement.propDecorators = {\n    data: [{ type: Input }],\n    meta: [{ type: Input }],\n    theme: [{ type: Input }],\n    label: [{ type: Input }],\n    type: [{ type: Input }],\n    isMobile: [{ type: HostBinding, args: ['class.mobile',] }]\n};\nif (false) {\n    /** @type {?} */\n    NovoValueElement.prototype.data;\n    /** @type {?} */\n    NovoValueElement.prototype.meta;\n    /** @type {?} */\n    NovoValueElement.prototype.theme;\n    /** @type {?} */\n    NovoValueElement.prototype._type;\n    /** @type {?} */\n    NovoValueElement.prototype.NOVO_VALUE_TYPE;\n    /** @type {?} */\n    NovoValueElement.prototype.NOVO_VALUE_THEME;\n    /** @type {?} */\n    NovoValueElement.prototype.url;\n    /** @type {?} */\n    NovoValueElement.prototype.customClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: elements/value/Value.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoValueModule {\n}\nNovoValueModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [NovoValueElement, RenderPipe, EntityList],\n                exports: [NovoValueElement, RenderPipe, EntityList],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: novo-elements.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoElementsModule {\n}\nNovoElementsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [ReactiveFormsModule],\n                exports: [\n                    NovoPipesModule,\n                    NovoButtonModule,\n                    NovoLoadingModule,\n                    NovoCardModule,\n                    NovoCalendarModule,\n                    NovoToastModule,\n                    NovoTooltipModule,\n                    NovoHeaderModule,\n                    NovoTabModule,\n                    NovoTilesModule,\n                    NovoModalModule,\n                    NovoQuickNoteModule,\n                    NovoRadioModule,\n                    NovoDropdownModule,\n                    NovoSelectModule,\n                    NovoListModule,\n                    NovoSwitchModule,\n                    NovoDragulaModule,\n                    NovoSliderModule,\n                    NovoPickerModule,\n                    NovoChipsModule,\n                    NovoDatePickerModule,\n                    NovoTimePickerModule,\n                    NovoDateTimePickerModule,\n                    NovoNovoCKEditorModule,\n                    NovoTipWellModule,\n                    NovoSimpleTableModule,\n                    NovoTableModule,\n                    NovoTableExtrasModule,\n                    NovoFormModule,\n                    NovoFormExtrasModule,\n                    NovoCategoryDropdownModule,\n                    NovoMultiPickerModule,\n                    NovoPopOverModule,\n                    NovoDataTableModule,\n                    NovoSearchBoxModule,\n                    NovoOverlayModule,\n                    GooglePlacesModule,\n                    NovoValueModule,\n                    NovoAceEditorModule,\n                    NovoIconModule,\n                    NovoExpansionModule,\n                    UnlessModule,\n                    NovoCommonModule,\n                    NovoStepperModule,\n                    ScrollingModule,\n                    NovoTabbedGroupPickerModule,\n                ],\n                providers: [\n                    { provide: ComponentUtils, useClass: ComponentUtils },\n                    { provide: DateFormatService, useClass: DateFormatService },\n                    { provide: NovoLabelService, useClass: NovoLabelService },\n                    { provide: NovoDragulaService, useClass: NovoDragulaService },\n                    { provide: GooglePlacesService, useClass: GooglePlacesService },\n                    { provide: GlobalRef, useClass: BrowserGlobalRef },\n                    { provide: LocalStorageService, useClass: LocalStorageService },\n                    { provide: OptionsService, useClass: OptionsService },\n                    { provide: FormUtils, useClass: FormUtils },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: novo-elements.providers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NOVO_ELEMENTS_PROVIDERS = [\n    { provide: NovoDragulaService, useClass: NovoDragulaService },\n    { provide: NovoModalRef, useClass: NovoModalRef },\n    { provide: NovoModalService, useClass: NovoModalService },\n    { provide: GooglePlacesService, useClass: GooglePlacesService },\n    { provide: NovoToastService, useClass: NovoToastService },\n    { provide: ComponentUtils, useClass: ComponentUtils },\n    { provide: GlobalRef, useClass: BrowserGlobalRef },\n    { provide: LocalStorageService, useClass: LocalStorageService },\n    { provide: OptionsService, useClass: OptionsService },\n    FieldInteractionApi,\n    DateFormatService,\n    Security,\n    NovoTemplateService,\n];\nclass NovoElementProviders {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NovoElementProviders,\n            providers: [...NOVO_ELEMENTS_PROVIDERS],\n        };\n    }\n    /**\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: NovoElementProviders,\n        };\n    }\n}\nNovoElementProviders.decorators = [\n    { type: NgModule, args: [{\n                imports: [],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/app-bridge/AppBridge.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst AppBridgeHandler = {\n    HTTP: 0,\n    OPEN: 1,\n    OPEN_LIST: 2,\n    CLOSE: 3,\n    REFRESH: 4,\n    PIN: 5,\n    REGISTER: 6,\n    UPDATE: 7,\n    REQUEST_DATA: 8,\n    CALLBACK: 9,\n};\nAppBridgeHandler[AppBridgeHandler.HTTP] = 'HTTP';\nAppBridgeHandler[AppBridgeHandler.OPEN] = 'OPEN';\nAppBridgeHandler[AppBridgeHandler.OPEN_LIST] = 'OPEN_LIST';\nAppBridgeHandler[AppBridgeHandler.CLOSE] = 'CLOSE';\nAppBridgeHandler[AppBridgeHandler.REFRESH] = 'REFRESH';\nAppBridgeHandler[AppBridgeHandler.PIN] = 'PIN';\nAppBridgeHandler[AppBridgeHandler.REGISTER] = 'REGISTER';\nAppBridgeHandler[AppBridgeHandler.UPDATE] = 'UPDATE';\nAppBridgeHandler[AppBridgeHandler.REQUEST_DATA] = 'REQUEST_DATA';\nAppBridgeHandler[AppBridgeHandler.CALLBACK] = 'CALLBACK';\n/**\n * @record\n */\nfunction IAppBridgeOpenEvent() { }\nif (false) {\n    /** @type {?} */\n    IAppBridgeOpenEvent.prototype.type;\n    /** @type {?} */\n    IAppBridgeOpenEvent.prototype.entityType;\n    /** @type {?|undefined} */\n    IAppBridgeOpenEvent.prototype.entityId;\n    /** @type {?|undefined} */\n    IAppBridgeOpenEvent.prototype.tab;\n    /** @type {?|undefined} */\n    IAppBridgeOpenEvent.prototype.data;\n    /** @type {?|undefined} */\n    IAppBridgeOpenEvent.prototype.passthrough;\n}\n/**\n * @record\n */\nfunction IAppBridgeOpenListEvent() { }\nif (false) {\n    /** @type {?} */\n    IAppBridgeOpenListEvent.prototype.type;\n    /** @type {?} */\n    IAppBridgeOpenListEvent.prototype.keywords;\n    /** @type {?} */\n    IAppBridgeOpenListEvent.prototype.criteria;\n}\n/**\n * @record\n */\nfunction IAppBridgeRequestDataEvent() { }\nif (false) {\n    /** @type {?} */\n    IAppBridgeRequestDataEvent.prototype.type;\n}\n/** @type {?} */\nconst HTTP_VERBS = {\n    GET: 'get',\n    POST: 'post',\n    PUT: 'put',\n    DELETE: 'delete',\n};\n/** @type {?} */\nconst MESSAGE_TYPES = {\n    REGISTER: 'register',\n    OPEN: 'open',\n    OPEN_LIST: 'openList',\n    CLOSE: 'close',\n    REFRESH: 'refresh',\n    PIN: 'pin',\n    UPDATE: 'update',\n    HTTP_GET: 'httpGET',\n    HTTP_POST: 'httpPOST',\n    HTTP_PUT: 'httpPUT',\n    HTTP_DELETE: 'httpDELETE',\n    CUSTOM_EVENT: 'customEvent',\n    REQUEST_DATA: 'requestData',\n    CALLBACK: 'callback',\n};\nclass AppBridgeService {\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    create(name) {\n        return new AppBridge(name);\n    }\n}\nclass DevAppBridgeService {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    create(name) {\n        return new DevAppBridge(name, this.http);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DevAppBridgeService.prototype.http;\n}\nclass AppBridge {\n    // Type?\n    /**\n     * @param {?=} traceName\n     */\n    constructor(traceName = 'AppBridge') {\n        this.id = `${Date.now()}`;\n        this._registeredFrames = [];\n        this._handlers = {};\n        this._tracing = false;\n        this._eventListeners = {};\n        this.traceName = traceName;\n        if (postRobot) {\n            postRobot.CONFIG.LOG_LEVEL = 'error';\n            try {\n                this._setupHandlers();\n            }\n            catch (error) {\n                // No op\n            }\n        }\n    }\n    /**\n     * @param {?} tracing\n     * @return {?}\n     */\n    set tracing(tracing) {\n        this._tracing = tracing;\n    }\n    /**\n     * @param {?} type\n     * @param {?} handler\n     * @return {?}\n     */\n    handle(type, handler) {\n        this._handlers[type] = handler;\n    }\n    /**\n     * @private\n     * @param {?} eventType\n     * @param {?} event\n     * @return {?}\n     */\n    _trace(eventType, event) {\n        if (this._tracing) {\n            console.log(`[${this.traceName || this.id}] \"${eventType}\"`, event); // tslint:disable-line\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setupHandlers() {\n        // Register\n        postRobot.on(MESSAGE_TYPES.REGISTER, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.REGISTER, event);\n            this._registeredFrames.push(event);\n            return this.register(event.data).then((/**\n             * @param {?} windowName\n             * @return {?}\n             */\n            (windowName) => {\n                return { windowName };\n            }));\n        }));\n        // Update\n        postRobot.on(MESSAGE_TYPES.UPDATE, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.UPDATE, event);\n            return this.update(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // Open\n        postRobot.on(MESSAGE_TYPES.OPEN, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.OPEN, event);\n            return this.open(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        postRobot.on(MESSAGE_TYPES.OPEN_LIST, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.OPEN_LIST, event);\n            return this.openList(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // Close\n        postRobot.on(MESSAGE_TYPES.CLOSE, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.CLOSE, event);\n            /** @type {?} */\n            const index = this._registeredFrames.findIndex((/**\n             * @param {?} frame\n             * @return {?}\n             */\n            (frame) => frame.data.id === event.data.id));\n            if (index !== -1) {\n                this._registeredFrames.splice(index, 1);\n            }\n            return this.close(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // Refresh\n        postRobot.on(MESSAGE_TYPES.REFRESH, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.REFRESH, event);\n            return this.refresh(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // PIN\n        postRobot.on(MESSAGE_TYPES.PIN, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.PIN, event);\n            return this.pin(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // REQUEST_DATA\n        postRobot.on(MESSAGE_TYPES.REQUEST_DATA, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.REQUEST_DATA, event);\n            return this.requestData(event.data).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                return { data: result.data, error: result.error };\n            }));\n        }));\n        // CALLBACKS\n        postRobot.on(MESSAGE_TYPES.CALLBACK, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.CALLBACK, event);\n            return this.callback(event.data).then((/**\n             * @param {?} success\n             * @return {?}\n             */\n            (success) => {\n                return { success };\n            }));\n        }));\n        // HTTP-GET\n        postRobot.on(MESSAGE_TYPES.HTTP_GET, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.HTTP_GET, event);\n            return this.httpGET(event.data.relativeURL).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                return { data: result.data, error: result.error };\n            }));\n        }));\n        // HTTP-POST\n        postRobot.on(MESSAGE_TYPES.HTTP_POST, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.HTTP_POST, event);\n            return this.httpPOST(event.data.relativeURL, event.data.data).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                return { data: result.data, error: result.error };\n            }));\n        }));\n        // HTTP-PUT\n        postRobot.on(MESSAGE_TYPES.HTTP_PUT, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.HTTP_PUT, event);\n            return this.httpPUT(event.data.relativeURL, event.data.data).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                return { data: result.data, error: result.error };\n            }));\n        }));\n        // HTTP-DELETE\n        postRobot.on(MESSAGE_TYPES.HTTP_DELETE, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.HTTP_DELETE, event);\n            return this.httpDELETE(event.data.relativeURL).then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => {\n                return { data: result.data, error: result.error };\n            }));\n        }));\n        // Custom Events\n        postRobot.on(MESSAGE_TYPES.CUSTOM_EVENT, (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._trace(MESSAGE_TYPES.CUSTOM_EVENT, event);\n            if (this._eventListeners[event.data.event]) {\n                this._eventListeners[event.data.event].forEach((/**\n                 * @param {?} listener\n                 * @return {?}\n                 */\n                (listener) => {\n                    listener(event.data.data);\n                }));\n            }\n            if (this._registeredFrames.length > 0) {\n                this._registeredFrames.forEach((/**\n                 * @param {?} frame\n                 * @return {?}\n                 */\n                (frame) => {\n                    postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, event.data);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an open event\n     * @param {?} packet any - packet of data to send with the open event\n     * @return {?}\n     */\n    open(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.OPEN]) {\n                this._handlers[AppBridgeHandler.OPEN](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                Object.assign(packet, { id: this.id, windowName: this.windowName });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.OPEN, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.OPEN} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an openList event\n     * @param {?} packet any - packet of data to send with the open event\n     * @return {?}\n     */\n    openList(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.OPEN_LIST]) {\n                this._handlers[AppBridgeHandler.OPEN_LIST](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                /** @type {?} */\n                const openListPacket = {};\n                Object.assign(openListPacket, { type: 'List', entityType: packet.type, keywords: packet.keywords, criteria: packet.criteria });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.OPEN_LIST, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.OPEN_LIST} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an close event\n     * @param {?} packet any - packet of data to send with the close event\n     * @return {?}\n     */\n    update(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.UPDATE]) {\n                this._handlers[AppBridgeHandler.UPDATE](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                Object.assign(packet, { id: this.id, windowName: this.windowName });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.UPDATE, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.UPDATE} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an close event\n     * @param {?=} packet\n     * @return {?}\n     */\n    close(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.CLOSE]) {\n                this._handlers[AppBridgeHandler.CLOSE](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                if (packet) {\n                    console.info('[AppBridge] - close(packet) is deprecated! Please just use close()!'); // tslint:disable-line\n                }\n                /** @type {?} */\n                const realPacket = { id: this.id, windowName: this.windowName };\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.CLOSE, realPacket)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.CLOSE} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an close event\n     * @param {?=} packet\n     * @return {?}\n     */\n    refresh(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.REFRESH]) {\n                this._handlers[AppBridgeHandler.REFRESH](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                if (packet) {\n                    console.info('[AppBridge] - refresh(packet) is deprecated! Please just use refresh()!'); // tslint:disable-line\n                }\n                /** @type {?} */\n                const realPacket = { id: this.id, windowName: this.windowName };\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.REFRESH, realPacket)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.REFRESH} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to a pin event\n     * @param {?=} packet\n     * @return {?}\n     */\n    pin(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.PIN]) {\n                this._handlers[AppBridgeHandler.PIN](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                if (packet) {\n                    console.info('[AppBridge] - pin(packet) is deprecated! Please just use pin()!'); // tslint:disable-line\n                }\n                /** @type {?} */\n                const realPacket = { id: this.id, windowName: this.windowName };\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.PIN, realPacket)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.PIN} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to a requestData event\n     * @param {?} packet any - packet of data to send with the requestData event\n     * @return {?}\n     */\n    requestData(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.REQUEST_DATA]) {\n                this._handlers[AppBridgeHandler.REQUEST_DATA](packet, (/**\n                 * @param {?} data\n                 * @return {?}\n                 */\n                (data) => {\n                    if (data) {\n                        resolve({ data });\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                Object.assign(packet, { id: this.id, windowName: this.windowName });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.REQUEST_DATA, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.REQUEST_DATA} (callback)`, event);\n                    if (event.data) {\n                        resolve({ data: event.data.data });\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires a generic callback command\n     * @param {?} packet string - key: string, generic: boolean\n     * @return {?}\n     */\n    callback(packet) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.CALLBACK]) {\n                this._handlers[AppBridgeHandler.CALLBACK](packet, (/**\n                 * @param {?} success\n                 * @return {?}\n                 */\n                (success) => {\n                    if (success) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }));\n            }\n            else {\n                Object.assign(packet, { id: this.id, windowName: this.windowName });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.CALLBACK, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.CALLBACK} (callback)`, event);\n                    if (event.data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(false);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an register event\n     * @param {?=} packet any - packet of data to send with the event\n     * @return {?}\n     */\n    register(packet = {}) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.REGISTER]) {\n                this._handlers[AppBridgeHandler.REGISTER](packet, (/**\n                 * @param {?} windowName\n                 * @return {?}\n                 */\n                (windowName) => {\n                    if (windowName) {\n                        resolve(windowName);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                }));\n            }\n            else {\n                Object.assign(packet, { id: this.id });\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.REGISTER, packet)\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this._trace(`${MESSAGE_TYPES.REGISTER} (callback)`, event);\n                    if (event.data) {\n                        this.windowName = event.data.windowName;\n                        resolve(event.data.windowName);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    this._trace(`${MESSAGE_TYPES.REGISTER} - FAILED - (no parent)`, err);\n                    reject(err);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an HTTP_GET event\n     * @param {?} relativeURL\n     * @return {?}\n     */\n    httpGET(relativeURL) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.HTTP]) {\n                this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.GET, relativeURL }, (/**\n                 * @param {?} data\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (data, error) => {\n                    resolve({ data, error });\n                }));\n            }\n            else {\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.HTTP_GET, { relativeURL })\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    resolve({ data: event.data.data, error: event.data.error });\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(null);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an HTTP_POST event\n     * @param {?} relativeURL\n     * @param {?} postData\n     * @return {?}\n     */\n    httpPOST(relativeURL, postData) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.HTTP]) {\n                this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.POST, relativeURL, data: postData }, (/**\n                 * @param {?} data\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (data, error) => {\n                    resolve({ data, error });\n                }));\n            }\n            else {\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.HTTP_POST, { relativeURL, data: postData })\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    resolve({ data: event.data.data, error: event.data.error });\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(null);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an HTTP_PUT event\n     * @param {?} relativeURL\n     * @param {?} putData\n     * @return {?}\n     */\n    httpPUT(relativeURL, putData) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.HTTP]) {\n                this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.PUT, relativeURL, data: putData }, (/**\n                 * @param {?} data\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (data, error) => {\n                    resolve({ data, error });\n                }));\n            }\n            else {\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.HTTP_PUT, { relativeURL, data: putData })\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    resolve({ data: event.data.data, error: event.data.error });\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(null);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires or responds to an HTTP_DELETE event\n     * @param {?} relativeURL\n     * @return {?}\n     */\n    httpDELETE(relativeURL) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            if (this._handlers[AppBridgeHandler.HTTP]) {\n                this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.DELETE, relativeURL }, (/**\n                 * @param {?} data\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (data, error) => {\n                    resolve({ data, error });\n                }));\n            }\n            else {\n                postRobot\n                    .sendToParent(MESSAGE_TYPES.HTTP_DELETE, { relativeURL })\n                    .then((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    resolve({ data: event.data.data, error: event.data.error });\n                }))\n                    .catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    reject(null);\n                }));\n            }\n        }));\n    }\n    /**\n     * Fires a custom event to anywhere in the application\n     * @param {?} event string - event name to fire\n     * @param {?} data any - data to be sent along with the event\n     * @return {?}\n     */\n    fireEvent(event, data) {\n        return new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            postRobot\n                .sendToParent(MESSAGE_TYPES.CUSTOM_EVENT, { event, data })\n                .then((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                resolve(e);\n            }))\n                .catch((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                reject(null);\n            }));\n        }));\n    }\n    /**\n     * Fires a custom event to all registered frames\n     * @param {?} event string - event name to fire\n     * @param {?} data any - data to be sent along with the event\n     * @return {?}\n     */\n    fireEventToChildren(event, data) {\n        if (this._registeredFrames.length > 0) {\n            this._registeredFrames.forEach((/**\n             * @param {?} frame\n             * @return {?}\n             */\n            (frame) => {\n                postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, {\n                    eventType: event,\n                    data,\n                });\n            }));\n        }\n    }\n    /**\n     * Adds an event listener to a custom event\n     * @param {?} event string - event name to listen to\n     * @param {?} callback function - callback to be fired when an event is caught\n     * @return {?}\n     */\n    addEventListener(event, callback) {\n        if (!this._eventListeners[event]) {\n            this._eventListeners[event] = [];\n        }\n        this._eventListeners[event].push(callback);\n    }\n}\nif (false) {\n    /** @type {?} */\n    AppBridge.prototype.id;\n    /** @type {?} */\n    AppBridge.prototype.traceName;\n    /** @type {?} */\n    AppBridge.prototype.windowName;\n    /**\n     * @type {?}\n     * @private\n     */\n    AppBridge.prototype._registeredFrames;\n    /**\n     * @type {?}\n     * @private\n     */\n    AppBridge.prototype._handlers;\n    /**\n     * @type {?}\n     * @private\n     */\n    AppBridge.prototype._tracing;\n    /**\n     * @type {?}\n     * @private\n     */\n    AppBridge.prototype._eventListeners;\n}\nclass DevAppBridge extends AppBridge {\n    /**\n     * @param {?=} traceName\n     * @param {?=} http\n     */\n    constructor(traceName = 'DevAppBridge', http) {\n        super(traceName);\n        this.http = http;\n        /** @type {?} */\n        const cookie = this.getCookie('UlEncodedIdentity');\n        if (cookie && cookie.length) {\n            /** @type {?} */\n            const identity = JSON.parse(decodeURIComponent(cookie));\n            /** @type {?} */\n            const endpoints = identity.sessions.reduce((/**\n             * @param {?} obj\n             * @param {?} session\n             * @return {?}\n             */\n            (obj, session) => {\n                obj[session.name] = session.value.endpoint;\n                return obj;\n            }), {});\n            this.baseURL = endpoints.rest;\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setupHandlers() { }\n    /**\n     * Fires or responds to an HTTP_GET event\n     * @param {?} relativeURL\n     * @return {?}\n     */\n    httpGET(relativeURL) {\n        return this.http.get(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n    }\n    /**\n     * Fires or responds to an HTTP_POST event\n     * @param {?} relativeURL\n     * @param {?} postData\n     * @return {?}\n     */\n    httpPOST(relativeURL, postData) {\n        return this.http.post(`${this.baseURL}/${relativeURL}`, postData, { withCredentials: true }).toPromise();\n    }\n    /**\n     * Fires or responds to an HTTP_PUT event\n     * @param {?} relativeURL\n     * @param {?} putData\n     * @return {?}\n     */\n    httpPUT(relativeURL, putData) {\n        return this.http.put(`${this.baseURL}/${relativeURL}`, putData, { withCredentials: true }).toPromise();\n    }\n    /**\n     * Fires or responds to an HTTP_DELETE event\n     * @param {?} relativeURL\n     * @return {?}\n     */\n    httpDELETE(relativeURL) {\n        return this.http.delete(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n    }\n    /**\n     * @private\n     * @param {?} cname\n     * @return {?}\n     */\n    getCookie(cname) {\n        if (document) {\n            /** @type {?} */\n            const name = `${cname}=`;\n            /** @type {?} */\n            const ca = document.cookie.split(';');\n            for (let i = 0; i < ca.length; i++) {\n                /** @type {?} */\n                let c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.substring(1);\n                }\n                if (c.indexOf(name) === 0) {\n                    return c.substring(name.length, c.length);\n                }\n            }\n        }\n        return false;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DevAppBridge.prototype.baseURL;\n    /**\n     * @type {?}\n     * @private\n     */\n    DevAppBridge.prototype.http;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: novo-elements.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AceEditorControl, ActivityTableDataSource, ActivityTableRenderers, AddressControl, AppBridge, AppBridgeHandler, AppBridgeService, ArrayCollection, BaseControl, BasePickerResults, BaseRenderer, BrowserGlobalRef, COUNTRIES, CalendarEventResponse, CardActionsElement, CardElement, CheckListControl, CheckboxControl, ChecklistPickerResults, CollectionEvent, ComponentUtils, ControlFactory, CustomControl, DataTableBigDecimalRendererPipe, DataTableInterpolatePipe, DateCell, DateControl, DateTableCurrencyRendererPipe, DateTableDateRendererPipe, DateTableDateTimeRendererPipe, DateTableNumberRendererPipe, DateTableTimeRendererPipe, DateTimeControl, DayOfMonthPipe, DecodeURIPipe, Deferred, DevAppBridge, DevAppBridgeService, DistributionListPickerResults, EditorControl, EndOfWeekDisplayPipe, EntityList, EntityPickerResult, EntityPickerResults, FieldInteractionApi, FileControl, FormUtils, FormValidators, GlobalRef, GooglePlacesModule, GooglePlacesService, GroupByPipe, GroupedControl, GroupedMultiPickerResults, Helpers, HoursPipe, KeyCodes, LocalStorageService, MonthDayPipe, MonthPipe, NOVO_VALUE_THEME, NOVO_VALUE_TYPE, NativeSelectControl, NovoAccordion, NovoAceEditor, NovoAceEditorModule, NovoActivityTable, NovoActivityTableActions, NovoActivityTableCustomFilter, NovoActivityTableCustomHeader, NovoActivityTableEmptyMessage, NovoActivityTableNoResultsMessage, NovoActivityTableState, NovoAddressElement, NovoAutoSize, NovoButtonElement, NovoButtonModule, NovoCKEditorElement, NovoCalendarAllDayEventElement, NovoCalendarDateChangeElement, NovoCalendarDayEventElement, NovoCalendarDayViewElement, NovoCalendarHourSegmentElement, NovoCalendarModule, NovoCalendarMonthDayElement, NovoCalendarMonthHeaderElement, NovoCalendarMonthViewElement, NovoCalendarWeekEventElement, NovoCalendarWeekHeaderElement, NovoCalendarWeekViewElement, NovoCardModule, NovoCategoryDropdownElement, NovoCategoryDropdownModule, NovoCheckListElement, NovoCheckboxElement, NovoChipElement, NovoChipsElement, NovoChipsModule, NovoCommonModule, NovoControlElement, NovoControlGroup, NovoControlTemplates, NovoDataTable, NovoDataTableClearButton, NovoDataTableFilterUtils, NovoDataTableModule, NovoDatePickerElement, NovoDatePickerInputElement, NovoDatePickerModule, NovoDateTimePickerElement, NovoDateTimePickerInputElement, NovoDateTimePickerModule, NovoDragulaElement, NovoDragulaModule, NovoDragulaService, NovoDropDownItemHeaderElement, NovoDropdownCell, NovoDropdownElement, NovoDropdownListElement, NovoDropdownModule, NovoDynamicFormElement, NovoElementProviders, NovoElementsModule, NovoEventTypeLegendElement, NovoExpansionModule, NovoExpansionPanel, NovoExpansionPanelActionRow, NovoExpansionPanelContent, NovoExpansionPanelDescription, NovoExpansionPanelHeader, NovoExpansionPanelTitle, NovoFieldsetHeaderElement, NovoFile, NovoFileInputElement, NovoFormControl, NovoFormElement, NovoFormExtrasModule, NovoFormGroup, NovoFormModule, NovoHeaderComponent, NovoHeaderModule, NovoHeaderSpacer, NovoHorizontalStepper, NovoIconComponent, NovoIconModule, NovoIsLoadingDirective, NovoItemAvatarElement, NovoItemContentElement, NovoItemDateElement, NovoItemElement, NovoItemEndElement, NovoItemHeaderElement, NovoItemTitleElement, NovoLabelService, NovoListElement, NovoListItemElement, NovoListModule, NovoLoadedDirective, NovoLoadingElement, NovoLoadingModule, NovoModalElement, NovoModalModule, NovoModalNotificationElement, NovoModalParams, NovoModalRef, NovoModalService, NovoMultiPickerElement, NovoMultiPickerModule, NovoNavContentElement, NovoNavElement, NovoNavHeaderElement, NovoNavOutletElement, NovoNovoCKEditorModule, NovoOverlayModule, NovoOverlayTemplateComponent, NovoPickerElement, NovoPickerModule, NovoPipesModule, NovoPopOverModule, NovoQuickNoteModule, NovoRadioElement, NovoRadioGroup, NovoRadioModule, NovoRowChipElement, NovoRowChipsElement, NovoSearchBoxElement, NovoSearchBoxModule, NovoSelectElement, NovoSelectModule, NovoSelection, NovoSimpleActionCell, NovoSimpleCell, NovoSimpleCellDef, NovoSimpleCellHeader, NovoSimpleCheckboxCell, NovoSimpleCheckboxHeaderCell, NovoSimpleColumnDef, NovoSimpleEmptyHeaderCell, NovoSimpleFilterFocus, NovoSimpleHeaderCell, NovoSimpleHeaderCellDef, NovoSimpleHeaderRow, NovoSimpleHeaderRowDef, NovoSimpleRow, NovoSimpleRowDef, NovoSimpleTableModule, NovoSimpleTablePagination, NovoSkeletonDirective, NovoSliderElement, NovoSliderModule, NovoSortFilter, NovoSpinnerElement, NovoStep, NovoStepHeader, NovoStepLabel, NovoStepStatus, NovoStepper, NovoStepperModule, NovoSwitchElement, NovoSwitchModule, NovoTabButtonElement, NovoTabElement, NovoTabLinkElement, NovoTabModule, NovoTabbedGroupPickerElement, NovoTabbedGroupPickerModule, NovoTable, NovoTableActionsElement, NovoTableElement, NovoTableExtrasModule, NovoTableFooterElement, NovoTableHeaderElement, NovoTableKeepFilterFocus, NovoTableMode, NovoTableModule, NovoTemplate, NovoTemplateService, NovoTilesElement, NovoTilesModule, NovoTimePickerElement, NovoTimePickerInputElement, NovoTimePickerModule, NovoTipWellElement, NovoTipWellModule, NovoToastElement, NovoToastModule, NovoToastService, NovoTooltipModule, NovoUtilActionComponent, NovoUtilsComponent, NovoValueElement, NovoValueModule, NovoVerticalStepper, OptionsService, OutsideClick, PagedArrayCollection, Pagination, PercentageCell, PickerControl, PickerResults, PlacesListComponent, PluralPipe, PopOverContent, PopOverDirective, QuickNoteControl, QuickNoteElement, QuickNoteResults, RadioControl, ReadOnlyControl, RemoteActivityTableService, RemoteDataTableService, RenderPipe, RowDetails, Security, SelectControl, SkillsSpecialtyPickerResults, StaticActivityTableService, StaticDataTableService, TableCell, TableFilter, TablePickerControl, TextAreaControl, TextBoxControl, ThOrderable, ThSortable, TilesControl, TimeControl, TooltipDirective, Unless, UnlessModule, WeekdayPipe, WorkersCompCodesPickerResults, YearPipe, findByCountryCode, findByCountryId, findByCountryName, getCountries, getStateObjects, getStates, notify, NovoFieldsetElement as ɵa, NovoModalContainerElement as ɵb, NovoTooltip as ɵc, DataTableState as ɵd, NovoDataTableCellHeader as ɵe, NovoDataTableSortFilter as ɵf, DateFormatService as ɵg, NovoDataTableHeaderCell as ɵh, NovoDataTableCell as ɵi, NovoDataTableHeaderRow as ɵj, NovoDataTableRow as ɵk, NovoDataTablePagination as ɵl, NovoDataTableCheckboxCell as ɵm, NovoDataTableCheckboxHeaderCell as ɵn, NovoDataTableExpandCell as ɵo, NovoDataTableExpandHeaderCell as ɵp, NovoDataTableExpandDirective as ɵq, novoExpansionAnimations as ɵr, ControlConfirmModal as ɵs, ControlPromptModal as ɵt, novoStepperAnimations as ɵu };\n//# sourceMappingURL=novo-elements.js.map\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, Input, NgModule, Injectable } from '@angular/core';\nimport { Validators, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CalendarEventResponse, NovoModalRef, NovoModalParams, NovoModalService, RemoteDataTableService, Helpers, StaticDataTableService, QuickNoteResults, BaseRenderer, DateCell, PercentageCell, NovoDropdownCell, ArrayCollection, NovoToastService, GroupedMultiPickerResults, NovoLabelService, ReadOnlyControl, SelectControl, TextBoxControl, CheckboxControl, FormUtils, AddressControl, findByCountryId, DateControl, TimeControl, DateTimeControl, CheckListControl, TilesControl, FileControl, PickerControl, EntityPickerResults, EntityPickerResult, TextAreaControl, QuickNoteControl, AceEditorControl, ChecklistPickerResults, PickerResults, NOVO_VALUE_THEME, FieldInteractionApi, RadioControl, Security, NovoElementsModule } from 'novo-elements';\nimport { TranslateService, ChomskyModule } from 'chomsky';\nimport { delay, filter, take } from 'rxjs/operators';\nimport { subDays, addDays } from 'date-fns';\nimport { Subject, of, BehaviorSubject } from 'rxjs';\nimport { RouterModule } from '@angular/router';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/ace-editor/basic-ace/basic-ace-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Ace Editor Example\n */\nclass BasicAceExample {\n}\nBasicAceExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-ace-example',\n                template: \"<novo-ace-editor></novo-ace-editor>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-dialogue/button-dialogue-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Dialogue buttons\n */\nclass ButtonDialogueExample {\n}\nButtonDialogueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-dialogue-example',\n                template: \"<button theme=\\\"dialogue\\\" icon=\\\"addcard\\\">Add Card</button>\\n<div class=\\\"inverse-color\\\">\\n    <button theme=\\\"dialogue\\\" icon=\\\"list-o\\\" side=\\\"left\\\" color=\\\"white\\\" inverse>Add/Remove</button>\\n</div>\\n<button theme=\\\"dialogue\\\" icon=\\\"check\\\" color=\\\"success\\\">Dialogue</button>\\n<button theme=\\\"dialogue\\\" disabled>Dialogue</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-dynamic/button-dynamic-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Dynamic buttons\n */\nclass ButtonDynamicExample {\n    constructor() {\n        this.theme = 'primary';\n        this.isChecked = false;\n        this.negativeColor = 'negative';\n        this.color = 'blue';\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        /** @type {?} */\n        const i = Math.floor(Math.random() * 4);\n        this.theme = ['primary', 'secondary', 'dialogue', 'standard', 'icon'][i];\n    }\n}\nButtonDynamicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-dynamic-example',\n                template: \"<button [theme]=\\\"theme\\\" [icon]=\\\"isChecked ? 'check' : 'times'\\\" (click)=\\\"changeTheme()\\\">Change Theme</button>\\n<novo-checkbox label=\\\"Checked?\\\" [(ngModel)]=\\\"isChecked\\\"></novo-checkbox>\\n<button [theme]=\\\"theme\\\" [icon]=\\\"isChecked ? 'check' : 'times'\\\" (click)=\\\"changeTheme()\\\" [disabled]=\\\"isChecked\\\">Change Theme</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ButtonDynamicExample.prototype.theme;\n    /** @type {?} */\n    ButtonDynamicExample.prototype.isChecked;\n    /** @type {?} */\n    ButtonDynamicExample.prototype.negativeColor;\n    /** @type {?} */\n    ButtonDynamicExample.prototype.color;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-fab/button-fab-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic buttons\n */\nclass ButtonFabExample {\n}\nButtonFabExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-fab-example',\n                template: \"<button theme=\\\"fab\\\" color=\\\"success\\\" icon=\\\"check\\\"></button>\\n<button theme=\\\"fab\\\" color=\\\"warning\\\" icon=\\\"caution-o\\\"></button>\\n<button theme=\\\"fab\\\" color=\\\"pulse\\\" icon=\\\"next\\\"></button>\\n<button theme=\\\"fab\\\" color=\\\"grapefruit\\\" icon=\\\"print\\\" inverse></button>\\n<button theme=\\\"fab\\\" icon=\\\"neutral\\\" inverse disabled></button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-icon/button-icon-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Icon buttons\n */\nclass ButtonIconExample {\n}\nButtonIconExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-icon-example',\n                template: \"<button theme=\\\"icon\\\" icon=\\\"print\\\"></button>\\n<button theme=\\\"icon\\\" icon=\\\"print\\\"></button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-inverse/button-inverse-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Invers buttons\n */\nclass ButtonInverseExample {\n}\nButtonInverseExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-inverse-example',\n                template: \"<div class=\\\"background candidate\\\">\\n  <button theme=\\\"secondary\\\" icon=\\\"collapse\\\" inverse>Actions</button>\\n  <button theme=\\\"secondary\\\" icon=\\\"convert\\\" inverse>Convert</button>\\n  <button theme=\\\"secondary\\\" icon=\\\"convert\\\" inverse disabled>Convert</button>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-loading/button-loading-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Loading buttons\n */\nclass ButtonLoadingExample {\n    constructor() {\n        this.loading = false;\n        this.loadingButtonText = 'Delete';\n    }\n    /**\n     * @return {?}\n     */\n    fakeRequest() {\n        this.loading = true;\n        this.loadingButtonText = this.loading ? 'Removing... ' : 'Delete';\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.loading = false;\n            this.loadingButtonText = this.loading ? 'Removing... ' : 'Delete';\n        }), 5000);\n    }\n}\nButtonLoadingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-loading-example',\n                template: \"<button theme=\\\"primary\\\" icon=\\\"times\\\" [loading]=\\\"loading\\\" (click)=\\\"fakeRequest()\\\">{{loadingButtonText}}</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ButtonLoadingExample.prototype.loading;\n    /** @type {?} */\n    ButtonLoadingExample.prototype.loadingButtonText;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-overview/button-overview-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic buttons\n */\nclass ButtonOverviewExample {\n}\nButtonOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-overview-example',\n                template: \"<button theme=\\\"primary\\\" icon=\\\"next\\\">Primary</button>\\n<button theme=\\\"secondary\\\">Secondary</button>\\n<button theme=\\\"standard\\\" color=\\\"success\\\" icon=\\\"check\\\">Standard</button>\\n<button theme=\\\"dialogue\\\" color=\\\"pulse\\\" icon=\\\"send\\\">Dialogue</button>\\n<button theme=\\\"icon\\\" color=\\\"warning\\\" icon=\\\"caution-o\\\"></button>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-primary/button-primary-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Primary buttons\n */\nclass ButtonPrimaryExample {\n    constructor() {\n        this.negativeColor = 'negative';\n    }\n}\nButtonPrimaryExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-primary-example',\n                template: \"<button theme=\\\"primary\\\" icon=\\\"next\\\">Next</button>\\n<button theme=\\\"primary\\\" [color]=\\\"negativeColor\\\" icon=\\\"times\\\">Cancel</button>\\n<button theme=\\\"primary\\\" color=\\\"success\\\" icon=\\\"check\\\">Save</button>\\n<button theme=\\\"primary\\\" color=\\\"warning\\\" icon=\\\"caution-o\\\">Caution</button>\\n<button theme=\\\"primary\\\" color=\\\"pulse\\\" icon=\\\"send\\\" disabled>Submit</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ButtonPrimaryExample.prototype.negativeColor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-secondary/button-secondary-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic buttons\n */\nclass ButtonSecondaryExample {\n}\nButtonSecondaryExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-secondary-example',\n                template: \"<button theme=\\\"secondary\\\">Secondary</button>\\n<button theme=\\\"secondary\\\" disabled>Secondary</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/buttons/button-standard/button-standard-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic buttons\n */\nclass ButtonStandardExample {\n}\nButtonStandardExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-standard-example',\n                template: \"<button theme=\\\"standard\\\">Standard</button>\\n<button theme=\\\"standard\\\" color=\\\"light\\\">Standard</button>\\n<button theme=\\\"standard\\\" color=\\\"light\\\" disabled>Standard</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/calendar/big-calendar/big-calendar-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst colors = {\n    red: {\n        primary: '#ad2121',\n        secondary: '#FAE3E3',\n    },\n    blue: {\n        primary: '#1e90ff',\n        secondary: '#D1E8FF',\n    },\n    yellow: {\n        primary: '#e3bc08',\n        secondary: '#FDF1BA',\n    },\n    green: {\n        primary: '#8CC152',\n        secondary: '#37BC9B',\n    },\n};\n/**\n * \\@title Big Calendar Example\n */\nclass BigCalendarExample {\n    constructor() {\n        this.views = [\n            {\n                label: 'Month',\n                value: 'month',\n            },\n            {\n                label: 'Week',\n                value: 'week',\n            },\n            {\n                label: 'Day',\n                value: 'day',\n            },\n        ];\n        this.view = 'month';\n        this.viewDate = new Date();\n        this.events = [\n            {\n                title: 'Interview',\n                description: 'with @bvkimball',\n                color: colors.green,\n                start: new Date(),\n                response: CalendarEventResponse.Rejected,\n                type: 'Interview',\n            },\n            {\n                title: 'Client Visit',\n                description: 'with @asibilia',\n                color: colors.red,\n                start: new Date(Date.now() + 60000 * 30),\n                response: CalendarEventResponse.Accepted,\n                type: 'Visit',\n            },\n            {\n                title: 'Interview',\n                description: 'with @johndoe',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Phone Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 180),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 150),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Final Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 120),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Phone Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 180),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 150),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Final Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 120),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Phone Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 180),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 150),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Final Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 90),\n                end: new Date(Date.now() + 60000 * 120),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Phone Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 75),\n                end: new Date(Date.now() + 60000 * 120),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Phone Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 75),\n                end: new Date(Date.now() + 60000 * 150),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 270),\n                end: new Date(Date.now() + 60000 * 300),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Final Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 270),\n                end: new Date(Date.now() + 60000 * 360),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n            {\n                title: 'Final Interview',\n                description: 'with @johnsully83',\n                color: colors.green,\n                start: new Date(Date.now() + 60000 * 270),\n                end: new Date(Date.now() + 60000 * 2880000),\n                response: CalendarEventResponse.Accepted,\n                type: 'Interview',\n            },\n        ];\n    }\n    /**\n     * @param {?} date\n     * @param {?} color\n     * @param {?} type\n     * @return {?}\n     */\n    getNewEvent(date, color, type) {\n        /** @type {?} */\n        const evt = {\n            title: 'Meeting',\n            description: 'with @jgodi',\n            color,\n            start: date,\n            response: type,\n            type: 'Meeting',\n        };\n        return evt;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    dayClicked(date) {\n        /** @type {?} */\n        const evt = this.getNewEvent(date, colors.blue, CalendarEventResponse.Maybe);\n        this.events.push(evt);\n        this.events = [...this.events];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    addShift(event) {\n        /** @type {?} */\n        const evt = this.getNewEvent(event.day.date, colors.blue, CalendarEventResponse.Maybe);\n        this.events.push(evt);\n        this.events = [...this.events];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    removeShift(event) {\n        this.events.splice(event.day.events.indexOf(event.event), 1);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    toggleAvailable(event) {\n        /** @type {?} */\n        let evt;\n        if (!event.day.events.length) {\n            evt = this.getNewEvent(event.day.date, colors.green, CalendarEventResponse.Accepted);\n            this.events.push(evt);\n            this.events = [...this.events];\n        }\n        else {\n            evt = event.day.events[0];\n            switch (evt.response) {\n                case CalendarEventResponse.Accepted:\n                    evt.response = CalendarEventResponse.Rejected;\n                    break;\n                case CalendarEventResponse.Rejected:\n                    event.day.events = [];\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\nBigCalendarExample.decorators = [\n    { type: Component, args: [{\n                selector: 'big-calendar-example',\n                template: \"<div>\\n    <novo-calendar-date-change [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\">\\n    </novo-calendar-date-change>\\n\\n    <novo-tiles [options]=\\\"views\\\" [(ngModel)]=\\\"view\\\"></novo-tiles>\\n</div>\\n<div [ngSwitch]=\\\"view\\\" class=\\\"cal-demo-content\\\">\\n    <novo-calendar-month *ngSwitchCase=\\\"'month'\\\" [(viewDate)]=\\\"viewDate\\\" [events]=\\\"events\\\" (dayClicked)=\\\"dayClicked($event.day.date)\\\">\\n    </novo-calendar-month>\\n\\n    <novo-calendar-week *ngSwitchCase=\\\"'week'\\\" [(viewDate)]=\\\"viewDate\\\" [events]=\\\"events\\\" (dayClicked)=\\\"dayClicked($event.date)\\\" [dayStartHour]=\\\"0\\\" [dayEndHour]=\\\"23\\\">\\n    </novo-calendar-week>\\n\\n    <novo-calendar-day *ngSwitchCase=\\\"'day'\\\" [(viewDate)]=\\\"viewDate\\\" [events]=\\\"events\\\" [dayStartHour]=\\\"0\\\" [dayEndHour]=\\\"23\\\">\\n    </novo-calendar-day>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BigCalendarExample.prototype.views;\n    /** @type {?} */\n    BigCalendarExample.prototype.view;\n    /** @type {?} */\n    BigCalendarExample.prototype.viewDate;\n    /** @type {?} */\n    BigCalendarExample.prototype.events;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/calendar/calendar/calendar-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Calendar Example\n */\nclass CalendarExample {\n}\nCalendarExample.decorators = [\n    { type: Component, args: [{\n                selector: 'calendar-example',\n                template: \"<div class=\\\"calendar-demo-side-by-side\\\">\\n    <p>\\n        <label>Value One</label> {{(dateOne | date) || 'N/A'}}\\n\\n        <label>Value Two</label> {{(dateTwo | date) || 'N/A'}}\\n    </p>\\n    <novo-date-picker [(ngModel)]=\\\"dateOne\\\" minYear=\\\"2000\\\" maxYear=\\\"2020\\\"></novo-date-picker>\\n    <novo-date-picker [(ngModel)]=\\\"dateTwo\\\"></novo-date-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    CalendarExample.prototype.dateOne;\n    /** @type {?} */\n    CalendarExample.prototype.dateTwo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/calendar/range/range-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Range Example\n */\nclass RangeExample {\n    constructor() {\n        this.value = { startDate: null, endDate: null };\n    }\n}\nRangeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'range-example',\n                template: \"<div class=\\\"calendar-demo-side-by-side\\\">\\n    <p>\\n        <label>Start date</label> {{(value?.startDate | date) || 'N/A'}}\\n\\n        <label>End date</label> {{(value?.endDate | date) || 'N/A'}}\\n    </p>\\n    <novo-date-picker [(ngModel)]=\\\"value\\\" range=\\\"true\\\"></novo-date-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    RangeExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/calendar/time/time-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Time Example\n */\nclass TimeExample {\n}\nTimeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'time-example',\n                template: \"<div class=\\\"calendar-demo-side-by-side\\\">\\n    <p>\\n        <label>Value</label> {{(time | date:'mediumTime') || 'N/A'}}\\n    </p>\\n    <novo-time-picker [(ngModel)]=\\\"time\\\"></novo-time-picker>\\n    <novo-time-picker [(ngModel)]=\\\"time\\\" military=\\\"true\\\"></novo-time-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TimeExample.prototype.time;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/extras/mock-data.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MockData() { }\nif (false) {\n    /** @type {?} */\n    MockData.prototype.id;\n    /** @type {?} */\n    MockData.prototype.embeddedObj;\n    /** @type {?} */\n    MockData.prototype.simpleEmbeddedObj;\n    /** @type {?} */\n    MockData.prototype.name;\n    /** @type {?} */\n    MockData.prototype.status;\n    /** @type {?} */\n    MockData.prototype.priority;\n    /** @type {?} */\n    MockData.prototype.enabled;\n    /** @type {?} */\n    MockData.prototype.date;\n    /** @type {?} */\n    MockData.prototype.dateTime;\n    /** @type {?} */\n    MockData.prototype.time;\n    /** @type {?} */\n    MockData.prototype.money;\n    /** @type {?} */\n    MockData.prototype.percent;\n    /** @type {?} */\n    MockData.prototype.telephone;\n    /** @type {?} */\n    MockData.prototype.email;\n    /** @type {?} */\n    MockData.prototype.address;\n    /** @type {?|undefined} */\n    MockData.prototype.bigdecimal;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/extras/configure-columns-modal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Configure Columns Modal Example\n */\nclass ConfigureColumnsModal {\n    /**\n     * @param {?} modalRef\n     * @param {?} params\n     */\n    constructor(modalRef, params) {\n        this.modalRef = modalRef;\n        this.params = params;\n        this.columns = params['columns'];\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n    /**\n     * @return {?}\n     */\n    save() {\n        this.modalRef.close(this.columns);\n    }\n}\nConfigureColumnsModal.decorators = [\n    { type: Component, args: [{\n                selector: 'configure-columns-modal-example',\n                template: `\n    <novo-modal>\n      <header title=\"Configure Columns\"\n              theme=\"contact\">\n        <utils>\n          <util-action icon=\"times\"\n                      (click)=\"close()\"></util-action>\n        </utils>\n      </header>\n      <section>\n        <novo-list direction=\"vertical\">\n          <novo-list-item *ngFor=\"let column of columns\">\n            <item-header>\n                  <item-title>{{ column.id }}</item-title>\n                  <item-header-end>\n                    <novo-checkbox [(ngModel)]=\"column.enabled\"></novo-checkbox>\n                  </item-header-end>\n              </item-header>\n          </novo-list-item>\n        </novo-list>\n      </section>\n      <button theme=\"standard\"\n              (click)=\"close()\">Cancel</button>\n      <button theme=\"primary\"\n              color=\"success\"\n              icon=\"check\"\n              (click)=\"save()\">Save</button>\n    </novo-modal>\n  `\n            }] }\n];\n/** @nocollapse */\nConfigureColumnsModal.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: NovoModalParams }\n];\nif (false) {\n    /** @type {?} */\n    ConfigureColumnsModal.prototype.columns;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigureColumnsModal.prototype.modalRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigureColumnsModal.prototype.params;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/extras/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/data-table-remote/data-table-remote-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Remote Data Table Example\n */\nclass DataTableRemoteExample {\n    /**\n     * @param {?} ref\n     * @param {?} modalService\n     */\n    constructor(ref, modalService) {\n        this.ref = ref;\n        this.modalService = modalService;\n        // Table configuration\n        this.dataSetOptions = [{ label: 'Dataset #1', value: 1 }, { label: 'Dataset #2', value: 2 }, { label: 'Dataset #3', value: 3 }];\n        this.loadedDataSet = 1;\n        this.paginationTypeOptions = [{ label: 'Standard', value: 'standard' }, { label: 'Basic', value: 'basic' }];\n        this.loadedPaginationType = 'standard';\n        this.globalSearchOptions = [{ label: 'Show', value: true }, { label: 'Hide', value: false }];\n        this.loadedGlobalSearch = false;\n        // Shared configuration\n        this.sharedColumns = [\n            {\n                id: 'preview',\n                type: 'action',\n                enabled: true,\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                action: {\n                    icon: 'preview',\n                },\n            },\n            {\n                id: 'actions',\n                type: 'action',\n                label: 'Actions',\n                enabled: true,\n                action: {\n                    options: [\n                        { label: 'Action 1', handlers: { click: this.log.bind(this) } },\n                        { label: 'Action 2', handlers: { click: this.log.bind(this) }, disabled: true },\n                        { label: 'Action 3', handlers: { click: this.log.bind(this) }, disabledFunc: this.checkDisabled.bind(this) },\n                    ],\n                },\n            },\n            {\n                id: 'id',\n                label: 'ID',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'number',\n                },\n                sortable: true,\n            },\n            {\n                id: 'telephone',\n                label: 'Phone',\n                type: 'link:tel',\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'email',\n                label: 'Email',\n                type: 'link:mailto',\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'address',\n                label: 'Address',\n                type: 'text',\n                format: ['$city, $state', '$city', '$state'],\n            },\n            {\n                id: 'embeddedObj',\n                label: 'Embedded (hard)',\n                enabled: true,\n                format: ['$another.id', '$firstName $lastName'],\n                type: 'link',\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                filterable: true,\n            },\n            {\n                id: 'simpleEmbeddedObj',\n                label: 'Embedded (simple)',\n                enabled: true,\n                format: '$id',\n                type: 'text',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'date',\n                label: 'Date',\n                enabled: true,\n                type: 'date',\n                filterable: {\n                    type: 'date',\n                    allowCustomRange: true,\n                },\n                sortable: true,\n            },\n            {\n                id: 'dateTime',\n                label: 'DateTime',\n                enabled: false,\n                type: 'datetime',\n            },\n            {\n                id: 'time',\n                label: 'Time',\n                enabled: false,\n                type: 'time',\n            },\n            {\n                id: 'money',\n                label: 'Money',\n                enabled: false,\n                type: 'currency',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'percent',\n                label: 'Percent',\n                enabled: true,\n                type: 'percent',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'name',\n                label: 'Name',\n                labelIcon: 'bull',\n                enabled: true,\n                type: 'text',\n                template: 'custom',\n            },\n            {\n                id: 'status',\n                label: 'Status',\n                enabled: true,\n                type: 'text',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'priority',\n                label: 'Priority',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'multi-select',\n                    options: this.getPriorityOptions(),\n                },\n                sortable: true,\n            },\n            {\n                id: 'enabled',\n                label: 'Enabled',\n                enabled: true,\n                type: 'text',\n                sortable: true,\n                filterable: {\n                    type: 'select',\n                    options: [{ value: true, label: 'True' }, { value: false, label: 'False' }],\n                },\n            },\n            {\n                id: 'edit',\n                type: 'action',\n                enabled: true,\n                disabled: true,\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                action: {\n                    icon: 'edit',\n                },\n            },\n        ];\n        this.sharedDisplayColumns = [\n            'selection',\n            'expand',\n            'preview',\n            'actions',\n            'id',\n            'date',\n            'name',\n            'telephone',\n            'email',\n            'simpleEmbeddedObj',\n            'status',\n            'priority',\n            'percent',\n            'embeddedObj',\n            'edit',\n        ];\n        this.sharedPaginationOptions = {\n            theme: 'standard',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.widePaginationOptions = {\n            theme: 'basic-wide',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.sharedSearchOptions = {\n            placeholder: 'Search for things...',\n            tooltip: 'HELLO',\n        };\n        this.sharedDefaultSort = {\n            id: 'id',\n            value: 'asc',\n        };\n        this.globalSearchEnabled = false;\n        this.refreshSubject = new Subject();\n        this.staticDataSet1 = [];\n        for (let i = 0; i < 1000; i++) {\n            /** @type {?} */\n            const day = i < 500 ? subDays(new Date(), i) : addDays(new Date(), i - 500);\n            this.staticDataSet1.push({\n                id: i,\n                embeddedObj: { id: i, test: `HMM ${i}`, another: { id: 777 } },\n                simpleEmbeddedObj: { id: i },\n                name: `(1) Name ${i}`,\n                status: `(1) Status ${i}`,\n                priority: this.getPriority(),\n                enabled: i % 2 === 0,\n                date: day,\n                dateTime: day,\n                time: day,\n                money: i + 10,\n                percent: i / 100,\n                telephone: '555-555-5555',\n                email: 'test@google.com',\n                address: { city: 'City', state: null },\n            });\n        }\n        this.remoteService = new RemoteMockDataService([...this.staticDataSet1.slice(0, 10)]);\n    }\n    /**\n     * @return {?}\n     */\n    getPriority() {\n        /** @type {?} */\n        const x = Math.round(Math.random() * 50);\n        return 'test ' + x.toString();\n    }\n    /**\n     * @return {?}\n     */\n    getPriorityOptions() {\n        /** @type {?} */\n        const options = new Array();\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 49; i++) {\n            options.push('test ' + i.toString());\n        }\n        return options;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    switchPaginationType(type) {\n        this.sharedPaginationOptions = Object.assign({}, this.sharedPaginationOptions, { theme: type });\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} toggle\n     * @return {?}\n     */\n    toggleGlobalSearch(toggle) {\n        this.globalSearchEnabled = toggle;\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    log(event) {\n        console.log('[DataTable] Event Triggered!', event); // tslint:disable-line\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    checkDisabled(row) {\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    configureColumns() {\n        this.modalService\n            .open(ConfigureColumnsModal, { columns: this.sharedColumns })\n            .onClosed.then((/**\n         * @param {?} columns\n         * @return {?}\n         */\n        (columns) => {\n            if (columns) {\n                /** @type {?} */\n                const enabledColumns = columns.filter((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                (column) => column.enabled));\n                this.sharedDisplayColumns = ['selection', 'expand', ...enabledColumns.map((/**\n                     * @param {?} column\n                     * @return {?}\n                     */\n                    (column) => column.id))];\n                this.ref.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPreferencesChanged(event) {\n        console.log('Preferences changed (persist manually):', event); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.refreshSubject.next();\n    }\n}\nDataTableRemoteExample.decorators = [\n    { type: Component, args: [{\n                selector: 'data-table-remote-example',\n                template: \"<novo-data-table [dataTableService]=\\\"remoteService\\\"\\n                 [columns]=\\\"sharedColumns\\\"\\n                 [allowMultipleFilters]=\\\"true\\\"\\n                 [hideGlobalSearch]=\\\"!globalSearchEnabled\\\"\\n                 [displayedColumns]=\\\"sharedDisplayColumns\\\"\\n                 [paginationOptions]=\\\"widePaginationOptions\\\"\\n                 [fixedHeader]=\\\"true\\\">\\n  <!-- Custom Cell -- passed with template property on Column -->\\n  <ng-template novoTemplate=\\\"custom\\\"\\n               let-row\\n               let-col=\\\"col\\\">\\n    <b>CUSTOM</b> {{ row.name }}\\n    <b>CUSTOM</b>\\n  </ng-template>\\n</novo-data-table>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDataTableRemoteExample.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoModalService }\n];\nif (false) {\n    /** @type {?} */\n    DataTableRemoteExample.prototype.dataSetOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.loadedDataSet;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.paginationTypeOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.loadedPaginationType;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.globalSearchOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.loadedGlobalSearch;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.sharedColumns;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.sharedDisplayColumns;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.sharedPaginationOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.widePaginationOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.sharedSearchOptions;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.sharedDefaultSort;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.globalSearchEnabled;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.refreshSubject;\n    /** @type {?} */\n    DataTableRemoteExample.prototype.remoteService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRemoteExample.prototype.staticDataSet1;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRemoteExample.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRemoteExample.prototype.modalService;\n}\nclass RemoteMockDataService extends RemoteDataTableService {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * @param {?} sort\n     * @param {?} filter\n     * @param {?} page\n     * @param {?} pageSize\n     * @param {?=} globalSearch\n     * @return {?}\n     */\n    getTableResults(sort, filter, page, pageSize, globalSearch) {\n        /** @type {?} */\n        const whereQuery = this.buildWhereClause(filter);\n        /** @type {?} */\n        const sortQuery = this.buildSortColumn(sort);\n        /** @type {?} */\n        const pageQuery = this.buildStart(page, pageSize);\n        this.url = `http://mock-api.com?where=${whereQuery}&sort=${sortQuery}&pageSize=${pageSize}&page=${pageQuery}`;\n        return of({ results: this.data, total: this.data.length }).pipe(delay(5000));\n    }\n    /**\n     * @private\n     * @param {?} filter\n     * @return {?}\n     */\n    buildWhereClause(filter) {\n        /** @type {?} */\n        const query = {};\n        if (filter) {\n            /** @type {?} */\n            const filters = Helpers.convertToArray(filter);\n            filters.forEach((/**\n             * @param {?} aFilter\n             * @return {?}\n             */\n            (aFilter) => {\n                query[aFilter.id] = aFilter.transform ? aFilter.transform(aFilter.value) : aFilter.value;\n            }));\n        }\n        return this.toQuerySyntax(query);\n    }\n    /**\n     * @private\n     * @param {?} sort\n     * @return {?}\n     */\n    buildSortColumn(sort) {\n        if (sort) {\n            /** @type {?} */\n            let value = sort.id;\n            if (sort.transform) {\n                value = sort.transform(value);\n            }\n            return sort.value === 'asc' ? value : `-${value}`;\n        }\n        return '';\n    }\n    /**\n     * @private\n     * @param {?} page\n     * @param {?} pageSize\n     * @return {?}\n     */\n    buildStart(page, pageSize) {\n        return (page || 0) * pageSize;\n    }\n    /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n    toQuerySyntax(data) {\n        /** @type {?} */\n        const queries = [];\n        for (const key in data) {\n            /** @type {?} */\n            const value = data[key];\n            if (key === 'or') {\n                queries.push(`(${this.toQuerySyntax(value).replace(/ AND /g, ' OR ')})`);\n            }\n            else {\n                queries.push(this.parseQueryValue(key, value));\n            }\n        }\n        return queries.join(' AND ');\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} isNot\n     * @return {?}\n     */\n    parseQueryValue(key, value, isNot = false) {\n        /** @type {?} */\n        const clauses = [];\n        /** @type {?} */\n        const IN = isNot ? ' NOT IN ' : ' IN ';\n        /** @type {?} */\n        const EQ = isNot ? '<>' : '=';\n        /** @type {?} */\n        const GT = isNot ? '<' : '>=';\n        /** @type {?} */\n        const LT = isNot ? '>=' : '<';\n        if (Array.isArray(value)) {\n            clauses.push(`${key}${IN}(${this.writeQueryValues(value)})`);\n        }\n        else if (value instanceof Object) {\n            if (typeof value.isNull === 'boolean') {\n                /** @type {?} */\n                const query = value.isNull ? 'IS NULL' : 'IS NOT NULL';\n                clauses.push(`${key} ${query}`);\n            }\n            if (value.min !== null && value.min !== undefined) {\n                clauses.push(`${key}${GT}${this.writeQueryValue(value.min)}`);\n            }\n            if (value.max !== null && value.max !== undefined) {\n                clauses.push(`${key}${LT}${this.writeQueryValue(value.max)}`);\n            }\n            if (value.any && Array.isArray(value.any)) {\n                clauses.push(`${key}${IN}(${this.writeQueryValues(value.any)})`);\n            }\n            if (value.all && Array.isArray(value.all)) {\n                clauses.push(`${key}${IN}(${this.writeQueryValues(value.all)})`);\n            }\n            if (value.not !== null && value.not !== undefined) {\n                clauses.push(this.parseQueryValue(key, value.not, true));\n            }\n            if (value.like !== null && value.like !== undefined) {\n                clauses.push(`${key} like '%${value.like}%'`);\n            }\n            if (value.lookup !== null && value.lookup !== undefined) {\n                /** @type {?} */\n                const obj = {};\n                obj[key] = value.lookup;\n                clauses.push(this.toQuerySyntax(obj));\n            }\n            if (value.with !== null && value.with !== undefined) {\n                clauses.push(`${key} IS NOT EMPTY`);\n            }\n            if (value.without !== null && value.without !== undefined) {\n                clauses.push(`${key} IS EMPTY`);\n            }\n            if (value.or !== null && value.or !== undefined) {\n                /** @type {?} */\n                const obj = {};\n                obj[key] = value.or;\n                clauses.push(this.toQuerySyntax(obj).replace('AND', 'OR'));\n            }\n            for (const subkey in value) {\n                if (['min', 'max', 'any', 'all', 'not', 'or', 'like', 'lookup', 'with', 'without', 'isNull'].indexOf(subkey) < 0) {\n                    /** @type {?} */\n                    const subvalue = value[subkey];\n                    clauses.push(this.parseQueryValue(`${key}.${subkey}`, subvalue));\n                }\n            }\n        }\n        else {\n            clauses.push(`${key}${EQ}${this.writeQueryValue(value)}`);\n        }\n        return clauses.join(' AND ');\n    }\n    /**\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    writeQueryValues(values) {\n        if (typeof values[0] === 'number' || typeof values[0] === 'boolean') {\n            return `${values.join(',')}`;\n        }\n        else {\n            return `'${values.join(`','`)}'`;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    writeQueryValue(value) {\n        if (value instanceof Date) {\n            return value.getTime();\n        }\n        else if (typeof value === 'number' || typeof value === 'boolean') {\n            return `${value}`;\n        }\n        else {\n            return `'${value.replace(/\\*/g, '')}'`;\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    RemoteMockDataService.prototype.url;\n    /**\n     * @type {?}\n     * @private\n     */\n    RemoteMockDataService.prototype.data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/data-table-rows/data-table-rows-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Rows Data Table Example\n */\nclass DataTableRowsExample {\n    /**\n     * @param {?} ref\n     * @param {?} modalService\n     */\n    constructor(ref, modalService) {\n        this.ref = ref;\n        this.modalService = modalService;\n        // Table configuration\n        this.dataSetOptions = [{ label: 'Dataset #1', value: 1 }, { label: 'Dataset #2', value: 2 }, { label: 'Dataset #3', value: 3 }];\n        this.loadedDataSet = 1;\n        this.paginationTypeOptions = [{ label: 'Standard', value: 'standard' }, { label: 'Basic', value: 'basic' }];\n        this.loadedPaginationType = 'standard';\n        this.globalSearchOptions = [{ label: 'Show', value: true }, { label: 'Hide', value: false }];\n        this.loadedGlobalSearch = false;\n        this.customStatusColumnValue = '';\n        this.customStatusColumnOptions = [\n            {\n                label: 'Has A 5 in status',\n                value: '5',\n            },\n            {\n                label: 'All',\n                value: '',\n            },\n        ];\n        // Shared configuration\n        this.sharedColumns = [\n            {\n                id: 'preview',\n                type: 'action',\n                enabled: true,\n                handlers: {\n                    click: this.preview.bind(this),\n                },\n                action: {\n                    icon: 'preview',\n                },\n            },\n            {\n                id: 'actions',\n                type: 'action',\n                label: 'Actions',\n                enabled: true,\n                action: {\n                    options: [\n                        { label: 'Action 1', handlers: { click: this.log.bind(this) } },\n                        { label: 'Action 2', handlers: { click: this.log.bind(this) }, disabled: true },\n                        { label: 'Action 3', handlers: { click: this.log.bind(this) }, disabledFunc: this.checkDisabled.bind(this) },\n                    ],\n                },\n            },\n            {\n                id: 'id',\n                label: 'ID',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'number',\n                },\n                sortable: true,\n            },\n            {\n                id: 'telephone',\n                label: 'Phone',\n                type: 'link:tel',\n                resizable: true,\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'email',\n                label: 'Email',\n                type: 'link:mailto',\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'address',\n                label: 'Address',\n                type: 'text',\n                format: ['$city, $state', '$city', '$state'],\n            },\n            {\n                id: 'embeddedObj',\n                label: 'Embedded (hard)',\n                enabled: true,\n                format: ['$another.id', '$firstName $lastName'],\n                type: 'link',\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                filterable: true,\n            },\n            {\n                id: 'simpleEmbeddedObj',\n                label: 'Embedded (simple)',\n                enabled: true,\n                format: '$id',\n                type: 'text',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'date',\n                label: 'Date',\n                enabled: true,\n                type: 'date',\n                filterable: {\n                    type: 'date',\n                    allowCustomRange: true,\n                },\n                sortable: true,\n                format: '$year-$month-$day $hour:$minute',\n            },\n            {\n                id: 'dateTime',\n                label: 'DateTime',\n                enabled: false,\n                type: 'datetime',\n            },\n            {\n                id: 'time',\n                label: 'Time',\n                enabled: false,\n                type: 'time',\n            },\n            {\n                id: 'money',\n                label: 'Money',\n                enabled: false,\n                type: 'currency',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'percent',\n                label: 'Percent',\n                enabled: true,\n                type: 'percent',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'bigdecimal',\n                label: 'BigDecimal',\n                enabled: true,\n                type: 'bigdecimal',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'name',\n                label: 'Name',\n                labelIcon: 'bull',\n                enabled: true,\n                type: 'text',\n                template: 'custom',\n            },\n            {\n                id: 'status',\n                label: 'Status',\n                enabled: true,\n                type: 'text',\n                filterable: { type: 'custom' },\n                sortable: true,\n            },\n            {\n                id: 'priority',\n                label: 'Priority',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'multi-select',\n                    options: this.getPriorityOptions(),\n                },\n                sortable: true,\n            },\n            {\n                id: 'enabled',\n                label: 'Enabled',\n                enabled: true,\n                type: 'text',\n                sortable: true,\n                filterable: {\n                    type: 'select',\n                    options: [{ value: true, label: 'True' }, { value: false, label: 'False' }],\n                },\n            },\n            {\n                id: 'edit',\n                type: 'action',\n                enabled: true,\n                disabled: true,\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                action: {\n                    icon: 'edit',\n                },\n            },\n        ];\n        this.sharedDisplayColumns = [\n            'selection',\n            'expand',\n            'preview',\n            'actions',\n            'id',\n            'date',\n            'name',\n            'telephone',\n            'email',\n            'simpleEmbeddedObj',\n            'status',\n            'priority',\n            'percent',\n            'bigdecimal',\n            'embeddedObj',\n            'edit',\n        ];\n        this.sharedPaginationOptions = {\n            theme: 'standard',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.widePaginationOptions = {\n            theme: 'basic-wide',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.sharedSearchOptions = {\n            placeholder: 'Search for things...',\n            tooltip: 'HELLO',\n        };\n        this.sharedDefaultSort = {\n            id: 'id',\n            value: 'asc',\n        };\n        this.globalSearchEnabled = false;\n        this.refreshSubject = new Subject();\n        this.staticDataSet1 = [];\n        this.staticDataSet2 = [];\n        this.staticDataSet3 = [];\n        this.selectedRecordId = '';\n        for (let i = 0; i < 1000; i++) {\n            /** @type {?} */\n            const day = i < 500 ? subDays(new Date(), i) : addDays(new Date(), i - 500);\n            this.staticDataSet1.push({\n                id: i,\n                embeddedObj: { id: i, test: `HMM ${i}`, another: { id: 777 } },\n                simpleEmbeddedObj: { id: i },\n                name: `(1) Name ${i}`,\n                status: `(1) Status ${i}`,\n                priority: this.getPriority(),\n                enabled: i % 2 === 0,\n                date: day,\n                dateTime: day,\n                time: day,\n                money: i + 10,\n                percent: i / 100,\n                telephone: '555-555-5555',\n                email: 'test@google.com',\n                address: { city: 'City', state: null },\n                bigdecimal: 3.25 * (i + 1) * (i % 5 === 1 ? -1 : 1),\n            });\n            this.staticDataSet2.push({\n                id: i + 1001,\n                embeddedObj: { id: i, test: `HMM ${i}`, another: { id: 777 } },\n                simpleEmbeddedObj: { id: i },\n                name: `(2) Name ${i}`,\n                status: `(2) Status ${i}`,\n                priority: this.getPriority(),\n                enabled: i % 2 === 0,\n                date: day,\n                dateTime: day,\n                time: day,\n                money: i + 10,\n                percent: i / 100,\n                telephone: '555-555-5555',\n                email: 'test@google.com',\n                address: { city: 'City', state: 'State' },\n                bigdecimal: -75,\n            });\n        }\n        this.basicRows = [...this.staticDataSet1];\n    }\n    /**\n     * @return {?}\n     */\n    getPriority() {\n        /** @type {?} */\n        const x = Math.round(Math.random() * 50);\n        return 'test ' + x.toString();\n    }\n    /**\n     * @return {?}\n     */\n    getPriorityOptions() {\n        /** @type {?} */\n        const options = new Array();\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 49; i++) {\n            options.push('test ' + i.toString());\n        }\n        return options;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    switchPaginationType(type) {\n        this.sharedPaginationOptions = Object.assign({}, this.sharedPaginationOptions, { theme: type });\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} setIndex\n     * @return {?}\n     */\n    loadDataset(setIndex) {\n        switch (setIndex) {\n            case 1:\n                this.basicRows = [...this.staticDataSet1];\n                break;\n            case 2:\n                this.basicRows = [...this.staticDataSet2];\n                break;\n            case 3:\n                this.basicRows = [...this.staticDataSet3];\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * @param {?} toggle\n     * @return {?}\n     */\n    toggleGlobalSearch(toggle) {\n        this.globalSearchEnabled = toggle;\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    log(event) {\n        console.log('[DataTable] Event Triggered!', event); // tslint:disable-line\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    preview(event) {\n        this.selectedRecordId = event.row.id.toString();\n        this.log(event);\n    }\n    /**\n     * @return {?}\n     */\n    checkDisabled() {\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    configureColumns() {\n        this.modalService\n            .open(ConfigureColumnsModal, { columns: this.sharedColumns })\n            .onClosed.then((/**\n         * @param {?} columns\n         * @return {?}\n         */\n        (columns) => {\n            if (columns) {\n                /** @type {?} */\n                const enabledColumns = columns.filter((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                (column) => column.enabled));\n                this.sharedDisplayColumns = ['selection', 'expand', ...enabledColumns.map((/**\n                     * @param {?} column\n                     * @return {?}\n                     */\n                    (column) => column.id))];\n                this.ref.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPreferencesChanged(event) {\n        console.log('Preferences changed (persist manually):', event); // tslint:disable-line\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    resized(event) {\n        console.log('Column Width changed (persist manually): ', event); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.refreshSubject.next();\n    }\n    /**\n     * @param {?} expand\n     * @return {?}\n     */\n    toggleRowDetails(expand) {\n        this.table.expandRows(expand);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    filterList(value) {\n        this.table.state.filter = { id: 'status', type: 'text', value };\n        this.table.state.updates.next({\n            globalSearch: this.table.state.globalSearch,\n            filter: this.table.state.filter,\n            sort: this.table.state.sort,\n        });\n        this.ref.markForCheck();\n    }\n}\nDataTableRowsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'data-table-rows-example',\n                template: \"<h6>Change Dataset</h6>\\n    <novo-tiles [options]=\\\"dataSetOptions\\\" (onChange)=\\\"loadDataset($event)\\\" [(ngModel)]=\\\"loadedDataSet\\\"></novo-tiles>\\n    <h6>Change Pagination Style</h6>\\n    <novo-tiles [options]=\\\"paginationTypeOptions\\\" (onChange)=\\\"switchPaginationType($event)\\\" [(ngModel)]=\\\"loadedPaginationType\\\"></novo-tiles>\\n    <h6>Toggle Global Search</h6>\\n    <novo-tiles [options]=\\\"globalSearchOptions\\\" (onChange)=\\\"toggleGlobalSearch($event)\\\" [(ngModel)]=\\\"loadedGlobalSearch\\\"></novo-tiles>\\n    <h6>Configure Columns</h6>\\n    <button theme=\\\"primary\\\" (click)=\\\"configureColumns()\\\">Configure Columns</button>\\n    <h6>Configure Columns</h6>\\n    <button theme=\\\"primary\\\" (click)=\\\"toggleRowDetails(true)\\\">Show Row Details (first table)</button>\\n    <button theme=\\\"primary\\\" (click)=\\\"toggleRowDetails(false)\\\">Hide Row Details (first table)</button>\\n\\n<div class=\\\"fixedWindowSize\\\">\\n<novo-data-table [rows]=\\\"basicRows\\\"\\n                 [columns]=\\\"sharedColumns\\\"\\n                 [allowMultipleFilters]=\\\"true\\\"\\n                 [hideGlobalSearch]=\\\"!globalSearchEnabled\\\"\\n                 [displayedColumns]=\\\"sharedDisplayColumns\\\"\\n                 [paginationOptions]=\\\"sharedPaginationOptions\\\"\\n                 name=\\\"demo-basic-rows\\\"\\n                 [refreshSubject]=\\\"refreshSubject\\\"\\n                 (preferencesChanged)=\\\"onPreferencesChanged($event)\\\"\\n                 (resized)=\\\"resized($event)\\\"\\n                 [activeRowIdentifier]=\\\"selectedRecordId\\\"\\n                 [fixedHeader]=\\\"true\\\"\\n                 #basic>\\n  <!-- Custom Actions -->\\n  <ng-template novoTemplate=\\\"customActions\\\">\\n    <span>Total: {{ basic.dataSource.currentTotal }}</span>\\n    <novo-data-table-clear-button *ngIf=\\\"basic.state.userFiltered\\\"></novo-data-table-clear-button>\\n    <button theme=\\\"secondary\\\"\\n            (click)=\\\"refresh()\\\">Refresh</button>\\n    <novo-dropdown side=\\\"right\\\">\\n      <button theme=\\\"primary\\\"\\n              icon=\\\"collapse\\\"\\n              inverse>\\n        <span *ngIf=\\\"basic.state.selected.length === 0\\\">Actions</span>\\n        <span *ngIf=\\\"basic.state.selected.length !== 0\\\">{{ basic.state.selected.length }}!</span>\\n      </button>\\n      <list>\\n        <item>Action 1</item>\\n        <item>Action 2</item>\\n        <item [disabled]=\\\"basic.state.selected.length === 0\\\">Action 3</item>\\n      </list>\\n    </novo-dropdown>\\n  </ng-template>\\n  <!-- Custom Empty Message -->\\n  <ng-template novoTemplate=\\\"emptyMessage\\\">Yo! No Records!</ng-template>\\n  <!-- Custom No Results Message -->\\n  <ng-template novoTemplate=\\\"noResultsMessage\\\">Yo! That search is really complex, no data matches that!</ng-template>\\n  <!-- Custom Cell for ID Column -->\\n  <ng-template novoTemplate=\\\"id\\\"\\n               let-row\\n               let-col=\\\"col\\\">\\n    <i class=\\\"bhi-bull\\\"></i> {{ row.id }}\\n  </ng-template>\\n  <!-- Custom Cell -- passed with template property on Column -->\\n  <ng-template novoTemplate=\\\"custom\\\"\\n               let-row\\n               let-col=\\\"col\\\">\\n    <b>CUSTOM</b> {{ row.name }}\\n    <b>CUSTOM</b>\\n  </ng-template>\\n  <!-- Row Details Template -->\\n  <ng-template novoTemplate=\\\"expandedRow\\\"\\n               let-row>\\n    Why look at that, you clicked the details!\\n  </ng-template>\\n  <!-- Custom Status Filter -->\\n  <ng-template novoTemplate=\\\"column-filter-status\\\">\\n    <novo-tiles [options]=\\\"customStatusColumnOptions\\\" (onChange)=\\\"filterList($event)\\\" [(ngModel)]=\\\"customStatusColumnValue\\\"></novo-tiles>\\n  </ng-template>\\n</novo-data-table>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".fixedWindowSize{height:600px}novo-data-table{height:100%}\"]\n            }] }\n];\n/** @nocollapse */\nDataTableRowsExample.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoModalService }\n];\nDataTableRowsExample.propDecorators = {\n    table: [{ type: ViewChild, args: ['basic', { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableRowsExample.prototype.table;\n    /** @type {?} */\n    DataTableRowsExample.prototype.dataSetOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.loadedDataSet;\n    /** @type {?} */\n    DataTableRowsExample.prototype.paginationTypeOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.loadedPaginationType;\n    /** @type {?} */\n    DataTableRowsExample.prototype.globalSearchOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.loadedGlobalSearch;\n    /** @type {?} */\n    DataTableRowsExample.prototype.customStatusColumnValue;\n    /** @type {?} */\n    DataTableRowsExample.prototype.customStatusColumnOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.sharedColumns;\n    /** @type {?} */\n    DataTableRowsExample.prototype.sharedDisplayColumns;\n    /** @type {?} */\n    DataTableRowsExample.prototype.sharedPaginationOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.widePaginationOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.sharedSearchOptions;\n    /** @type {?} */\n    DataTableRowsExample.prototype.sharedDefaultSort;\n    /** @type {?} */\n    DataTableRowsExample.prototype.globalSearchEnabled;\n    /** @type {?} */\n    DataTableRowsExample.prototype.refreshSubject;\n    /** @type {?} */\n    DataTableRowsExample.prototype.basicRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowsExample.prototype.staticDataSet1;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowsExample.prototype.staticDataSet2;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowsExample.prototype.staticDataSet3;\n    /** @type {?} */\n    DataTableRowsExample.prototype.selectedRecordId;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowsExample.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowsExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/data-table/data-table-service/data-table-service-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Data Table Service Example\n */\nclass DataTableServiceExample {\n    /**\n     * @param {?} ref\n     * @param {?} modalService\n     */\n    constructor(ref, modalService) {\n        this.ref = ref;\n        this.modalService = modalService;\n        // Table configuration\n        this.dataSetOptions = [{ label: 'Dataset #1', value: 1 }, { label: 'Dataset #2', value: 2 }, { label: 'Dataset #3', value: 3 }];\n        this.loadedDataSet = 1;\n        this.paginationTypeOptions = [{ label: 'Standard', value: 'standard' }, { label: 'Basic', value: 'basic' }];\n        this.loadedPaginationType = 'standard';\n        this.globalSearchOptions = [{ label: 'Show', value: true }, { label: 'Hide', value: false }];\n        this.loadedGlobalSearch = false;\n        // Shared configuration\n        this.sharedColumns = [\n            {\n                id: 'preview',\n                type: 'action',\n                enabled: true,\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                action: {\n                    icon: 'preview',\n                },\n            },\n            {\n                id: 'actions',\n                type: 'action',\n                label: 'Actions',\n                enabled: true,\n                action: {\n                    options: [\n                        { label: 'Action 1', handlers: { click: this.log.bind(this) } },\n                        { label: 'Action 2', handlers: { click: this.log.bind(this) }, disabled: true },\n                        { label: 'Action 3', handlers: { click: this.log.bind(this) }, disabledFunc: this.checkDisabled.bind(this) },\n                    ],\n                },\n            },\n            {\n                id: 'id',\n                label: 'ID',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'number',\n                },\n                sortable: true,\n            },\n            {\n                id: 'telephone',\n                label: 'Phone',\n                type: 'link:tel',\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'email',\n                label: 'Email',\n                type: 'link:mailto',\n                attributes: {\n                    target: '_blank',\n                },\n            },\n            {\n                id: 'address',\n                label: 'Address',\n                type: 'text',\n                format: ['$city, $state', '$city', '$state'],\n            },\n            {\n                id: 'embeddedObj',\n                label: 'Embedded (hard)',\n                enabled: true,\n                format: ['$another.id', '$firstName $lastName'],\n                type: 'link',\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                filterable: true,\n            },\n            {\n                id: 'simpleEmbeddedObj',\n                label: 'Embedded (simple)',\n                enabled: true,\n                format: '$id',\n                type: 'text',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'date',\n                label: 'Date',\n                enabled: true,\n                type: 'date',\n                filterable: {\n                    type: 'date',\n                    allowCustomRange: true,\n                },\n                sortable: true,\n            },\n            {\n                id: 'dateTime',\n                label: 'DateTime',\n                enabled: false,\n                type: 'datetime',\n            },\n            {\n                id: 'time',\n                label: 'Time',\n                enabled: false,\n                type: 'time',\n            },\n            {\n                id: 'money',\n                label: 'Money',\n                enabled: false,\n                type: 'currency',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'percent',\n                label: 'Percent',\n                enabled: true,\n                type: 'percent',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'name',\n                label: 'Name',\n                labelIcon: 'bull',\n                enabled: true,\n                type: 'text',\n                template: 'custom',\n            },\n            {\n                id: 'status',\n                label: 'Status',\n                enabled: true,\n                type: 'text',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                id: 'priority',\n                label: 'Priority',\n                enabled: true,\n                type: 'text',\n                filterable: {\n                    type: 'multi-select',\n                    options: this.getPriorityOptions(),\n                },\n                sortable: true,\n            },\n            {\n                id: 'enabled',\n                label: 'Enabled',\n                enabled: true,\n                type: 'text',\n                sortable: true,\n                filterable: {\n                    type: 'select',\n                    options: [{ value: true, label: 'True' }, { value: false, label: 'False' }],\n                },\n            },\n            {\n                id: 'edit',\n                type: 'action',\n                enabled: true,\n                disabled: true,\n                handlers: {\n                    click: this.log.bind(this),\n                },\n                action: {\n                    icon: 'edit',\n                },\n            },\n        ];\n        this.sharedDisplayColumns = [\n            'selection',\n            'expand',\n            'preview',\n            'actions',\n            'id',\n            'date',\n            'name',\n            'telephone',\n            'email',\n            'simpleEmbeddedObj',\n            'status',\n            'priority',\n            'percent',\n            'embeddedObj',\n            'edit',\n        ];\n        this.sharedPaginationOptions = {\n            theme: 'standard',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.widePaginationOptions = {\n            theme: 'basic-wide',\n            pageSize: 10,\n            pageSizeOptions: [10, 50, 100, 250, 500],\n        };\n        this.sharedSearchOptions = {\n            placeholder: 'Search for things...',\n            tooltip: 'HELLO',\n        };\n        this.sharedDefaultSort = {\n            id: 'id',\n            value: 'asc',\n        };\n        this.globalSearchEnabled = false;\n        this.refreshSubject = new Subject();\n        this.staticDataSet1 = [];\n        this.staticDataSet2 = [];\n        this.staticDataSet3 = [];\n        for (let i = 0; i < 1000; i++) {\n            /** @type {?} */\n            const day = i < 500 ? subDays(new Date(), i) : addDays(new Date(), i - 500);\n            this.staticDataSet1.push({\n                id: i,\n                embeddedObj: { id: i, test: `HMM ${i}`, another: { id: 777 } },\n                simpleEmbeddedObj: { id: i },\n                name: `(1) Name ${i}`,\n                status: `(1) Status ${i}`,\n                priority: this.getPriority(),\n                enabled: i % 2 === 0,\n                date: day,\n                dateTime: day,\n                time: day,\n                money: i + 10,\n                percent: i / 100,\n                telephone: '555-555-5555',\n                email: 'test@google.com',\n                address: { city: 'City', state: null },\n            });\n            this.staticDataSet2.push({\n                id: i + 1001,\n                embeddedObj: { id: i, test: `HMM ${i}`, another: { id: 777 } },\n                simpleEmbeddedObj: { id: i },\n                name: `(2) Name ${i}`,\n                status: `(2) Status ${i}`,\n                priority: this.getPriority(),\n                enabled: i % 2 === 0,\n                date: day,\n                dateTime: day,\n                time: day,\n                money: i + 10,\n                percent: i / 100,\n                telephone: '555-555-5555',\n                email: 'test@google.com',\n                address: { city: 'City', state: 'State' },\n            });\n        }\n        this.basicService = new StaticDataTableService([...this.staticDataSet1]);\n    }\n    /**\n     * @return {?}\n     */\n    getPriority() {\n        /** @type {?} */\n        const x = Math.round(Math.random() * 50);\n        return 'test ' + x.toString();\n    }\n    /**\n     * @return {?}\n     */\n    getPriorityOptions() {\n        /** @type {?} */\n        const options = new Array();\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 49; i++) {\n            options.push('test ' + i.toString());\n        }\n        return options;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    switchPaginationType(type) {\n        this.sharedPaginationOptions = Object.assign({}, this.sharedPaginationOptions, { theme: type });\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} setIndex\n     * @return {?}\n     */\n    loadDataset(setIndex) {\n        switch (setIndex) {\n            case 1:\n                this.basicService = new StaticDataTableService([...this.staticDataSet1]);\n                break;\n            case 2:\n                this.basicService = new StaticDataTableService([...this.staticDataSet2]);\n                break;\n            case 3:\n                this.basicService = new StaticDataTableService([...this.staticDataSet3]);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * @param {?} toggle\n     * @return {?}\n     */\n    toggleGlobalSearch(toggle) {\n        this.globalSearchEnabled = toggle;\n        this.ref.detectChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    log(event) {\n        console.log('[DataTable] Event Triggered!', event); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    checkDisabled() {\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    configureColumns() {\n        this.modalService\n            .open(ConfigureColumnsModal, { columns: this.sharedColumns })\n            .onClosed.then((/**\n         * @param {?} columns\n         * @return {?}\n         */\n        (columns) => {\n            if (columns) {\n                /** @type {?} */\n                const enabledColumns = columns.filter((/**\n                 * @param {?} column\n                 * @return {?}\n                 */\n                (column) => column.enabled));\n                this.sharedDisplayColumns = ['selection', 'expand', ...enabledColumns.map((/**\n                     * @param {?} column\n                     * @return {?}\n                     */\n                    (column) => column.id))];\n                this.ref.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPreferencesChanged(event) {\n        console.log('Preferences changed (persist manually):', event); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.refreshSubject.next();\n    }\n}\nDataTableServiceExample.decorators = [\n    { type: Component, args: [{\n                selector: 'data-table-service-example',\n                template: \"<novo-data-table [dataTableService]=\\\"basicService\\\"\\n                 [columns]=\\\"sharedColumns\\\"\\n                 [allowMultipleFilters]=\\\"true\\\"\\n                 [hideGlobalSearch]=\\\"!globalSearchEnabled\\\"\\n                 [displayedColumns]=\\\"sharedDisplayColumns\\\"\\n                 [paginationOptions]=\\\"sharedPaginationOptions\\\">\\n  <!-- Custom Cell -- passed with template property on Column -->\\n  <ng-template novoTemplate=\\\"custom\\\"\\n               let-row\\n               let-col=\\\"col\\\">\\n    <b>CUSTOM</b> {{ row.name }}\\n    <b>CUSTOM</b>\\n  </ng-template>\\n</novo-data-table>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDataTableServiceExample.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NovoModalService }\n];\nif (false) {\n    /** @type {?} */\n    DataTableServiceExample.prototype.dataSetOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.loadedDataSet;\n    /** @type {?} */\n    DataTableServiceExample.prototype.paginationTypeOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.loadedPaginationType;\n    /** @type {?} */\n    DataTableServiceExample.prototype.globalSearchOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.loadedGlobalSearch;\n    /** @type {?} */\n    DataTableServiceExample.prototype.sharedColumns;\n    /** @type {?} */\n    DataTableServiceExample.prototype.sharedDisplayColumns;\n    /** @type {?} */\n    DataTableServiceExample.prototype.sharedPaginationOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.widePaginationOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.sharedSearchOptions;\n    /** @type {?} */\n    DataTableServiceExample.prototype.sharedDefaultSort;\n    /** @type {?} */\n    DataTableServiceExample.prototype.globalSearchEnabled;\n    /** @type {?} */\n    DataTableServiceExample.prototype.refreshSubject;\n    /** @type {?} */\n    DataTableServiceExample.prototype.basicService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableServiceExample.prototype.staticDataSet1;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableServiceExample.prototype.staticDataSet2;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableServiceExample.prototype.staticDataSet3;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableServiceExample.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableServiceExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/basic-drop-down/basic-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Drop Down\n */\nclass BasicDropDownExample {\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    clickMe(event) {\n        window.alert(event);\n    }\n}\nBasicDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-drop-down-example',\n                template: \"<novo-dropdown>\\n  <button type=\\\"button\\\"\\n          theme=\\\"secondary\\\"\\n          icon=\\\"collapse\\\"\\n          inverse>Actions</button>\\n  <list>\\n    <dropdown-item-header>Section 1</dropdown-item-header>\\n    <item (action)=\\\"clickMe('Hello!')\\\">Test</item>\\n    <item (action)=\\\"clickMe('Another!')\\\">Josh</item>\\n    <item tooltip=\\\"Test tooltip :)\\\"\\n          tooltipPosition=\\\"right\\\"\\n          [disabled]=\\\"true\\\"\\n          (action)=\\\"clickMe()\\\">Menu Item With Lots of Text in it to Show Dynamic Width</item>\\n    <dropdown-item-header>Section 2</dropdown-item-header>\\n    <item (action)=\\\"clickMe('Hello!')\\\">Germany</item>\\n    <item (action)=\\\"clickMe('Another!')\\\">Algebra</item>\\n    <item tooltip=\\\"Test tooltip :)\\\"\\n          tooltipPosition=\\\"right\\\"\\n          [disabled]=\\\"true\\\"\\n          (action)=\\\"clickMe()\\\">Blah</item>\\n  </list>\\n</novo-dropdown>\\n<novo-dropdown side=\\\"right\\\">\\n  <button type=\\\"button\\\"\\n          theme=\\\"icon\\\"\\n          icon=\\\"menu\\\"\\n          inverse></button>\\n  <list>\\n    <item>Action 1</item>\\n    <item tooltip=\\\"Test tooltip :)\\\"\\n          tooltipPosition=\\\"left\\\">Action 2</item>\\n    <item>Action 3</item>\\n    <item>Action 4</item>\\n    <item>Action 5</item>\\n    <item>Action 6</item>\\n    <item>Action 7</item>\\n    <item>Action 8</item>\\n    <item>Action 9</item>\\n    <item>Action 10</item>\\n    <item>Menu Item With Lots of Text in it to Show Dynamic Width</item>\\n  </list>\\n</novo-dropdown>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/custom-drop-down/custom-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Custom Drop Down\n */\nclass CustomDropDownExample {\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    clickMe(event) {\n        window.alert(event);\n    }\n}\nCustomDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-drop-down-example',\n                template: \"<novo-dropdown containerClass=\\\"custom-class\\\"\\n               scrollStrategy=\\\"close\\\">\\n  <button type=\\\"button\\\"\\n          theme=\\\"secondary\\\"\\n          icon=\\\"collapse\\\"\\n          inverse>I Have A Custom Class!</button>\\n  <list>\\n    <item (action)=\\\"clickMe('Hello!')\\\">Action 1</item>\\n    <item (action)=\\\"clickMe('Another!')\\\">Action 2</item>\\n  </list>\\n</novo-dropdown>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/large-drop-down/large-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Large Drop Down\n */\nclass LargeDropDownExample {\n    constructor() {\n        this.MOCK_WORDS = [\n            'lorem',\n            'ipsum',\n            'dolor',\n            'sit',\n            'amet',\n            'consectetur',\n            'adipiscing',\n            'elit',\n            'curabitur',\n            'vel',\n            'hendrerit',\n            'libero',\n            'eleifend',\n            'blandit',\n            'nunc',\n            'ornare',\n            'odio',\n            'ut',\n            'orci',\n            'gravida',\n            'imperdiet',\n            'nullam',\n            'purus',\n            'lacinia',\n            'a',\n            'pretium',\n            'quis',\n            'congue',\n            'praesent',\n            'sagittis',\n            'laoreet',\n            'auctor',\n            'mauris',\n            'non',\n            'velit',\n            'eros',\n            'dictum',\n            'proin',\n            'accumsan',\n            'sapien',\n            'nec',\n            'massa',\n            'volutpat',\n            'venenatis',\n            'sed',\n            'eu',\n            'molestie',\n            'lacus',\n            'quisque',\n            'porttitor',\n            'ligula',\n            'dui',\n            'mollis',\n            'tempus',\n            'at',\n            'magna',\n            'vestibulum',\n            'turpis',\n            'ac',\n            'diam',\n            'tincidunt',\n            'id',\n            'condimentum',\n            'enim',\n            'sodales',\n            'in',\n            'hac',\n            'habitasse',\n            'platea',\n            'dictumst',\n            'aenean',\n            'neque',\n            'fusce',\n            'augue',\n            'leo',\n            'eget',\n            'semper',\n            'mattis',\n            'tortor',\n            'scelerisque',\n            'nulla',\n            'interdum',\n            'tellus',\n            'malesuada',\n            'rhoncus',\n            'porta',\n            'sem',\n            'aliquet',\n            'et',\n            'nam',\n            'suspendisse',\n            'potenti',\n            'vivamus',\n            'luctus',\n            'fringilla',\n            'erat',\n            'donec',\n            'justo',\n            'vehicula',\n            'ultricies',\n            'varius',\n            'ante',\n            'primis',\n            'faucibus',\n            'ultrices',\n            'posuere',\n            'cubilia',\n            'curae',\n            'etiam',\n            'cursus',\n            'aliquam',\n            'quam',\n            'dapibus',\n            'nisl',\n            'feugiat',\n            'egestas',\n            'class',\n            'aptent',\n            'taciti',\n            'sociosqu',\n            'ad',\n            'litora',\n            'torquent',\n            'per',\n            'conubia',\n            'nostra',\n            'inceptos',\n            'himenaeos',\n            'phasellus',\n            'nibh',\n            'pulvinar',\n            'vitae',\n            'urna',\n            'iaculis',\n            'lobortis',\n            'nisi',\n            'viverra',\n            'arcu',\n            'morbi',\n            'pellentesque',\n            'metus',\n            'commodo',\n            'ut',\n            'facilisis',\n            'felis',\n            'tristique',\n            'ullamcorper',\n            'placerat',\n            'aenean',\n            'convallis',\n            'sollicitudin',\n            'integer',\n            'rutrum',\n            'duis',\n            'est',\n            'etiam',\n            'bibendum',\n            'donec',\n            'pharetra',\n            'vulputate',\n            'maecenas',\n            'mi',\n            'fermentum',\n            'consequat',\n            'suscipit',\n            'aliquam',\n            'habitant',\n            'senectus',\n            'netus',\n            'fames',\n            'quisque',\n            'euismod',\n            'curabitur',\n            'lectus',\n            'elementum',\n            'tempor',\n            'risus',\n            'cras',\n        ];\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    clickMe(data) {\n        console.log('CLICKED!', data); // tslint:disable-line\n    }\n}\nLargeDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'large-drop-down-example',\n                template: \"<novo-dropdown height=\\\"250\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Lots of Data Points!</button>\\n    <list>\\n      <item *ngFor=\\\"let name of MOCK_WORDS\\\"\\n            (action)=\\\"clickMe(name)\\\">{{ name }}</item>\\n    </list>\\n  </novo-dropdown>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    LargeDropDownExample.prototype.MOCK_WORDS;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/multi-drop-down/multi-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Multi Drop Down\n */\nclass MultiDropDownExample {\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    clickMe(data) {\n        console.log('CLICKED!', data); // tslint:disable-line\n    }\n}\nMultiDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'multi-drop-down-example',\n                template: \"<novo-dropdown>\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Keep Open</button>\\n    <list>\\n      <item (action)=\\\"clickMe('Hello!')\\\"\\n            keepOpen=\\\"true\\\">Action 1</item>\\n      <item (action)=\\\"clickMe('Another!')\\\"\\n            keepOpen=\\\"true\\\">Action 2</item>\\n    </list>\\n  </novo-dropdown>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/position-drop-down/position-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Drop Down Positions\n */\nclass PositionDropDownExample {\n    constructor() {\n        this.POSITION_OPTIONS = [\n            {\n                name: 'default (left)',\n                description: 'Prefer bottom-left, with fallback positions (in order): top-left, bottom-right, top-right, center-left, center-right',\n            },\n            {\n                name: 'right',\n                description: 'Prefer bottom-right, with fallback positions (in order): top-right, bottom-left, top-left, center-left, center-right',\n            },\n            {\n                name: 'above-below',\n                description: 'Prefer bottom-left, with fallback positions (in order): top-left, bottom-right, top-right (no center)',\n            },\n            {\n                name: 'right-above-below',\n                description: 'Prefer bottom-left, with fallback positions (in order): top-left, bottom-right, top-right (no center)',\n            },\n            { name: 'center', description: 'Prefer center-left, with fallback positions above and below, but always covering the dropdown' },\n            { name: 'bottom', description: 'Prefer bottom-left, with fallback position of bottom-right' },\n            { name: 'bottom-left', description: 'Always popup to the bottom-left' },\n            { name: 'bottom-right', description: 'Always popup to the bottom-right' },\n            { name: 'top-left', description: 'Always popup to the top-left' },\n            { name: 'top-right', description: 'Always popup to the top-right' },\n        ];\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    clickMe(data) {\n        console.log('CLICKED!', data); // tslint:disable-line\n    }\n}\nPositionDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'position-drop-down-example',\n                template: \"<novo-dropdown side=\\\"default\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Default</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"right\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Right</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"above-below\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Above-below</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"right-above-below\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Right-Above-Below</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"center\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Center</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"bottom\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Bottom</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"bottom-left\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Bottom-Left</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"bottom-right\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Bottom-Right</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"top-left\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Top-Left</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n  <novo-dropdown side=\\\"top-right\\\">\\n    <button type=\\\"button\\\"\\n            theme=\\\"secondary\\\"\\n            icon=\\\"collapse\\\"\\n            inverse>Top-Right</button>\\n    <list>\\n      <item>Five</item>\\n      <item>Items</item>\\n      <item>For</item>\\n      <item>Position</item>\\n      <item>Test</item>\\n    </list>\\n  </novo-dropdown>\\n\",\n                styles: [\":host{background:#4a89dc;padding:.5rem;display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap}:host novo-dropdown{margin:.5rem}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    PositionDropDownExample.prototype.POSITION_OPTIONS;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/dropdown/scrollable-drop-down/scrollable-drop-down-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Scrollable Drop Down\n */\nclass ScrollableDropDownExample {\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    clickMe(event) {\n        window.alert(event);\n    }\n}\nScrollableDropDownExample.decorators = [\n    { type: Component, args: [{\n                selector: 'scrollable-drop-down-example',\n                template: \"<div class=\\\"scrollable-container\\\" cdkScrollable>\\n    <div class=\\\"scrollable-content\\\">\\n      <novo-dropdown>\\n        <button type=\\\"button\\\"\\n                theme=\\\"secondary\\\"\\n                icon=\\\"collapse\\\"\\n                inverse>Inside a Scrollable Container</button>\\n        <list>\\n          <item (action)=\\\"clickMe('This')\\\"\\n                keepOpen=\\\"true\\\">This</item>\\n          <item (action)=\\\"clickMe('Scrolls!')\\\"\\n                keepOpen=\\\"true\\\">Scrolls!</item>\\n        </list>\\n      </novo-dropdown>\\n    </div>\\n  </div>\\n\",\n                styles: [\":host{background:#4a89dc;display:block;justify-content:space-between;align-items:center;padding:.5rem}:host .scrollable-container{max-height:10rem;overflow:scroll}:host .scrollable-container .scrollable-content{height:30em}:host novo-dropdown{margin:5rem}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/icon/basic-icons/basic-icons-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Icons\n */\nclass BasicIconsExample {\n}\nBasicIconsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-icons-example',\n                template: \"\\n<novo-icon>candidate</novo-icon>\\n<novo-icon>job</novo-icon>\\n<novo-icon>company</novo-icon>\\n<novo-icon>lead</novo-icon>\\n<novo-icon>opportunity</novo-icon>\\n<br>\\n<i class=\\\"bhi-candidate\\\"></i>\\n<i class=\\\"bhi-person\\\"></i>\\n<i class=\\\"bhi-job\\\"></i>\\n<i class=\\\"bhi-company\\\"></i>\\n<i class=\\\"bhi-lead\\\"></i>\\n<i class=\\\"bhi-opportunity\\\"></i>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/icon/raised-icons/raised-icons-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Raised Icons\n */\nclass RaisedIconsExample {\n}\nRaisedIconsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'raised-icons-example',\n                template: \"<novo-icon theme=\\\"candidate\\\" raised=\\\"true\\\">candidate</novo-icon>\\n<novo-icon theme=\\\"job\\\" raised=\\\"true\\\">job</novo-icon>\\n<novo-icon theme=\\\"company\\\" raised=\\\"true\\\">company</novo-icon>\\n<novo-icon theme=\\\"submission\\\" raised=\\\"true\\\">star-o</novo-icon>\\n<novo-icon theme=\\\"placement\\\" raised=\\\"true\\\">star</novo-icon>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/icon/themed-icons/themed-icons-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Themed Icons\n */\nclass ThemedIconsExample {\n}\nThemedIconsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'themed-icons-example',\n                template: \"\\n<novo-icon color=\\\"candidate\\\">candidate</novo-icon>\\n<novo-icon color=\\\"job\\\">job</novo-icon>\\n<novo-icon color=\\\"company\\\">company</novo-icon>\\n<novo-icon color=\\\"submission\\\">star-o</novo-icon>\\n<novo-icon color=\\\"placement\\\">star</novo-icon>\\n<br>\\n<novo-icon theme=\\\"candidate\\\">candidate</novo-icon>\\n<novo-icon theme=\\\"job\\\">job</novo-icon>\\n<novo-icon theme=\\\"company\\\">company</novo-icon>\\n<novo-icon theme=\\\"submission\\\">star-o</novo-icon>\\n<novo-icon theme=\\\"placement\\\">star</novo-icon>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/loading/loading-circle/loading-circle-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Circular Loading Symbol\n */\nclass LoadingCircleExample {\n}\nLoadingCircleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'loading-circle-example',\n                template: \"<section class=\\\"flex\\\">\\n    <div class=\\\"white background\\\">\\n        <novo-spinner theme=\\\"multicolor\\\"></novo-spinner>\\n    </div>\\n    <div class=\\\"light background\\\">\\n        <novo-spinner></novo-spinner>\\n    </div>\\n    <div class=\\\"ocean background\\\">\\n        <novo-spinner inverse></novo-spinner>\\n    </div>\\n    <div class=\\\"navy background\\\">\\n        <novo-spinner theme=\\\"bittersweet\\\"></novo-spinner>\\n    </div>\\n</section>\\n\",\n                styles: [\".flex{display:flex;flex-flow:row nowrap}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/loading/loading-line/loading-line-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Linear Loading Symbol\n */\nclass LoadingLineExample {\n}\nLoadingLineExample.decorators = [\n    { type: Component, args: [{\n                selector: 'loading-line-example',\n                template: \"<header>\\n    <novo-loading></novo-loading>\\n</header>\\n<header class=\\\"color-container\\\">\\n    <novo-loading inverse></novo-loading>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/quick-note/basic-quick-note/basic-quick-note-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Quick Note Example\n */\nclass BasicQuickNoteExample {\n    constructor() {\n        this.placeholder = 'Enter your note text here. Reference people and distribution lists using @ (eg. @John Smith). Reference other records using # (e.g. #Project Manager)';\n        this.basic = {\n            triggers: {\n                tags: '@',\n                references: '#',\n                boos: '^',\n            },\n            options: {\n                tags: ['First', 'Second', 'Space Between'],\n                references: ['Third', 'Fourth'],\n                boos: ['Test'],\n            },\n            renderer: {\n                tags: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"https://www.google.com/search?q=bullhorn&oq=bullhorn\">${symbol}${item.label}</a>`;\n                }),\n                references: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"https://www.google.com/search?q=bullhorn&oq=bullhorn\">${symbol}${item.label}</a>`;\n                }),\n                boos: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<strong>${symbol}${item.label}</strong>`;\n                }),\n            },\n        };\n    }\n}\nBasicQuickNoteExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-quick-note-example',\n                template: \"<novo-quick-note [(ngModel)]=\\\"note\\\" [placeholder]=\\\"placeholder\\\" [config]=\\\"basic\\\"></novo-quick-note>\\n<div class=\\\"data\\\">\\n    <p>Note: {{note | json}}</p>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicQuickNoteExample.prototype.note;\n    /** @type {?} */\n    BasicQuickNoteExample.prototype.placeholder;\n    /** @type {?} */\n    BasicQuickNoteExample.prototype.basic;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/quick-note/custom-quick-note-results/custom-quick-note-results-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DATA = {\n    tags: [{ id: 1, name: 'OH YA!', test: 'TWO' }, { id: 2, name: 'TAGGING!', test: 'ONE' }],\n    references: [{ id: 1, title: 'Awesome Reference' }, { id: 2, title: 'Angular2' }],\n};\nclass CustomQuickNoteResults extends QuickNoteResults {\n}\nCustomQuickNoteResults.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-quick-note-results',\n                host: {\n                    class: 'active quick-note-results',\n                },\n                template: `\n        <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n        <novo-list *ngIf=\"matches.length > 0\">\n            <novo-list-item\n                *ngFor=\"let match of matches\"\n                (click)=\"selectMatch($event)\"\n                [class.active]=\"match===activeMatch\"\n                (mouseenter)=\"selectActive(match)\">\n                <item-content>\n                    **CUSTOM** <b [innerHtml]=\"highlight(match.label, term)\"></b>\n                </item-content>\n            </novo-list-item>\n        </novo-list>\n        <p class=\"picker-error\" *ngIf=\"hasError\">Oops! An error occured.</p>\n        <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">No results to display...</p>\n    `\n            }] }\n];\n/**\n * \\@title Custom Quick Note Results Example\n */\nclass CustomQuickNoteResultsExample {\n    constructor() {\n        this.placeholder = 'Enter your note text here. Reference people and distribution lists using @ (eg. @John Smith). Reference other records using # (e.g. #Project Manager)';\n        this.customResults = {\n            resultsTemplate: CustomQuickNoteResults,\n            triggers: {\n                names: '@',\n                tags: '#',\n            },\n            options: {\n                names: (/**\n                 * @return {?}\n                 */\n                () => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @return {?}\n                     */\n                    (resolve) => {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            resolve(DATA.tags);\n                        }), 300);\n                    }));\n                }),\n                tags: (/**\n                 * @return {?}\n                 */\n                () => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @return {?}\n                     */\n                    (resolve) => {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            resolve(DATA.references);\n                        }), 300);\n                    }));\n                }),\n            },\n            format: {\n                names: '$name',\n                tags: '$title',\n            },\n            renderer: {\n                names: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"http://www.bullhorn.com\" class=\"names\">${symbol}${item.label}</a>`;\n                }),\n                tags: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"http://www.bullhorn.com\" class=\"tags\">${symbol}${item.label}</a>`;\n                }),\n            },\n        };\n    }\n}\nCustomQuickNoteResultsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-quick-note-results-example',\n                template: \"<novo-quick-note [(ngModel)]=\\\"note\\\" [placeholder]=\\\"placeholder\\\" [config]=\\\"customResults\\\"></novo-quick-note>\\n<div class=\\\"data\\\">\\n    <p>Note: {{note | json}}</p>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    CustomQuickNoteResultsExample.prototype.note;\n    /** @type {?} */\n    CustomQuickNoteResultsExample.prototype.placeholder;\n    /** @type {?} */\n    CustomQuickNoteResultsExample.prototype.customResults;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/quick-note/custom-quick-note/custom-quick-note-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DATA$1 = {\n    tags: [{ id: 1, name: 'OH YA!', test: 'TWO' }, { id: 2, name: 'TAGGING!', test: 'ONE' }],\n    references: [{ id: 1, title: 'Awesome Reference' }, { id: 2, title: 'Angular2' }],\n};\n/**\n * \\@title Custom Quick Note Example\n */\nclass CustomQuickNoteExample {\n    constructor() {\n        this.placeholder = 'Enter your note text here. Reference people and distribution lists using @ (eg. @John Smith). Reference other records using # (e.g. #Project Manager)';\n        this.custom = {\n            triggers: {\n                whos: '@',\n                whats: '#',\n            },\n            options: {\n                whos: (/**\n                 * @return {?}\n                 */\n                () => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @return {?}\n                     */\n                    (resolve) => {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            resolve(DATA$1.tags);\n                        }), 300);\n                    }));\n                }),\n                whats: (/**\n                 * @return {?}\n                 */\n                () => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @return {?}\n                     */\n                    (resolve) => {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            resolve(DATA$1.references);\n                        }), 300);\n                    }));\n                }),\n            },\n            format: {\n                whos: '$name $test',\n                whats: '$title',\n            },\n            renderer: {\n                whos: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"http://www.bullhorn.com\" class=\"WHOS\">${symbol}${item.label}</a>`;\n                }),\n                whats: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"http://www.bullhorn.com\" class=\"tag\">${symbol}${item.label}</a>`;\n                }),\n            },\n        };\n    }\n}\nCustomQuickNoteExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-quick-note-example',\n                template: \"<novo-quick-note [(ngModel)]=\\\"note\\\" [placeholder]=\\\"placeholder\\\" [config]=\\\"custom\\\"></novo-quick-note>\\n<div class=\\\"data\\\">\\n    <p>Note: {{note | json}}</p>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    CustomQuickNoteExample.prototype.note;\n    /** @type {?} */\n    CustomQuickNoteExample.prototype.placeholder;\n    /** @type {?} */\n    CustomQuickNoteExample.prototype.custom;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/search/search-usage/search-usage-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Search Box Usage\n */\nclass SearchUsageExample {\n    constructor() {\n        this.test = 'TEST';\n        this.geo = '';\n        this.entity = '';\n        this.searchResults = new Subject();\n        this.searchData = [\n            {\n                data: {\n                    title: 'Central Bank',\n                    name: 'Central Bank',\n                    email: 'new-bank-inquiries@centralbank.com',\n                    phone: '(651) 555-1234',\n                    address: { city: 'Washington', state: 'DC' },\n                    searchEntity: 'ClientCorporation',\n                    type: 'company',\n                },\n            },\n            {\n                data: {\n                    title: 'Federal Bank',\n                    name: 'Federal Bank',\n                    email: 'info@federalbank.com',\n                    phone: '(545) 555-1212',\n                    address: { city: 'Arlington', state: 'VA' },\n                    searchEntity: 'ClientCorporation',\n                    type: 'company',\n                },\n            },\n            {\n                data: {\n                    title: 'Aaron Burr',\n                    firstName: 'Aaron',\n                    lastName: 'Burr',\n                    name: 'Aaron Burr',\n                    companyName: 'Central Bank',\n                    email: 'aburr@centralbank.com',\n                    phone: '(333) 555-3434',\n                    address: { city: 'Washington', state: 'DC' },\n                    status: 'Hold',\n                    searchEntity: 'ClientContact',\n                    type: 'person',\n                },\n            },\n            {\n                data: {\n                    title: 'Alexander Hamilton',\n                    firstName: 'Alexander',\n                    lastName: 'Hamilton',\n                    name: 'Alexander Hamilton',\n                    companyName: 'Federal Bank',\n                    email: 'ahamilton@federalbank.com',\n                    phone: '(333) 555-2222',\n                    address: { city: 'Arlington', state: 'VA' },\n                    status: 'Active',\n                    searchEntity: 'ClientContact',\n                    type: 'person',\n                },\n            },\n            {\n                data: {\n                    title: 'Ben Franklin',\n                    firstName: 'Ben',\n                    lastName: 'Franklin',\n                    name: 'Ben Franklin',\n                    email: 'bfranklin@gmail.com',\n                    phone: '(654) 525-2222',\n                    address: { city: 'Boston', state: 'MA' },\n                    status: 'Interviewing',\n                    searchEntity: 'Candidate',\n                    type: 'candidate',\n                },\n            },\n            {\n                data: {\n                    title: 'Thomas Jefferson',\n                    firstName: 'Thomas',\n                    lastName: 'Jefferson',\n                    name: 'Thomas Jefferson',\n                    email: 'tjefferson@usa.com',\n                    phone: '(123) 542-1234',\n                    address: { city: 'Arlington', state: 'VA' },\n                    status: 'New Lead',\n                    searchEntity: 'Candidate',\n                    type: 'candidate',\n                },\n            },\n        ];\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    search(term) {\n        this.searchResults.next(this.searchData.map((/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x.data)));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    onSelectMatch(item) {\n        this.test = item.name;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    onSelectEntity(item) {\n        this.entity = item.data.name;\n    }\n}\nSearchUsageExample.decorators = [\n    { type: Component, args: [{\n                selector: 'search-usage-example',\n                template: \"\\n<novo-search></novo-search>\\n\\n<br/>\\n\\n<novo-search alwaysOpen=\\\"true\\\"></novo-search>\\n\\n<br/>\\n\\n<novo-search [ngModel]=\\\"test\\\" (ngModelChange)=\\\"search($event)\\\">\\n    <novo-list direction=\\\"vertical\\\">\\n        <novo-list-item *ngFor=\\\"let item of searchResults | async\\\" (click)=\\\"onSelectMatch(item)\\\">\\n            <item-header>\\n                <item-avatar [icon]=\\\"item.type\\\"></item-avatar>\\n                <item-title>{{item.name}}</item-title>\\n            </item-header>\\n        </novo-list-item>\\n    </novo-list>\\n</novo-search>\\n\\n<br/>\\n\\n<novo-search icon=\\\"location\\\" theme=\\\"grapefruit\\\" alwaysOpen=\\\"true\\\" [(ngModel)]=\\\"geo\\\" displayField=\\\"formatted_address\\\" [closeOnSelect]=\\\"false\\\" hint=\\\"Search Google to find your address.\\\">\\n    <google-places-list [(term)]=\\\"geo\\\"></google-places-list>\\n</novo-search>\\n<div>Value is: {{geo}}</div>\\n<br/>\\n\\n<novo-search icon=\\\"candidate\\\" theme=\\\"candidate\\\" alwaysOpen=\\\"true\\\" [(ngModel)]=\\\"entity\\\">\\n    <entity-picker-results [matches]=\\\"searchData\\\" (select)=\\\"onSelectEntity($event)\\\"></entity-picker-results>\\n</novo-search>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    SearchUsageExample.prototype.test;\n    /** @type {?} */\n    SearchUsageExample.prototype.geo;\n    /** @type {?} */\n    SearchUsageExample.prototype.entity;\n    /** @type {?} */\n    SearchUsageExample.prototype.searchResults;\n    /** @type {?} */\n    SearchUsageExample.prototype.searchData;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/slides/basic-slide/basic-slide-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Slide Example\n */\nclass BasicSlideExample {\n}\nBasicSlideExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-slide-example',\n                template: \"<novo-slider [slides]=\\\"2\\\">\\n    <div slide=\\\"1\\\">\\n        SLIDE #1\\n    </div>\\n    <div slide=\\\"2\\\">\\n        SLIDE #2\\n    </div>\\n</novo-slider>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/switch/switch-usage/switch-usage-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Switch Usage Example\n */\nclass SwitchUsageExample {\n    constructor() {\n        this.toggleCount = 0;\n        this.checked = true;\n    }\n    /**\n     * @return {?}\n     */\n    increment() {\n        this.toggleCount++;\n    }\n}\nSwitchUsageExample.decorators = [\n    { type: Component, args: [{\n                selector: 'switch-usage-example',\n                template: \"<label>\\n  Count\\n  <span>{{toggleCount}}</span>\\n</label>\\n<label>\\n  Toggled\\n  <span>{{checked}}</span>\\n</label>\\n<novo-switch [(ngModel)]=\\\"checked\\\" (onChange)=\\\"increment()\\\"></novo-switch>\\n<novo-switch theme=\\\"grapefruit\\\"></novo-switch>\\n<novo-switch disabled></novo-switch>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    SwitchUsageExample.prototype.toggleCount;\n    /** @type {?} */\n    SwitchUsageExample.prototype.checked;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/tabbed-group-picker/tabbed-group-picker-basic/tabbed-group-picker-basic-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tabbed Group Picker - Basic Example\n */\nclass TabbedGroupPickerBasicExample {\n    constructor() {\n        this.getAnimals = (/**\n         * @return {?}\n         */\n        () => ['Dog', 'Cat', 'Mouse', 'Horse', 'Cow', 'Chicken', 'Pig', 'Sheep', 'Goat', 'Goose'].map((/**\n         * @param {?} name\n         * @param {?} index\n         * @return {?}\n         */\n        (name, index) => ({\n            name,\n            animalId: index + 1,\n        }))));\n        this.getPlaces = (/**\n         * @return {?}\n         */\n        () => [\n            ['Roma', 'Rome'],\n            ['Firenze', 'Florence'],\n            ['Munchen', 'Munich'],\n            ['Paris', 'Paris'],\n            ['Sevilla', 'Seville'],\n            ['Athinai', 'Athens'],\n        ].map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([localName, englishName]) => ({ localName, englishName }))));\n        this.getColors = (/**\n         * @return {?}\n         */\n        () => [['255,0,0', 'Red'], ['0,255,0', 'Green'], ['0,0,255', 'Blue'], ['0,0,0', 'Black'], ['255,255,255', 'White']].map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([rgb, colorName]) => ({ rgb, colorName }))));\n        this.animalTab = {\n            typeName: 'animals',\n            typeLabel: 'Animals',\n            valueField: 'animalId',\n            labelField: 'name',\n            data: this.getAnimals(),\n        };\n        this.example_tab = [\n            this.animalTab,\n            {\n                typeName: 'places',\n                typeLabel: 'Places',\n                valueField: 'localName',\n                labelField: 'englishName',\n                data: this.getPlaces(),\n            },\n            {\n                typeName: 'colors',\n                typeLabel: 'Colors',\n                valueField: 'rgb',\n                labelField: 'colorName',\n                data: this.getColors(),\n            },\n        ];\n        this.buttonLabel = 'Nothing Selected';\n        this.example_buttonConfig = {\n            theme: 'select',\n            side: 'right',\n            icon: 'collapse',\n            label: this.buttonLabel,\n            selector: 'buttonConfig',\n        };\n        this.selectedAnimals = [];\n        this.selectedPlaces = [];\n        this.selectedColors = [];\n    }\n    /**\n     * @param {?} selectedData\n     * @return {?}\n     */\n    onSelectionChange(selectedData) {\n        this.selectedAnimals = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'animals'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ animalId }) => animalId));\n        this.selectedPlaces = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'places'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ localName }) => localName));\n        this.selectedColors = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'colors'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ rgb }) => rgb));\n        this.example_buttonConfig.label = this.buildButtonLabel();\n    }\n    /**\n     * @return {?}\n     */\n    buildButtonLabel() {\n        /** @type {?} */\n        const labelParts = [];\n        this.selectedAnimals.length ? labelParts.push(`Animals (${this.selectedAnimals.length})`) : '';\n        this.selectedPlaces.length ? labelParts.push(`Places (${this.selectedPlaces.length})`) : '';\n        this.selectedColors.length ? labelParts.push(`Colors (${this.selectedColors.length})`) : '';\n        return labelParts.join(', ') || 'Nothing Selected';\n    }\n}\nTabbedGroupPickerBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabbed-group-picker-basic-example',\n                template: \"<div class=\\\"tabbed-group-picker-example\\\">\\n  <novo-tabbed-group-picker\\n    [tabs]=\\\"example_tab\\\"\\n    title=\\\"basic-example\\\"\\n    [buttonConfig]=\\\"example_buttonConfig\\\"\\n    (selectionChange)=\\\"onSelectionChange($event)\\\"\\n  ></novo-tabbed-group-picker>\\n  <div class=\\\"selected-data-wrapper\\\">\\n    <h6>Selected Animal IDs:</h6>\\n    <div>{{ selectedAnimals.join(', ') }}</div>\\n    <h6>Selected Local Place Names:</h6>\\n    <div>{{ selectedPlaces.join(', ') }}</div>\\n    <h6>Selected Colors:</h6>\\n    <div>{{ selectedColors.join(' | ') }}</div>\\n  </div>\\n</div>\\n\",\n                styles: [\".tabbed-group-picker-example{display:flex;justify-content:space-between}.tabbed-group-picker-example novo-tabbed-group-picker{max-width:40%}.tabbed-group-picker-example .selected-data-wrapper{width:40%}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.getAnimals;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.getPlaces;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.getColors;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.animalTab;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.example_tab;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.buttonLabel;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.example_buttonConfig;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.selectedAnimals;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.selectedPlaces;\n    /** @type {?} */\n    TabbedGroupPickerBasicExample.prototype.selectedColors;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/tabbed-group-picker/tabbed-group-picker-big-groups-example/tabbed-group-picker-big-groups-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tabbed Group Picker - Big Groups Example\n */\nclass TabbedGroupPickerBigGroupsExample {\n    constructor() {\n        this.example_tab = [\n            {\n                typeName: 'integers',\n                typeLabel: 'Integers',\n                valueField: 'value',\n                labelField: 'label',\n                data: Array(2000)\n                    .fill(0)\n                    .map((/**\n                 * @param {?} value\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (value, index) => index + 1))\n                    .map((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                (value) => ({ value, label: String(value) }))),\n            },\n            {\n                typeName: 'divisibles',\n                typeLabel: 'Divisible By',\n                valueField: 'v',\n                labelField: 'l',\n                childTypeName: 'integers',\n                data: Array(100)\n                    .fill(0)\n                    .map((/**\n                 * @param {?} v\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (v, i) => i + 1))\n                    .map((/**\n                 * @param {?} v\n                 * @return {?}\n                 */\n                (v) => ({\n                    v,\n                    l: `Divisible By ${v}`,\n                    children: Array(2000)\n                        .fill(0)\n                        .map((/**\n                     * @param {?} value\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    (value, index) => index + 1))\n                        .filter((/**\n                     * @param {?} number\n                     * @return {?}\n                     */\n                    (number) => number % v === 0))\n                        .map((/**\n                     * @param {?} child\n                     * @return {?}\n                     */\n                    (child) => ({ value: child, label: String(child) }))),\n                }))),\n            },\n            {\n                typeName: 'prime factorization',\n                typeLabel: 'Prime Factors',\n                valueField: 'v',\n                labelField: 'l',\n                childTypeName: 'integers',\n                data: Array(100)\n                    .fill(0)\n                    .map((/**\n                 * @param {?} v\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (v, i) => i + 1990))\n                    .map((/**\n                 * @param {?} parent\n                 * @return {?}\n                 */\n                (parent) => ({\n                    v: parent,\n                    l: `Prime Factors of ${parent}`,\n                    children: Array(2000)\n                        .fill(0)\n                        .map((/**\n                     * @param {?} value\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    (value, index) => index + 1))\n                        .filter((/**\n                     * @param {?} child\n                     * @return {?}\n                     */\n                    (child) => parent % child === 0 && this.isPrime(child)))\n                        .map((/**\n                     * @param {?} child\n                     * @return {?}\n                     */\n                    (child) => ({ value: child, label: String(child) }))),\n                }))),\n            },\n        ];\n        this.buttonLabel = 'Nothing Selected';\n        this.example_buttonConfig = {\n            theme: 'select',\n            side: 'right',\n            icon: 'collapse',\n            label: this.buttonLabel,\n            selector: 'buttonConfig',\n        };\n        this.selectedPrimeFactorizations = [];\n        this.selectedDivisibles = [];\n        this.selectedIntegers = [];\n    }\n    /**\n     * @param {?} number\n     * @return {?}\n     */\n    isPrime(number) {\n        /** @type {?} */\n        const squareRoot = Math.ceil(Math.sqrt(number));\n        return !Array(squareRoot)\n            .fill(0)\n            .map((/**\n         * @param {?} value\n         * @param {?} index\n         * @return {?}\n         */\n        (value, index) => index + 2))\n            .some((/**\n         * @param {?} divisor\n         * @return {?}\n         */\n        (divisor) => number % divisor === 0));\n    }\n    /**\n     * @param {?} selectedData\n     * @return {?}\n     */\n    onSelectionChange(selectedData) {\n        this.selectedIntegers = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'integers'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ value }) => value));\n        this.selectedDivisibles = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'divisibles'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ v }) => v));\n        this.selectedPrimeFactorizations = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'prime factorization'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ v }) => v));\n        this.example_buttonConfig.label = this.buildButtonLabel();\n    }\n    /**\n     * @return {?}\n     */\n    buildButtonLabel() {\n        return this.selectedIntegers.length ? `Integers (${this.selectedIntegers.length})` : 'Nothing Selected';\n    }\n}\nTabbedGroupPickerBigGroupsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabbed-group-picker-big-groups-example',\n                template: \"<div class=\\\"tabbed-group-picker-example\\\">\\n  <novo-tabbed-group-picker\\n    [tabs]=\\\"example_tab\\\"\\n    title=\\\"big-groups-example\\\"\\n    [buttonConfig]=\\\"example_buttonConfig\\\"\\n    (selectionChange)=\\\"onSelectionChange($event)\\\"\\n  ></novo-tabbed-group-picker>\\n  <div class=\\\"selected-data-wrapper\\\">\\n    <h6>Selected Integers:</h6>\\n    <div>{{ selectedIntegers.join(', ') }}</div>\\n    <h6>Selected Divisibles:</h6>\\n    <div>{{ selectedDivisibles.join(', ') }}</div>\\n    <h6>Selected Prime Factorizations:</h6>\\n    <div>{{ selectedPrimeFactorizations.join(', ') }}</div>\\n  </div>\\n</div>\\n\",\n                styles: [\".tabbed-group-picker-example{display:flex;justify-content:space-between}.tabbed-group-picker-example novo-tabbed-group-picker{max-width:40%}.tabbed-group-picker-example .selected-data-wrapper{width:40%}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.example_tab;\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.buttonLabel;\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.example_buttonConfig;\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.selectedPrimeFactorizations;\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.selectedDivisibles;\n    /** @type {?} */\n    TabbedGroupPickerBigGroupsExample.prototype.selectedIntegers;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/tabbed-group-picker/tabbed-group-picker-groups-example/tabbed-group-picker-groups-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tabbed Group Picker - Groups Example\n */\nclass TabbedGroupPickerGroupsExample {\n    constructor() {\n        this.getAnimals = (/**\n         * @return {?}\n         */\n        () => ['Dog', 'Cat', 'Mouse', 'Horse', 'Cow', 'Chicken', 'Pig', 'Sheep', 'Goat', 'Goose'].map((/**\n         * @param {?} name\n         * @param {?} index\n         * @return {?}\n         */\n        (name, index) => ({\n            name,\n            animalId: index + 1,\n        }))));\n        this.getAnimalCategories = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const animals = this.getAnimals();\n            /** @type {?} */\n            const birds = ['Chicken', 'Goose'].map((/**\n             * @param {?} name\n             * @return {?}\n             */\n            (name) => animals.find((/**\n             * @param {?} animal\n             * @return {?}\n             */\n            (animal) => animal.name === name))));\n            /** @type {?} */\n            const livestock = ['Cow', 'Pig', 'Sheep', 'Goat'].map((/**\n             * @param {?} name\n             * @return {?}\n             */\n            (name) => animals.find((/**\n             * @param {?} animal\n             * @return {?}\n             */\n            (animal) => animal.name === name))));\n            return [\n                {\n                    name: 'Birds',\n                    groupId: 1,\n                    children: birds,\n                },\n                {\n                    name: 'Livestock',\n                    groupId: 2,\n                    children: livestock,\n                },\n            ];\n        });\n        this.example_tab = [\n            {\n                typeName: 'animals',\n                typeLabel: 'Animals',\n                valueField: 'animalId',\n                labelField: 'name',\n                data: this.getAnimals(),\n            },\n            {\n                typeName: 'animalCategories',\n                typeLabel: 'Animal Categories',\n                valueField: 'groupId',\n                labelField: 'name',\n                childTypeName: 'animals',\n                data: this.getAnimalCategories(),\n            },\n        ];\n        this.example_quickSelectConfig = {\n            label: 'Quick Select',\n            items: [\n                {\n                    childTypeName: 'animals',\n                    children: [2],\n                    label: 'Pure Evil',\n                },\n                {\n                    childTypeName: 'animals',\n                    children: [1, 6, 9],\n                    label: 'My Pets',\n                },\n                {\n                    childTypeName: 'animals',\n                    all: true,\n                    label: 'All Animals',\n                },\n            ],\n        };\n        this.buttonLabel = 'Nothing Selected';\n        this.example_buttonConfig = {\n            theme: 'select',\n            side: 'right',\n            icon: 'collapse',\n            label: this.buttonLabel,\n            selector: 'buttonConfig',\n        };\n        this.selectedAnimals = [];\n        this.selectedAnimalCategories = [];\n    }\n    /**\n     * @param {?} selectedData\n     * @return {?}\n     */\n    onSelectionChange(selectedData) {\n        this.selectedAnimals = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'animals'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ animalId }) => animalId));\n        this.selectedAnimalCategories = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'animalCategories'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ groupId }) => groupId));\n        this.example_buttonConfig.label = this.buildButtonLabel();\n    }\n    /**\n     * @return {?}\n     */\n    buildButtonLabel() {\n        return this.selectedAnimals.length ? `Animals (${this.selectedAnimals.length})` : 'Nothing Selected';\n    }\n}\nTabbedGroupPickerGroupsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabbed-group-picker-groups-example',\n                template: \"<div class=\\\"tabbed-group-picker-example\\\">\\n  <novo-tabbed-group-picker\\n    [tabs]=\\\"example_tab\\\"\\n    title=\\\"groups-example\\\"\\n    [quickSelectConfig]=\\\"example_quickSelectConfig\\\"\\n    [buttonConfig]=\\\"example_buttonConfig\\\"\\n    (selectionChange)=\\\"onSelectionChange($event)\\\"\\n  ></novo-tabbed-group-picker>\\n  <div class=\\\"selected-data-wrapper\\\">\\n    <h6>Selected Animal IDs:</h6>\\n    <div>{{ selectedAnimals.join(', ') }}</div>\\n    <h6>Selected Animal Category IDs:</h6>\\n    <div>{{ selectedAnimalCategories.join(', ') }}</div>\\n  </div>\\n</div>\\n\",\n                styles: [\".tabbed-group-picker-example{display:flex;justify-content:space-between}.tabbed-group-picker-example novo-tabbed-group-picker{max-width:40%}.tabbed-group-picker-example .selected-data-wrapper{width:40%}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.getAnimals;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.getAnimalCategories;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.example_tab;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.example_quickSelectConfig;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.buttonLabel;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.example_buttonConfig;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.selectedAnimals;\n    /** @type {?} */\n    TabbedGroupPickerGroupsExample.prototype.selectedAnimalCategories;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/tabbed-group-picker/tabbed-group-picker-quick-select-example/tabbed-group-picker-quick-select-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tabbed Group Picker - Quick Select Example\n */\nclass TabbedGroupPickerQuickSelectExample {\n    constructor() {\n        this.getAnimals = (/**\n         * @return {?}\n         */\n        () => ['Dog', 'Cat', 'Mouse', 'Horse', 'Cow', 'Chicken', 'Pig', 'Sheep', 'Goat', 'Goose'].map((/**\n         * @param {?} name\n         * @param {?} index\n         * @return {?}\n         */\n        (name, index) => ({\n            name,\n            animalId: index + 1,\n        }))));\n        this.example_tab = [\n            {\n                typeName: 'animals',\n                typeLabel: 'Animals',\n                valueField: 'animalId',\n                labelField: 'name',\n                data: this.getAnimals(),\n            },\n        ];\n        this.example_quickSelectConfig = {\n            label: 'Quick Select',\n            items: [\n                {\n                    childTypeName: 'animals',\n                    children: [2],\n                    label: 'Pure Evil',\n                },\n                {\n                    childTypeName: 'animals',\n                    children: [1, 6, 9],\n                    label: 'My Pets',\n                },\n                {\n                    childTypeName: 'animals',\n                    all: true,\n                    label: 'All Animals',\n                },\n            ],\n        };\n        this.buttonLabel = 'Nothing Selected';\n        this.example_buttonConfig = {\n            theme: 'select',\n            side: 'right',\n            icon: 'collapse',\n            label: this.buttonLabel,\n            selector: 'buttonConfig',\n        };\n        this.selectedAnimals = [];\n    }\n    /**\n     * @param {?} selectedData\n     * @return {?}\n     */\n    onSelectionChange(selectedData) {\n        this.selectedAnimals = ((/** @type {?} */ (selectedData.find((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ typeName }) => typeName === 'animals'))))).data.map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ animalId }) => animalId));\n        this.example_buttonConfig.label = this.buildButtonLabel();\n    }\n    /**\n     * @return {?}\n     */\n    buildButtonLabel() {\n        return this.selectedAnimals.length ? `Animals (${this.selectedAnimals.length})` : 'Nothing Selected';\n    }\n}\nTabbedGroupPickerQuickSelectExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabbed-group-picker-quick-select-example',\n                template: \"<div class=\\\"tabbed-group-picker-example\\\">\\n  <novo-tabbed-group-picker\\n    [tabs]=\\\"example_tab\\\"\\n    title=\\\"quick-select-example\\\"\\n    [quickSelectConfig]=\\\"example_quickSelectConfig\\\"\\n    [buttonConfig]=\\\"example_buttonConfig\\\"\\n    (selectionChange)=\\\"onSelectionChange($event)\\\"\\n  ></novo-tabbed-group-picker>\\n  <div class=\\\"selected-data-wrapper\\\">\\n    <h6>Selected Animal IDs:</h6>\\n    <div>{{ selectedAnimals.join(', ') }}</div>\\n  </div>\\n</div>\\n\",\n                styles: [\".tabbed-group-picker-example{display:flex;justify-content:space-between}.tabbed-group-picker-example novo-tabbed-group-picker{max-width:40%}.tabbed-group-picker-example .selected-data-wrapper{width:40%}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.getAnimals;\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.example_tab;\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.example_quickSelectConfig;\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.buttonLabel;\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.example_buttonConfig;\n    /** @type {?} */\n    TabbedGroupPickerQuickSelectExample.prototype.selectedAnimals;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/custom-cells/actions-cell-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Actions Cell Example\n */\nclass ActionsCellExample extends BaseRenderer {\n    constructor() {\n        super();\n    }\n    /**\n     * @param {?} data\n     * @param {?} meta\n     * @return {?}\n     */\n    getActionContext(data, meta) {\n        return { item: data, meta };\n    }\n}\nActionsCellExample.decorators = [\n    { type: Component, args: [{\n                selector: 'actions-cell-example',\n                template: `\n    <novo-dropdown parentScrollSelector=\".table-container\">\n      <button type=\"button\" theme=\"dialogue\" icon=\"collapse\">Actions!</button>\n      <list>\n        <item>Item 1</item>\n        <item>Item 2</item>\n        <item>Item 3</item>\n        <item>Item 4</item>\n        <item>Item 5</item>\n        <item>Item 6</item>\n        <item>Item 7</item>\n        <item>Item 8</item>\n        <item>Item 9</item>\n      </list>\n    </novo-dropdown>\n  `\n            }] }\n];\n/** @nocollapse */\nActionsCellExample.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/table-extras.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_COLORS = ['aqua', 'ocean', 'mint', 'grass', 'sunflower', 'company', 'lead', 'positive', 'black'];\nconst ɵ0 = /**\n * @param {?} object\n * @return {?}\n */\n(object) => {\n    return object.ext.obj;\n}, ɵ1 = /**\n * @param {?} sort\n * @param {?} previous\n * @param {?} current\n * @return {?}\n */\n(sort, previous, current) => {\n    /** @type {?} */\n    const first = previous.obj;\n    /** @type {?} */\n    const second = current.obj;\n    if (first > second) {\n        return sort === 'desc' ? -1 : 1;\n    }\n    if (first < second) {\n        return sort === 'asc' ? -1 : 1;\n    }\n    return 0;\n}, ɵ2 = /**\n * @param {?} object\n * @return {?}\n */\n(object) => {\n    return `$ ${Number(object.salary).toFixed(2)}`;\n}, ɵ3 = /**\n * @param {?} data\n * @param {?} status\n * @return {?}\n */\n(data, status) => window.alert(`Update Status ${status}!`), ɵ4 = /**\n * @param {?} data\n * @param {?} status\n * @return {?}\n */\n(data, status) => window.alert(`Move ${status}!`), ɵ5 = /**\n * @param {?} data\n * @param {?} status\n * @return {?}\n */\n(data, status) => window.alert(`Move ${status}!`);\n/** @type {?} */\nconst TableColumns = [\n    { title: 'Actions', renderer: ActionsCellExample, sorting: false, filtering: false },\n    { title: 'Name', name: 'name', ordering: true, type: 'link', filtering: true },\n    { title: 'Position', name: 'position', ordering: true, filtering: true },\n    {\n        title: 'Extn.',\n        name: 'ext',\n        ordering: true,\n        renderer: (ɵ0),\n        compare: (ɵ1),\n    },\n    {\n        title: 'Start date',\n        type: 'date',\n        name: 'startDate',\n        renderer: DateCell,\n        ordering: true,\n        filtering: true,\n        range: true,\n    },\n    {\n        title: '%',\n        name: 'percent',\n        ordering: true,\n        renderer: PercentageCell,\n    },\n    {\n        title: 'Salary',\n        name: 'salary',\n        ordering: true,\n        renderer: (ɵ2),\n        rightAlignCellContent: true,\n    },\n    {\n        title: 'Status',\n        name: 'status',\n        renderer: NovoDropdownCell,\n        dropdownCellConfig: [\n            {\n                category: 'Update Status',\n                callback: (ɵ3),\n                options: [{ label: 'New Lead', value: 'New Lead' }, { label: 'Active', value: 'Active' }, { label: 'Archived', value: 'Archived' }],\n            },\n            {\n                category: 'Move',\n                callback: (ɵ4),\n                options: ['Kitten', 'Kitty'],\n            },\n            {\n                callback: (ɵ5),\n                options: ['Meow', 'Kitty'],\n            },\n        ],\n    },\n];\n/** @type {?} */\nconst TableData = [\n    {\n        name: 'Victoria Cantrell',\n        position: 'Integer Corporation',\n        office: 'Croatia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/19'),\n        salary: 208178,\n        percent: 0.5,\n        status: 'New Lead',\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Pearl Crosby',\n        position: 'In PC',\n        office: 'Cambodia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/10/08'),\n        salary: 114367,\n        percent: 0.5,\n        status: 'New Lead',\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Colette Foley',\n        position: 'Lorem Inc.',\n        office: 'Korea, North',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/07/19'),\n        salary: 721473,\n        status: 'New Lead',\n        percent: 1,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Anastasia Shaffer',\n        position: 'Dolor Nulla Semper LLC',\n        office: 'Suriname',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/04/20'),\n        salary: 264620,\n        percent: 1,\n        status: 'New Lead',\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Gabriel Castro',\n        position: 'Sed Limited',\n        office: 'Bahrain',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/03/04'),\n        salary: 651350,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Cherokee Ware',\n        position: 'Tincidunt LLC',\n        office: 'United Kingdom (Great Britain)',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/06/17'),\n        salary: 666259,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'It’s been a long time coming, but tonight, because of what we did on this day, in this election, at this defining time, change has come to America.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Barry Moss',\n        position: 'Sociis Industries',\n        office: 'Western Sahara',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/13'),\n        salary: 541631,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Maryam Tucker',\n        position: 'Elit Pede Malesuada Inc.',\n        office: 'Brazil',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/10/02'),\n        salary: 182294,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Constance Clayton',\n        position: 'Auctor Velit Aliquam LLP',\n        office: 'United Arab Emirates',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/01'),\n        salary: 218597,\n        percent: 0.33,\n        status: 'New Lead',\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Rogan Tucker',\n        position: 'Arcu Vestibulum Ante Associates',\n        office: 'Jersey',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/04'),\n        salary: 861632,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Emery Mcdowell',\n        position: 'Gravida Company',\n        office: 'New Zealand',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/06/02'),\n        salary: 413568,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Yael Greer',\n        position: 'Orci Limited',\n        office: 'Madagascar',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/12/04'),\n        salary: 121831,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Jared Burgess',\n        position: 'Auctor Incorporated',\n        office: 'Burundi',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/12'),\n        salary: 62243,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Sharon Campbell',\n        position: 'Elit Curabitur Sed Consulting',\n        office: 'Comoros',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/09/14'),\n        salary: 200854,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Finance'],\n    },\n    {\n        name: 'Yeo Church',\n        position: 'Donec Vitae Erat PC',\n        office: 'Saudi Arabia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/06/07'),\n        salary: 581193,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Finance'],\n    },\n    {\n        name: 'Kylie Barlow',\n        position: 'Fermentum Risus Corporation',\n        office: 'Papua New Guinea',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/12/03'),\n        salary: 418115,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Temporary', 'Finance'],\n    },\n    {\n        name: 'Nell Leonard',\n        position: 'Vestibulum Consulting',\n        office: 'Saudi Arabia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/05/29'),\n        salary: 466201,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Temporary', 'Finance'],\n    },\n    {\n        name: 'Brandon Fleming',\n        position: 'Donec Egestas Associates',\n        office: 'Poland',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/22'),\n        salary: 800011,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Temporary', 'Finance'],\n    },\n    {\n        name: 'Inga Pena',\n        position: 'Et Magnis Dis Limited',\n        office: 'Belgium',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/05/18'),\n        salary: 564245,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Finance'],\n    },\n    {\n        name: 'Arden Russo',\n        position: 'Est Tempor Bibendum Corp.',\n        office: 'Dominican Republic',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/07/23'),\n        salary: 357222,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Finance'],\n    },\n    {\n        name: 'Liberty Gallegos',\n        position: 'Nec Diam LLC',\n        office: 'Ghana',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/06/18'),\n        salary: 554375,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Dennis York',\n        position: 'Nullam Suscipit Foundation',\n        office: 'Namibia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/03/20'),\n        salary: 90417,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Petra Chandler',\n        position: 'Pede Nonummy Inc.',\n        office: 'Namibia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/03/26'),\n        salary: 598915,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Aurelia Marshall',\n        position: 'Donec Consulting',\n        office: 'Nicaragua',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/18'),\n        salary: 201780,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'And to all those watching tonight from beyond our shores, from parliaments and palaces to those who are huddled around radios in the forgotten corners of our world – our stories are singular, but our destiny is shared, and a new dawn of American leadership is at hand. To those who would tear this world down – we will defeat you. To those who seek peace and security – we support you. And to all those who have wondered if America’s beacon still burns as bright – tonight we proved once more that the true strength of our nation comes not from our the might of our arms or the scale of our wealth, but from the enduring power of our ideals: democracy, liberty, opportunity, and unyielding hope.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Rose Carter',\n        position: 'Enim Consequat Purus Industries',\n        office: 'Morocco',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/03/06'),\n        salary: 220187,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Denton Atkins',\n        position: 'Non Vestibulum PC',\n        office: 'Mali',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/04/19'),\n        salary: 324588,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Permenant', 'Developer'],\n    },\n    {\n        name: 'Germaine Osborn',\n        position: 'Tristique Aliquet PC',\n        office: 'Lesotho',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/19'),\n        salary: 351108,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Nell Butler',\n        position: 'Sit Amet Dapibus Industries',\n        office: 'Cuba',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/06'),\n        salary: 230072,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Marketing'],\n    },\n    {\n        name: 'Brent Stein',\n        position: 'Eu Augue Porttitor LLP',\n        office: 'Cyprus',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/11/02'),\n        salary: 853413,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Marketing'],\n    },\n    {\n        name: 'Alexandra Shaw',\n        position: 'Aenean Gravida Limited',\n        office: 'Uruguay',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/05/16'),\n        salary: 401970,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Marketing'],\n    },\n    {\n        name: 'Veronica Allison',\n        position: 'Aliquet Diam Sed Institute',\n        office: 'Samoa',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/05/17'),\n        salary: 79193,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Marketing'],\n    },\n    {\n        name: 'Katelyn Gamble',\n        position: 'Sed Associates',\n        office: 'Mauritius',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/03/20'),\n        salary: 484299,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Marketing'],\n    },\n    {\n        name: 'James Greer',\n        position: 'A Dui Incorporated',\n        office: 'Norway',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/02/21'),\n        salary: 333518,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Marketing'],\n    },\n    {\n        name: 'Cain Vasquez',\n        position: 'Nulla Facilisis Suspendisse Institute',\n        office: 'China',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/05/27'),\n        salary: 651761,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Marketing'],\n    },\n    {\n        name: 'Shaeleigh Barr',\n        position: 'Eleifend Cras Institute',\n        office: 'Ghana',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/04/01'),\n        salary: 627095,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Developer'],\n    },\n    {\n        name: 'Baker Mckay',\n        position: 'Ut Sagittis Associates',\n        office: 'Isle of Man',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/12'),\n        salary: 742247,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Developer'],\n    },\n    {\n        name: 'Jayme Pace',\n        position: 'Cras Eu Tellus Associates',\n        office: 'Bouvet Island',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/12'),\n        salary: 591588,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Developer'],\n    },\n    {\n        name: 'Reuben Albert',\n        position: 'Lobortis Institute',\n        office: 'Zambia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/04/04'),\n        salary: 791408,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Developer'],\n    },\n    {\n        name: 'Idola Burns',\n        position: 'Non Industries',\n        office: 'Myanmar',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/06/24'),\n        salary: 142906,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Contractor', 'Developer'],\n    },\n    {\n        name: 'Laura Macias',\n        position: 'Phasellus Inc.',\n        office: 'Mauritania',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/11/21'),\n        salary: 226591,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Nichole Salas',\n        position: 'Duis PC',\n        office: 'Madagascar',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/18'),\n        salary: 234196,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Hunter Walter',\n        position: 'Ullamcorper Duis Cursus Foundation',\n        office: 'Brazil',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/02/28'),\n        salary: 655052,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Asher Rich',\n        position: 'Mauris Ipsum LLP',\n        office: 'Paraguay',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/08'),\n        salary: 222946,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Angela Carlson',\n        position: 'Donec Tempor Institute',\n        office: 'Papua New Guinea',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/02/12'),\n        salary: 562194,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'James Dorsey',\n        position: 'Ipsum Leo Associates',\n        office: 'Congo (Brazzaville)',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/10'),\n        salary: 629925,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Wesley Cobb',\n        position: 'Nunc Est Incorporated',\n        office: 'Australia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/01/30'),\n        salary: 343476,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Meghan Stephens',\n        position: 'Interdum PC',\n        office: 'Turkey',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/10/11'),\n        salary: 469305,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Bertha Herrera',\n        position: 'Amet Limited',\n        office: 'Kenya',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/11/22'),\n        salary: 56606,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Karina Key',\n        position: 'Quisque Varius Nam Company',\n        office: 'France',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/03/26'),\n        salary: 314260,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'I want to thank my partner in this journey, a man who campaigned from his heart and spoke for the men and women he grew up with on the streets of Scranton and rode with on that train home to Delaware, the Vice President-elect of the United States, Joe Biden.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Uriel Carson',\n        position: 'Penatibus PC',\n        office: 'Venezuela',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/01/07'),\n        salary: 106335,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Mira Baird',\n        position: 'Felis Orci PC',\n        office: 'Niue',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/08/25'),\n        salary: 515671,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Ursula Parrish',\n        position: 'Ac Corporation',\n        office: 'Macao',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/06/30'),\n        salary: 72295,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Josephine Sykes',\n        position: 'Blandit Congue Limited',\n        office: 'Holy See (Vatican City State)',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/12/22'),\n        salary: 694656,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Maggie Sims',\n        position: 'Vulputate Posuere Industries',\n        office: 'Sudan',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/11/22'),\n        salary: 363743,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Rogan Fuentes',\n        position: 'Vestibulum Accumsan Neque Company',\n        office: 'Jersey',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/07/29'),\n        salary: 606004,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Maya Haney',\n        position: 'Ac Foundation',\n        office: 'Falkland Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/09/03'),\n        salary: 745500,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Aquila Battle',\n        position: 'Sociis Natoque Penatibus Foundation',\n        office: 'Azerbaijan',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/03/06'),\n        salary: 582265,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Connor Coleman',\n        position: 'Orci Lacus Vestibulum Foundation',\n        office: 'Croatia',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/10/21'),\n        salary: 416958,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Charity Thomas',\n        position: 'Convallis Ligula Donec Inc.',\n        office: 'Benin',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/07/12'),\n        salary: 540999,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Developer'],\n    },\n    {\n        name: 'Blythe Powers',\n        position: 'Amet Orci Limited',\n        office: 'Falkland Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/23'),\n        salary: 480067,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Human Resources'],\n    },\n    {\n        name: 'Adria Battle',\n        position: 'Ornare Lectus Incorporated',\n        office: 'British Indian Ocean Territory',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/05/28'),\n        salary: 257937,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Human Resources'],\n    },\n    {\n        name: 'Melanie Mcintyre',\n        position: 'Nunc Corp.',\n        office: 'Mongolia',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/06'),\n        salary: 359737,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Human Resources'],\n    },\n    {\n        name: 'Keely Bauer',\n        position: 'Nec Tempus Institute',\n        office: 'Somalia',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/03/09'),\n        salary: 99718,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Human Resources'],\n    },\n    {\n        name: 'Noelani Strong',\n        position: 'Nec LLP',\n        office: 'Iran',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/08/24'),\n        salary: 480718,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Communications', 'Human Resources'],\n    },\n    {\n        name: 'Jeanette Henderson',\n        position: 'Eu Elit Nulla Corporation',\n        office: 'Italy',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/06/19'),\n        salary: 253772,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Candace Huber',\n        position: 'Sed Institute',\n        office: 'Uganda',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/06/16'),\n        salary: 388879,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Bethany Potter',\n        position: 'Vivamus Nibh Dolor Incorporated',\n        office: 'Puerto Rico',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/11/12'),\n        salary: 747310,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Whoopi Burks',\n        position: 'Justo Inc.',\n        office: 'Fiji',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/09/24'),\n        salary: 803037,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Sheila Long',\n        position: 'Diam Associates',\n        office: 'Sao Tome and Principe',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/12/21'),\n        salary: 674379,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Sonya Church',\n        position: 'Laoreet Institute',\n        office: 'Grenada',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/06/03'),\n        salary: 625147,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Shaine Forbes',\n        position: 'Eu Arcu LLP',\n        office: 'Cyprus',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/18'),\n        salary: 208100,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Alexandra Patrick',\n        position: 'Ligula Donec Inc.',\n        office: 'Viet Nam',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/04/09'),\n        salary: 104063,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Patience Vincent',\n        position: 'Sem Molestie Associates',\n        office: 'Philippines',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/07/04'),\n        salary: 673556,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Evelyn Smith',\n        position: 'Fusce Industries',\n        office: 'Togo',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/08/15'),\n        salary: 737284,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Kieran Gonzalez',\n        position: 'Non Corp.',\n        office: 'Equatorial Guinea',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/08/24'),\n        salary: 90195,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Molly Oneil',\n        position: 'Non Dui Consulting',\n        office: 'Belize',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/10/28'),\n        salary: 140767,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Nigel Davenport',\n        position: 'Ullamcorper Velit In Industries',\n        office: 'Vanuatu',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/03/16'),\n        salary: 70536,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Thor Young',\n        position: 'Malesuada Consulting',\n        office: 'French Southern Territories',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/28'),\n        salary: 75501,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Finn Delacruz',\n        position: 'Lorem Industries',\n        office: 'Cocos (Keeling) Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/12/11'),\n        salary: 754967,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Lane Henderson',\n        position: 'Pede Foundation',\n        office: 'Kazakhstan',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/07/02'),\n        salary: 842050,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Shea Potter',\n        position: 'Curabitur Limited',\n        office: 'Timor-Leste',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/05/07'),\n        salary: 263629,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Brynn Yang',\n        position: 'Ut Limited',\n        office: 'Mayotte',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/17'),\n        salary: 74292,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Kylan Fuentes',\n        position: 'Sapien Aenean Associates',\n        office: 'Brazil',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/12/28'),\n        salary: 108632,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Lionel Mcbride',\n        position: 'Ipsum PC',\n        office: 'Portugal',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/07/11'),\n        salary: 34244,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Paul Lucas',\n        position: 'Eget LLP',\n        office: 'Nicaragua',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/09/30'),\n        salary: 690834,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Lareina Williamson',\n        position: 'Imperdiet Ullamcorper Ltd',\n        office: 'Cocos (Keeling) Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/12/01'),\n        salary: 603498,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Amy Acevedo',\n        position: 'Id Institute',\n        office: 'Cook Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/02/04'),\n        salary: 125165,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Nomlanga Silva',\n        position: 'Eget LLC',\n        office: 'Belize',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/01/31'),\n        salary: 268509,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'Labore sit nulla amet enim reprehenderit esse laborum Lorem quis in eu.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Amena Stone',\n        position: 'Enim Incorporated',\n        office: 'Guinea',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/09/23'),\n        salary: 214381,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'There was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Danielle Coffey',\n        position: 'Feugiat Placerat Corp.',\n        office: 'Sao Tome and Principe',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/06/17'),\n        salary: 137423,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Buffy Russell',\n        position: 'Lacus Quisque Ltd',\n        office: 'Ecuador',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/10/17'),\n        salary: 612184,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Kaitlin Lamb',\n        position: 'Malesuada Fringilla Est Associates',\n        office: 'Algeria',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/10/18'),\n        salary: 327367,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Leilani Yates',\n        position: 'Mus Proin LLC',\n        office: 'South Sudan',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/05/27'),\n        salary: 743493,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Jemima Moon',\n        position: 'Phasellus Corp.',\n        office: 'South Georgia and The South Sandwich Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/05/21'),\n        salary: 496067,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Hiroko Schwartz',\n        position: 'Neque Institute',\n        office: 'Saint Vincent and The Grenadines',\n        ext: { obj: '8262' },\n        startDate: new Date('2016/03/13'),\n        salary: 178782,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Nathaniel Jensen',\n        position: 'Mi Tempor Limited',\n        office: 'Dominica',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/12/05'),\n        salary: 37441,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Silas Sweeney',\n        position: 'Ultrices Institute',\n        office: 'Turkmenistan',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/11/13'),\n        salary: 152980,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Jermaine Barry',\n        position: 'Dapibus Corporation',\n        office: 'Uzbekistan',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/03/06'),\n        salary: 409463,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Tatiana Nichols',\n        position: 'Nec Diam Industries',\n        office: 'Cook Islands',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/05/22'),\n        salary: 51155,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n    {\n        name: 'Rama Waller',\n        position: 'Sem Pellentesque LLC',\n        office: 'Andorra',\n        ext: { obj: '8262' },\n        startDate: new Date('2018/12/01'),\n        salary: 223227,\n        status: 'New Lead',\n        percent: 0.25,\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Office Skills'],\n    },\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/details-table/details-table-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ExtraDetails extends BaseRenderer {\n}\nExtraDetails.decorators = [\n    { type: Component, args: [{\n                selector: 'extra-details',\n                template: `\n    <div class=\"extra-data\">\n      <label><i class=\"bhi-info\"></i>Description</label>\n      <p>{{ data.description }}</p>\n      <label><i class=\"bhi-info\"></i>Categories</label>\n      <p>{{ data.categories }}</p>\n    </div>\n  `\n            }] }\n];\n/**\n * \\@title Details Table Example\n */\nclass DetailsTableExample {\n    constructor() {\n        this.theme = HEADER_COLORS[0];\n        this.configuration = {\n            columns: TableColumns.slice(),\n            rows: TableData.slice(),\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                    onPageChange: (/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    (event) => {\n                        this.configuration.config.paging.current = event.page;\n                        this.configuration.config.paging.itemsPerPage = event.itemsPerPage;\n                    }),\n                },\n                sorting: true,\n                filtering: true,\n                ordering: true,\n                resizing: true,\n                hasDetails: true,\n                detailsRenderer: ExtraDetails,\n            },\n        };\n    }\n}\nDetailsTableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'details-table-example',\n                template: \"<novo-table class=\\\"table-condensed\\\"\\n            [rows]=\\\"configuration.rows\\\"\\n            [columns]=\\\"configuration.columns\\\"\\n            [config]=\\\"configuration.config\\\"\\n            rowIdentifier=\\\"name\\\"></novo-table>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DetailsTableExample.prototype.theme;\n    /** @type {?} */\n    DetailsTableExample.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/editable-table/editable-table-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Editable Table Example\n */\nclass EditableTableExample {\n    constructor() {\n        this.configuration = {\n            columns: [\n                {\n                    title: 'Name',\n                    name: 'name',\n                    ordering: true,\n                    filtering: true,\n                    editorType: 'TablePickerControl',\n                    editorConfig: {\n                        key: 'name',\n                        config: {\n                            options: [\n                                'Joshua Godi',\n                                'Kameron Sween',\n                                'Brian Kimball',\n                                'Sweeney Todd',\n                                'Tom Cruise',\n                                'Ed Bailey',\n                                'Bo Jackson',\n                                'Ernie McDudson',\n                            ],\n                        },\n                    },\n                },\n                {\n                    title: 'Job Type',\n                    name: 'jobType',\n                    ordering: true,\n                    filtering: true,\n                    options: ['Freelance', 'Contact', 'Billable'],\n                    multiple: true,\n                    editorType: 'SelectControl',\n                    editorConfig: {\n                        key: 'jobType',\n                        options: [\n                            { value: 'Freelance', label: 'Freelance' },\n                            { value: 'Contract', label: 'Contract' },\n                            { value: 'Billable', label: 'Billable' },\n                        ],\n                    },\n                },\n                {\n                    title: 'Rate',\n                    name: 'rate',\n                    ordering: true,\n                    filtering: true,\n                    renderer: PercentageCell,\n                    editorType: 'TextBoxControl',\n                    editorConfig: {\n                        key: 'rate',\n                        type: 'percentage',\n                        required: true,\n                        interactions: [\n                            {\n                                event: 'change',\n                                script: (/**\n                                 * @param {?} form\n                                 * @return {?}\n                                 */\n                                (form) => {\n                                    console.log('Form Interaction Called!', form); // tslint:disable-line\n                                    if (form.value.rate) {\n                                        if (Number(form.value.rate) >= 0.75) {\n                                            form.controls.rating.setValue('High');\n                                        }\n                                        else if (Number(form.value.rate) >= 0.5) {\n                                            form.controls.rating.setValue('Medium');\n                                        }\n                                        else {\n                                            form.controls.rating.setValue('Low');\n                                        }\n                                    }\n                                }),\n                            },\n                        ],\n                    },\n                },\n                { title: 'Rating', name: 'rating' },\n            ],\n            rows: new ArrayCollection([\n                { id: 1, name: 'Joshua Godi', jobType: 'Freelance', rate: null, rating: 'Low' },\n                { id: 2, name: 'Brian Kimball', jobType: 'Contact', rate: 0.5, rating: 'Medium' },\n                { id: 3, name: 'Kameron Sween', jobType: 'Billable', rate: 1.0, rating: 'High' },\n            ]),\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                    onPageChange: (/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    (event) => {\n                        this.configuration.config.paging.current = event.page;\n                        this.configuration.config.paging.itemsPerPage = event.itemsPerPage;\n                    }),\n                },\n                filtering: true,\n                sorting: true,\n                ordering: true,\n                resizing: true,\n            },\n        };\n        this.editableNewRowDefault = { name: 'Default', jobType: 'Contract' };\n    }\n}\nEditableTableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'editable-table-example',\n                template: \"<novo-table [theme]=\\\"'sunflower'\\\" [dataProvider]=\\\"configuration.rows\\\" [columns]=\\\"configuration.columns\\\" [config]=\\\"configuration.config\\\" editable=\\\"true\\\" #table>\\n    <novo-table-header class=\\\"demo-custom-header\\\">\\n        <h4>Editable Table</h4>\\n        <div>\\n            <input type=\\\"text\\\" placeholder=\\\"row\\\" #row/>\\n            <input type=\\\"text\\\" placeholder=\\\"column\\\" #column/>\\n            <button theme=\\\"secondary\\\" (click)=\\\"table.setTableEdit(row.value, column.value)\\\" *ngIf=\\\"!table.editing\\\">Add/Edit</button>\\n            <button theme=\\\"secondary\\\" (click)=\\\"table.cancelEditing()\\\" *ngIf=\\\"table.editing\\\">Cancel</button>\\n            <button theme=\\\"primary\\\" (click)=\\\"table.cancelEditing()\\\" *ngIf=\\\"table.editing\\\">Save</button>\\n        </div>\\n    </novo-table-header>\\n    <novo-table-footer class=\\\"demo-custom-footer\\\" [class.editing]=\\\"table.editing\\\">\\n        <button theme=\\\"dialogue\\\" icon=\\\"addcard\\\" side=\\\"left\\\" *ngIf=\\\"table.editing\\\" (click)=\\\"table.addEditableRow(editableNewRowDefault)\\\">Add Row</button>\\n    </novo-table-footer>\\n    <div classs=\\\"table-message\\\" table-empty-message><i class=\\\"bhi-search-question\\\"></i> Custom Empty State Template! Click RELOAD to get Data!</div>\\n    <div classs=\\\"table-message\\\" table-no-matching-records-message><i class=\\\"bhi-search-question\\\"></i> Custom No Matched Records</div>\\n</novo-table>\\n<div class=\\\"final-value\\\">Table Value: {{table.formValue | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    EditableTableExample.prototype.configuration;\n    /** @type {?} */\n    EditableTableExample.prototype.editableNewRowDefault;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/select-all-table/select-all-table-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Select All Table Example\n */\nclass SelectAllTableExample {\n    constructor() {\n        this.theme = HEADER_COLORS[0];\n        this.configuration = {\n            columns: TableColumns.slice(),\n            rows: TableData.slice(),\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                    onPageChange: (/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    (event) => {\n                        this.configuration.config.paging.current = event.page;\n                        this.configuration.config.paging.itemsPerPage = event.itemsPerPage;\n                    }),\n                },\n                sorting: true,\n                filtering: true,\n                ordering: true,\n                resizing: true,\n                selectAllEnabled: true,\n                rowSelectionStyle: 'checkbox',\n            },\n        };\n    }\n    /**\n     * @return {?}\n     */\n    singleAction() {\n        window.alert('Action!');\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    selectedAction(action) {\n        window.alert(`You clicked ${action}!`);\n    }\n}\nSelectAllTableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-all-table-example',\n                template: \"<novo-table [rows]=\\\"configuration.rows\\\" [columns]=\\\"configuration.columns\\\" [config]=\\\"configuration.config\\\" #table>\\n    <novo-table-actions>\\n        <button theme=\\\"secondary\\\" (click)=\\\"singleAction()\\\">Click Me!</button>\\n        <novo-dropdown side=\\\"right\\\" *ngIf=\\\"table.selected.length\\\">\\n            <button theme=\\\"primary\\\" icon=\\\"collapse\\\" inverse>{{table.selected.length}} Selected</button>\\n            <list>\\n                <item (action)=\\\"selectedAction('action 1')\\\">Action 1</item>\\n                <item (action)=\\\"selectedAction('action 2')\\\">Action 2</item>\\n                <item (action)=\\\"selectedAction('action 3')\\\" disabled=\\\"true\\\">Action 3</item>\\n            </list>\\n        </novo-dropdown>\\n    </novo-table-actions>\\n</novo-table>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    SelectAllTableExample.prototype.theme;\n    /** @type {?} */\n    SelectAllTableExample.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/table/table-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Table Example\n */\nclass TableExample {\n    constructor() {\n        this.theme = HEADER_COLORS[0];\n        this.configuration = {\n            columns: TableColumns.slice(),\n            rows: [],\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                    onPageChange: (/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    (event) => {\n                        this.configuration.config.paging.current = event.page;\n                        this.configuration.config.paging.itemsPerPage = event.itemsPerPage;\n                    }),\n                },\n                filtering: true,\n                sorting: true,\n                ordering: true,\n                resizing: true,\n            },\n        };\n    }\n    /**\n     * @return {?}\n     */\n    reload() {\n        this.configuration.rows = TableData.slice();\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        /** @type {?} */\n        let idx = HEADER_COLORS.indexOf(this.theme);\n        if (idx === HEADER_COLORS.length - 1) {\n            idx = -1;\n        }\n        this.theme = HEADER_COLORS[idx + 1];\n    }\n}\nTableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-example',\n                template: \"<novo-table [theme]=\\\"theme\\\"\\n            [dataProvider]=\\\"configuration.rows\\\"\\n            [columns]=\\\"configuration.columns\\\"\\n            [config]=\\\"configuration.config\\\"\\n            rowIdentifier=\\\"name\\\">\\n    <novo-table-header class=\\\"demo-custom-header\\\">\\n        TEST :)\\n        <div>\\n            <button theme=\\\"secondary\\\"\\n                    (click)=\\\"reload()\\\">Reload Data</button>\\n            <button theme=\\\"secondary\\\"\\n                    (click)=\\\"changeTheme()\\\">Change Theme!</button>\\n        </div>\\n    </novo-table-header>\\n    <div classs=\\\"table-message\\\"\\n         table-empty-message>\\n        <i class=\\\"bhi-search-question\\\"></i> Custom Empty State Template! Click RELOAD to get Data!</div>\\n    <div classs=\\\"table-message\\\"\\n         table-no-matching-records-message>\\n        <i class=\\\"bhi-search-question\\\"></i> Custom No Matched Records</div>\\n</novo-table>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TableExample.prototype.theme;\n    /** @type {?} */\n    TableExample.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: components/table/total-footer-table/total-footer-table-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Total Footer Table Example\n */\nclass TotalFooterTableExample {\n    constructor() {\n        this.theme = HEADER_COLORS[0];\n        this.configuration = {\n            columns: [\n                { title: 'Name', name: 'name', ordering: true, filtering: true },\n                { title: 'Count 1', name: 'count1', ordering: true, filtering: true },\n                { title: 'Count 2', name: 'count2', ordering: true, filtering: true },\n                { title: 'Count 3', name: 'count3', ordering: true, filtering: true },\n            ],\n            rows: [\n                { id: 1, name: 'Name 1', count1: 1, count2: 2, count3: 3 },\n                { id: 2, name: 'Name 2', count1: 1, count2: 2, count3: 3 },\n                { id: 3, name: 'Name 3', count1: 1, count2: 2, count3: 3 },\n                { id: 4, name: 'Name 4', count1: 1, count2: 2, count3: 3 },\n                { id: 5, name: 'Name 5', count1: 1, count2: 2, count3: 3 },\n            ],\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                    onPageChange: (/**\n                     * @param {?} event\n                     * @return {?}\n                     */\n                    (event) => {\n                        this.configuration.config.paging.current = event.page;\n                        this.configuration.config.paging.itemsPerPage = event.itemsPerPage;\n                    }),\n                },\n                footers: [\n                    {\n                        columns: ['count1', 'count2', 'count3'],\n                        method: 'SUM',\n                        labelColumn: 'name',\n                        label: 'Mega Total',\n                    },\n                    {\n                        columns: ['count1', 'count2', 'count3'],\n                        method: 'AVG',\n                        labelColumn: 'name',\n                        label: 'Yep, Average!',\n                    },\n                ],\n                filtering: true,\n                sorting: true,\n                ordering: true,\n                resizing: true,\n            },\n        };\n    }\n}\nTotalFooterTableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'total-footer-table-example',\n                template: \"<novo-table [theme]=\\\"'grass'\\\" [dataProvider]=\\\"configuration.rows\\\" [columns]=\\\"configuration.columns\\\" [config]=\\\"configuration.config\\\">\\n    <novo-table-header class=\\\"demo-custom-header\\\">\\n        <h4>Total Footer</h4>\\n    </novo-table-header>\\n</novo-table>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TotalFooterTableExample.prototype.theme;\n    /** @type {?} */\n    TotalFooterTableExample.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: design/colors/analytics-colors/analytics-colors-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Analytics Colors\n */\nclass AnalyticsColorsExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.analyticsColors = [\n            {\n                name: 'grapefruit',\n                variables: ['grapefruit'],\n                hex: 'DA4453',\n            },\n            {\n                name: 'bittersweet',\n                variables: ['bittersweet'],\n                hex: 'EB6845',\n            },\n            {\n                name: 'sunflower',\n                variables: ['sunflower'],\n                hex: 'F6B042',\n            },\n            {\n                name: 'grass',\n                variables: ['grass'],\n                hex: '8CC152',\n            },\n            {\n                name: 'mint',\n                variables: ['mint'],\n                hex: '37BC9B',\n            },\n            {\n                name: 'aqua',\n                variables: ['aqua'],\n                hex: '3BAFDA',\n            },\n            {\n                name: 'ocean',\n                variables: ['ocean'],\n                hex: '4A89DC',\n            },\n            {\n                name: 'carnation',\n                variables: ['carnation'],\n                hex: 'D770AD',\n            },\n            {\n                name: 'lavender',\n                variables: ['lavender'],\n                hex: '967ADC',\n            },\n            {\n                name: 'mountain',\n                variables: ['mountain'],\n                hex: '9678B6',\n            },\n        ];\n    }\n    /**\n     * @param {?} color\n     * @return {?}\n     */\n    copyLink(color) {\n        // Create dom element to copy from\n        /** @type {?} */\n        const copyFrom = document.createElement('textarea');\n        copyFrom.textContent = `#${color.hex}`;\n        /** @type {?} */\n        const body = document.getElementsByTagName('body')[0];\n        body.appendChild(copyFrom);\n        copyFrom.select();\n        // Copy text\n        document.execCommand('copy');\n        // Delete element\n        body.removeChild(copyFrom);\n        // Set toast options\n        this.options = {\n            title: `#${color.hex}`,\n            message: 'Copied to your clipboard',\n            theme: color.variables[0],\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n        if (color.name === 'action') {\n            this.options.theme = 'ocean';\n        }\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nAnalyticsColorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'analytics-colors-example',\n                template: \"<article class=\\\"color-blocks analytics-colors\\\">\\n  <div *ngFor=\\\"let color of analyticsColors\\\" class=\\\"block\\\">\\n      <div class=\\\"color-square bgc-{{color.variables[0]}}\\\" (click)=\\\"copyLink(color)\\\">\\n        <h3 class=\\\"color-text\\\"><span>#</span>{{color.hex}}</h3>\\n      </div>\\n      <h6>{{color.name}}</h6>\\n      <span class=\\\"vars\\\" *ngFor=\\\"let variable of color.variables\\\">${{variable}}</span>\\n  </div>\\n</article>\\n\",\n                styles: [\":host .color-blocks{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;align-items:flex-end;width:100%}:host .color-blocks .block{display:inline-block;text-align:center;width:25%;min-width:200px;position:relative;padding:20px}:host .color-blocks .block:active .color-square,:host .color-blocks .block:focus .color-square,:host .color-blocks .block:hover .color-square{transform:scale(1.125)}:host .color-blocks .block .color-square{border-radius:4px;height:150px;justify-content:center;align-items:center;display:flex;position:relative}:host .color-blocks .color-text:after{content:\\\"Click to copy\\\";position:absolute;color:rgba(255,255,255,.6);left:50%;bottom:40px;font-size:10px;text-transform:uppercase;transform:translateX(-50%);width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nAnalyticsColorsExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    AnalyticsColorsExample.prototype.analyticsColors;\n    /** @type {?} */\n    AnalyticsColorsExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    AnalyticsColorsExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: design/colors/entity-colors/entity-colors-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Entity Colors\n */\nclass EntityColorsExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.entityColors = [\n            {\n                name: 'lead',\n                variables: ['lead'],\n                hex: 'AA6699',\n            },\n            {\n                name: 'contact',\n                variables: ['contact'],\n                hex: 'FFAA44',\n            },\n            {\n                name: 'company',\n                variables: ['company'],\n                hex: '3399DD',\n            },\n            {\n                name: 'candidate',\n                variables: ['candidate'],\n                hex: '44BB77',\n            },\n            {\n                name: 'opportunity',\n                variables: ['opportunity'],\n                hex: '662255',\n            },\n            {\n                name: 'job',\n                variables: ['job'],\n                hex: 'BB5566',\n            },\n            {\n                name: 'job code',\n                variables: ['jobCode'],\n                hex: '696D79',\n            },\n            {\n                name: 'earn code',\n                variables: ['earnCode'],\n                hex: '696D79',\n            },\n            {\n                name: 'submission',\n                variables: ['submission'],\n                hex: 'A9ADBB',\n            },\n            {\n                name: 'placement',\n                variables: ['placement'],\n                hex: '0B344F',\n            },\n            {\n                name: 'sendout',\n                variables: ['sendout'],\n                hex: '747884',\n            },\n            {\n                name: 'note',\n                variables: ['note'],\n                hex: '747884',\n            },\n            {\n                name: 'contract',\n                variables: ['contract'],\n                hex: '454EA0',\n            },\n            {\n                name: 'invoice statement',\n                variables: ['invoiceStatement'],\n                hex: '696D79',\n            },\n            {\n                name: 'billable charge',\n                variables: ['billableCharge'],\n                hex: '696D79',\n            },\n            {\n                name: 'payable charge',\n                variables: ['payableCharge'],\n                hex: '696D79',\n            },\n        ];\n    }\n    /**\n     * @param {?} color\n     * @return {?}\n     */\n    copyLink(color) {\n        // Create dom element to copy from\n        /** @type {?} */\n        const copyFrom = document.createElement('textarea');\n        copyFrom.textContent = `#${color.hex}`;\n        /** @type {?} */\n        const body = document.getElementsByTagName('body')[0];\n        body.appendChild(copyFrom);\n        copyFrom.select();\n        // Copy text\n        document.execCommand('copy');\n        // Delete element\n        body.removeChild(copyFrom);\n        // Set toast options\n        this.options = {\n            title: `#${color.hex}`,\n            message: 'Copied to your clipboard',\n            theme: color.variables[0],\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n        if (color.name === 'action') {\n            this.options.theme = 'ocean';\n        }\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nEntityColorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'entity-colors-example',\n                template: \"<article class=\\\"color-blocks entity-colors\\\">\\n  <div *ngFor=\\\"let color of entityColors\\\" class=\\\"block\\\">\\n      <div class=\\\"color-square bgc-{{color.variables[0]}}\\\" (click)=\\\"copyLink(color)\\\">\\n        <h3 class=\\\"color-text\\\"><span>#</span>{{color.hex}}</h3>\\n      </div>\\n      <h6>{{color.name}}</h6>\\n      <span class=\\\"vars\\\" *ngFor=\\\"let variable of color.variables\\\">${{variable}}</span>\\n  </div>\\n</article>\\n\",\n                styles: [\":host .color-blocks{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;align-items:flex-end;width:100%}:host .color-blocks .block{display:inline-block;text-align:center;width:25%;min-width:200px;position:relative;padding:20px}:host .color-blocks .block:active .color-square,:host .color-blocks .block:focus .color-square,:host .color-blocks .block:hover .color-square{transform:scale(1.125)}:host .color-blocks .block .color-square{border-radius:4px;height:150px;justify-content:center;align-items:center;display:flex;position:relative}:host .color-blocks .color-text:after{content:\\\"Click to copy\\\";position:absolute;color:rgba(255,255,255,.6);left:50%;bottom:40px;font-size:10px;text-transform:uppercase;transform:translateX(-50%);width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nEntityColorsExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    EntityColorsExample.prototype.entityColors;\n    /** @type {?} */\n    EntityColorsExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    EntityColorsExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: design/colors/primary-colors/primary-colors-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Primary Colors\n */\nclass PrimaryColorsExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.primaryColors = [\n            {\n                name: 'navigation',\n                variables: ['navigation'],\n                hex: '2F384F',\n            },\n            {\n                name: 'positive',\n                variables: ['positive'],\n                hex: '4A89DC',\n            },\n            {\n                name: 'dark',\n                variables: ['dark'],\n                hex: '3D464D',\n            },\n            {\n                name: 'background',\n                variables: ['background'],\n                hex: 'F4F4F4',\n            },\n            {\n                name: 'background dark',\n                variables: ['background-dark'],\n                hex: 'E2E2E2',\n            },\n            {\n                name: 'neutral',\n                variables: ['neutral'],\n                hex: '4F5361',\n            },\n            {\n                name: 'success',\n                variables: ['success'],\n                hex: '8CC152',\n            },\n            {\n                name: 'negative',\n                variables: ['negative'],\n                hex: 'DA4453',\n            },\n            {\n                name: 'warning',\n                variables: ['warning'],\n                hex: 'F6B042',\n            },\n            {\n                name: 'empty',\n                variables: ['empty'],\n                hex: 'CCCDCC',\n            },\n            {\n                name: 'sand',\n                variables: ['sand'],\n                hex: 'F4F4F4',\n            },\n            {\n                name: 'silver',\n                variables: ['silver'],\n                hex: 'E2E2E2',\n            },\n            {\n                name: 'stone',\n                variables: ['stone'],\n                hex: 'BEBEBE',\n            },\n            {\n                name: 'ash',\n                variables: ['ash'],\n                hex: 'A0A0A0',\n            },\n            {\n                name: 'slate',\n                variables: ['slate'],\n                hex: '707070',\n            },\n            {\n                name: 'charcoal',\n                variables: ['charcoal'],\n                hex: '282828',\n            },\n        ];\n    }\n    /**\n     * @param {?} color\n     * @return {?}\n     */\n    copyLink(color) {\n        // Create dom element to copy from\n        /** @type {?} */\n        const copyFrom = document.createElement('textarea');\n        copyFrom.textContent = `#${color.hex}`;\n        /** @type {?} */\n        const body = document.getElementsByTagName('body')[0];\n        body.appendChild(copyFrom);\n        copyFrom.select();\n        // Copy text\n        document.execCommand('copy');\n        // Delete element\n        body.removeChild(copyFrom);\n        // Set toast options\n        this.options = {\n            title: `#${color.hex}`,\n            message: 'Copied to your clipboard',\n            theme: color.variables[0],\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n        if (color.name === 'action') {\n            this.options.theme = 'ocean';\n        }\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nPrimaryColorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'primary-colors-example',\n                template: \"<article class=\\\"color-blocks primary-colors\\\">\\n  <div *ngFor=\\\"let color of primaryColors\\\" class=\\\"block\\\">\\n      <div class=\\\"color-square bgc-{{color.variables[0]}}\\\" (click)=\\\"copyLink(color)\\\">\\n        <h3 class=\\\"color-text\\\"><span>#</span>{{color.hex}}</h3>\\n      </div>\\n      <h6>{{color.name}}</h6>\\n      <span class=\\\"vars\\\" *ngFor=\\\"let variable of color.variables\\\">${{variable}}</span>\\n  </div>\\n</article>\\n\",\n                styles: [\":host .color-blocks{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;align-items:flex-end;width:100%}:host .color-blocks .block{display:inline-block;text-align:center;width:25%;min-width:200px;position:relative;padding:20px}:host .color-blocks .block:active .color-square,:host .color-blocks .block:focus .color-square,:host .color-blocks .block:hover .color-square{transform:scale(1.125)}:host .color-blocks .block .color-square{border-radius:4px;height:150px;justify-content:center;align-items:center;display:flex;position:relative}:host .color-blocks .block .color-square.bgc-background .color-text:after,:host .color-blocks .block .color-square.bgc-background-dark .color-text:after,:host .color-blocks .block .color-square.bgc-empty .color-text:after,:host .color-blocks .block .color-square.bgc-sand .color-text:after,:host .color-blocks .block .color-square.bgc-silver .color-text:after,:host .color-blocks .block .color-square.bgc-stone .color-text:after{content:\\\"Click to copy\\\";position:absolute;color:rgba(0,0,0,.6);left:50%;bottom:40px;font-size:10px;text-transform:uppercase;transform:translateX(-50%);width:100%}:host .color-blocks .color-text:after{content:\\\"Click to copy\\\";position:absolute;color:rgba(255,255,255,.6);left:50%;bottom:40px;font-size:10px;text-transform:uppercase;transform:translateX(-50%);width:100%}\"]\n            }] }\n];\n/** @nocollapse */\nPrimaryColorsExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    PrimaryColorsExample.prototype.primaryColors;\n    /** @type {?} */\n    PrimaryColorsExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    PrimaryColorsExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/async-chips/async-chips-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Async Chips Example\n */\nclass AsyncChipsExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const states = [\n            'Alabama',\n            'Alaska',\n            'Arizona',\n            'Arkansas',\n            'California',\n            'Colorado',\n            'Connecticut',\n            'Delaware',\n            'Florida',\n            'Georgia',\n            'Hawaii',\n            'Idaho',\n            'Illinois',\n            'Indiana',\n            'Iowa',\n            'Kansas',\n            'Kentucky',\n            'Louisiana',\n            'Maine',\n            'Maryland',\n            'Massachusetts',\n            'Michigan',\n            'Minnesota',\n            'Mississippi',\n            'Missouri',\n            'Montana',\n            'Nebraska',\n            'Nevada',\n            'New Hampshire',\n            'New Jersey',\n            'New Mexico',\n            'New York',\n            'North Dakota',\n            'North Carolina',\n            'Ohio',\n            'Oklahoma',\n            'Oregon',\n            'Pennsylvania',\n            'Rhode Island',\n            'South Carolina',\n            'South Dakota',\n            'Tennessee',\n            'Texas',\n            'Utah',\n            'Vermont',\n            'Virginia',\n            'Washington',\n            'West Virginia',\n            'Wisconsin',\n            'Wyoming',\n        ];\n        /** @type {?} */\n        const abbrieviated = [\n            {\n                value: 'USA',\n                label: 'United States',\n            },\n            {\n                value: 'GB',\n                label: 'Great Britain',\n            },\n            {\n                value: 'CA',\n                label: 'Canada',\n            },\n            {\n                value: 'AU',\n                label: 'Austrailia',\n            },\n        ];\n        this.async = {\n            options: (/**\n             * @return {?}\n             */\n            () => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        resolve(abbrieviated);\n                    }), 300);\n                }));\n            }),\n            getLabels: (/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        /** @type {?} */\n                        const values = data.map((/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => item.value));\n                        /** @type {?} */\n                        const results = abbrieviated.filter((/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => values.includes(item.value)));\n                        resolve(results);\n                    }), 300);\n                }));\n            }),\n        };\n        this.value = [\n            {\n                value: 'USA',\n            },\n            {\n                value: 'GB',\n            },\n        ];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nAsyncChipsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'async-chips-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-chips [source]=\\\"async\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAsyncChipsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    AsyncChipsExample.prototype.async;\n    /** @type {?} */\n    AsyncChipsExample.prototype.value;\n    /** @type {?} */\n    AsyncChipsExample.prototype.placeholder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/basic-chips/basic-chips-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Chips Example\n */\nclass BasicChipsExample {\n    constructor() {\n        this.staticDemo = {\n            options: [\n                'Alabama',\n                'Alaska',\n                'Arizona',\n                'Arkansas',\n                'California',\n                'Colorado',\n                'Connecticut',\n                'Delaware',\n                'Florida',\n                'Georgia',\n                'Hawaii',\n                'Idaho',\n                'Illinois',\n                'Indiana',\n                'Iowa',\n                'Kansas',\n                'Kentucky',\n                'Louisiana',\n                'Maine',\n                'Maryland',\n                'Massachusetts',\n                'Michigan',\n                'Minnesota',\n                'Mississippi',\n                'Missouri',\n                'Montana',\n                'Nebraska',\n                'Nevada',\n                'New Hampshire',\n                'New Jersey',\n                'New Mexico',\n                'New York',\n                'North Dakota',\n                'North Carolina',\n                'Ohio',\n                'Oklahoma',\n                'Oregon',\n                'Pennsylvania',\n                'Rhode Island',\n                'South Carolina',\n                'South Dakota',\n                'Tennessee',\n                'Texas',\n                'Utah',\n                'Vermont',\n                'Virginia',\n                'Washington',\n                'West Virginia',\n                'Wisconsin',\n                'Wyoming',\n            ],\n        };\n        this.placeholder = 'Select...';\n        this.value = ['Alabama'];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nBasicChipsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-chips-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-chips [source]=\\\"staticDemo\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicChipsExample.prototype.staticDemo;\n    /** @type {?} */\n    BasicChipsExample.prototype.placeholder;\n    /** @type {?} */\n    BasicChipsExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/close-on-select-chips/close-on-select-chips-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Close On Select Chips Example\n */\nclass CloseOnSelectChipsExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.formatted = {\n            format: '$firstName $lastName',\n            options: collaborators,\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nCloseOnSelectChipsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'close-on-select-chips-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-chips [closeOnSelect]=\\\"true\\\" [source]=\\\"formatted\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCloseOnSelectChipsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    CloseOnSelectChipsExample.prototype.formatted;\n    /** @type {?} */\n    CloseOnSelectChipsExample.prototype.placeholder;\n    /** @type {?} */\n    CloseOnSelectChipsExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/formatted-chips/formatted-chips-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Formatted Chips Example\n */\nclass FormattedChipsExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.formatted = {\n            format: '$firstName $lastName',\n            options: collaborators,\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nFormattedChipsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'formatted-chips-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-chips [source]=\\\"formatted\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFormattedChipsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    FormattedChipsExample.prototype.formatted;\n    /** @type {?} */\n    FormattedChipsExample.prototype.placeholder;\n    /** @type {?} */\n    FormattedChipsExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/grouped-multi-picker/grouped-multi-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Grouped Multi Picker Example\n */\nclass GroupedMultiPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.setupGroupedMultiPickerDemo();\n    }\n    /**\n     * @return {?}\n     */\n    setupGroupedMultiPickerDemo() {\n        /** @type {?} */\n        const categoryMap = new Map();\n        for (let i = 0; i < 10; i++) {\n            /** @type {?} */\n            const items = [];\n            for (let j = 0; j < 10; j++) {\n                items.push({ value: `${i}-${j}`, label: `Category ${i} - Item ${j}` });\n            }\n            categoryMap.set(`${i}`, { value: `${i}`, label: `Category ${i}`, items });\n        }\n        this.groupedMultiPicker1 = {\n            categoryMap,\n            resultsTemplate: GroupedMultiPickerResults,\n            displayAll: true,\n        };\n        this.groupedMultiPicker2 = {\n            categoryMap,\n            resultsTemplate: GroupedMultiPickerResults,\n        };\n        this.groupedMultiPicker3 = {\n            categories: [\n                { value: 'C1', label: 'Category 1' },\n                { value: 'C2', label: 'Category 2' },\n                { value: 'C3', label: 'Category 3' },\n                { value: 'C4', label: 'Category 4' },\n                { value: 'C5', label: 'Category 5' },\n            ],\n            getItemsForCategoryAsync: (/**\n             * @param {?} category\n             * @return {?}\n             */\n            (category) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        resolve([\n                            { value: 'A1', label: 'Async 1' },\n                            { value: 'A2', label: 'Async 2' },\n                            { value: 'A3', label: 'Async 3' },\n                            { value: 'A4', label: 'Async 4' },\n                            { value: 'A5', label: 'Async 5' },\n                        ]);\n                    }), 1000);\n                }));\n            }),\n            resultsTemplate: GroupedMultiPickerResults,\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nGroupedMultiPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grouped-multi-picker-example',\n                template: \"<h6>Basic Static Example</h6>\\n<p>Fully static data, optional \\\"all\\\" category</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedMultiPicker1Value }}</div>\\n<novo-chips [source]=\\\"groupedMultiPicker1\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedMultiPicker1Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\\n<br/>\\n<br/>\\n\\n<h6>Custom Static Example</h6>\\n<p>Fully static data, all category turned off</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedMultiPicker2Value }}</div>\\n<novo-chips [source]=\\\"groupedMultiPicker2\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedMultiPicker2Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\\n<br/>\\n<br/>\\n\\n<h6>Basic Async Example</h6>\\n<p>Category list is static (always has to be) with the items fetched via async call</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedMultiPicker3Value }}</div>\\n<novo-chips [source]=\\\"groupedMultiPicker3\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedMultiPicker3Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nGroupedMultiPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.placeholder;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker1;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker2;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker3;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker1Value;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker2Value;\n    /** @type {?} */\n    GroupedMultiPickerExample.prototype.groupedMultiPicker3Value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/chips/row-chips/row-chips-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Row Chips Example\n */\nclass RowChipsExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.rowValue = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n        ];\n        this.rowDemo = {\n            format: '$firstName $lastName',\n            options: collaborators,\n            columns: [\n                {\n                    label: 'Name',\n                    data: (/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => {\n                        return item['label'];\n                    }),\n                },\n                {\n                    label: 'Id',\n                    data: (/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => {\n                        return item.value['id'];\n                    }),\n                },\n            ],\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nRowChipsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'row-chips-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{rowValue | json}}</div>\\n<novo-row-chips [source]=\\\"rowDemo\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"rowValue\\\" (changed)=\\\"onChanged($event)\\\"></novo-row-chips>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nRowChipsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    RowChipsExample.prototype.placeholder;\n    /** @type {?} */\n    RowChipsExample.prototype.value;\n    /** @type {?} */\n    RowChipsExample.prototype.rowDemo;\n    /** @type {?} */\n    RowChipsExample.prototype.rowValue;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/date-picker/date-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//  Must add 'ExtendedLabelService' to your module file and\n//  include it in the constructor of your component\nclass ExtendedLabelService extends NovoLabelService {\n    constructor() {\n        super(...arguments);\n        this.dateFormat = 'dd/mm/yyyy';\n        this.dateFormatPlaceholder = 'DD/MM/YYYY';\n    }\n}\nif (false) {\n    /** @type {?} */\n    ExtendedLabelService.prototype.dateFormat;\n    /** @type {?} */\n    ExtendedLabelService.prototype.dateFormatPlaceholder;\n}\n/**\n * \\@title Date Example\n */\nclass DatePickerExample {\n    constructor() {\n        this.dateOne = new Date();\n        this.dateTwo = new Date();\n    }\n}\nDatePickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-picker-example',\n                template: \"<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Value One</label> {{(dateOne | date) || 'N/A'}}\\n        <label>Value Two</label> {{(dateTwo | date) || 'N/A'}}\\n    </p>\\n    <novo-date-picker [(ngModel)]=\\\"dateOne\\\"></novo-date-picker>\\n    <div>\\n        <novo-date-picker-input [(ngModel)]=\\\"dateTwo\\\" format=\\\"mm/dd/yyyy\\\"></novo-date-picker-input>\\n        <novo-date-picker-input [(ngModel)]=\\\"dateTwo\\\" format=\\\"dd/mm/yyyy\\\"></novo-date-picker-input>\\n    </div>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DatePickerExample.prototype.dateOne;\n    /** @type {?} */\n    DatePickerExample.prototype.dateTwo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/date-range/date-range-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Date Range Example\n */\nclass DateRangeExample {\n    constructor() {\n        this.rangeOne = {\n            startDate: null,\n            endDate: null,\n        };\n        this.rangeTwo = {\n            startDate: null,\n            endDate: null,\n        };\n    }\n}\nDateRangeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-range-example',\n                template: \"<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Start date</label>\\n        {{(rangeOne?.startDate | date) || 'N/A'}}\\n        <br/> {{(rangeTwo?.startDate | date) || 'N/A'}}\\n\\n        <label>End date</label>\\n        {{(rangeOne?.endDate | date) || 'N/A'}}\\n        <br/> {{(rangeTwo?.endDate | date) || 'N/A'}}\\n    </p>\\n    <novo-date-picker [(ngModel)]=\\\"rangeOne\\\" range=\\\"true\\\"></novo-date-picker>\\n    <novo-date-picker [(ngModel)]=\\\"rangeTwo\\\" range=\\\"true\\\" weekRangeSelect=\\\"true\\\" weekStart=\\\"1\\\"></novo-date-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DateRangeExample.prototype.rangeOne;\n    /** @type {?} */\n    DateRangeExample.prototype.rangeTwo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/date-time-input/date-time-input-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Date Time Input Example\n */\nclass DateTimeInputExample {\n    constructor() {\n        this.dateTimeInput = new Date('08/01/1983 12:57 PM');\n        this.dateTimeInput2 = new Date('08/02/1984 12:57 PM');\n        this.dateTimeInput3 = new Date('08/03/1985 12:57 PM');\n    }\n}\nDateTimeInputExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-time-input-example',\n                template: \"<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Date-Time</label> {{(dateTimeInput | date:'medium') || 'N/A'}}\\n        <label>Date-Time 2</label> {{(dateTimeInput2 | date:'medium') || 'N/A'}}\\n    </p>\\n    <div>\\n        <novo-date-time-picker-input [(ngModel)]=\\\"dateTimeInput\\\"></novo-date-time-picker-input>\\n        <novo-date-time-picker-input [(ngModel)]=\\\"dateTimeInput2\\\" [military]=\\\"true\\\"></novo-date-time-picker-input>\\n    </div>\\n    <novo-date-time-picker [(ngModel)]=\\\"dateTimeInput3\\\"></novo-date-time-picker> \\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DateTimeInputExample.prototype.dateTimeInput;\n    /** @type {?} */\n    DateTimeInputExample.prototype.dateTimeInput2;\n    /** @type {?} */\n    DateTimeInputExample.prototype.dateTimeInput3;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/date-time/date-time-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Date Time Example\n */\nclass DateTimeExample {\n    constructor() {\n        this.dateTime = new Date('12/04/1987');\n    }\n}\nDateTimeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-time-example',\n                template: \"<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Date-Time</label> {{(dateTime | date:'medium') || 'N/A'}}\\n    </p>\\n    <novo-date-time-picker [(ngModel)]=\\\"dateTime\\\"></novo-date-time-picker>\\n    <novo-date-time-picker [(ngModel)]=\\\"dateTime\\\" military=\\\"true\\\"></novo-date-time-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DateTimeExample.prototype.dateTime;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/time-picker/time-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Time Picker Example\n */\nclass TimePickerExample {\n    constructor() {\n        this.time = new Date();\n    }\n}\nTimePickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'time-picker-example',\n                template: \"<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Value</label>\\n        {{(time | date:'mediumTime') || 'N/A'}}\\n        <novo-time-picker-input [(ngModel)]=\\\"time\\\"></novo-time-picker-input>\\n    </p>\\n    <novo-time-picker [(ngModel)]=\\\"time\\\" analog=\\\"true\\\"></novo-time-picker>\\n    <novo-time-picker [(ngModel)]=\\\"time\\\" military=\\\"true\\\" analog=\\\"true\\\"></novo-time-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TimePickerExample.prototype.time;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/date-picker/week-start/week-start-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Week Start Example\n */\nclass WeekStartExample {\n    constructor() {\n        this.weekStartDate = new Date();\n        this.weekStart = 0;\n    }\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    setWeekStart(num) {\n        this.weekStart = num;\n    }\n}\nWeekStartExample.decorators = [\n    { type: Component, args: [{\n                selector: 'week-start-example',\n                template: \"<button [theme]=\\\"weekStart === 0 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(0)\\\">Sunday</button>\\n<button [theme]=\\\"weekStart === 1 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(1)\\\">Monday</button>\\n<button [theme]=\\\"weekStart === 2 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(2)\\\">Tuesday</button>\\n<button [theme]=\\\"weekStart === 3 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(3)\\\">Wednesday</button>\\n<button [theme]=\\\"weekStart === 4 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(4)\\\">Thursday</button>\\n<button [theme]=\\\"weekStart === 5 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(5)\\\">Friday</button>\\n<button [theme]=\\\"weekStart === 6 ? 'primary' : 'secondary'\\\" (click)=\\\"setWeekStart(6)\\\">Saturday</button>\\n<br/>\\n<br/>\\n<div class=\\\"date-picker-demo-side-by-side\\\">\\n    <p>\\n        <label>Value</label> {{(weekStartDate | date) || 'N/A'}}\\n    </p>\\n    <novo-date-picker [(ngModel)]=\\\"weekStartDate\\\" [weekStart]=\\\"weekStart\\\"></novo-date-picker>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    WeekStartExample.prototype.weekStartDate;\n    /** @type {?} */\n    WeekStartExample.prototype.weekStart;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/editor/basic-editor/basic-editor-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Editor Example\n */\nclass BasicEditorExample {\n    constructor() {\n        this.editorValue = '<p>I AM A PRE-RENDERED VALUE</p><h1>TEST</h1>';\n    }\n    /**\n     * @param {?} editor\n     * @return {?}\n     */\n    insertText(editor) {\n        editor.insertText('Hello World');\n    }\n}\nBasicEditorExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-editor-example',\n                template: \"<novo-editor [name]=\\\"'demoEditor'\\\" [(ngModel)]=\\\"editorValue\\\" #editor></novo-editor>\\n\\n<button theme=\\\"primary\\\" (click)=\\\"insertText(editor)\\\">Insert \\\"Hello World\\\" at Cursor</button>\\n\\n<p>Value:</p>\\n<p [innerHtml]=\\\"editorValue\\\"></p>\\n\\n<p>HTML:</p>\\n<pre><code>{{editorValue}}</code></pre>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicEditorExample.prototype.editorValue;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/editor/minimal-editor/minimal-editor-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Minimal Editor Example\n */\nclass MinimalEditorExample {\n    constructor() {\n        this.editorValue = '<p>I AM A PRE-RENDERED VALUE</p><h1>TEST</h1>';\n    }\n    /**\n     * @param {?} editor\n     * @return {?}\n     */\n    insertText(editor) {\n        editor.insertText('Hello World');\n    }\n}\nMinimalEditorExample.decorators = [\n    { type: Component, args: [{\n                selector: 'minimal-editor-example',\n                template: \"<novo-editor [name]=\\\"'demoEditor'\\\" [(ngModel)]=\\\"editorValue\\\" [minimal]=\\\"true\\\" #editor></novo-editor>\\n\\n<button theme=\\\"primary\\\" (click)=\\\"insertText(editor)\\\">Insert \\\"Hello World\\\" at Cursor</button>\\n\\n<p>Value:</p>\\n<p [innerHtml]=\\\"editorValue\\\"></p>\\n\\n<p>HTML:</p>\\n<pre><code>{{editorValue}}</code></pre>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    MinimalEditorExample.prototype.editorValue;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form-groups/custom-template/custom-template-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Custom Template Example\n */\nclass CustomTemplateExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        this.initialValue = [];\n        this.initValue = [{ text: 'TEXT', percentage: 12, checkbox: true, test4: 'TEST' }];\n        this.simpleAddConfig = {\n            label: 'Add',\n        };\n        this.anotherAddConfig = {\n            label: 'Add a new fancy thing!',\n        };\n        this.emptyMessage = 'There are no items...';\n        // Grouped form demo\n        this.setupGroupedFormDemo();\n        // Setup function\n        this.canEditFunction = this.canEdit.bind(this);\n        this.canRemoveFunction = this.canRemove.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onRemove(value) {\n        console.log('REMOVING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onEdit(value) {\n        console.log('EDITING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canEdit(value, index) {\n        console.log('canEdit', value, index); // tslint:disable-line\n        return index > 0;\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canRemove(value, index) {\n        console.log('canRemove', value, index); // tslint:disable-line\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    updateInitialValue() {\n        this.initValue = [\n            { text: 'TEXT 111', percentage: 100, checkbox: false, test4: 'TEST 111' },\n            { text: 'TEXT 222', percentage: 5, checkbox: false, test4: 'TEST 222' },\n            { text: 'TEXT 333', percentage: 60, checkbox: true, test4: 'TEST 333' },\n        ];\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customDelete(form, key, index) {\n        console.log('DELETE', form, key, index); // tslint:disable-line\n        // tslint:disable-line\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        control.removeAt(index);\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customEdit(form, key, index) {\n        console.log('EDIT', form, key, index); // tslint:disable-line\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupGroupedFormDemo() {\n        this.formGroup = this.formUtils.emptyFormGroup();\n        /** @type {?} */\n        const label = new ReadOnlyControl({ key: 'label', value: 'Label :)' });\n        /** @type {?} */\n        const c1 = new SelectControl({ key: 'text', label: 'Text Box', options: [{ value: 'hello', label: 'Hello' }] });\n        /** @type {?} */\n        const c2 = new TextBoxControl({ type: 'percentage', key: 'percentage', label: 'Percent', required: true });\n        /** @type {?} */\n        const c3 = new CheckboxControl({ key: 'checkbox', label: 'Check Me!', width: 100 });\n        /** @type {?} */\n        const c4 = new TextBoxControl({ key: 'test4', label: 'TEST4' });\n        this.controls.push(label);\n        this.controls.push(c1);\n        this.controls.push(c2);\n        this.controls.push(c3);\n        this.controls.push(c4);\n    }\n}\nCustomTemplateExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-template-example',\n                template: \"<ng-template #customRowTemplate let-form=\\\"form\\\" let-index=\\\"index\\\" let-key=\\\"key\\\" let-controls=\\\"controls\\\">\\n    <div class=\\\"novo-control-group-control\\\">\\n        <div *ngFor=\\\"let c of controls\\\" class=\\\"novo-control-container\\\" [class.is-label]=\\\"c.controlType === 'read-only'\\\" [style.max-width.px]=\\\"c.width\\\">\\n            <novo-control [form]=\\\"form?.controls[key]['controls'][index]\\\" [control]=\\\"c\\\" [condensed]=\\\"true\\\"></novo-control>\\n        </div>\\n        <div class=\\\"novo-control-container last\\\">\\n            <button tooltip=\\\"HI\\\" type=\\\"button\\\" (click)=\\\"customEdit(form, key, index)\\\" theme=\\\"icon\\\" icon=\\\"edit\\\" [attr.data-automation-id]=\\\"'novo-control-group-edit-' + key\\\" index=\\\"-1\\\"></button>\\n        </div>\\n        <div class=\\\"novo-control-container last\\\">\\n            <button type=\\\"button\\\" (click)=\\\"customDelete(form, key, index)\\\" theme=\\\"icon\\\" icon=\\\"delete-o\\\" [attr.data-automation-id]=\\\"'novo-control-group-delete-' + key\\\" index=\\\"-1\\\"></button>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n<novo-form [form]=\\\"formGroup\\\">\\n    <novo-control-group remove=\\\"true\\\" edit=\\\"true\\\" [initialValue]=\\\"initValue\\\" [controls]=\\\"controls\\\" [rowTemplate]=\\\"customRowTemplate\\\" [add]=\\\"simpleAddConfig\\\" label=\\\"Custom Template\\\" key=\\\"custom\\\" [form]=\\\"formGroup\\\" [emptyMessage]=\\\"emptyMessage\\\"></novo-control-group>\\n</novo-form>\\n\\n<div class=\\\"final-value\\\">Initial Value: {{ initValue | json }}</div>\\n<div class=\\\"final-value\\\">Value: {{ formGroup.value | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCustomTemplateExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    CustomTemplateExample.prototype.formGroup;\n    /** @type {?} */\n    CustomTemplateExample.prototype.controls;\n    /** @type {?} */\n    CustomTemplateExample.prototype.initialValue;\n    /** @type {?} */\n    CustomTemplateExample.prototype.initValue;\n    /** @type {?} */\n    CustomTemplateExample.prototype.simpleAddConfig;\n    /** @type {?} */\n    CustomTemplateExample.prototype.anotherAddConfig;\n    /** @type {?} */\n    CustomTemplateExample.prototype.emptyMessage;\n    /** @type {?} */\n    CustomTemplateExample.prototype.canEditFunction;\n    /** @type {?} */\n    CustomTemplateExample.prototype.canRemoveFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    CustomTemplateExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form-groups/horizontal-options/horizontal-options-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Horizontal Options Example\n */\nclass HorizontalOptionsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        this.initialValue = [];\n        this.initValue = [{ text: 'TEXT', percentage: 12, checkbox: true, test4: 'TEST' }];\n        this.simpleAddConfig = {\n            label: 'Add',\n        };\n        this.anotherAddConfig = {\n            label: 'Add a new fancy thing!',\n        };\n        this.emptyMessage = 'There are no items...';\n        // Grouped form demo\n        this.setupGroupedFormDemo();\n        // Setup function\n        this.canEditFunction = this.canEdit.bind(this);\n        this.canRemoveFunction = this.canRemove.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onRemove(value) {\n        console.log('REMOVING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onEdit(value) {\n        console.log('EDITING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canEdit(value, index) {\n        console.log('canEdit', value, index); // tslint:disable-line\n        return index > 0;\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canRemove(value, index) {\n        console.log('canRemove', value, index); // tslint:disable-line\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    updateInitialValue() {\n        this.initValue = [\n            { text: 'TEXT 111', percentage: 100, checkbox: false, test4: 'TEST 111' },\n            { text: 'TEXT 222', percentage: 5, checkbox: false, test4: 'TEST 222' },\n            { text: 'TEXT 333', percentage: 60, checkbox: true, test4: 'TEST 333' },\n        ];\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customDelete(form, key, index) {\n        console.log('DELETE', form, key, index); // tslint:disable-line\n        // tslint:disable-line\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        control.removeAt(index);\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customEdit(form, key, index) {\n        console.log('EDIT', form, key, index); // tslint:disable-line\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupGroupedFormDemo() {\n        this.formGroup = this.formUtils.emptyFormGroup();\n        /** @type {?} */\n        const label = new ReadOnlyControl({ key: 'label', value: 'Label :)' });\n        /** @type {?} */\n        const c1 = new SelectControl({ key: 'text', label: 'Text Box', options: [{ value: 'hello', label: 'Hello' }] });\n        /** @type {?} */\n        const c2 = new TextBoxControl({ type: 'percentage', key: 'percentage', label: 'Percent', required: true });\n        /** @type {?} */\n        const c3 = new CheckboxControl({ key: 'checkbox', label: 'Check Me!', width: 100 });\n        /** @type {?} */\n        const c4 = new TextBoxControl({ key: 'test4', label: 'TEST4' });\n        this.controls.push(label);\n        this.controls.push(c1);\n        this.controls.push(c2);\n        this.controls.push(c3);\n        this.controls.push(c4);\n    }\n}\nHorizontalOptionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'horizontal-options-example',\n                template: \"<novo-form [form]=\\\"formGroup\\\">\\n    <novo-control-group [initialValue]=\\\"initialValue\\\" collapsible=\\\"true\\\" [add]=\\\"anotherAddConfig\\\" remove=\\\"true\\\" label=\\\"Horizontal\\\" key=\\\"horizontal\\\" description=\\\"Test Description\\\" [form]=\\\"formGroup\\\" [controls]=\\\"controls\\\" [emptyMessage]=\\\"emptyMessage\\\"></novo-control-group>\\n</novo-form>\\n<div class=\\\"final-value\\\">Initial Value: {{ initialValue | json }}</div>\\n<div class=\\\"final-value\\\">Value: {{ formGroup.value | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nHorizontalOptionsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.formGroup;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.controls;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.initialValue;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.initValue;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.simpleAddConfig;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.anotherAddConfig;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.emptyMessage;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.canEditFunction;\n    /** @type {?} */\n    HorizontalOptionsExample.prototype.canRemoveFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    HorizontalOptionsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form-groups/horizontal/horizontal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Horizontal Example\n */\nclass HorizontalExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        this.initialValue = [];\n        this.initValue = [{ text: 'TEXT', percentage: 12, checkbox: true, test4: 'TEST' }];\n        this.simpleAddConfig = {\n            label: 'Add',\n        };\n        this.anotherAddConfig = {\n            label: 'Add a new fancy thing!',\n        };\n        this.emptyMessage = 'There are no items...';\n        // Grouped form demo\n        this.setupGroupedFormDemo();\n        // Setup function\n        this.canEditFunction = this.canEdit.bind(this);\n        this.canRemoveFunction = this.canRemove.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onRemove(value) {\n        console.log('REMOVING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onEdit(value) {\n        console.log('EDITING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canEdit(value, index) {\n        console.log('canEdit', value, index); // tslint:disable-line\n        return index > 0;\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canRemove(value, index) {\n        console.log('canRemove', value, index); // tslint:disable-line\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    updateInitialValue() {\n        this.initValue = [\n            { text: 'TEXT 111', percentage: 100, checkbox: false, test4: 'TEST 111' },\n            { text: 'TEXT 222', percentage: 5, checkbox: false, test4: 'TEST 222' },\n            { text: 'TEXT 333', percentage: 60, checkbox: true, test4: 'TEST 333' },\n        ];\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customDelete(form, key, index) {\n        console.log('DELETE', form, key, index); // tslint:disable-line\n        // tslint:disable-line\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        control.removeAt(index);\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customEdit(form, key, index) {\n        console.log('EDIT', form, key, index); // tslint:disable-line\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupGroupedFormDemo() {\n        this.formGroup = this.formUtils.emptyFormGroup();\n        /** @type {?} */\n        const label = new ReadOnlyControl({ key: 'label', value: 'Label :)' });\n        /** @type {?} */\n        const c1 = new SelectControl({ key: 'text', label: 'Text Box', options: [{ value: 'hello', label: 'Hello' }] });\n        /** @type {?} */\n        const c2 = new TextBoxControl({ type: 'percentage', key: 'percentage', label: 'Percent', required: true });\n        /** @type {?} */\n        const c3 = new CheckboxControl({ key: 'checkbox', label: 'Check Me!', width: 100 });\n        /** @type {?} */\n        const c4 = new TextBoxControl({ key: 'test4', label: 'TEST4' });\n        this.controls.push(label);\n        this.controls.push(c1);\n        this.controls.push(c2);\n        this.controls.push(c3);\n        this.controls.push(c4);\n    }\n}\nHorizontalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'horizontal-example',\n                template: \"<button theme=\\\"primary\\\" (click)=\\\"updateInitialValue()\\\">Update Initial Value</button>\\n<br/>\\n<br/>\\n<novo-form [form]=\\\"formGroup\\\">\\n    <novo-control-group [canEdit]=\\\"canEditFunction\\\" [canRemove]=\\\"canRemoveFunction\\\" (onRemove)=\\\"onRemove($event)\\\" (onEdit)=\\\"onEdit($event)\\\" [initialValue]=\\\"initValue\\\" [add]=\\\"simpleAddConfig\\\" remove=\\\"true\\\" edit=\\\"true\\\" label=\\\"Horizontal\\\" key=\\\"horizontal\\\" [form]=\\\"formGroup\\\" [controls]=\\\"controls\\\" [emptyMessage]=\\\"emptyMessage\\\"></novo-control-group>\\n</novo-form>\\n<div class=\\\"final-value\\\">Initial Value: {{ initValue | json }}</div>\\n<div class=\\\"final-value\\\">Value: {{ formGroup.value | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nHorizontalExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    HorizontalExample.prototype.formGroup;\n    /** @type {?} */\n    HorizontalExample.prototype.controls;\n    /** @type {?} */\n    HorizontalExample.prototype.initialValue;\n    /** @type {?} */\n    HorizontalExample.prototype.initValue;\n    /** @type {?} */\n    HorizontalExample.prototype.simpleAddConfig;\n    /** @type {?} */\n    HorizontalExample.prototype.anotherAddConfig;\n    /** @type {?} */\n    HorizontalExample.prototype.emptyMessage;\n    /** @type {?} */\n    HorizontalExample.prototype.canEditFunction;\n    /** @type {?} */\n    HorizontalExample.prototype.canRemoveFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    HorizontalExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form-groups/vertical-options/vertical-options-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Vertical Options Example\n */\nclass VerticalOptionsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        this.initialValue = [];\n        this.initValue = [{ text: 'TEXT', percentage: 12, checkbox: true, test4: 'TEST' }];\n        this.simpleAddConfig = {\n            label: 'Add',\n        };\n        this.anotherAddConfig = {\n            label: 'Add a new fancy thing!',\n        };\n        this.emptyMessage = 'There are no items...';\n        // Grouped form demo\n        this.setupGroupedFormDemo();\n        // Setup function\n        this.canEditFunction = this.canEdit.bind(this);\n        this.canRemoveFunction = this.canRemove.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onRemove(value) {\n        console.log('REMOVING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onEdit(value) {\n        console.log('EDITING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canEdit(value, index) {\n        console.log('canEdit', value, index); // tslint:disable-line\n        return index > 0;\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canRemove(value, index) {\n        console.log('canRemove', value, index); // tslint:disable-line\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    updateInitialValue() {\n        this.initValue = [\n            { text: 'TEXT 111', percentage: 100, checkbox: false, test4: 'TEST 111' },\n            { text: 'TEXT 222', percentage: 5, checkbox: false, test4: 'TEST 222' },\n            { text: 'TEXT 333', percentage: 60, checkbox: true, test4: 'TEST 333' },\n        ];\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customDelete(form, key, index) {\n        console.log('DELETE', form, key, index); // tslint:disable-line\n        // tslint:disable-line\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        control.removeAt(index);\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customEdit(form, key, index) {\n        console.log('EDIT', form, key, index); // tslint:disable-line\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupGroupedFormDemo() {\n        this.formGroup = this.formUtils.emptyFormGroup();\n        /** @type {?} */\n        const label = new ReadOnlyControl({ key: 'label', value: 'Label :)' });\n        /** @type {?} */\n        const c1 = new SelectControl({ key: 'text', label: 'Text Box', options: [{ value: 'hello', label: 'Hello' }] });\n        /** @type {?} */\n        const c2 = new TextBoxControl({ type: 'percentage', key: 'percentage', label: 'Percent', required: true });\n        /** @type {?} */\n        const c3 = new CheckboxControl({ key: 'checkbox', label: 'Check Me!', width: 100 });\n        /** @type {?} */\n        const c4 = new TextBoxControl({ key: 'test4', label: 'TEST4' });\n        this.controls.push(label);\n        this.controls.push(c1);\n        this.controls.push(c2);\n        this.controls.push(c3);\n        this.controls.push(c4);\n    }\n}\nVerticalOptionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'vertical-options-example',\n                template: \"<novo-form [form]=\\\"formGroup\\\">\\n    <novo-control-group [initialValue]=\\\"initialValue\\\" collapsible=\\\"true\\\" [add]=\\\"anotherAddConfig\\\" remove=\\\"true\\\" icon=\\\"idea\\\" label=\\\"Vertical\\\" key=\\\"vertical\\\" vertical=\\\"true\\\" description=\\\"Test Description\\\" [form]=\\\"formGroup\\\" [controls]=\\\"controls\\\" [emptyMessage]=\\\"emptyMessage\\\"></novo-control-group>\\n</novo-form>\\n<div class=\\\"final-value\\\">Initial Value: {{ initialValue | json }}</div>\\n<div class=\\\"final-value\\\">Value: {{ formGroup.value | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nVerticalOptionsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    VerticalOptionsExample.prototype.formGroup;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.controls;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.initialValue;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.initValue;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.simpleAddConfig;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.anotherAddConfig;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.emptyMessage;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.canEditFunction;\n    /** @type {?} */\n    VerticalOptionsExample.prototype.canRemoveFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    VerticalOptionsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form-groups/vertical/vertical-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Vertical Example\n */\nclass VerticalExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        this.initialValue = [];\n        this.initValue = [{ text: 'TEXT', percentage: 12, checkbox: true, test4: 'TEST' }];\n        this.simpleAddConfig = {\n            label: 'Add',\n        };\n        this.anotherAddConfig = {\n            label: 'Add a new fancy thing!',\n        };\n        this.emptyMessage = 'There are no items...';\n        // Grouped form demo\n        this.setupGroupedFormDemo();\n        // Setup function\n        this.canEditFunction = this.canEdit.bind(this);\n        this.canRemoveFunction = this.canRemove.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onRemove(value) {\n        console.log('REMOVING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onEdit(value) {\n        console.log('EDITING', value); // tslint:disable-line\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canEdit(value, index) {\n        console.log('canEdit', value, index); // tslint:disable-line\n        return index > 0;\n    }\n    /**\n     * @param {?} value\n     * @param {?} index\n     * @return {?}\n     */\n    canRemove(value, index) {\n        console.log('canRemove', value, index); // tslint:disable-line\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    updateInitialValue() {\n        this.initValue = [\n            { text: 'TEXT 111', percentage: 100, checkbox: false, test4: 'TEST 111' },\n            { text: 'TEXT 222', percentage: 5, checkbox: false, test4: 'TEST 222' },\n            { text: 'TEXT 333', percentage: 60, checkbox: true, test4: 'TEST 333' },\n        ];\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customDelete(form, key, index) {\n        console.log('DELETE', form, key, index); // tslint:disable-line\n        // tslint:disable-line\n        /** @type {?} */\n        const control = (/** @type {?} */ (form.controls[key]));\n        control.removeAt(index);\n    }\n    /**\n     * @param {?} form\n     * @param {?} key\n     * @param {?} index\n     * @return {?}\n     */\n    customEdit(form, key, index) {\n        console.log('EDIT', form, key, index); // tslint:disable-line\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupGroupedFormDemo() {\n        this.formGroup = this.formUtils.emptyFormGroup();\n        /** @type {?} */\n        const label = new ReadOnlyControl({ key: 'label', value: 'Label :)' });\n        /** @type {?} */\n        const c1 = new SelectControl({ key: 'text', label: 'Text Box', options: [{ value: 'hello', label: 'Hello' }] });\n        /** @type {?} */\n        const c2 = new TextBoxControl({ type: 'percentage', key: 'percentage', label: 'Percent', required: true });\n        /** @type {?} */\n        const c3 = new CheckboxControl({ key: 'checkbox', label: 'Check Me!', width: 100 });\n        /** @type {?} */\n        const c4 = new TextBoxControl({ key: 'test4', label: 'TEST4' });\n        this.controls.push(label);\n        this.controls.push(c1);\n        this.controls.push(c2);\n        this.controls.push(c3);\n        this.controls.push(c4);\n    }\n}\nVerticalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'vertical-example',\n                template: \"<novo-form [form]=\\\"formGroup\\\">\\n    <novo-control-group [initialValue]=\\\"initialValue\\\" [add]=\\\"simpleAddConfig\\\" remove=\\\"true\\\" icon=\\\"idea\\\" label=\\\"Vertical\\\" key=\\\"vertical\\\" vertical=\\\"true\\\" [form]=\\\"formGroup\\\" [controls]=\\\"controls\\\" [emptyMessage]=\\\"emptyMessage\\\"></novo-control-group>\\n</novo-form>\\n<div class=\\\"final-value\\\">Initial Value: {{ initialValue | json }}</div>\\n<div class=\\\"final-value\\\">Value: {{ formGroup.value | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nVerticalExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    VerticalExample.prototype.formGroup;\n    /** @type {?} */\n    VerticalExample.prototype.controls;\n    /** @type {?} */\n    VerticalExample.prototype.initialValue;\n    /** @type {?} */\n    VerticalExample.prototype.initValue;\n    /** @type {?} */\n    VerticalExample.prototype.simpleAddConfig;\n    /** @type {?} */\n    VerticalExample.prototype.anotherAddConfig;\n    /** @type {?} */\n    VerticalExample.prototype.emptyMessage;\n    /** @type {?} */\n    VerticalExample.prototype.canEditFunction;\n    /** @type {?} */\n    VerticalExample.prototype.canRemoveFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    VerticalExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/address-control/address-control-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Address Control Example\n */\nclass AddressControlExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.states = [\n            {\n                value: 'MA',\n                label: 'Massachusetts',\n                countryId: 1,\n            },\n            {\n                value: 'NY',\n                label: 'New York',\n                countryId: 1,\n            },\n            {\n                value: 'AB',\n                label: 'Alberta',\n                countryId: 2216,\n            },\n            {\n                value: 'BC',\n                label: 'British Columbia',\n                countryId: 2216,\n            },\n            {\n                value: 'MB',\n                label: 'Manitoba',\n                countryId: 2216,\n            },\n        ];\n        // Address control\n        this.addressControl = new AddressControl({\n            key: 'address',\n            name: 'address',\n            label: 'Address',\n            tooltip: 'Address',\n            config: {\n                address1: {\n                    label: 'Address Line 1',\n                    required: true,\n                    maxlength: 20,\n                },\n                address2: {\n                    label: 'Address Line 2',\n                    required: true,\n                    maxlength: 15,\n                },\n                state: {\n                    label: 'State',\n                    required: true,\n                },\n                countryID: {\n                    label: 'Country',\n                    required: true,\n                },\n                city: {\n                    label: 'City',\n                    required: true,\n                },\n                zip: {\n                    label: 'Zipcode',\n                    required: true,\n                },\n            },\n            value: {\n                address1: '321 Summer Street',\n                address2: '11 Washington Street',\n                city: 'Chicago',\n                state: 'California',\n                zip: 95133,\n                countryID: 1,\n            },\n        });\n        this.secondaryAddressControl = new AddressControl({\n            key: 'secondaryAddress',\n            name: 'secondaryAddress',\n            label: 'Secondary Address',\n            tooltip: 'Secondary Address',\n            config: {\n                address1: {\n                    label: 'Address Line 1',\n                    maxlength: 20,\n                },\n                address2: {\n                    label: 'Address Line 2',\n                    maxlength: 15,\n                },\n                state: {\n                    label: 'State',\n                    pickerConfig: {\n                        field: 'value',\n                        format: '$label',\n                        options: (/**\n                         * @param {?} query\n                         * @param {?} countryID\n                         * @return {?}\n                         */\n                        (query, countryID) => {\n                            return Promise.resolve(this.getStateOptions(query, countryID));\n                        }),\n                        getLabels: (/**\n                         * @param {?} value\n                         * @return {?}\n                         */\n                        (value) => {\n                            return Promise.resolve(this.getStateLabel(value));\n                        }),\n                    },\n                },\n                countryID: {\n                    label: 'Country',\n                    pickerConfig: {\n                        field: 'value',\n                        format: '$label',\n                        options: (/**\n                         * @param {?} query\n                         * @return {?}\n                         */\n                        (query) => {\n                            return Promise.resolve(this.getCountryOptions(query));\n                        }),\n                        getLabels: (/**\n                         * @param {?} value\n                         * @return {?}\n                         */\n                        (value) => {\n                            return new Promise((/**\n                             * @param {?} resolve\n                             * @return {?}\n                             */\n                            (resolve) => {\n                                /** @type {?} */\n                                const country = findByCountryId(value);\n                                if (country) {\n                                    resolve({ value: country.id, label: country.name });\n                                }\n                                else {\n                                    resolve('');\n                                }\n                            }));\n                        }),\n                    },\n                },\n                city: {\n                    label: 'City',\n                },\n                zip: {\n                    label: 'Zipcode',\n                },\n            },\n            value: {\n                address1: '123 Summer Street',\n                address2: '10 Washington Street and stuff',\n                countryID: 2359,\n            },\n        });\n        this.addressFormControls = [this.addressControl, this.secondaryAddressControl];\n        this.addressForm = formUtils.toFormGroup(this.addressFormControls);\n    }\n    /**\n     * @param {?=} filter\n     * @param {?=} countryID\n     * @return {?}\n     */\n    getStateOptions(filter = '', countryID) {\n        /** @type {?} */\n        let states = this.states;\n        if (countryID) {\n            states = states.filter((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => state.countryId === countryID));\n        }\n        if (filter && filter.length) {\n            states = states.filter((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => new RegExp(`${filter}`, 'gi').test(state.label)));\n        }\n        return states;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getStateLabel(value) {\n        /** @type {?} */\n        const state = this.states.find((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => {\n            return s.value === value;\n        }));\n        if (state && state.label) {\n            return state.label;\n        }\n        return '';\n    }\n    /**\n     * @param {?=} filter\n     * @return {?}\n     */\n    getCountryOptions(filter) {\n        /** @type {?} */\n        let countries = [\n            {\n                value: 2356,\n                label: 'Uganda',\n            },\n            {\n                value: 2357,\n                label: 'Ukraine',\n            },\n            {\n                value: 2358,\n                label: 'United Arab Emirates',\n            },\n            {\n                value: 2359,\n                label: 'United Kingdom',\n            },\n            {\n                value: 1,\n                label: 'United States',\n            },\n            {\n                value: 2443,\n                label: 'United States Minor Outlying Islands',\n            },\n            {\n                value: 2360,\n                label: 'Uruguay',\n            },\n            {\n                value: 2361,\n                label: 'Uzbekistan',\n            },\n        ];\n        if (filter && filter.length) {\n            countries = countries.filter((/**\n             * @param {?} country\n             * @return {?}\n             */\n            (country) => new RegExp(`${filter}`, 'gi').test(country.label)));\n        }\n        return countries;\n    }\n}\nAddressControlExample.decorators = [\n    { type: Component, args: [{\n                selector: 'address-control-example',\n                template: \"<novo-form [form]=\\\"addressForm\\\">\\n  <div class=\\\"novo-form-row\\\">\\n    <novo-control [form]=\\\"addressForm\\\" [control]=\\\"addressControl\\\"></novo-control>\\n  </div>\\n  <div class=\\\"novo-form-row\\\">\\n    <novo-control [form]=\\\"addressForm\\\" [control]=\\\"secondaryAddressControl\\\"></novo-control>\\n  </div>\\n</novo-form>\\n\\n<div class=\\\"final-value\\\">Value: {{addressForm.value | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAddressControlExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    AddressControlExample.prototype.addressControl;\n    /** @type {?} */\n    AddressControlExample.prototype.secondaryAddressControl;\n    /** @type {?} */\n    AddressControlExample.prototype.addressForm;\n    /** @type {?} */\n    AddressControlExample.prototype.addressFormControls;\n    /** @type {?} */\n    AddressControlExample.prototype.states;\n    /**\n     * @type {?}\n     * @private\n     */\n    AddressControlExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/calendar-input-controls/calendar-input-controls-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// import { MockMeta, MockMetaHeaders } from './MockMeta';\n/**\n * \\@title Calendar Input Controls Example\n */\nclass CalendarInputControlsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Calendar input controls\n        this.dateControl = new DateControl({\n            key: 'date',\n            label: 'Date',\n            tooltip: 'Date',\n            startDate: new Date().setMonth(new Date().getMonth() - 1),\n        });\n        this.userDefinedDateControl = new DateControl({\n            key: 'userDefinedFormat',\n            label: 'User Defined Format',\n            tooltip: 'Date',\n            dateFormat: 'MMM Do YYYY (dd)',\n            textMaskEnabled: false,\n        });\n        this.timeControl = new TimeControl({ key: 'time', label: 'Time', tooltip: 'Time' });\n        this.dateTimeControl = new DateTimeControl({ key: 'dateTime', tooltip: 'Date Time', label: 'Date Time', military: true });\n        this.calendarForm = formUtils.toFormGroup([this.dateControl, this.userDefinedDateControl, this.timeControl, this.dateTimeControl]);\n    }\n}\nCalendarInputControlsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'calendar-input-controls-example',\n                template: \"<!--Check out the FormDemo.js for more information!-->\\n<novo-form [form]=\\\"calendarForm\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"calendarForm\\\" [control]=\\\"dateControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"calendarForm\\\" [control]=\\\"userDefinedDateControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"calendarForm\\\" [control]=\\\"timeControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"calendarForm\\\" [control]=\\\"dateTimeControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Value: {{calendarForm.value | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCalendarInputControlsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    CalendarInputControlsExample.prototype.dateControl;\n    /** @type {?} */\n    CalendarInputControlsExample.prototype.userDefinedDateControl;\n    /** @type {?} */\n    CalendarInputControlsExample.prototype.timeControl;\n    /** @type {?} */\n    CalendarInputControlsExample.prototype.dateTimeControl;\n    /** @type {?} */\n    CalendarInputControlsExample.prototype.calendarForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    CalendarInputControlsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/check-box-controls/check-box-controls-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// import { MockMeta, MockMetaHeaders } from './MockMeta';\n/**\n * \\@title Check Box Controls Example\n */\nclass CheckBoxControlsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Check box controls\n        this.checkControl = new CheckboxControl({ key: 'check', tooltip: 'Checkbox', label: 'Checkbox', checkboxLabel: 'Checkbox' });\n        this.checkListControl = new CheckListControl({\n            key: 'checklist',\n            label: 'Check List',\n            options: ['One', 'Two', 'Three'],\n            tooltip: 'CheckList',\n            tooltipPosition: 'Top',\n        });\n        this.tilesControl = new TilesControl({\n            key: 'tiles',\n            label: 'Tiles',\n            options: [{ value: 'one', label: 'One' }, { value: 'two', label: 'Two' }, { value: 'disabled', label: 'Disabled', disabled: true }],\n            tooltip: 'Tiles',\n        });\n        this.disabledTilesControl = new TilesControl({\n            key: 'disabledTiles',\n            label: 'Disabled Tiles',\n            readOnly: true,\n            options: [{ value: 'one', label: 'One' }, { value: 'two', label: 'Two' }],\n            tooltip: 'Tiles',\n        });\n        this.checkForm = formUtils.toFormGroup([this.checkControl, this.checkListControl, this.tilesControl, this.disabledTilesControl]);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onChange(value) {\n        console.log('I changed!', value); // tslint:disable-line\n    }\n}\nCheckBoxControlsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'check-box-controls-example',\n                template: \"<!--Check out the FormDemo.js for more information!-->\\n<novo-form [form]=\\\"checkForm\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"checkForm\\\" [control]=\\\"checkControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"checkForm\\\" [control]=\\\"checkListControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"checkForm\\\" [control]=\\\"tilesControl\\\" (change)=\\\"onChange($event)\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"checkForm\\\" [control]=\\\"disabledTilesControl\\\" (change)=\\\"onChange($event)\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Value: {{checkForm.value | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCheckBoxControlsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    CheckBoxControlsExample.prototype.checkControl;\n    /** @type {?} */\n    CheckBoxControlsExample.prototype.checkListControl;\n    /** @type {?} */\n    CheckBoxControlsExample.prototype.tilesControl;\n    /** @type {?} */\n    CheckBoxControlsExample.prototype.disabledTilesControl;\n    /** @type {?} */\n    CheckBoxControlsExample.prototype.checkForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    CheckBoxControlsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/custom-demo-control/custom-demo-control-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Custom Demo Control\n */\nclass CustomDemoControlExample {\n}\nCustomDemoControlExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-demo-control-example',\n                template: `<div [formGroup]=\"form\">\n        My Custom Input <input [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control.type\" [placeholder]=\"control.placeholder\">\n    </div>`\n            }] }\n];\nCustomDemoControlExample.propDecorators = {\n    control: [{ type: Input }],\n    form: [{ type: Input }],\n    edit: [{ type: Input }],\n    save: [{ type: Input }],\n    delete: [{ type: Input }],\n    upload: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CustomDemoControlExample.prototype.control;\n    /** @type {?} */\n    CustomDemoControlExample.prototype.form;\n    /** @type {?} */\n    CustomDemoControlExample.prototype.edit;\n    /** @type {?} */\n    CustomDemoControlExample.prototype.save;\n    /** @type {?} */\n    CustomDemoControlExample.prototype.delete;\n    /** @type {?} */\n    CustomDemoControlExample.prototype.upload;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/MockMeta.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MockMeta = {\n    entity: 'ENTITY_NAME',\n    entityMetaUrl: '',\n    label: 'ENTITY_LABEL',\n    fields: [\n        {\n            name: 'firstName',\n            type: 'text',\n            label: 'First Name',\n            required: true,\n            sortOrder: 10,\n            maxLength: 10,\n            description: 'First Name, Yo!',\n        },\n        {\n            name: 'groupedItems',\n            type: 'group',\n            label: 'Groupd Items',\n            sortOrder: 11,\n            icon: 'section',\n            fields: [\n                {\n                    name: 'label',\n                    type: 'text',\n                    label: 'Label',\n                    sortOrder: 10,\n                    maxLength: 10,\n                },\n                {\n                    name: 'description',\n                    type: 'text',\n                    label: 'Description',\n                    sortOrder: 20,\n                },\n            ],\n        },\n        {\n            name: 'lastName',\n            type: 'text',\n            label: 'Last Name',\n            hint: 'Last Name, Yo!',\n            description: 'Last Name, Yo!',\n            sortOrder: 20,\n        },\n        {\n            name: 'number',\n            type: 'number',\n            label: 'Number',\n            required: true,\n            disabled: true,\n            sortOrder: 40,\n        },\n        {\n            name: 'dateFounded',\n            type: 'number',\n            label: 'Date Founded',\n            dataSpecialization: 'YEAR',\n            sortOrder: 40,\n            description: 'Year when this company was founded',\n        },\n        {\n            name: 'float',\n            type: 'float',\n            label: 'Float',\n            required: true,\n            sortOrder: 50,\n        },\n        {\n            name: 'currency',\n            type: 'money',\n            label: 'Cost',\n            currencyFormat: 'USD',\n            sortOrder: 60,\n        },\n        {\n            name: 'percent',\n            type: 'percentage',\n            label: 'Percentage',\n            required: true,\n            sortOrder: 70,\n        },\n        {\n            name: 'date',\n            type: 'date',\n            label: 'Date',\n            required: true,\n            sortOrder: 90,\n            defaultValue: new Date(2016, 1, 1),\n        },\n        {\n            name: 'time',\n            type: 'time',\n            label: 'Time',\n            required: true,\n            sortOrder: 100,\n        },\n        {\n            name: 'datetime',\n            type: 'date-time',\n            label: 'DateTime',\n            dataSpecialization: 'DATETIME',\n            required: true,\n            sortOrder: 110,\n        },\n        {\n            name: 'status',\n            type: 'select',\n            dataType: 'String',\n            maxLength: 200,\n            confidential: false,\n            label: 'Status',\n            options: [\n                {\n                    value: 'Open',\n                    label: 'Open',\n                },\n                {\n                    value: 'Qualifying',\n                    label: 'Qualifying',\n                },\n                {\n                    value: 'Negotiating',\n                    label: 'Negotiating',\n                },\n                {\n                    value: 'TRIGGER',\n                    label: 'TRIGGER',\n                },\n            ],\n            sortOrder: 120,\n        },\n        {\n            name: 'nextAction',\n            type: 'tiles',\n            dataType: 'String',\n            label: 'Next Action',\n            required: true,\n            options: [\n                {\n                    value: 'none',\n                    label: 'None',\n                },\n                {\n                    value: 'task',\n                    label: 'Task',\n                },\n                {\n                    value: 'appointment',\n                    label: 'Appointment',\n                },\n            ],\n            sortOrder: 130,\n        },\n        {\n            name: 'state',\n            type: 'picker',\n            dataType: 'String',\n            maxLength: 200,\n            confidential: false,\n            label: 'State',\n            required: true,\n            // TODO: Align picker with META by passing META obj into picker\n            // options: [ /* flat array of states */ ]\n            options: {\n                options: [\n                    'Alabama',\n                    'Alaska',\n                    'Arizona',\n                    'Arkansas',\n                    'California',\n                    'Colorado',\n                    'Connecticut',\n                    'Delaware',\n                    'Florida',\n                    'Georgia',\n                    'Hawaii',\n                    'Idaho',\n                    'Illinois',\n                    'Indiana',\n                    'Iowa',\n                    'Kansas',\n                    'Kentucky',\n                    'Louisiana',\n                    'Maine',\n                    'Maryland',\n                    'Massachusetts',\n                    'Michigan',\n                    'Minnesota',\n                    'Mississippi',\n                    'Missouri',\n                    'Montana',\n                    'Nebraska',\n                    'Nevada',\n                    'New Hampshire',\n                    'New Jersey',\n                    'New Mexico',\n                    'New York',\n                    'North Dakota',\n                    'North Carolina',\n                    'Ohio',\n                    'Oklahoma',\n                    'Oregon',\n                    'Pennsylvania',\n                    'Rhode Island',\n                    'South Carolina',\n                    'South Dakota',\n                    'Tennessee',\n                    'Texas',\n                    'Utah',\n                    'Vermont',\n                    'Virginia',\n                    'Washington',\n                    'West Virginia',\n                    'Wisconsin',\n                    'Wyoming',\n                ],\n            },\n            sortOrder: 530,\n        },\n        {\n            name: 'startDate',\n            type: 'datetime',\n            dataType: 'Timestamp',\n            label: 'Start Date',\n            disabled: true,\n            required: true,\n            sortOrder: 540,\n        },\n        {\n            name: 'quota',\n            type: 'number',\n            dataType: 'Integer',\n            label: 'Quota',\n            required: true,\n            sortOrder: 550,\n        },\n        {\n            name: 'secret',\n            type: 'hidden',\n            dataType: 'String',\n            label: 'Top Secret',\n            required: true,\n            defaultValue: 'The secret code is: 08322',\n            sortOrder: 560,\n        },\n        {\n            name: 'categories',\n            type: 'picker',\n            confidential: false,\n            optional: false,\n            label: 'Categories',\n            required: true,\n            readOnly: false,\n            multiValue: true,\n            inputType: 'SELECT',\n            options: [\n                {\n                    value: 'Open',\n                    label: 'Open',\n                },\n                {\n                    value: 'Qualifying',\n                    label: 'Qualifying',\n                },\n                {\n                    value: 'Negotiating',\n                    label: 'Negotiating',\n                },\n                {\n                    value: 'TRIGGER',\n                    label: 'TRIGGER',\n                },\n            ],\n            sortOrder: 570,\n        },\n        {\n            name: 'owner',\n            type: 'entity',\n            confidential: false,\n            optional: false,\n            label: 'Owner',\n            required: false,\n            readOnly: true,\n            multiValue: false,\n            inputType: 'SELECT',\n            optionsType: 'CorporateUser',\n            optionsUrl: '/options/CorporateUser',\n            hideFromSearch: false,\n            associatedEntity: {\n                entity: 'CorporateUser',\n                label: 'Corporate User',\n            },\n            sortOrder: 580,\n        },\n        {\n            name: 'address',\n            type: 'address',\n            dataType: 'Address',\n            dataSpecialization: 'SYSTEM',\n            confidential: false,\n            optional: true,\n            label: 'Address',\n            required: false,\n            readOnly: false,\n            multiValue: false,\n            hideFromSearch: true,\n            tooltip: 'Address Block',\n            fields: [\n                {\n                    name: 'address1',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'Addressxxx',\n                    required: true,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                    defaultValue: '100 Summer St',\n                },\n                {\n                    name: 'address2',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'Address 2',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                    defaultValue: 'apt 25',\n                },\n                {\n                    name: 'city',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'City',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'state',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 30,\n                    confidential: false,\n                    optional: true,\n                    label: 'State',\n                    required: true,\n                    readOnly: false,\n                    multiValue: false,\n                    inputType: 'SELECT',\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'zip',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 15,\n                    confidential: false,\n                    optional: true,\n                    label: 'Zip',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'countryID',\n                    type: 'SCALAR',\n                    dataType: 'Integer',\n                    confidential: false,\n                    optional: false,\n                    label: 'Country',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    inputType: 'SELECT',\n                    defaultValue: 2260,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'countryCode',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 0,\n                    optional: true,\n                },\n                {\n                    name: 'countryName',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 0,\n                    optional: true,\n                },\n            ],\n            sortOrder: 590,\n        },\n        {\n            name: 'checkbox',\n            type: 'checkbox',\n            label: 'Checkbox',\n            sortOrder: 600,\n        },\n        {\n            name: 'checklist',\n            type: 'checklist',\n            label: 'CheckList',\n            options: ['Morning', 'Day', 'Night', 'Overnight'],\n            required: true,\n            sortOrder: 610,\n        },\n        {\n            name: 'attachments',\n            type: 'file',\n            label: 'Attachments',\n            multiValue: true,\n            required: true,\n            sortOrder: 630,\n        },\n        {\n            name: 'attachments',\n            type: 'file',\n            label: 'Attachments',\n            multiValue: true,\n            required: true,\n            sortOrder: 630,\n        },\n        {\n            defaultValue: 'Cold',\n            inputType: 'RADIO',\n            label: 'Types/Ratings',\n            maxLength: 100,\n            multiValue: false,\n            name: 'type',\n            optional: true,\n            options: [\n                {\n                    value: 'Hot',\n                    label: 'Hot',\n                },\n                {\n                    value: 'Cold',\n                    label: 'Cold',\n                },\n                {\n                    value: 'Eh...',\n                    label: 'Eh...',\n                },\n            ],\n            required: true,\n            sortOrder: 9000,\n        },\n        {\n            inputType: 'RADIO',\n            label: 'Like?',\n            maxLength: 100,\n            multiValue: false,\n            name: 'like',\n            optional: true,\n            options: [\n                {\n                    value: 'Yes',\n                    label: 'Yes',\n                    icon: 'check',\n                },\n                {\n                    value: 'No',\n                    label: 'No',\n                    icon: 'times',\n                },\n            ],\n            required: true,\n            sortOrder: 9000,\n        },\n        {\n            name: 'comments',\n            type: 'textarea',\n            label: 'Comments',\n            required: true,\n            sortOrder: 9010,\n            maxLength: 150,\n            description: 'Comments, Please',\n        },\n        {\n            name: 'address',\n            type: 'address',\n            label: 'Address',\n            required: true,\n            sortOrder: 620,\n        },\n        {\n            name: 'customfield',\n            label: 'Custom Component',\n            required: true,\n            description: 'This is a custom component you can use instead',\n        },\n        {\n            name: 'htmlFieldFullEditor',\n            label: 'CK Editor - Full',\n            required: true,\n            sortOrder: 9011,\n            dataSpecialization: 'HTML',\n            type: 'SCALAR',\n            dataType: 'String',\n        },\n        {\n            name: 'htmlFieldMinimalEditor',\n            label: 'CK Editor - Minimal',\n            required: true,\n            sortOrder: 9012,\n            dataSpecialization: 'HTML-MINIMAL',\n            type: 'SCALAR',\n            dataType: 'String',\n        },\n    ],\n};\n/** @type {?} */\nconst MockMetaHeaders = {\n    sectionHeaders: [\n        {\n            label: 'Section With Custom Icon',\n            name: 'sectionHeader3',\n            sortOrder: 600,\n            enabled: true,\n            icon: 'bhi-certification',\n        },\n        {\n            label: 'Section 2',\n            name: 'sectionHeader2',\n            sortOrder: 500,\n            enabled: true,\n        },\n        {\n            label: 'Section 1',\n            name: 'sectionHeader1',\n            sortOrder: 45,\n            enabled: true,\n        },\n    ],\n};\nObject.assign(MockMetaHeaders, MockMeta);\n/** @type {?} */\nconst MockMetaForDisabledForm = {\n    entity: 'ENTITY_NAME',\n    entityMetaUrl: '',\n    label: 'ENTITY_LABEL',\n    fields: [\n        {\n            name: 'textbox',\n            type: 'text',\n            label: 'TextBox',\n            required: true,\n            sortOrder: 120,\n            maxLength: 10,\n        },\n        {\n            name: 'textarea',\n            type: 'textarea',\n            label: 'TextArea',\n            required: true,\n            sortOrder: 120,\n            maxLength: 10,\n        },\n        {\n            name: 'date',\n            type: 'date',\n            label: 'Date',\n            required: true,\n            sortOrder: 40,\n            defaultValue: new Date(2016, 1, 1),\n        },\n        {\n            name: 'time',\n            type: 'time',\n            label: 'Time',\n            required: true,\n            sortOrder: 140,\n            defaultValue: new Date(2016, 1, 1, 9, 0, 0, 0),\n        },\n        {\n            name: 'datetime',\n            type: 'date-time',\n            label: 'DateTime',\n            dataSpecialization: 'DATETIME',\n            required: true,\n            sortOrder: 50,\n            defaultValue: new Date(2016, 1, 1, 9, 0, 0, 0),\n        },\n        {\n            name: 'select',\n            type: 'select',\n            dataType: 'String',\n            maxLength: 200,\n            confidential: false,\n            label: 'Select',\n            options: [\n                {\n                    value: 'Open',\n                    label: 'Open',\n                },\n                {\n                    value: 'disabledValue',\n                    label: 'Disabled Value',\n                },\n            ],\n            sortOrder: 100,\n        },\n        {\n            name: 'tiles',\n            type: 'tiles',\n            dataType: 'String',\n            label: 'Tiles',\n            required: true,\n            options: [\n                {\n                    value: 'None',\n                    label: 'None',\n                },\n                {\n                    value: 'Disabled',\n                    label: 'Disabled',\n                },\n                {\n                    value: 'Enabled',\n                    label: 'Enabled',\n                },\n            ],\n            sortOrder: 130,\n        },\n        {\n            name: 'picker',\n            type: 'picker',\n            dataType: 'String',\n            maxLength: 200,\n            confidential: false,\n            label: 'Picker',\n            required: true,\n            options: {\n                options: ['Alabama', 'Alaska', 'Disabled Picker'],\n            },\n            sortOrder: 80,\n        },\n        {\n            name: 'chips',\n            type: 'picker',\n            confidential: false,\n            optional: false,\n            label: 'Chips',\n            required: true,\n            readOnly: false,\n            multiValue: true,\n            inputType: 'SELECT',\n            options: [\n                {\n                    value: 'Open',\n                    label: 'Open',\n                },\n                {\n                    value: 'Disabled',\n                    label: 'Disabled',\n                },\n                {\n                    value: 'Chip',\n                    label: 'Chip',\n                },\n                {\n                    value: 'TRIGGER',\n                    label: 'TRIGGER',\n                },\n            ],\n            sortOrder: 150,\n        },\n        {\n            name: 'rowChips',\n            type: 'TO_MANY',\n            confidential: false,\n            optional: false,\n            label: 'Row Chips',\n            required: true,\n            readOnly: false,\n            multiValue: false,\n            options: [\n                {\n                    id: 1,\n                    value: 'Disabled Row Chip',\n                    description: 'This is a disabled Row Chip',\n                },\n            ],\n            hideFromSearch: false,\n            sortOrder: 160,\n        },\n        {\n            name: 'address',\n            type: 'COMPOSITE',\n            dataType: 'Address',\n            dataSpecialization: 'SYSTEM',\n            confidential: false,\n            optional: false,\n            label: 'Address',\n            required: true,\n            readOnly: false,\n            multiValue: false,\n            hideFromSearch: true,\n            tooltip: 'Address Block',\n            fields: [\n                {\n                    name: 'address1',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'Address 1',\n                    required: true,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'address2',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'Address 2',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'city',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 40,\n                    confidential: false,\n                    optional: true,\n                    label: 'City',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'state',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 30,\n                    confidential: false,\n                    optional: true,\n                    label: 'State',\n                    required: true,\n                    readOnly: false,\n                    multiValue: false,\n                    inputType: 'SELECT',\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'zip',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 15,\n                    confidential: false,\n                    optional: true,\n                    label: 'Zip',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'countryID',\n                    type: 'SCALAR',\n                    dataType: 'Integer',\n                    confidential: false,\n                    optional: false,\n                    label: 'Country',\n                    required: false,\n                    readOnly: false,\n                    multiValue: false,\n                    inputType: 'SELECT',\n                    defaultValue: 2260,\n                    hideFromSearch: false,\n                },\n                {\n                    name: 'countryCode',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 0,\n                    optional: true,\n                },\n                {\n                    name: 'countryName',\n                    type: 'SCALAR',\n                    dataType: 'String',\n                    maxLength: 0,\n                    optional: true,\n                },\n            ],\n            sortOrder: 10,\n        },\n        {\n            name: 'checkbox',\n            type: 'checkbox',\n            label: 'Checkbox',\n            defaultValue: true,\n            sortOrder: 20,\n        },\n        {\n            name: 'checklist',\n            type: 'checklist',\n            label: 'CheckList',\n            options: [\n                {\n                    value: 'None',\n                    label: 'None',\n                },\n                {\n                    value: 'Disabled',\n                    label: 'Disabled',\n                },\n                {\n                    value: 'Enabled',\n                    label: 'Enabled',\n                },\n            ],\n            required: true,\n            sortOrder: 30,\n        },\n        {\n            name: 'file',\n            type: 'file',\n            label: 'File',\n            multiValue: true,\n            required: true,\n            sortOrder: 70,\n        },\n        {\n            defaultValue: 'disabled',\n            inputType: 'RADIO',\n            label: 'Radio',\n            maxLength: 100,\n            multiValue: false,\n            name: 'type',\n            optional: true,\n            options: [\n                {\n                    value: 'none',\n                    label: 'None',\n                },\n                {\n                    value: 'disabled',\n                    label: 'Disabled',\n                },\n                {\n                    value: 'enabled',\n                    label: 'Enabled',\n                },\n            ],\n            required: true,\n            sortOrder: 9000,\n        },\n        {\n            inputType: 'RADIO',\n            label: 'Radio',\n            maxLength: 100,\n            multiValue: false,\n            name: 'radio',\n            optional: true,\n            options: [\n                {\n                    value: 'Yes',\n                    label: 'Yes',\n                    icon: 'check',\n                },\n                {\n                    value: 'No',\n                    label: 'No',\n                    icon: 'times',\n                },\n            ],\n            required: true,\n            sortOrder: 9000,\n        },\n        {\n            name: 'htmlFieldFullEditor',\n            key: 'htmlFieldFullEditor',\n            label: 'Editor',\n            required: true,\n            sortOrder: 60,\n            dataSpecialization: 'HTML',\n            type: 'SCALAR',\n            dataType: 'String',\n        },\n    ],\n};\n/** @type {?} */\nconst MockMetaForForm = {\n    entity: 'ENTITY_NAME',\n    entityMetaUrl: '',\n    label: 'ENTITY_LABEL',\n    fields: [\n        {\n            name: 'textbox1',\n            type: 'text',\n            label: 'TextBox 1',\n            required: true,\n            sortOrder: 110,\n            maxLength: 10,\n        },\n        {\n            name: 'textbox2',\n            type: 'text',\n            label: 'TextBox 2',\n            required: true,\n            sortOrder: 120,\n            maxLength: 10,\n        },\n        {\n            name: 'textbox3',\n            type: 'text',\n            label: 'TextBox 3',\n            required: true,\n            sortOrder: 130,\n            maxLength: 10,\n        },\n    ],\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/disabled-form/disabled-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Disabled Form Example\n */\nclass DisabledFormExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.required = false;\n        this.disabled = true;\n        this.placeholder = 'Placeholder';\n        this.note = '';\n        // Disabled Form\n        /** @type {?} */\n        const disabledOverrides = {\n            address: {\n                readOnly: true,\n            },\n            textbox: {\n                readOnly: true,\n            },\n            textarea: {\n                readOnly: true,\n            },\n            date: {\n                readOnly: true,\n            },\n            time: {\n                readOnly: true,\n            },\n            datetime: {\n                readOnly: true,\n            },\n            select: {\n                readOnly: true,\n            },\n            tiles: {\n                readOnly: true,\n            },\n            picker: {\n                readOnly: true,\n            },\n            chips: {\n                readOnly: true,\n            },\n            checkbox: {\n                readOnly: true,\n            },\n            checklist: {\n                readOnly: true,\n            },\n            file: {\n                readOnly: true,\n            },\n            type: {\n                readOnly: true,\n            },\n            radio: {\n                readOnly: true,\n            },\n            htmlFieldFullEditor: {\n                readOnly: true,\n            },\n            rowChips: {\n                readOnly: true,\n                label: 'Row Chips',\n                columns: [\n                    {\n                        label: 'Value',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item.value['value'];\n                        }),\n                    },\n                    {\n                        label: 'Description',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item.value['description'];\n                        }),\n                    },\n                ],\n            },\n        };\n        // Updating form\n        this.disabledControls = formUtils.toFieldSets(MockMetaForDisabledForm, '$ USD', {}, { token: 'TOKEN', military: true }, disabledOverrides);\n        formUtils.setInitialValuesFieldsets(this.disabledControls, {\n            textbox: 'Disabled TextBox',\n            textarea: 'Disabled TextArea Disabled TextArea Disabled TextArea Disabled TextArea Disabled TextArea Disabled TextArea Disabled TextArea ',\n            select: 'disabledValue',\n            checklist: 'Disabled',\n            tiles: 'Disabled',\n            radio: 'Yes',\n            chips: ['Disabled', 'Chip'],\n            address: {\n                address1: '100 Summer St',\n                address2: 'apt 25',\n                countryID: 1,\n                state: 'Georgia',\n                city: 'Atlanta',\n                zip: '30312',\n                countryName: 'United States',\n                countryCode: 'US',\n            },\n            file: [{ name: 'yourFile.pdf', loaded: true, link: 'www.google.com', description: 'file description' }],\n            htmlFieldFullEditor: `<h1>Disabled Editor</h1><br><ui><li>Disabled</li><li>Editor</li></ui>`,\n            picker: 'Disabled Picker',\n            rowChips: [{ id: 1, value: 'Disabled Row Chip', description: 'This is a disabled Row Chip' }],\n        });\n        this.disabledForm = formUtils.toFormGroupFromFieldset(this.disabledControls);\n        this.disabledNote = 'Disabled QuickNote';\n        this.disabledQuickNote = {\n            triggers: {\n                tags: '@',\n                references: '#',\n                boos: '^',\n            },\n            options: {\n                tags: ['First', 'Second', 'Space Between'],\n                references: ['Third', 'Fourth'],\n                boos: ['Test'],\n            },\n            readOnly: true,\n            renderer: {\n                tags: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"https://www.google.com/search?q=bullhorn&oq=bullhorn\">${symbol}${item.label}</a>`;\n                }),\n                references: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a href=\"https://www.google.com/search?q=bullhorn&oq=bullhorn\">${symbol}${item.label}</a>`;\n                }),\n                boos: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<strong>${symbol}${item.label}</strong>`;\n                }),\n            },\n        };\n    }\n}\nDisabledFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'disabled-form-example',\n                template: \"<novo-dynamic-form [autoFocusFirstField]=\\\"true\\\" class=\\\"dynamic\\\" [fieldsets]=\\\"disabledControls\\\" [(form)]=\\\"disabledForm\\\" #myform></novo-dynamic-form>\\n<div class=\\\"final-value\\\">Values: {{myform.values | json}}</div>\\n<br>\\n<h5>QUICK NOTE</h5>\\n<br>\\n<novo-quick-note [(ngModel)]=\\\"disabledNote\\\" [placeholder]=\\\"placeholder\\\" [config]=\\\"disabledQuickNote\\\"></novo-quick-note>\\n<div class=\\\"data\\\">\\n  <p>Note: {{note | json}}</p>\\n</div>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDisabledFormExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    DisabledFormExample.prototype.disabledControls;\n    /** @type {?} */\n    DisabledFormExample.prototype.disabledQuickNote;\n    /** @type {?} */\n    DisabledFormExample.prototype.disabledForm;\n    /** @type {?} */\n    DisabledFormExample.prototype.disabledNote;\n    /** @type {?} */\n    DisabledFormExample.prototype.required;\n    /** @type {?} */\n    DisabledFormExample.prototype.disabled;\n    /** @type {?} */\n    DisabledFormExample.prototype.placeholder;\n    /** @type {?} */\n    DisabledFormExample.prototype.note;\n    /**\n     * @type {?}\n     * @private\n     */\n    DisabledFormExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/dynamic-form-field-sets/dynamic-form-field-sets-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Dynamic Form Field Sets Example\n */\nclass DynamicFormFieldSetsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Dynamic\n        this.dynamic = formUtils.toFieldSets(MockMeta, '$ USD', {}, { token: 'TOKEN', military: true }, {\n            customfield: {\n                template: 'custom-demo-component',\n            },\n        });\n        formUtils.setInitialValuesFieldsets(this.dynamic, { firstName: 'Initial F Name', number: 12 });\n        this.dynamicForm = formUtils.toFormGroupFromFieldset(this.dynamic);\n        // Dynamic + Fieldsets\n        this.fieldsets = formUtils.toFieldSets(MockMetaHeaders, '$ USD', {}, { token: 'TOKEN' }, {\n            customfield: {\n                template: 'custom-demo-component',\n            },\n        });\n        formUtils.setInitialValuesFieldsets(this.fieldsets, { firstName: 'Initial F Name', number: 12 });\n        this.fieldsetsForm = formUtils.toFormGroupFromFieldset(this.fieldsets);\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    save(form) {\n        if (!form.isValid) {\n            form.showOnlyRequired(true);\n        }\n        else {\n            alert('SAVING');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        this.dynamic.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.forceClear.emit();\n        }));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onChange(value) {\n        console.log('I changed!', value); // tslint:disable-line\n    }\n}\nDynamicFormFieldSetsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dynamic-form-field-sets-example',\n                template: \"<button theme=\\\"secondary\\\" *ngIf=\\\"!myFieldsetsForm.showingAllFields && !(myFieldsetsForm.allFieldsRequired || myFieldsetsForm.allFieldsNotRequired)\\\" (click)=\\\"myFieldsetsForm.showAllFields()\\\">Show All Fields</button>\\n<button theme=\\\"secondary\\\" *ngIf=\\\"!myFieldsetsForm.showingRequiredFields && !(myFieldsetsForm.allFieldsRequired || myFieldsetsForm.allFieldsNotRequired)\\\" (click)=\\\"myFieldsetsForm.showOnlyRequired(false)\\\">Show Required Fields</button>\\n<novo-dynamic-form class=\\\"dynamic\\\" layout=\\\"vertical\\\" [fieldsets]=\\\"fieldsets\\\" [(form)]=\\\"fieldsetsForm\\\" #myFieldsetsForm>\\n  <ng-template novoTemplate=\\\"custom-demo-component\\\" let-control let-form=\\\"form\\\">\\n    <custom-demo-control-example [control]=\\\"control\\\" [form]=\\\"form\\\"></custom-demo-control-example>\\n  </ng-template>\\n</novo-dynamic-form>\\n<footer class=\\\"dynamic-demo-footer\\\">\\n  <button (click)=\\\"save(myFieldsetsForm)\\\" theme=\\\"primary\\\" icon=\\\"check\\\">Save</button>\\n  <button (click)=\\\"clear()\\\" theme=\\\"secondary\\\" icon=\\\"check\\\">Clear</button>\\n</footer>\\n<div class=\\\"final-value\\\">Valid: {{myFieldsetsForm.isValid | json}}</div>\\n<div class=\\\"final-value\\\">Values: {{myFieldsetsForm.values | json}}</div>\\n<div class=\\\"final-value\\\">Updated Values: {{myFieldsetsForm.updatedValues() | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDynamicFormFieldSetsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    DynamicFormFieldSetsExample.prototype.dynamic;\n    /** @type {?} */\n    DynamicFormFieldSetsExample.prototype.dynamicForm;\n    /** @type {?} */\n    DynamicFormFieldSetsExample.prototype.fieldsets;\n    /** @type {?} */\n    DynamicFormFieldSetsExample.prototype.fieldsetsForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    DynamicFormFieldSetsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/dynamic-form/dynamic-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Dynamic Form Example\n */\nclass DynamicFormExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Dynamic\n        this.dynamic = formUtils.toFieldSets(MockMeta, '$ USD', {}, { token: 'TOKEN', military: true }, {\n            customfield: {\n                template: 'custom-demo-component',\n            },\n        });\n        formUtils.setInitialValuesFieldsets(this.dynamic, { firstName: 'Initial F Name', number: 12 });\n        this.dynamicForm = formUtils.toFormGroupFromFieldset(this.dynamic);\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    save(form) {\n        if (!form.isValid) {\n            form.showOnlyRequired(true);\n        }\n        else {\n            alert('SAVING');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        this.dynamic.forEach((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.forceClear.emit();\n        }));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onChange(value) {\n        console.log('I changed!', value); // tslint:disable-line\n    }\n}\nDynamicFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dynamic-form-example',\n                template: \"<button theme=\\\"secondary\\\" *ngIf=\\\"!myform.showingAllFields && !(myform.allFieldsRequired || myform.allFieldsNotRequired)\\\" (click)=\\\"myform.showAllFields()\\\">Show All Fields</button>\\n<button theme=\\\"secondary\\\" *ngIf=\\\"!myform.showingRequiredFields && !(myform.allFieldsRequired || myform.allFieldsNotRequired)\\\" (click)=\\\"myform.showOnlyRequired(false)\\\">Show Required Fields</button>\\n<novo-dynamic-form [autoFocusFirstField]=\\\"true\\\" class=\\\"dynamic\\\" [fieldsets]=\\\"dynamic\\\" [(form)]=\\\"dynamicForm\\\" #myform></novo-dynamic-form>\\n<footer class=\\\"dynamic-demo-footer\\\">\\n    <button (click)=\\\"save(myform)\\\" theme=\\\"primary\\\" icon=\\\"check\\\">Save</button>\\n    <button (click)=\\\"clear()\\\" theme=\\\"secondary\\\" icon=\\\"check\\\">Clear</button>\\n</footer>\\n<div class=\\\"final-value\\\">Valid: {{myform.isValid | json}}</div>\\n<div class=\\\"final-value\\\">Values: {{myform.values | json}}</div>\\n<div class=\\\"final-value\\\">Updated Values: {{myform.updatedValues() | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDynamicFormExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    DynamicFormExample.prototype.dynamic;\n    /** @type {?} */\n    DynamicFormExample.prototype.dynamicForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    DynamicFormExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/enable-disable-all-fields-in-form/enable-disable-all-fields-in-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Enable/Disable all Fields in Form Example\n */\nclass EnableDisableAllFieldsInFormExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.disabled = false;\n        // Updating form\n        this.controls = formUtils.toFieldSets(MockMetaForForm, '$ USD', {}, { token: 'TOKEN', military: true }, {});\n        formUtils.setInitialValuesFieldsets(this.controls, {\n            select: 'disabledValue',\n        });\n        this.form = formUtils.toFormGroupFromFieldset(this.controls);\n    }\n    /**\n     * @return {?}\n     */\n    toggleEnableDisableAllFields() {\n        this.disabled = !this.disabled;\n        if (this.disabled) {\n            this.form.enableAllControls();\n        }\n        else {\n            this.form.disableAllControls();\n        }\n    }\n}\nEnableDisableAllFieldsInFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'enable-disable-all-fields-in-form-example',\n                template: \"<novo-dynamic-form class=\\\"dynamic\\\" [fieldsets]=\\\"controls\\\" [(form)]=\\\"form\\\" #myform></novo-dynamic-form>\\n<button theme=\\\"primary\\\" (click)=\\\"toggleEnableDisableAllFields()\\\">Toggle fields</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nEnableDisableAllFieldsInFormExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    EnableDisableAllFieldsInFormExample.prototype.controls;\n    /** @type {?} */\n    EnableDisableAllFieldsInFormExample.prototype.form;\n    /** @type {?} */\n    EnableDisableAllFieldsInFormExample.prototype.disabled;\n    /** @type {?} */\n    EnableDisableAllFieldsInFormExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/file-input-controls/file-input-controls-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title File Input Controls Example\n */\nclass FileInputControlsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // custom upload validation\n        this.message = '';\n        // File input controls\n        this.fileControl = new FileControl({ key: 'file', name: 'myfile', label: 'File', tooltip: 'Files Control' });\n        this.multiFileControl = new FileControl({\n            key: 'files',\n            name: 'myfiles',\n            label: 'Multiple Files',\n            tooltip: 'Multiple Files',\n            multiple: true,\n            layoutOptions: { order: 'displayFilesBelow', download: true, edit: true, customActions: true, labelStyle: 'no-box' },\n            value: [{ name: 'yourFile.pdf', loaded: true, link: 'www.google.com', description: 'file description' }],\n        });\n        this.fileForm = formUtils.toFormGroup([this.fileControl, this.multiFileControl]);\n        this.customValidationFileControl = new FileControl({\n            key: 'customValidationFiles',\n            name: 'customValidationFiles',\n            label: 'Custom Validation',\n            tooltip: 'Custom Validation Multiple Files',\n            multiple: true,\n            layoutOptions: {\n                order: 'displayFilesBelow',\n                download: true,\n                edit: true,\n                customActions: false,\n                customValidation: [{ action: 'upload', fn: this.checkFileSize.bind(this) }],\n            },\n        });\n        this.customValidationFileForm = formUtils.toFormGroup([this.customValidationFileControl]);\n        this.multiFileControlMixRemove = new FileControl({\n            key: 'mixDeleteFiles',\n            name: 'mymixDeleteFiles',\n            label: 'Multiple Files - Delete New Only',\n            tooltip: 'Multiple Files - Delete New Only',\n            multiple: true,\n            layoutOptions: {\n                order: 'displayFilesBelow',\n                labelStyle: 'no-box',\n                download: true,\n                edit: false,\n                removable: false,\n                removableWhenNew: true,\n            },\n            value: [{ name: 'yourFile.pdf', loaded: true, link: 'www.google.com', description: 'file description' }],\n        });\n        this.fileForm = formUtils.toFormGroup([this.fileControl, this.multiFileControl, this.multiFileControlMixRemove]);\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    handleEdit(file) {\n        console.log('This is an Edit Action!', file); // tslint:disable-line\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    handleSave(file) {\n        console.log('This is a Save Action!', file); // tslint:disable-line\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    handleDelete(file) {\n        console.log('This is a Delete Action!', file); // tslint:disable-line\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    handleUpload(files) {\n        console.log('This is an upload Action!', files); // tslint:disable-line\n    }\n    /**\n     * @param {?} fileList\n     * @return {?}\n     */\n    checkFileSize(fileList) {\n        /** @type {?} */\n        const maxSizeKb = 5120;\n        for (const file of fileList) {\n            if (file.size > maxSizeKb * 1024) {\n                this.message = 'File is bigger than the allowed 5MB';\n                return false;\n            }\n        }\n        return true;\n    }\n}\nFileInputControlsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'file-input-controls-example',\n                template: \"<!--Check out the FormDemo.js for more information!-->\\n<novo-form [form]=\\\"fileForm\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"fileForm\\\" [control]=\\\"fileControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"fileForm\\\" [control]=\\\"multiFileControl\\\" (edit)=\\\"handleEdit($event)\\\" (save)=\\\"handleSave($event)\\\" (delete)=\\\"handleDelete($event)\\\" (upload)=\\\"handleUpload($event)\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"fileForm\\\" [control]=\\\"multiFileControlMixRemove\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Value: {{fileForm.value | json}}</div>\\n<br />\\n<br />\\n<novo-form layout=\\\"vertical\\\" [form]=\\\"customValidationFileForm\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"customValidationFileForm\\\" [control]=\\\"customValidationFileControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div>{{ message }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFileInputControlsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FileInputControlsExample.prototype.fileControl;\n    /** @type {?} */\n    FileInputControlsExample.prototype.multiFileControl;\n    /** @type {?} */\n    FileInputControlsExample.prototype.multiFileControlMixRemove;\n    /** @type {?} */\n    FileInputControlsExample.prototype.fileForm;\n    /** @type {?} */\n    FileInputControlsExample.prototype.message;\n    /** @type {?} */\n    FileInputControlsExample.prototype.customValidationFileControl;\n    /** @type {?} */\n    FileInputControlsExample.prototype.customValidationFileForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    FileInputControlsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/picker-controls/picker-controls-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// import { MockMeta, MockMetaHeaders } from './MockMeta';\n/**\n * \\@title Picker Controls Example\n */\nclass PickerControlsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        /** @type {?} */\n        const fruits = ['Apples', 'Oranges', 'Bananas', 'Grapes'];\n        /** @type {?} */\n        const cities = [\n            {\n                id: 1,\n                name: 'Boston',\n            },\n            {\n                id: 2,\n                name: 'New York',\n            },\n            {\n                id: 3,\n                name: 'Washington D.C.',\n            },\n            {\n                id: 4,\n                name: 'Orlando',\n            },\n            {\n                id: 5,\n                name: 'Houston',\n            },\n            {\n                id: 6,\n                name: 'Chicago',\n            },\n        ];\n        /** @type {?} */\n        const states = [\n            {\n                value: 'ME',\n                label: 'Maine',\n            },\n            {\n                value: 'MD',\n                label: 'Maryland',\n            },\n            {\n                value: 'MA',\n                label: 'Massachusetts',\n            },\n            {\n                value: 'MI',\n                label: 'Michigan',\n            },\n            {\n                value: 'MN',\n                label: 'Minnesota',\n            },\n            {\n                value: 'MS',\n                label: 'Mississippi',\n            },\n            {\n                value: 'MO',\n                label: 'Missouri',\n            },\n            {\n                value: 'MT',\n                label: 'Montana',\n            },\n        ];\n        // Picker controls\n        this.singlePickerControl = new PickerControl({\n            key: 'singlePicker',\n            tooltip: 'Single',\n            label: 'Single',\n            config: { options: ['One', 'Two', 'Three'] },\n        });\n        this.multiPickerControl = new PickerControl({\n            key: 'multiPicker',\n            tooltip: 'Multiple',\n            label: 'Multiple',\n            multiple: true,\n            config: { options: ['One', 'Two', 'Three'], type: 'candidate' },\n        });\n        this.multiPickerControlWithMaxlength = new PickerControl({\n            key: 'multiPickerWithMaxlength',\n            tooltip: 'Multiple With Maxlength',\n            label: 'Multiple With Maxlength',\n            multiple: true,\n            maxlength: 2,\n            config: {\n                options: fruits,\n                type: 'candidate',\n            },\n        });\n        this.multiPickerControlWithMaxlengthAndPreselects = new PickerControl({\n            key: 'multiPickerControlWithMaxlengthAndPreselects',\n            tooltip: 'Multiple With Maxlength and Preselects',\n            label: 'Multiple With Maxlength & Preselects',\n            multiple: true,\n            maxlength: 2,\n            config: {\n                options: fruits,\n                type: 'candidate',\n            },\n        });\n        this.entityMultiPickerControl = new PickerControl({\n            key: 'entityMultiPicker',\n            label: 'Entities',\n            required: true,\n            readOnly: false,\n            multiple: true,\n            tooltip: 'Entities',\n            config: {\n                resultsTemplate: EntityPickerResults,\n                previewTemplate: EntityPickerResult,\n                format: '$title',\n                options: [\n                    {\n                        title: 'Central Bank',\n                        name: 'Central Bank',\n                        email: 'new-bank-inquiries@centralbank.com',\n                        phone: '(651) 555-1234',\n                        address: { city: 'Washington', state: 'DC' },\n                        searchEntity: 'ClientCorporation',\n                    },\n                    {\n                        title: 'Federal Bank',\n                        name: 'Federal Bank',\n                        email: 'info@federalbank.com',\n                        phone: '(545) 555-1212',\n                        address: { city: 'Arlington', state: 'VA' },\n                        searchEntity: 'ClientCorporation',\n                    },\n                    {\n                        title: 'Aaron Burr',\n                        firstName: 'Aaron',\n                        lastName: 'Burr',\n                        name: 'Aaron Burr',\n                        companyName: 'Central Bank',\n                        email: 'aburr@centralbank.com',\n                        phone: '(333) 555-3434',\n                        address: { city: 'Washington', state: 'DC' },\n                        status: 'Hold',\n                        searchEntity: 'ClientContact',\n                    },\n                    {\n                        title: 'Alexander Hamilton',\n                        firstName: 'Alexander',\n                        lastName: 'Hamilton',\n                        name: 'Alexander Hamilton',\n                        companyName: 'Federal Bank',\n                        email: 'ahamilton@federalbank.com',\n                        phone: '(333) 555-2222',\n                        address: { city: 'Arlington', state: 'VA' },\n                        status: 'Active',\n                        searchEntity: 'ClientContact',\n                    },\n                    {\n                        title: 'Ben Franklin',\n                        firstName: 'Ben',\n                        lastName: 'Franklin',\n                        name: 'Ben Franklin',\n                        email: 'bfranklin@gmail.com',\n                        phone: '(654) 525-2222',\n                        address: { city: 'Boston', state: 'MA' },\n                        status: 'Interviewing',\n                        searchEntity: 'Candidate',\n                    },\n                    {\n                        title: 'Thomas Jefferson',\n                        firstName: 'Thomas',\n                        lastName: 'Jefferson',\n                        name: 'Thomas Jefferson',\n                        email: 'tjefferson@usa.com',\n                        phone: '(123) 542-1234',\n                        address: { city: 'Arlington', state: 'VA' },\n                        status: 'New Lead',\n                        searchEntity: 'Candidate',\n                    },\n                ],\n            },\n        });\n        this.rowMultiPickerControl = new PickerControl({\n            key: 'rowMultiPickerControl',\n            tooltip: 'Multiple Rows',\n            label: 'Multiple Rows',\n            multiple: true,\n            config: {\n                format: '$name',\n                options: cities,\n                type: 'candidate',\n                columns: [\n                    {\n                        label: 'Name',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item['label'];\n                        }),\n                    },\n                    {\n                        label: 'Id',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item.value['id'];\n                        }),\n                    },\n                ],\n            },\n        });\n        this.rowMultiPickerControlWithMaxlength = new PickerControl({\n            key: 'rowMultiPickerControlWithMaxlength',\n            tooltip: 'Multiple Rows With Maxlength',\n            label: 'Multiple Rows With Maxlength',\n            multiple: true,\n            maxlength: 4,\n            config: {\n                format: '$name',\n                options: cities,\n                type: 'candidate',\n                columns: [\n                    {\n                        label: 'Name',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item['label'];\n                        }),\n                    },\n                    {\n                        label: 'Id',\n                        data: (/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        (item) => {\n                            return item.value['id'];\n                        }),\n                    },\n                ],\n            },\n        });\n        this.textPickerWithGetLabels = new PickerControl({\n            key: 'textPickerWithGetLabels',\n            tooltip: 'Text Value Picker with getLabels()',\n            label: 'Text Value Picker with getLabels()',\n            multiple: false,\n            config: {\n                field: 'value',\n                format: '$label',\n                options: states,\n                useGetLabels: true,\n                getLabels: (/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                (value) => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @return {?}\n                     */\n                    (resolve) => {\n                        states.forEach((/**\n                         * @param {?} state\n                         * @return {?}\n                         */\n                        (state) => {\n                            if (state.value === value) {\n                                resolve(state);\n                            }\n                        }));\n                    }));\n                }),\n            },\n        });\n        /** @type {?} */\n        const controls = [\n            this.singlePickerControl,\n            this.multiPickerControl,\n            this.entityMultiPickerControl,\n            this.multiPickerControlWithMaxlength,\n            this.multiPickerControlWithMaxlengthAndPreselects,\n            this.rowMultiPickerControl,\n            // this.rowMultiPickerControlWithMaxlength,\n            this.textPickerWithGetLabels,\n        ];\n        formUtils.setInitialValues(controls, {\n            entityMultiPicker: [\n                {\n                    title: 'Federal Bank',\n                    name: 'Federal Bank',\n                    email: 'info@federalbank.com',\n                    phone: '(545) 555-1212',\n                    address: { city: 'Arlington', state: 'VA' },\n                    searchEntity: 'ClientCorporation',\n                },\n            ],\n            multiPickerControlWithMaxlengthAndPreselects: ['Oranges', 'Bananas'],\n            rowMultiPickerControlWithMaxlength: [\n                {\n                    id: 1,\n                    name: 'Boston',\n                },\n                {\n                    id: 5,\n                    name: 'Houston',\n                },\n                {\n                    id: 6,\n                    name: 'Chicago',\n                },\n            ],\n            textPickerWithGetLabels: 'MD',\n        });\n        this.pickerForm = formUtils.toFormGroup(controls);\n    }\n}\nPickerControlsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'picker-controls-example',\n                template: \"<!--Check out the FormDemo.js for more information!-->\\n<novo-form [form]=\\\"pickerForm\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"singlePickerControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"multiPickerControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"entityMultiPickerControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"rowMultiPickerControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"multiPickerControlWithMaxlength\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"multiPickerControlWithMaxlengthAndPreselects\\\"></novo-control>\\n    </div>\\n    <!-- Row picker with maxlength is implemented but currently turned off because it is not being used and there was no UI created for it.\\n         To turn it back on, add '[maxlength]=\\\"control?.maxlength\\\"' to ControlTemplate.ts\\n    <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"rowMultiPickerControlWithMaxlength\\\"></novo-control>\\n    </div-->\\n    <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"pickerForm\\\" [control]=\\\"textPickerWithGetLabels\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Value: {{pickerForm.value | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nPickerControlsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    PickerControlsExample.prototype.singlePickerControl;\n    /** @type {?} */\n    PickerControlsExample.prototype.multiPickerControl;\n    /** @type {?} */\n    PickerControlsExample.prototype.multiPickerControlWithMaxlength;\n    /** @type {?} */\n    PickerControlsExample.prototype.multiPickerControlWithMaxlengthAndPreselects;\n    /** @type {?} */\n    PickerControlsExample.prototype.entityMultiPickerControl;\n    /** @type {?} */\n    PickerControlsExample.prototype.rowMultiPickerControl;\n    /** @type {?} */\n    PickerControlsExample.prototype.rowMultiPickerControlWithMaxlength;\n    /** @type {?} */\n    PickerControlsExample.prototype.textPickerWithGetLabels;\n    /** @type {?} */\n    PickerControlsExample.prototype.pickerForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    PickerControlsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/text-based-controls/text-based-controls-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// import { MockMeta, MockMetaHeaders } from './MockMeta';\n/**\n * \\@title Text Based Controls Example\n */\nclass TextBasedControlsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Quick note config;\n        this.quickNoteConfig = {\n            triggers: {\n                tags: '@',\n                references: '#',\n                boos: '^',\n            },\n            options: {\n                tags: ['First', 'Second'],\n                references: ['Third', 'Fourth'],\n                boos: ['Test'],\n            },\n            renderer: {\n                tags: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a class=\"tag\">${symbol}${item.label}</a>`;\n                }),\n                references: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<a class=\"tag\">${symbol}${item.label}</a>`;\n                }),\n                boos: (/**\n                 * @param {?} symbol\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (symbol, item) => {\n                    return `<strong>${symbol}${item.label}</strong>`;\n                }),\n            },\n        };\n        // Text-based Controls\n        this.textControl = new TextBoxControl({\n            key: 'text',\n            label: 'Text Box',\n            tooltip: 'Textbox',\n            readOnly: true,\n            value: 'HI',\n            required: true,\n        });\n        this.textAreaControl = new TextAreaControl({\n            key: 'textarea',\n            label: 'Text Area',\n            tooltip: 'Text Area',\n            value: 'Bro ipsum dolor sit amet yard sale saddle pipe, poaching cork 360 punter ACL back country cornice Whistler.  Avie Ski taco mitt, manny first tracks yard sale caballerial heli fatty.  Epic dope grab, brain bucket japan air wack bowl  mute heli corn Snowboard Whistler giblets table top.  Crunchy Snowboard washboard line grab reverse camber.  Bump epic granny gear heli sketching wheelie huckfest face plant crank pow pow chain ring  dirtbag washboard.  Flow endo ski bum sucker hole, death cookies manny schwag pipe.  Dope heli stomp yard sale, saddle shreddin booter gear jammer grom bonk OTB brain bucket bonk japan air Whistler.Clipless pow pow pow, core shot corn butter bomb hole glades face plant dust on crust.  Poaching park face shots bump, Bike cornice death cookies.  Avie cruiser sucker hole face plant switch.  ACL snake bite bonk, twin tip euro rig nose press McTwist.  Ripping skinny trucks shreddin.  Apres pow line euro sharkbite gapers lid.Snake bite derailleur wheels bomb hole.  Huck apres steeps BB first tracks bowl  daffy park euro park rat euro.  North shore death cookies snake bite carve, freshies dirtbag huck reverse camber hellflip frozen chicken heads apres taco glove gnar face shots bro.  Ride flow twister cornice afterbang saddle first tracks rig berm bro face shots.  Ride stoked wack park twin tip trucks chillax shuttle Whistler gondy laps.  Grind berm schwag, table top face shots steed liftie afterbang taco glove frozen chicken heads free ride clean huck.  Rock-ectomy white room nose press avie.Frozen chicken heads gondy bail travel huckfest big ring phat clean.  Taco couloir piste derailleur wack scream backside steeps groomer glades pipe gondy switch skid lid.  Brain bucket betty bowl, moguls gondy Whistler air hardtail.  Flow euro granny gear, McTwist cruiser bonk grom chain suck.  Trucks line huck, stomp ripper washboard euro corduroy death cookies yard sale dope face plant shreddin chain suck.ACL T-bar hellflip, first tracks gondy hardtail rip wack dust on crust schwag frontside couloir laps presta backside.  Road rash Ski ski bum gnar wack flow carve lid.  Nose white room ollie rail table top grom back country washboard dust on crust chillax gear jammer bro stomp stoked.  Lid wheels nose press frontside, park ACL dirtbag huck epic bowl  taco glove OTB.  Fatty mute whip stunt, Whistler McTwist stoked Bike.  Endo brain bucket crank dust on crust back country line ollie gapers afterbang bump stoked taco road rash granny gear.  Deck dirtbag 360 gnar snake bite couloir Bike corduroy frontside crank lid bro.Air tele schwag ollie, hardtail betty crunchy epic  face shots.  Travel flowy misty huck Bike 180 schwag drop hellflip ripping bunny slope carbon roadie tele bail.  Cornice sharkbite 360 frozen chicken heads dope hellflip clipless.  Switch sketching grind brain bucket stunt taco daffy OTB ride liftie brain bucket air huckfest park 360.',\n        });\n        this.emailControl = new TextBoxControl({ type: 'email', key: 'email', label: 'Email', tooltip: 'Email' });\n        this.numberControl = new TextBoxControl({ type: 'number', key: 'number', tooltip: 'Number', label: 'Number' });\n        this.currencyControl = new TextBoxControl({\n            type: 'currency',\n            key: 'currency',\n            tooltip: 'Currency',\n            label: 'Currency',\n            currencyFormat: '$ USD',\n        });\n        this.floatControl = new TextBoxControl({ type: 'float', key: 'float', tooltip: 'Float', label: 'Float' });\n        this.percentageControl = new TextBoxControl({\n            type: 'percentage',\n            key: 'percentage',\n            tooltip: 'Percent',\n            label: 'Percent',\n            required: true,\n        });\n        this.quickNoteControl = new QuickNoteControl({\n            key: 'note',\n            label: 'Note',\n            config: this.quickNoteConfig,\n            required: true,\n            tooltip: 'Quicknote',\n        });\n        this.aceEditorControl = new AceEditorControl({ key: 'ace', label: 'CODE', tooltip: 'CODE', value: 'var i = 0;' });\n        this.textForm = formUtils.toFormGroup([\n            this.textControl,\n            this.emailControl,\n            this.textAreaControl,\n            this.numberControl,\n            this.currencyControl,\n            this.floatControl,\n            this.percentageControl,\n            this.quickNoteControl,\n            this.aceEditorControl,\n        ]);\n    }\n}\nTextBasedControlsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'text-based-controls-example',\n                template: \"<!--Check out the FormDemo.js for more information!-->\\n<button theme=\\\"secondary\\\" (click)=\\\"form.showAllFields()\\\">Show All Fields</button>\\n<button theme=\\\"secondary\\\" (click)=\\\"form.showOnlyRequired(false)\\\">Show Required Fields</button>\\n<br/>\\n<br/>\\n<novo-form [form]=\\\"textForm\\\" #form>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"textControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [autoFocus]=\\\"true\\\" [form]=\\\"textForm\\\" [control]=\\\"emailControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"numberControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"currencyControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"floatControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"percentageControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"textAreaControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"quickNoteControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"textForm\\\" [control]=\\\"aceEditorControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Value: {{textForm.value | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nTextBasedControlsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    TextBasedControlsExample.prototype.quickNoteConfig;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.textControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.emailControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.numberControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.currencyControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.aceEditorControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.floatControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.percentageControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.quickNoteControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.textAreaControl;\n    /** @type {?} */\n    TextBasedControlsExample.prototype.textForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    TextBasedControlsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/updating-form/updating-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Updating Form Example\n */\nclass UpdatingFormExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.required = false;\n        this.disabled = true;\n        // Text-based Controls\n        this.textControl = new TextBoxControl({\n            key: 'text',\n            label: 'Text Box',\n            tooltip: 'Textbox',\n            readOnly: true,\n            value: 'HI',\n            required: true,\n        });\n        this.percentageControl = new TextBoxControl({\n            type: 'percentage',\n            key: 'percentage',\n            tooltip: 'Percent',\n            label: 'Percent',\n            required: true,\n        });\n        // Check box controls\n        this.checkControl = new CheckboxControl({ key: 'check', tooltip: 'Checkbox', label: 'Checkbox', checkboxLabel: 'Checkbox' });\n        // Picker controls\n        this.singlePickerControl = new PickerControl({\n            key: 'singlePicker',\n            tooltip: 'Single',\n            label: 'Single',\n            config: { options: ['One', 'Two', 'Three'] },\n        });\n        // File input controls\n        this.fileControl = new FileControl({ key: 'file', name: 'myfile', label: 'File', tooltip: 'Files Control' });\n        // Updating form\n        this.updatingFormControls = [this.textControl, this.percentageControl, this.checkControl, this.singlePickerControl, this.fileControl];\n        this.updatingForm = formUtils.toFormGroup(this.updatingFormControls);\n    }\n    /**\n     * @return {?}\n     */\n    toggleEnabled() {\n        this.disabled = !this.disabled;\n        Object.keys(this.updatingForm.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            if (this.disabled) {\n                this.updatingForm.controls[key].enable();\n            }\n            else {\n                this.updatingForm.controls[key].disable();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    toggleRequired() {\n        this.required = !this.required;\n        Object.keys(this.updatingForm.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            this.updatingForm.controls[key].setRequired(this.required);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    markAsInvalid() {\n        Object.keys(this.updatingForm.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            this.updatingForm.controls[key].markAsInvalid('Custom Error!');\n        }));\n    }\n}\nUpdatingFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'updating-form-example',\n                template: \"<button theme=\\\"secondary\\\" (click)=\\\"toggleEnabled()\\\">Toggle Enabled</button>\\n<button theme=\\\"secondary\\\" (click)=\\\"toggleRequired()\\\">Toggle Required</button>\\n<button theme=\\\"secondary\\\" (click)=\\\"markAsInvalid()\\\">Mark As Invalid</button>\\n<br/><br/>\\n<novo-dynamic-form layout=\\\"vertical\\\" [controls]=\\\"updatingFormControls\\\" [(form)]=\\\"updatingForm\\\" #updatingFormRef></novo-dynamic-form>\\n<div class=\\\"final-value\\\">Valid: {{updatingFormRef.isValid | json}}</div>\\n<div class=\\\"final-value\\\">Values: {{updatingFormRef.values | json}}</div>\\n<div class=\\\"final-value\\\">Updated Values: {{updatingFormRef.updatedValues() | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nUpdatingFormExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    UpdatingFormExample.prototype.textControl;\n    /** @type {?} */\n    UpdatingFormExample.prototype.percentageControl;\n    /** @type {?} */\n    UpdatingFormExample.prototype.checkControl;\n    /** @type {?} */\n    UpdatingFormExample.prototype.fileControl;\n    /** @type {?} */\n    UpdatingFormExample.prototype.singlePickerControl;\n    /** @type {?} */\n    UpdatingFormExample.prototype.updatingForm;\n    /** @type {?} */\n    UpdatingFormExample.prototype.updatingFormControls;\n    /** @type {?} */\n    UpdatingFormExample.prototype.required;\n    /** @type {?} */\n    UpdatingFormExample.prototype.disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    UpdatingFormExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/form/vertical-dynamic-form/vertical-dynamic-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Vertical Dynamic Form Example\n */\nclass VerticalDynamicFormExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        // Dynamic\n        this.dynamicVertical = formUtils.toControls(MockMeta, '$ USD', {}, { token: 'TOKEN', military: true });\n        formUtils.setInitialValues(this.dynamicVertical, { number: 0, firstName: 'Bobby Flay' });\n        this.dynamicVerticalForm = formUtils.toFormGroup(this.dynamicVertical);\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    save(form) {\n        if (!form.isValid) {\n            form.showOnlyRequired(true);\n        }\n        else {\n            alert('SAVING');\n        }\n    }\n}\nVerticalDynamicFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'vertical-dynamic-form-example',\n                template: \"<button theme=\\\"secondary\\\" (click)=\\\"nomyform.showAllFields()\\\">Show All Fields</button>\\n<button theme=\\\"secondary\\\" (click)=\\\"nomyform.showOnlyRequired(false)\\\">Show Required Fields</button>\\n<novo-dynamic-form layout=\\\"vertical\\\" class=\\\"dynamic\\\" [controls]=\\\"dynamicVertical\\\" [(form)]=\\\"dynamicVerticalForm\\\" #nomyform>\\n  <ng-template novoTemplate=\\\"custom-demo-component\\\" let-control let-form=\\\"form\\\">\\n    <custom-demo-control-example [control]=\\\"control\\\" [form]=\\\"form\\\"></custom-demo-control-example>\\n  </ng-template>\\n</novo-dynamic-form>\\n<div class=\\\"final-value\\\">Valid: {{nomyform.isValid | json}}</div>\\n<div class=\\\"final-value\\\">Values: {{nomyform.values | json}}</div>\\n<div class=\\\"final-value\\\">Updated Values: {{nomyform.updatedValues() | json}}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nVerticalDynamicFormExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    VerticalDynamicFormExample.prototype.dynamicVertical;\n    /** @type {?} */\n    VerticalDynamicFormExample.prototype.dynamicVerticalForm;\n    /** @type {?} */\n    VerticalDynamicFormExample.prototype.fieldsets;\n    /** @type {?} */\n    VerticalDynamicFormExample.prototype.fieldsetsForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    VerticalDynamicFormExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/multi-picker/basic-multi-picker/basic-multi-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Multi Picker Example\n */\nclass BasicMultiPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.value = { states: ['Alabama'], collaborators: [1, 2, 3, 4] };\n        this.types = [{ value: 'states', singular: 'state' }, { value: 'collaborators', singular: 'collaborator' }];\n        /** @type {?} */\n        const states = [\n            'Alabama',\n            'Alaska',\n            'Arizona',\n            'Arkansas',\n            'California',\n            'Colorado',\n            'Connecticut',\n            'Delaware',\n            'Florida',\n            'Georgia',\n            'Hawaii',\n            'Idaho',\n            'Illinois',\n            'Indiana',\n            'Iowa',\n            'Kansas',\n            'Kentucky',\n            'Louisiana',\n            'Maine',\n            'Maryland',\n            'Massachusetts',\n            'Michigan',\n            'Minnesota',\n            'Mississippi',\n            'Missouri',\n            'Montana',\n            'Nebraska',\n            'Nevada',\n            'New Hampshire',\n            'New Jersey',\n            'New Mexico',\n            'New York',\n            'North Dakota',\n            'North Carolina',\n            'Ohio',\n            'Oklahoma',\n            'Oregon',\n            'Pennsylvania',\n            'Rhode Island',\n            'South Carolina',\n            'South Dakota',\n            'Tennessee',\n            'Texas',\n            'Utah',\n            'Vermont',\n            'Virginia',\n            'Washington',\n            'West Virginia',\n            'Wisconsin',\n            'Wyoming',\n        ];\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.staticDemo = {\n            options: [\n                { type: 'collaborators', data: collaborators, format: '$firstName $lastName', field: 'id' },\n                { type: 'states', data: states },\n            ],\n            resultsTemplate: ChecklistPickerResults,\n            selectAllOption: true,\n        };\n    }\n    /**\n     * @param {?=} $event\n     * @return {?}\n     */\n    onChanged($event) { }\n}\nBasicMultiPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-multi-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected States: <span *ngFor=\\\"let item of value.states\\\">{{item}} </span>\\n    Selected Collaborators: <span *ngFor=\\\"let item of value.collaborators\\\">{{item}} </span></div>\\n<multi-picker\\n    [source]=\\\"staticDemo\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [types]=\\\"types\\\"\\n    [(ngModel)]=\\\"value\\\"\\n    (changed)=\\\"onChanged($event)\\\">\\n</multi-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nBasicMultiPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    BasicMultiPickerExample.prototype.placeholder;\n    /** @type {?} */\n    BasicMultiPickerExample.prototype.value;\n    /** @type {?} */\n    BasicMultiPickerExample.prototype.types;\n    /** @type {?} */\n    BasicMultiPickerExample.prototype.staticDemo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/multi-picker/nested-multi-picker/nested-multi-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Nested Multi Picker Example\n */\nclass NestedMultiPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const departments = [\n            {\n                id: 1,\n                name: 'Sales',\n            },\n            {\n                id: 2,\n                name: 'Engineering',\n            },\n            {\n                id: 3,\n                name: 'Marketing',\n            },\n            {\n                id: 4,\n                name: 'Finance',\n            },\n            {\n                id: 5,\n                name: 'Nobody Works Here',\n            },\n        ];\n        /** @type {?} */\n        const users = [\n            {\n                id: 1,\n                departments: [1, 2, 4],\n                name: 'Bob Sales/Engineering/Fin',\n            },\n            {\n                id: 2,\n                departments: [4],\n                name: 'Beth Fin',\n            },\n            {\n                id: 3,\n                departments: [2],\n                name: 'Artemis Eng',\n            },\n            {\n                id: 4,\n                departments: [1],\n                name: 'Andy Sales',\n            },\n            {\n                id: 5,\n                departments: [3],\n                name: 'Zoe Marketing',\n            },\n            {\n                id: 6,\n                departments: [4, 2],\n                name: 'Ziva Eng Fin',\n            },\n        ];\n        this.parentChild = {\n            options: [\n                { type: 'departments', data: departments, format: '$name', field: 'id', isParentOf: 'users' },\n                { type: 'users', data: users, format: '$name', field: 'id', isChildOf: 'departments' },\n            ],\n            resultsTemplate: ChecklistPickerResults,\n            selectAllOption: false,\n            strictRelationship: false,\n            chipsCount: 6,\n        };\n        this.parentChildTypes = [\n            { value: 'departments', isParentOf: true, singular: 'department' },\n            { value: 'users', isChildOf: true, singular: 'user' },\n        ];\n        this.parentChildValue = { departments: [2, 3, 4], users: [4, 5] };\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onChanged(event) { }\n}\nNestedMultiPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'nested-multi-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Departments: <span *ngFor=\\\"let item of parentChildValue.departments\\\">{{item}} </span>\\n    Selected Users: <span *ngFor=\\\"let item of parentChildValue.users\\\">{{item}} </span></div>\\n<multi-picker\\n    [source]=\\\"parentChild\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [types]=\\\"parentChildTypes\\\"\\n    [(ngModel)]=\\\"parentChildValue\\\"\\n    (changed)=\\\"onChanged($event)\\\">\\n</multi-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nNestedMultiPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    NestedMultiPickerExample.prototype.placeholder;\n    /** @type {?} */\n    NestedMultiPickerExample.prototype.parentChild;\n    /** @type {?} */\n    NestedMultiPickerExample.prototype.parentChildTypes;\n    /** @type {?} */\n    NestedMultiPickerExample.prototype.formatted;\n    /** @type {?} */\n    NestedMultiPickerExample.prototype.parentChildValue;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/async-picker/async-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Async Picker Example\n */\nclass AsyncPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.value = null;\n        this.async = {\n            enableInfiniteScroll: true,\n            options: (/**\n             * @param {?} term\n             * @param {?} page\n             * @return {?}\n             */\n            (term, page) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        /** @type {?} */\n                        const arr = [];\n                        for (let i = 0; i < 20; i++) {\n                            arr.push({ value: `Page: ${page} - Item: ${i + 1}`, label: `Page: ${page} - Item: ${i + 1}` });\n                        }\n                        resolve(arr);\n                    }), 1000);\n                }));\n            }),\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nAsyncPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'async-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-picker [config]=\\\"async\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nAsyncPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    AsyncPickerExample.prototype.placeholder;\n    /** @type {?} */\n    AsyncPickerExample.prototype.value;\n    /** @type {?} */\n    AsyncPickerExample.prototype.async;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/basic-picker/basic-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Picker Example\n */\nclass BasicPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.staticDemo = {\n            options: [\n                'Alabama',\n                'Alaska',\n                'Arizona',\n                'Arkansas',\n                'California',\n                'Colorado',\n                'Connecticut',\n                'Delaware',\n                'Florida',\n                'Georgia',\n                'Hawaii',\n                'Idaho',\n                'Illinois',\n                'Indiana',\n                'Iowa',\n                'Kansas',\n                'Kentucky',\n                'Louisiana',\n                'Maine',\n                'Maryland',\n                'Massachusetts',\n                'Michigan',\n                'Minnesota',\n                'Mississippi',\n                'Missouri',\n                'Montana',\n                'Nebraska',\n                'Nevada',\n                'New Hampshire',\n                'New Jersey',\n                'New Mexico',\n                'New York',\n                'North Dakota',\n                'North Carolina',\n                'Ohio',\n                'Oklahoma',\n                'Oregon',\n                'Pennsylvania',\n                'Rhode Island',\n                'South Carolina',\n                'South Dakota',\n                'Tennessee',\n                'Texas',\n                'Utah',\n                'Vermont',\n                'Virginia',\n                'Washington',\n                'West Virginia',\n                'Wisconsin',\n                'Wyoming',\n            ],\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nBasicPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-picker [config]=\\\"staticDemo\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicPickerExample.prototype.placeholder;\n    /** @type {?} */\n    BasicPickerExample.prototype.staticDemo;\n    /** @type {?} */\n    BasicPickerExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/custom-picker-results/custom-picker-results-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CustomPickerResults extends PickerResults {\n}\nCustomPickerResults.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-picker-results',\n                host: {\n                    class: 'active picker-results',\n                },\n                template: `\n    <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\">\n        <item-content>\n          **CUSTOM** <b [innerHtml]=\"highlight(match.label, term)\"></b>\n        </item-content>\n      </novo-list-item>\n    </novo-list>\n    <p class=\"picker-error\" *ngIf=\"hasError\">Oops! An error occured.</p>\n    <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">No results to display...</p>\n  `\n            }] }\n];\n/**\n * \\@title Custom Picker Results Example\n */\nclass CustomPickerResultsExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.custom = {\n            resultsTemplate: CustomPickerResults,\n            format: '$firstName $lastName',\n            options: collaborators,\n        };\n        this.value = null;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nCustomPickerResultsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-picker-results-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-picker [config]=\\\"custom\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCustomPickerResultsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    CustomPickerResultsExample.prototype.placeholder;\n    /** @type {?} */\n    CustomPickerResultsExample.prototype.custom;\n    /** @type {?} */\n    CustomPickerResultsExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/default-options-picker/default-options-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Default Options Picker Example\n */\nclass DefaultOptionsPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const states = [\n            'Alabama',\n            'Alaska',\n            'Arizona',\n            'Arkansas',\n            'California',\n            'Colorado',\n            'Connecticut',\n            'Delaware',\n            'Florida',\n            'Georgia',\n            'Hawaii',\n            'Idaho',\n            'Illinois',\n            'Indiana',\n            'Iowa',\n            'Kansas',\n            'Kentucky',\n            'Louisiana',\n            'Maine',\n            'Maryland',\n            'Massachusetts',\n            'Michigan',\n            'Minnesota',\n            'Mississippi',\n            'Missouri',\n            'Montana',\n            'Nebraska',\n            'Nevada',\n            'New Hampshire',\n            'New Jersey',\n            'New Mexico',\n            'New York',\n            'North Dakota',\n            'North Carolina',\n            'Ohio',\n            'Oklahoma',\n            'Oregon',\n            'Pennsylvania',\n            'Rhode Island',\n            'South Carolina',\n            'South Dakota',\n            'Tennessee',\n            'Texas',\n            'Utah',\n            'Vermont',\n            'Virginia',\n            'Washington',\n            'West Virginia',\n            'Wisconsin',\n            'Wyoming',\n        ];\n        this.defaultArrayConfig = {\n            defaultOptions: [states[0], states[1]],\n            minSearchLength: 2,\n            options: (/**\n             * @return {?}\n             */\n            () => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        resolve(states);\n                    }), 300);\n                }));\n            }),\n        };\n        this.defaultFunctionConfig = {\n            minSearchLength: 2,\n            defaultOptions: (/**\n             * @return {?}\n             */\n            () => {\n                return [states[2], states[3]];\n            }),\n            options: (/**\n             * @return {?}\n             */\n            () => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        resolve(states);\n                    }), 300);\n                }));\n            }),\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nDefaultOptionsPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'default-options-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{defaultArrayValue}}</div>\\n<novo-picker [config]=\\\"defaultArrayConfig\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"defaultArrayValue\\\"></novo-picker>\\n<br/><br/>\\n<div class=\\\"selected-value\\\">Selected Value: {{defaultFunctionValue}}</div>\\n<novo-picker [config]=\\\"defaultFunctionConfig\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"defaultFunctionValue\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nDefaultOptionsPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.placeholder;\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.defaultArrayConfig;\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.defaultFunctionConfig;\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.defaultArrayValue;\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.defaultFunctionValue;\n    /** @type {?} */\n    DefaultOptionsPickerExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/entity-picker/entity-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Entity Picker Example\n */\nclass EntityPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.entityDemo = {\n            options: collaborators,\n            format: '$firstName $lastName',\n            entityIcon: 'person',\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nEntityPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'entity-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{entity}}</div>\\n<novo-picker [config]=\\\"entityDemo\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"entity\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nEntityPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    EntityPickerExample.prototype.placeholder;\n    /** @type {?} */\n    EntityPickerExample.prototype.entityDemo;\n    /** @type {?} */\n    EntityPickerExample.prototype.entity;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/formatted-picker/formatted-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Formatted Picker Example\n */\nclass FormattedPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const collaborators = [\n            {\n                id: 1,\n                firstName: 'Brian',\n                lastName: 'Kimball',\n            },\n            {\n                id: 2,\n                firstName: 'Josh',\n                lastName: 'Godi',\n            },\n            {\n                id: 3,\n                firstName: 'Alec',\n                lastName: 'Sibilia',\n            },\n            {\n                id: 4,\n                firstName: 'Kameron',\n                lastName: 'Sween',\n            },\n        ];\n        this.formatted = {\n            field: 'id',\n            format: `$firstName $lastName`,\n            options: collaborators,\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nFormattedPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'formatted-picker-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{value}}</div>\\n<novo-picker [config]=\\\"formatted\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFormattedPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    FormattedPickerExample.prototype.placeholder;\n    /** @type {?} */\n    FormattedPickerExample.prototype.formatted;\n    /** @type {?} */\n    FormattedPickerExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/grouped-picker/grouped-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Grouped Picker Example\n */\nclass GroupedPickerExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.setupGroupedPickerDemo();\n    }\n    /**\n     * @return {?}\n     */\n    setupGroupedPickerDemo() {\n        /** @type {?} */\n        const categoryMap = new Map();\n        for (let i = 0; i < 10; i++) {\n            /** @type {?} */\n            const items = [];\n            for (let j = 0; j < 10; j++) {\n                items.push({ value: `${i}-${j}`, label: `Category ${i} - Item ${j}` });\n            }\n            categoryMap.set(`${i}`, { value: `${i}`, label: `Category ${i}`, items });\n        }\n        /** @type {?} */\n        const filterCategoryMap = new Map();\n        for (let i = 0; i < 10; i++) {\n            /** @type {?} */\n            const items = [];\n            for (let j = 0; j < 10; j++) {\n                /** @type {?} */\n                const filter = Math.random() >= 0.5;\n                items.push({ value: `${i}-${j}`, label: `Category ${i} - Item ${j} - Data - ${filter}`, data: { filter } });\n            }\n            filterCategoryMap.set(`${i}`, { value: `${i}`, label: `Category ${i}`, items });\n        }\n        this.groupedPicker1 = {\n            categoryMap,\n            resultsTemplate: GroupedMultiPickerResults,\n            displayAll: true,\n        };\n        this.groupedPicker2 = {\n            categoryMap,\n            resultsTemplate: GroupedMultiPickerResults,\n        };\n        this.groupedPicker3 = {\n            categories: [\n                { value: 'C1', label: 'Category 1' },\n                { value: 'C2', label: 'Category 2' },\n                { value: 'C3', label: 'Category 3' },\n                { value: 'C4', label: 'Category 4' },\n                { value: 'C5', label: 'Category 5' },\n            ],\n            getItemsForCategoryAsync: (/**\n             * @param {?} category\n             * @param {?} customFilter\n             * @return {?}\n             */\n            (category, customFilter) => {\n                return new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                (resolve) => {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => {\n                        resolve([\n                            { value: 'A1', label: 'Async 1' },\n                            { value: 'A2', label: 'Async 2' },\n                            { value: 'A3', label: 'Async 3' },\n                            { value: 'A4', label: 'Async 4' },\n                            { value: 'A5', label: 'Async 5' },\n                        ]);\n                    }), 1000);\n                }));\n            }),\n            resultsTemplate: GroupedMultiPickerResults,\n        };\n        this.groupedPicker4 = {\n            entityIcon: 'company',\n            categoryMap: filterCategoryMap,\n            displayAll: true,\n            placeholder: 'Filter things...',\n            customFilter: {\n                matchFunction: (/**\n                 * @param {?} item\n                 * @param {?} value\n                 * @return {?}\n                 */\n                (item, value) => {\n                    if (value) {\n                        return item.data.filter === value;\n                    }\n                    return true;\n                }),\n                defaultFilterValue: false,\n                label: 'Custom Filter!',\n            },\n            resultsTemplate: GroupedMultiPickerResults,\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nGroupedPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grouped-picker-example',\n                template: \"<h6>Basic Static Example</h6>\\n<p>Fully static data, optional \\\"all\\\" category</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedPicker1Value | json }}</div>\\n<novo-picker [config]=\\\"groupedPicker1\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedPicker1Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-picker>\\n\\n<br/>\\n<br/>\\n\\n<h6>Custom Static Example</h6>\\n<p>Fully static data, all category turned off</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedPicker2Value | json }}</div>\\n<novo-picker [config]=\\\"groupedPicker2\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedPicker2Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-picker>\\n\\n<br/>\\n<br/>\\n\\n<h6>Basic Async Example</h6>\\n<p>Category list is static (always has to be) with the items fetched via async call</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedPicker3Value | json }}</div>\\n<novo-picker [config]=\\\"groupedPicker3\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedPicker3Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-picker>\\n<br/>\\n<br/>\\n\\n<h6>Async Example w/ Custom Filter</h6>\\n<p>You can also have a custom filter, limited to just a switch</p>\\n<div class=\\\"selected-value\\\">Selected Value: {{ groupedPicker4Value | json }}</div>\\n<novo-picker [config]=\\\"groupedPicker4\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"groupedPicker4Value\\\" (changed)=\\\"onChanged($event)\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nGroupedPickerExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    GroupedPickerExample.prototype.placeholder;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker1;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker2;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker3;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker4;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker1Value;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker2Value;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker3Value;\n    /** @type {?} */\n    GroupedPickerExample.prototype.groupedPicker4Value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/picker/override-template/override-template-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Override Template Example\n */\nclass OverrideTemplateExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        /** @type {?} */\n        const states = [\n            'Alabama',\n            'Alaska',\n            'Arizona',\n            'Arkansas',\n            'California',\n            'Colorado',\n            'Connecticut',\n            'Delaware',\n            'Florida',\n            'Georgia',\n            'Hawaii',\n            'Idaho',\n            'Illinois',\n            'Indiana',\n            'Iowa',\n            'Kansas',\n            'Kentucky',\n            'Louisiana',\n            'Maine',\n            'Maryland',\n            'Massachusetts',\n            'Michigan',\n            'Minnesota',\n            'Mississippi',\n            'Missouri',\n            'Montana',\n            'Nebraska',\n            'Nevada',\n            'New Hampshire',\n            'New Jersey',\n            'New Mexico',\n            'New York',\n            'North Dakota',\n            'North Carolina',\n            'Ohio',\n            'Oklahoma',\n            'Oregon',\n            'Pennsylvania',\n            'Rhode Island',\n            'South Carolina',\n            'South Dakota',\n            'Tennessee',\n            'Texas',\n            'Utah',\n            'Vermont',\n            'Virginia',\n            'Washington',\n            'West Virginia',\n            'Wisconsin',\n            'Wyoming',\n        ];\n        this.overrideDemo = {\n            options: states,\n            overrideTemplate: '<h1>{{ match | json }}</h1>',\n        };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChanged(event) {\n        console.log('EVENT', event); // tslint:disable-line\n    }\n}\nOverrideTemplateExample.decorators = [\n    { type: Component, args: [{\n                selector: 'override-template-example',\n                template: \"<div class=\\\"selected-value\\\">Selected Value: {{ overrideValue }}</div>\\n<novo-picker [config]=\\\"overrideDemo\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"overrideValue\\\"></novo-picker>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nOverrideTemplateExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    OverrideTemplateExample.prototype.placeholder;\n    /** @type {?} */\n    OverrideTemplateExample.prototype.overrideValue;\n    /** @type {?} */\n    OverrideTemplateExample.prototype.overrideDemo;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/radio-buttons/basic-radio/basic-radio-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Radio Button Usage\n */\nclass BasicRadioExample {\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    onChange(change) {\n        console.log('Radio Change:', change); // tslint:disable-line\n    }\n}\nBasicRadioExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-radio-example',\n                template: \"<novo-radio [checked]=\\\"false\\\" name=\\\"basic\\\" value=\\\"one\\\" (change)=\\\"onChange($event)\\\">Make me anything!</novo-radio>\\n<novo-radio [checked]=\\\"true\\\" name=\\\"basic\\\" value=\\\"two\\\" (change)=\\\"onChange($event)\\\">I get transcluded in!</novo-radio>\\n<novo-radio [checked]=\\\"false\\\" name=\\\"basic\\\" value=\\\"three\\\" (change)=\\\"onChange($event)\\\">REALLY!</novo-radio>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/radio-buttons/button-radio/button-radio-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Radio Button with Buttons\n */\nclass ButtonRadioExample {\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    onChange(change) {\n        console.log('Radio Change:', change); // tslint:disable-line\n    }\n}\nButtonRadioExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-radio-example',\n                template: \"<novo-radio-group>\\n    <novo-radio button=\\\"true\\\" [checked]=\\\"false\\\" name=\\\"button\\\" value=\\\"one\\\" (change)=\\\"onChange($event)\\\" label=\\\"One\\\"></novo-radio>\\n    <novo-radio button=\\\"true\\\" [checked]=\\\"true\\\" name=\\\"button\\\" value=\\\"two\\\" (change)=\\\"onChange($event)\\\" label=\\\"Two\\\"></novo-radio>\\n    <novo-radio button=\\\"true\\\" [checked]=\\\"false\\\" name=\\\"button\\\" value=\\\"three\\\" (change)=\\\"onChange($event)\\\" label=\\\"Three\\\"></novo-radio>\\n</novo-radio-group>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/radio-buttons/icon-radio/icon-radio-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Radio Buttons with Icons\n */\nclass IconRadioExample {\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    onChange(change) {\n        console.log('Radio Change:', change); // tslint:disable-line\n    }\n}\nIconRadioExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-radio-example',\n                template: \"<novo-radio-group>\\n    <novo-radio button=\\\"true\\\" theme=\\\"icon\\\" icon=\\\"checkbox-filled\\\" name=\\\"icon\\\" value=\\\"one\\\" (change)=\\\"onChange($event)\\\"></novo-radio>\\n    <novo-radio button=\\\"true\\\" theme=\\\"icon\\\" icon=\\\"checkbox-indeterminate\\\" name=\\\"icon\\\" value=\\\"two\\\" (change)=\\\"onChange($event)\\\"></novo-radio>\\n    <novo-radio button=\\\"true\\\" theme=\\\"icon\\\" icon=\\\"checkbox-add\\\" name=\\\"icon\\\" value=\\\"three\\\" (change)=\\\"onChange($event)\\\"></novo-radio>\\n</novo-radio-group>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/radio-buttons/vertical-radio/vertical-radio-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Vertical Radio Buttons\n */\nclass VerticalRadioExample {\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    onChange(change) {\n        console.log('Radio Change:', change); // tslint:disable-line\n    }\n}\nVerticalRadioExample.decorators = [\n    { type: Component, args: [{\n                selector: 'vertical-radio-example',\n                template: \"<novo-radio vertical=\\\"true\\\" [checked]=\\\"false\\\" name=\\\"vertical\\\" value=\\\"one\\\" (change)=\\\"onChange($event)\\\">Make me anything!</novo-radio>\\n<novo-radio vertical=\\\"true\\\" [checked]=\\\"true\\\" name=\\\"vertical\\\" value=\\\"two\\\" (change)=\\\"onChange($event)\\\">I get transcluded in!</novo-radio>\\n<novo-radio vertical=\\\"true\\\" [checked]=\\\"false\\\" name=\\\"vertical\\\" value=\\\"three\\\" (change)=\\\"onChange($event)\\\">REALLY!</novo-radio>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/select/basic-select/basic-select-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Select Example\n */\nclass BasicSelectExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.options = ['Alpha', 'Bravo', 'Charlie'];\n        this.withNumbers = [\n            { label: 'One', value: 1 },\n            { label: 'Two', value: 2 },\n            { label: 'Zero', value: 0 },\n            { label: 'Four', value: 4, readOnly: true },\n        ];\n        this.withNumbersValue = 4;\n        this.withNumbersObject = { id: 4, label: 'Four' };\n        this.value = 'Bravo';\n        this.headerConfig = {\n            label: 'Add New Item',\n            placeholder: 'Enter item here',\n            onSave: this.create.bind(this),\n        };\n    }\n    /**\n     * @param {?} opt\n     * @return {?}\n     */\n    create(opt) {\n        this.options = [...this.options, opt];\n    }\n}\nBasicSelectExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-select-example',\n                template: \"<div>\\n    <label>\\n        <span class=\\\"caption\\\">Selected Value:</span> {{value}}\\n    </label>\\n    <novo-select [options]=\\\"options\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\"></novo-select>\\n</div>\\n<div>\\n    <label>\\n        <span class=\\\"caption\\\">Selected Value:</span> {{withNumbersValue}}\\n    </label>\\n    <novo-select [options]=\\\"withNumbers\\\" [(ngModel)]=\\\"withNumbersValue\\\"></novo-select>\\n</div>\\n<div>\\n    <label>\\n        <span class=\\\"caption\\\">Selected Value:</span> {{withNumbersObject.label}}\\n    </label>\\n    <novo-select [options]=\\\"withNumbers\\\" [(ngModel)]=\\\"withNumbersObject\\\"></novo-select>\\n</div>\\n<div>\\n    <label>\\n        <span class=\\\"caption\\\">Disabled State</span>\\n    </label>\\n    <novo-select [options]=\\\"options\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"value\\\" disabled></novo-select>\\n</div>\\n<div>\\n    <label>\\n        <span class=\\\"caption\\\">No Model With Header</span>\\n    </label>\\n    <novo-select [options]=\\\"options\\\" [placeholder]=\\\"placeholder\\\" [headerConfig]=\\\"headerConfig\\\"></novo-select>\\n</div>\\n\",\n                styles: [\":host{padding:20px 30px;border-top-right-radius:3px;border-top-left-radius:3px;display:flex;flex-direction:row;flex-shrink:0;flex-grow:0;align-items:flex-start;flex-wrap:wrap;transition:background 460ms ease-in-out}:host label{margin-bottom:10px;display:block}:host .caption{font-size:.9em;margin-right:5px}\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicSelectExample.prototype.placeholder;\n    /** @type {?} */\n    BasicSelectExample.prototype.options;\n    /** @type {?} */\n    BasicSelectExample.prototype.withNumbers;\n    /** @type {?} */\n    BasicSelectExample.prototype.withNumbersValue;\n    /** @type {?} */\n    BasicSelectExample.prototype.withNumbersObject;\n    /** @type {?} */\n    BasicSelectExample.prototype.value;\n    /** @type {?} */\n    BasicSelectExample.prototype.headerConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/select/long-select/long-select-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Long Select Example\n */\nclass LongSelectExample {\n    constructor() {\n        this.placeholder = 'Select...';\n        this.states = [\n            'Alabama',\n            'Alaska',\n            'Arizona',\n            'Arkansas',\n            'California',\n            'Colorado',\n            'Connecticut',\n            'Delaware',\n            'Florida',\n            'Georgia',\n            'Hawaii',\n            'Idaho',\n            'Illinois',\n            'Indiana',\n            'Iowa',\n            'Kansas',\n            'Kentucky',\n            'Louisiana',\n            'Maine',\n            'Maryland',\n            'Massachusetts',\n            'Michigan',\n            'Minnesota',\n            'Mississippi',\n            'Missouri',\n            'Montana',\n            'Nebraska',\n            'Nevada',\n            'New Hampshire',\n            'New Jersey',\n            'New Mexico',\n            'New York',\n            'North Dakota',\n            'North Carolina',\n            'Ohio',\n            'Oklahoma',\n            'Oregon',\n            'Pennsylvania',\n            'Rhode Island',\n            'South Carolina',\n            'South Dakota',\n            'Tennessee',\n            'Texas',\n            'Utah',\n            'Vermont',\n            'Virginia',\n            'Washington',\n            'West Virginia',\n            'Wisconsin',\n            'Wyoming',\n        ];\n        this.state = 'Missouri';\n    }\n}\nLongSelectExample.decorators = [\n    { type: Component, args: [{\n                selector: 'long-select-example',\n                template: \"<div>\\n    <label><span class=\\\"caption\\\">Selected Value:</span>{{state}}</label>\\n    <novo-select [options]=\\\"states\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"state\\\"></novo-select>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    LongSelectExample.prototype.placeholder;\n    /** @type {?} */\n    LongSelectExample.prototype.states;\n    /** @type {?} */\n    LongSelectExample.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/tiles/tiles-usage/tiles-usage-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tiles Usage Example\n */\nclass TilesUsageExample {\n    constructor() {\n        this.shown = false;\n        this.demoTiles = [\n            {\n                label: 'Red',\n                value: 'red',\n            },\n            {\n                label: 'Green',\n                value: 'green',\n            },\n            {\n                label: 'Disabled',\n                value: 'disabled',\n                disabled: true,\n            },\n        ];\n        this.value = 'red';\n    }\n    /**\n     * @param {?} newColorValue\n     * @return {?}\n     */\n    colorSelect(newColorValue) {\n        this.currentColor = newColorValue;\n    }\n    /**\n     * @param {?} tile\n     * @return {?}\n     */\n    disabledClicked(tile) {\n        console.log('Disabled tile clicked: ', tile); // tslint:disable-line\n    }\n    /**\n     * @param {?} tile\n     * @return {?}\n     */\n    selectedClicked(tile) {\n        console.log('Selected tile clicked: ', tile); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    toggleShown() {\n        this.shown = !this.shown;\n    }\n    /**\n     * @return {?}\n     */\n    addTile() {\n        this.demoTiles.push({\n            label: 'Blue',\n            value: 'blue',\n        });\n        this.demoTiles = [...this.demoTiles];\n    }\n}\nTilesUsageExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tiles-usage-example',\n                template: \"<novo-tiles [options]=\\\"demoTiles\\\" (onChange)=\\\"colorSelect($event)\\\" [(ngModel)]=\\\"value\\\"\\n            (onDisabledOptionClick)=\\\"disabledClicked($event)\\\"\\n            (onSelectedOptionClick)=\\\"selectedClicked($event)\\\"></novo-tiles>\\n<hr>\\n<button theme=\\\"primary\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"toggleShown()\\\">Show Tiles</button>\\n<button theme=\\\"primary\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"addTile()\\\">Add Tile</button>\\n<br/>\\n<br/>\\n<novo-tiles *ngIf=\\\"shown\\\" [options]=\\\"demoTiles\\\" (onChange)=\\\"colorSelect($event)\\\" [(ngModel)]=\\\"value\\\"></novo-tiles>\\n\\nYou have picked (output): <strong>{{ currentColor || 'No selection' }}</strong>\\nYou have picked (ngModel): <strong>{{ value || 'No selection' }}</strong>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TilesUsageExample.prototype.shown;\n    /** @type {?} */\n    TilesUsageExample.prototype.demoTiles;\n    /** @type {?} */\n    TilesUsageExample.prototype.currentColor;\n    /** @type {?} */\n    TilesUsageExample.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/address-value/address-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Address Value Example\n */\nclass AddressValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            address1: '100 Summer Street',\n            city: 'Boston',\n            state: 'MA',\n            zip: '02143',\n            country: {\n                name: 'United States',\n            },\n        };\n        this.meta = {\n            dataType: 'Address',\n            type: 'Address',\n            label: 'Address',\n            name: 'address',\n        };\n    }\n}\nAddressValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'address-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    AddressValueExample.prototype.theme;\n    /** @type {?} */\n    AddressValueExample.prototype.data;\n    /** @type {?} */\n    AddressValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/associated-value/associated-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Associated Value Example\n */\nclass AssociatedValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            id: 1,\n            firstName: 'Alice',\n            lastName: 'Wonderland',\n        };\n        this.meta = {\n            type: 'TO_ONE',\n            name: 'owner',\n            label: 'Owner',\n            associatedEntity: {\n                entity: 'CorporateUser',\n            },\n        };\n    }\n}\nAssociatedValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'associated-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    AssociatedValueExample.prototype.theme;\n    /** @type {?} */\n    AssociatedValueExample.prototype.data;\n    /** @type {?} */\n    AssociatedValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/basic-value/basic-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Value Example\n */\nclass BasicValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.MOBILE;\n        this.data = 1234567890;\n        this.meta = {\n            type: 'SCALAR',\n            name: 'phone1',\n            label: 'PH #',\n        };\n    }\n}\nBasicValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicValueExample.prototype.theme;\n    /** @type {?} */\n    BasicValueExample.prototype.data;\n    /** @type {?} */\n    BasicValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/category-value/category-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Category Value Example\n */\nclass CategoryValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            value: 'stuff',\n            label: 'Stuff Category',\n        };\n        this.meta = {\n            type: 'TO_ONE',\n            name: 'category',\n            label: 'Category',\n            associatedEntity: {\n                entity: 'Category',\n            },\n        };\n    }\n}\nCategoryValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'category-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    CategoryValueExample.prototype.theme;\n    /** @type {?} */\n    CategoryValueExample.prototype.data;\n    /** @type {?} */\n    CategoryValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/corporate-user-value/corporate-user-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Corporate User Value Example\n */\nclass CorporateUserValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            id: 123,\n            firstName: 'Jack',\n            lastName: 'White',\n        };\n        this.meta = {\n            type: 'TO_ONE',\n            name: 'user',\n            label: 'Internal User',\n            associatedEntity: {\n                entity: 'CorporateUser',\n            },\n        };\n    }\n}\nCorporateUserValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'corporate-user-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    CorporateUserValueExample.prototype.theme;\n    /** @type {?} */\n    CorporateUserValueExample.prototype.data;\n    /** @type {?} */\n    CorporateUserValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/date-time-value/date-time-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Date Time Value Example\n */\nclass DateTimeValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = new Date().getTime();\n        this.meta = {\n            type: 'SCALAR',\n            dataSpecialization: 'DATETIME',\n            label: 'Date',\n        };\n    }\n}\nDateTimeValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-time-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    DateTimeValueExample.prototype.theme;\n    /** @type {?} */\n    DateTimeValueExample.prototype.data;\n    /** @type {?} */\n    DateTimeValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/entity-list-value/entity-list-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Entity List Value Example\n */\nclass EntityListValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            data: [\n                {\n                    id: 1,\n                    firstName: 'George',\n                    lastName: 'Washington',\n                    personSubtype: 'Candidate',\n                    openLink: (/**\n                     * @param {?} data\n                     * @return {?}\n                     */\n                    (data) => { }),\n                },\n                {\n                    id: 2,\n                    firstName: 'John',\n                    lastName: 'Adams',\n                    personSubtype: 'ClientContact',\n                    openLink: (/**\n                     * @param {?} data\n                     * @return {?}\n                     */\n                    (data) => { }),\n                },\n                {\n                    id: 3,\n                    firstName: 'Abraham',\n                    lastName: 'Lincoln',\n                    personSubtype: 'Lead',\n                    openLink: (/**\n                     * @param {?} data\n                     * @return {?}\n                     */\n                    (data) => { }),\n                },\n            ],\n        };\n        this.meta = {\n            type: 'TO_MANY',\n            name: 'guests',\n            label: 'Attendees',\n            associatedEntity: {\n                entity: 'CorporateUser',\n            },\n        };\n    }\n}\nEntityListValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'entity-list-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    EntityListValueExample.prototype.theme;\n    /** @type {?} */\n    EntityListValueExample.prototype.data;\n    /** @type {?} */\n    EntityListValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/external-link-value/external-link-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Value with Extenal Links Example\n */\nclass ExternalLinkValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.MOBILE;\n        this.data = 'www.bullhorn.com';\n        this.meta = {\n            type: 'SCALAR',\n            name: 'companyUrl',\n            label: 'Company URL',\n        };\n    }\n}\nExternalLinkValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'external-link-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ExternalLinkValueExample.prototype.theme;\n    /** @type {?} */\n    ExternalLinkValueExample.prototype.data;\n    /** @type {?} */\n    ExternalLinkValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/formatter-value/formatter-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Formatter Value Example\n */\nclass FormatterValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = {\n            id: 123,\n        };\n        this.meta = {\n            type: 'SCALAR',\n            name: 'Placement',\n            label: 'Placement',\n            associatedEntity: {\n                entity: 'Placement',\n            },\n            showEntityIcon: true,\n            entityIconClass: 'candidate',\n            formatter: (/**\n             * @param {?} value\n             * @param {?} args\n             * @return {?}\n             */\n            (value, args) => {\n                return `${args.label} #${(value && value.id) || ''}`;\n            }),\n        };\n    }\n}\nFormatterValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'formatter-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    FormatterValueExample.prototype.theme;\n    /** @type {?} */\n    FormatterValueExample.prototype.data;\n    /** @type {?} */\n    FormatterValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/icon-value/icon-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Icon Value Example\n */\nclass IconValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = 'Approved';\n        this.meta = {\n            type: 'SCALAR',\n            options: [\n                {\n                    value: 'Approved',\n                    label: 'Approved',\n                },\n            ],\n            name: 'status',\n            label: 'Status',\n            icons: [\n                {\n                    iconCls: 'next',\n                    onIconClick: (/**\n                     * @param {?} data\n                     * @param {?} meta\n                     * @return {?}\n                     */\n                    (data, meta) => window.alert('hey there')),\n                },\n                {\n                    iconCls: 'close',\n                    onIconClick: (/**\n                     * @param {?} data\n                     * @param {?} meta\n                     * @return {?}\n                     */\n                    (data, meta) => window.alert('hey there')),\n                },\n            ],\n        };\n    }\n}\nIconValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    IconValueExample.prototype.theme;\n    /** @type {?} */\n    IconValueExample.prototype.data;\n    /** @type {?} */\n    IconValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: form-controls/value/multi-option-value/multi-option-value-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Multi Option Value Example\n */\nclass MultiOptionValueExample {\n    constructor() {\n        this.theme = NOVO_VALUE_THEME.DEFAULT;\n        this.data = ['1', '3'];\n        this.meta = {\n            name: 'status',\n            label: 'Status',\n            inputType: 'SELECT',\n            options: [\n                { label: 'New Lead', value: '1' },\n                { label: 'Old Lead', value: '2' },\n                { label: 'Active', value: '3' },\n                { label: 'Archived', value: '4' },\n            ],\n        };\n    }\n}\nMultiOptionValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'multi-option-value-example',\n                template: \"<novo-value [data]=\\\"data\\\" [meta]=\\\"meta\\\" [theme]=\\\"theme\\\"></novo-value>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    MultiOptionValueExample.prototype.theme;\n    /** @type {?} */\n    MultiOptionValueExample.prototype.data;\n    /** @type {?} */\n    MultiOptionValueExample.prototype.meta;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/cards/basic-card/basic-card-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Cards\n */\nclass BasicCardExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        // Config for demos\n        this.refresh = true;\n        this.close = true;\n        this.move = true;\n        this.padding = true;\n        this.loading = true;\n        this.start = 2000;\n        this.end = 2005;\n        this.created = 1995;\n        this.bestLabel = 'BEST TIME TO CONTACT';\n        this.bestTime = '1-PM';\n        this.bestDay = 'Friday';\n        this.donutValue = 0.5;\n        this.donutColor = '#662255';\n        this.donutLabel = 'Probability of Win %';\n    }\n    /**\n     * @return {?}\n     */\n    onClose() {\n        this.toaster.alert({\n            theme: 'info',\n            title: 'Cards',\n            message: 'Close Clicked!',\n        });\n    }\n    /**\n     * @return {?}\n     */\n    onRefresh() {\n        this.toaster.alert({\n            theme: 'success',\n            title: 'Cards',\n            message: 'Refresh Clicked!',\n        });\n    }\n    /**\n     * @return {?}\n     */\n    toggleLoading() {\n        this.loading = !this.loading;\n    }\n    /**\n     * @return {?}\n     */\n    toggleMessage() {\n        if (!this.message) {\n            this.message = 'NO DATA!';\n            this.messageIcon = 'email';\n        }\n        else {\n            this.message = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    singleAction() {\n        window.alert('HELLO!');\n    }\n}\nBasicCardExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-card-example',\n                template: \"<novo-card [title]=\\\"'All Attributes'\\\"\\n           icon=\\\"activity\\\"\\n           [loading]=\\\"loading\\\"\\n           [message]=\\\"message\\\"\\n           [messageIcon]=\\\"messageIcon\\\"\\n           [refresh]=\\\"refresh\\\"\\n           [move]=\\\"move\\\"\\n           [close]=\\\"close\\\"\\n           (onRefresh)=\\\"onRefresh()\\\"\\n           (onClose)=\\\"onClose()\\\"\\n           [padding]=\\\"padding\\\">\\n    This is the ALL attribute card content!\\n</novo-card>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nBasicCardExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    BasicCardExample.prototype.refresh;\n    /** @type {?} */\n    BasicCardExample.prototype.close;\n    /** @type {?} */\n    BasicCardExample.prototype.move;\n    /** @type {?} */\n    BasicCardExample.prototype.padding;\n    /** @type {?} */\n    BasicCardExample.prototype.loading;\n    /** @type {?} */\n    BasicCardExample.prototype.start;\n    /** @type {?} */\n    BasicCardExample.prototype.end;\n    /** @type {?} */\n    BasicCardExample.prototype.created;\n    /** @type {?} */\n    BasicCardExample.prototype.bestLabel;\n    /** @type {?} */\n    BasicCardExample.prototype.bestTime;\n    /** @type {?} */\n    BasicCardExample.prototype.bestDay;\n    /** @type {?} */\n    BasicCardExample.prototype.message;\n    /** @type {?} */\n    BasicCardExample.prototype.messageIcon;\n    /** @type {?} */\n    BasicCardExample.prototype.donutValue;\n    /** @type {?} */\n    BasicCardExample.prototype.donutColor;\n    /** @type {?} */\n    BasicCardExample.prototype.donutLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasicCardExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/cards/card-config/card-config-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Full Configuration Cards\n */\nclass CardConfigExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        // Config for demos\n        this.refresh = true;\n        this.close = true;\n        this.move = true;\n        this.padding = true;\n        this.loading = true;\n        this.fullConfig = {\n            refresh: false,\n            icon: 'email',\n            messageIcon: 'email',\n            close: false,\n            move: true,\n            onClose: this.onClose.bind(this),\n            onRefresh: this.onRefresh.bind(this),\n            title: 'Test',\n            loading: false,\n            padding: true,\n        };\n        this.start = 2000;\n        this.end = 2005;\n        this.created = 1995;\n        this.bestLabel = 'BEST TIME TO CONTACT';\n        this.bestTime = '1-PM';\n        this.bestDay = 'Friday';\n        this.donutValue = 0.5;\n        this.donutColor = '#662255';\n        this.donutLabel = 'Probability of Win %';\n    }\n    /**\n     * @return {?}\n     */\n    onClose() {\n        this.toaster.alert({\n            theme: 'info',\n            title: 'Cards',\n            message: 'Close Clicked!',\n        });\n    }\n    /**\n     * @return {?}\n     */\n    onRefresh() {\n        this.toaster.alert({\n            theme: 'success',\n            title: 'Cards',\n            message: 'Refresh Clicked!',\n        });\n    }\n    /**\n     * @return {?}\n     */\n    toggleLoading() {\n        this.loading = !this.loading;\n    }\n    /**\n     * @return {?}\n     */\n    toggleMessage() {\n        if (!this.message) {\n            this.message = 'NO DATA!';\n            this.messageIcon = 'email';\n        }\n        else {\n            this.message = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toggleLoadingConfig() {\n        this.fullConfig.loading = !this.fullConfig.loading;\n    }\n    /**\n     * @return {?}\n     */\n    toggleMessageConfig() {\n        if (!this.fullConfig.message) {\n            this.fullConfig.message = 'NO DATA!';\n        }\n        else {\n            this.fullConfig.message = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    singleAction() {\n        window.alert('HELLO!');\n    }\n}\nCardConfigExample.decorators = [\n    { type: Component, args: [{\n                selector: 'card-config-example',\n                template: \"<novo-card [config]=\\\"fullConfig\\\">\\n  <novo-card-actions>\\n      <button theme=\\\"icon\\\" icon=\\\"info\\\" (click)=\\\"singleAction()\\\"></button>\\n  </novo-card-actions>\\n  DEMO :)\\n</novo-card>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCardConfigExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    CardConfigExample.prototype.refresh;\n    /** @type {?} */\n    CardConfigExample.prototype.close;\n    /** @type {?} */\n    CardConfigExample.prototype.move;\n    /** @type {?} */\n    CardConfigExample.prototype.padding;\n    /** @type {?} */\n    CardConfigExample.prototype.loading;\n    /** @type {?} */\n    CardConfigExample.prototype.fullConfig;\n    /** @type {?} */\n    CardConfigExample.prototype.start;\n    /** @type {?} */\n    CardConfigExample.prototype.end;\n    /** @type {?} */\n    CardConfigExample.prototype.created;\n    /** @type {?} */\n    CardConfigExample.prototype.bestLabel;\n    /** @type {?} */\n    CardConfigExample.prototype.bestTime;\n    /** @type {?} */\n    CardConfigExample.prototype.bestDay;\n    /** @type {?} */\n    CardConfigExample.prototype.message;\n    /** @type {?} */\n    CardConfigExample.prototype.messageIcon;\n    /** @type {?} */\n    CardConfigExample.prototype.donutValue;\n    /** @type {?} */\n    CardConfigExample.prototype.donutColor;\n    /** @type {?} */\n    CardConfigExample.prototype.donutLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    CardConfigExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/expansion/accordion/accordion-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Accordion Example\n */\nclass AccordionExample {\n}\nAccordionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'accordion-example',\n                template: \"<novo-accordion>\\n  <novo-expansion-panel>\\n    <novo-expansion-panel-header>\\n      This is the expansion 1 title\\n    </novo-expansion-panel-header>\\n    <p>This the expansion 1 content</p>\\n  </novo-expansion-panel>\\n\\n  <novo-expansion-panel>\\n    <novo-expansion-panel-header>\\n      This is the expansion 2 title\\n    </novo-expansion-panel-header>\\n    <p>This the expansion 2 content</p>\\n  </novo-expansion-panel>\\n</novo-accordion>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/expansion/basic-expansion/basic-expansion-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Dialogue buttons\n */\nclass BasicExpansionExample {\n    constructor() {\n        this.isDisabled = false;\n    }\n}\nBasicExpansionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-expansion-example',\n                template: \"<novo-expansion-panel [disabled]=\\\"isDisabled\\\">\\n  <novo-expansion-panel-header>\\n    <novo-panel-title>\\n      This is the expansion title\\n    </novo-panel-title>\\n    <novo-panel-description>\\n      This is a summary of the content\\n    </novo-panel-description>\\n  </novo-expansion-panel-header>\\n  <p>This is the primary content of the panel.</p>\\n</novo-expansion-panel>\\n<div>\\n  <span>Is Disabled?</span>\\n  <novo-switch theme=\\\"grapefruit\\\" [(ngModel)]=\\\"isDisabled\\\"></novo-switch>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicExpansionExample.prototype.isDisabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/expansion/lazy-expansion/lazy-expansion-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Lazy Instaniated Content with Expansion\n */\nclass LazyExpansionExample {\n}\nLazyExpansionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'lazy-expansion-example',\n                template: \"<novo-expansion-panel>\\n    <novo-expansion-panel-header>\\n      This is the expansion title\\n    </novo-expansion-panel-header>\\n\\n    <ng-template matExpansionPanelContent>\\n      Some deferred content\\n    </ng-template>\\n</novo-expansion-panel>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/header/basic-header/basic-header-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_THEMES = ['company', 'job', 'candidate', 'contact', 'opportunity', 'lead', 'light', 'white'];\n/** @type {?} */\nconst HEADER_ICONS = ['company', 'job', 'candidate', 'person', 'opportunity', 'lead', 'bolt', 'shield'];\n/**\n * \\@title Basic Header Example\n */\nclass BasicHeaderExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.theme = 'company';\n        this.icon = 'company';\n        this.themeIndex = 0;\n        this.toaster = toaster;\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n            theme: 'ocean',\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        this.themeIndex = this.themeIndex === HEADER_THEMES.length - 1 ? 0 : this.themeIndex + 1;\n        this.theme = HEADER_THEMES[this.themeIndex];\n        this.icon = HEADER_ICONS[this.themeIndex];\n    }\n    /**\n     * @param {?} type\n     * @param {?} ev\n     * @return {?}\n     */\n    catchEv(type, ev) {\n        // Set toast options\n        this.options = {\n            title: `${type}`,\n            message: `${ev} fired...`,\n            theme: 'ocean',\n            icon: `${type}`,\n            position: 'growlTopRight',\n        };\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nBasicHeaderExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-header-example',\n                template: \"<header title=\\\"John Deere\\\" [icon]=\\\"icon\\\" [theme]=\\\"theme\\\">\\n  <utils>\\n    <util-action icon=\\\"convert\\\" tooltip=\\\"Change Theme\\\" (click)=\\\"changeTheme()\\\"></util-action>\\n    <util-action icon=\\\"refresh\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('refresh', $event)\\\"></util-action>\\n    <util-action icon=\\\"times\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('close', $event)\\\"></util-action>\\n  </utils>\\n  <section>\\n    Extra Info\\n  </section>\\n  <novo-nav theme=\\\"color\\\" direction=\\\"horizontal\\\">\\n    <novo-tab>\\n      <span>Overview</span>\\n    </novo-tab>\\n    <novo-tab>\\n      <span>Activity</span>\\n    </novo-tab>\\n    <novo-tab>\\n      <span>Email</span>\\n    </novo-tab>\\n  </novo-nav>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nBasicHeaderExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    BasicHeaderExample.prototype.theme;\n    /** @type {?} */\n    BasicHeaderExample.prototype.icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasicHeaderExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasicHeaderExample.prototype.themeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    BasicHeaderExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/header/condensed-header/condensed-header-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_THEMES$1 = ['company', 'job', 'candidate', 'contact', 'opportunity', 'lead', 'light', 'white'];\n/** @type {?} */\nconst HEADER_ICONS$1 = ['company', 'job', 'candidate', 'person', 'opportunity', 'lead', 'bolt', 'shield'];\n/**\n * \\@title Condensed Header Example\n */\nclass CondensedHeaderExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.theme = 'company';\n        this.icon = 'company';\n        this.themeIndex = 0;\n        this.toaster = toaster;\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n            theme: 'ocean',\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        this.themeIndex = this.themeIndex === HEADER_THEMES$1.length - 1 ? 0 : this.themeIndex + 1;\n        this.theme = HEADER_THEMES$1[this.themeIndex];\n        this.icon = HEADER_ICONS$1[this.themeIndex];\n    }\n    /**\n     * @param {?} type\n     * @param {?} ev\n     * @return {?}\n     */\n    catchEv(type, ev) {\n        // Set toast options\n        this.options = {\n            title: `${type}`,\n            message: `${ev} fired...`,\n            theme: 'ocean',\n            icon: `${type}`,\n            position: 'growlTopRight',\n        };\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nCondensedHeaderExample.decorators = [\n    { type: Component, args: [{\n                selector: 'condensed-header-example',\n                template: \"<header [theme]=\\\"theme\\\" [condensed]=\\\"true\\\">\\n  <utils>\\n    <util-action icon=\\\"convert\\\" tooltip=\\\"Change Theme\\\" (click)=\\\"changeTheme()\\\"></util-action>\\n    <util-action icon=\\\"refresh\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('refresh', $event)\\\"></util-action>\\n    <util-action icon=\\\"times\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('close', $event)\\\"></util-action>\\n  </utils>\\n  <novo-icon [theme]=\\\"theme\\\" [name]=\\\"icon\\\" [raised]=\\\"true\\\">{{icon}}</novo-icon>\\n  <div class=\\\"entity-header\\\" novo-title>\\n    <span class=\\\"id\\\">123456</span>\\n    <header-spacer></header-spacer>\\n    <span class=\\\"name\\\">Steve Jobs</span>\\n    <header-spacer></header-spacer>\\n    <span class=\\\"links\\\">\\n            <button theme=\\\"icon\\\" [icon]=\\\"'google'\\\"></button>\\n            <button theme=\\\"icon\\\" [icon]=\\\"'linkedin-f'\\\"></button>\\n            <button theme=\\\"icon\\\" [icon]=\\\"'location'\\\"></button>\\n        </span>\\n  </div>\\n  <novo-nav theme=\\\"white\\\" direction=\\\"horizontal\\\" [condensed]=\\\"true\\\">\\n    <novo-tab>\\n      <span>Overview</span>\\n    </novo-tab>\\n    <novo-tab>\\n      <span>Activity</span>\\n    </novo-tab>\\n    <novo-tab>\\n      <span>Email</span>\\n    </novo-tab>\\n  </novo-nav>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nCondensedHeaderExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    CondensedHeaderExample.prototype.theme;\n    /** @type {?} */\n    CondensedHeaderExample.prototype.icon;\n    /** @type {?} */\n    CondensedHeaderExample.prototype.options;\n    /** @type {?} */\n    CondensedHeaderExample.prototype.themeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    CondensedHeaderExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/header/header-searchbar/header-searchbar-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_THEMES$2 = ['company', 'job', 'candidate', 'contact', 'opportunity', 'lead', 'light', 'white'];\n/** @type {?} */\nconst HEADER_ICONS$2 = ['company', 'job', 'candidate', 'person', 'opportunity', 'lead', 'bolt', 'shield'];\n/**\n * \\@title Header with SearchBar Example\n */\nclass HeaderSearchbarExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.theme = 'company';\n        this.icon = 'company';\n        this.themeIndex = 0;\n        this.toaster = toaster;\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n            theme: 'ocean',\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        this.themeIndex = this.themeIndex === HEADER_THEMES$2.length - 1 ? 0 : this.themeIndex + 1;\n        this.theme = HEADER_THEMES$2[this.themeIndex];\n        this.icon = HEADER_ICONS$2[this.themeIndex];\n    }\n    /**\n     * @param {?} type\n     * @param {?} ev\n     * @return {?}\n     */\n    catchEv(type, ev) {\n        // Set toast options\n        this.options = {\n            title: `${type}`,\n            message: `${ev} fired...`,\n            theme: 'ocean',\n            icon: `${type}`,\n            position: 'growlTopRight',\n        };\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nHeaderSearchbarExample.decorators = [\n    { type: Component, args: [{\n                selector: 'header-searchbar-example',\n                template: \"<header title=\\\"Header\\\" [icon]=\\\"icon\\\" [theme]=\\\"theme\\\">\\n  <section class=\\\"header-content\\\">\\n    <novo-search [alwaysOpen]=\\\"isChecked\\\" [theme]=\\\"theme\\\"></novo-search>\\n  </section>\\n  <utils>\\n    <util-action icon=\\\"convert\\\" tooltip=\\\"Change Theme\\\" (click)=\\\"changeTheme()\\\"></util-action>\\n    <util-action icon=\\\"refresh\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('refresh', $event)\\\"></util-action>\\n    <util-action icon=\\\"times\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('close', $event)\\\"></util-action>\\n  </utils>\\n</header>\\n<br/>\\n<novo-checkbox label=\\\"Always Open?\\\" [(ngModel)]=\\\"isChecked\\\"></novo-checkbox>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nHeaderSearchbarExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    HeaderSearchbarExample.prototype.theme;\n    /** @type {?} */\n    HeaderSearchbarExample.prototype.icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSearchbarExample.prototype.options;\n    /** @type {?} */\n    HeaderSearchbarExample.prototype.isChecked;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSearchbarExample.prototype.themeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSearchbarExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/header/header-subtitle/header-subtitle-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_THEMES$3 = ['company', 'job', 'candidate', 'contact', 'opportunity', 'lead', 'light', 'white'];\n/** @type {?} */\nconst HEADER_ICONS$3 = ['company', 'job', 'candidate', 'person', 'opportunity', 'lead', 'bolt', 'shield'];\n/**\n * \\@title Header with Subtitle Example\n */\nclass HeaderSubtitleExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.theme = 'company';\n        this.icon = 'company';\n        this.themeIndex = 0;\n        this.toaster = toaster;\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n            theme: 'ocean',\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        this.themeIndex = this.themeIndex === HEADER_THEMES$3.length - 1 ? 0 : this.themeIndex + 1;\n        this.theme = HEADER_THEMES$3[this.themeIndex];\n        this.icon = HEADER_ICONS$3[this.themeIndex];\n    }\n    /**\n     * @param {?} type\n     * @param {?} ev\n     * @return {?}\n     */\n    catchEv(type, ev) {\n        // Set toast options\n        this.options = {\n            title: `${type}`,\n            message: `${ev} fired...`,\n            theme: 'ocean',\n            icon: `${type}`,\n            position: 'growlTopRight',\n        };\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nHeaderSubtitleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'header-subtitle-example',\n                template: \"<header title=\\\"Header\\\" subTitle=\\\"with subtitle\\\" [icon]=\\\"icon\\\" [theme]=\\\"theme\\\">\\n  <utils>\\n    <util-action icon=\\\"convert\\\" tooltip=\\\"Change Theme\\\" (click)=\\\"changeTheme()\\\"></util-action>\\n    <util-action icon=\\\"refresh\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('refresh', $event)\\\"></util-action>\\n    <util-action icon=\\\"times\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('close', $event)\\\"></util-action>\\n  </utils>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nHeaderSubtitleExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    HeaderSubtitleExample.prototype.theme;\n    /** @type {?} */\n    HeaderSubtitleExample.prototype.icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSubtitleExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSubtitleExample.prototype.themeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    HeaderSubtitleExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/list/basic-list/basic-list-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic List Layout\n */\nclass BasicListExample {\n    constructor() {\n        /** @type {?} */\n        const ONE_HOUR = 60 * 60 * 1000;\n        /* ms */\n        /** @type {?} */\n        const TWO_HOURS = ONE_HOUR * 2;\n        /** @type {?} */\n        const THREE_HOURS = ONE_HOUR * 3;\n        /** @type {?} */\n        const currentDate = new Date();\n        /** @type {?} */\n        const oneHourAgo = currentDate.getTime() - ONE_HOUR;\n        /** @type {?} */\n        const twoHoursAgo = currentDate.getTime() - TWO_HOURS;\n        /** @type {?} */\n        const threeHoursAgo = currentDate.getTime() - THREE_HOURS;\n        /* \"mockResponse[]\" should represent a REST response with improperly formatted data.\n            /  The \"buildItems()\" function is taking this data object and massaging it\n            /  to build the list items appropriately via a new data object \"pulseItems[]\".\n            /  In page1.html you can see how the new object builds a list of items.\n            /  - @asibilia\n            */\n        /** @type {?} */\n        const mockResponse = [\n            {\n                type: 'opportunity',\n                dateCreated: oneHourAgo,\n                sentiment: {\n                    rating: 'negative',\n                    type: 'engagement',\n                    comment: 'No emails in last 10 days',\n                },\n                user: {\n                    firstName: 'Steph',\n                    lastName: 'Curry',\n                    company: 'Wells Fargo',\n                    location: 'Golden State, CA',\n                },\n            },\n            {\n                type: 'opportunity',\n                dateCreated: twoHoursAgo,\n                sentiment: {\n                    rating: 'negative',\n                    type: 'probability',\n                    comment: 'Now has low probability to close',\n                },\n                user: {\n                    firstName: 'Lebron',\n                    lastName: 'James',\n                    company: 'Amazon',\n                    location: 'Cleveland, OH',\n                },\n            },\n            {\n                type: 'company',\n                dateCreated: threeHoursAgo,\n                sentiment: {\n                    rating: 'positive',\n                    type: 'connection',\n                    comment: 'New connection',\n                },\n                user: {\n                    firstName: 'Derrick',\n                    lastName: 'Rose',\n                    company: 'Walmart',\n                    location: 'Chicago, IL',\n                },\n            },\n        ];\n        this.pulseItems = [];\n        this.buildItems(mockResponse);\n    }\n    /**\n     * @param {?} resp\n     * @return {?}\n     */\n    buildItems(resp) {\n        for (const obj of resp) {\n            /** @type {?} */\n            const item = {};\n            /*\n            ||| This is the item structure to be pushed to pulseItems[] and used\n            ||| to build the list & items.\n            |\n            |   item = {\n            |       \"name\": '',\n            |       \"type\": '',\n            |       \"icon\": {\n            |           \"name\": '',\n            |           \"sentiment\": ''\n            |       },\n            |       \"comment\": '',\n            |       \"timeAgo\": ''\n            |    }\n            |\n            */\n            item.name = obj.user.company;\n            item.type = obj.type;\n            item.icon = {};\n            if (obj.sentiment.type === 'connection') {\n                item.icon.name = 'bhi-add-o';\n            }\n            if (obj.sentiment.type === 'engagement') {\n                item.icon.name = obj.sentiment.rating === 'positive' ? 'bhi-trending-up' : 'bhi-trending-down';\n            }\n            item.icon.sentiment = obj.sentiment.rating;\n            item.comment = obj.sentiment.comment;\n            item.timeAgo = obj.dateCreated;\n            this.pulseItems.push(item);\n        }\n    }\n}\nBasicListExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-list-example',\n                template: \"<header>\\n    <novo-list direction=\\\"vertical\\\">\\n        <novo-list-item *ngFor=\\\"let item of pulseItems\\\">\\n            <item-header>\\n                <item-avatar [icon]=\\\"item.type\\\"></item-avatar>\\n                <item-title>{{item.name}}</item-title>\\n                <item-header-end>\\n                    <span>\\n                        <i class=\\\"bhi-clock\\\"></i>\\n                        {{item.timeAgo | date: 'shortTime'}}\\n                    </span>\\n                </item-header-end>\\n            </item-header>\\n            <item-content direction=\\\"vertical\\\">\\n                <p>\\n                    <i *ngIf=\\\"item.icon.name\\\" class=\\\"{{item.icon.name}} {{item.icon.sentiment}}\\\"></i>\\n                    {{item.comment}}\\n                </p>\\n            </item-content>\\n        </novo-list-item>\\n    </novo-list>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nBasicListExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    BasicListExample.prototype.pulseItems;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/list/themed-list/themed-list-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Themed List Example\n */\nclass ThemedListExample {\n    constructor() {\n        /** @type {?} */\n        const ONE_HOUR = 60 * 60 * 1000;\n        /* ms */\n        /** @type {?} */\n        const TWO_HOURS = ONE_HOUR * 2;\n        /** @type {?} */\n        const THREE_HOURS = ONE_HOUR * 3;\n        /** @type {?} */\n        const currentDate = new Date();\n        /** @type {?} */\n        const oneHourAgo = currentDate.getTime() - ONE_HOUR;\n        /** @type {?} */\n        const twoHoursAgo = currentDate.getTime() - TWO_HOURS;\n        /** @type {?} */\n        const threeHoursAgo = currentDate.getTime() - THREE_HOURS;\n        /* \"mockResponse[]\" should represent a REST response with improperly formatted data.\n            /  The \"buildItems()\" function is taking this data object and massaging it\n            /  to build the list items appropriately via a new data object \"pulseItems[]\".\n            /  In page1.html you can see how the new object builds a list of items.\n            /  - @asibilia\n            */\n        /** @type {?} */\n        const mockResponse = [\n            {\n                type: 'opportunity',\n                dateCreated: oneHourAgo,\n                sentiment: {\n                    rating: 'negative',\n                    type: 'engagement',\n                    comment: 'No emails in last 10 days',\n                },\n                user: {\n                    firstName: 'Steph',\n                    lastName: 'Curry',\n                    company: 'Wells Fargo',\n                    location: 'Golden State, CA',\n                },\n            },\n            {\n                type: 'opportunity',\n                dateCreated: twoHoursAgo,\n                sentiment: {\n                    rating: 'negative',\n                    type: 'probability',\n                    comment: 'Now has low probability to close',\n                },\n                user: {\n                    firstName: 'Lebron',\n                    lastName: 'James',\n                    company: 'Amazon',\n                    location: 'Cleveland, OH',\n                },\n            },\n            {\n                type: 'company',\n                dateCreated: threeHoursAgo,\n                sentiment: {\n                    rating: 'positive',\n                    type: 'connection',\n                    comment: 'New connection',\n                },\n                user: {\n                    firstName: 'Derrick',\n                    lastName: 'Rose',\n                    company: 'Walmart',\n                    location: 'Chicago, IL',\n                },\n            },\n        ];\n        this.pulseItems = [];\n        this.buildItems(mockResponse);\n    }\n    /**\n     * @param {?} resp\n     * @return {?}\n     */\n    buildItems(resp) {\n        for (const obj of resp) {\n            /** @type {?} */\n            const item = {};\n            /*\n            ||| This is the item structure to be pushed to pulseItems[] and used\n            ||| to build the list & items.\n            |\n            |   item = {\n            |       \"name\": '',\n            |       \"type\": '',\n            |       \"icon\": {\n            |           \"name\": '',\n            |           \"sentiment\": ''\n            |       },\n            |       \"comment\": '',\n            |       \"timeAgo\": ''\n            |    }\n            |\n            */\n            item.name = obj.user.company;\n            item.type = obj.type;\n            item.icon = {};\n            if (obj.sentiment.type === 'connection') {\n                item.icon.name = 'bhi-add-o';\n            }\n            if (obj.sentiment.type === 'engagement') {\n                item.icon.name = obj.sentiment.rating === 'positive' ? 'bhi-trending-up' : 'bhi-trending-down';\n            }\n            item.icon.sentiment = obj.sentiment.rating;\n            item.comment = obj.sentiment.comment;\n            item.timeAgo = obj.dateCreated;\n            this.pulseItems.push(item);\n        }\n    }\n}\nThemedListExample.decorators = [\n    { type: Component, args: [{\n                selector: 'themed-list-example',\n                template: \"<header>\\n    <novo-list theme=\\\"navigation\\\" direction=\\\"vertical\\\">\\n        <novo-list-item *ngFor=\\\"let item of pulseItems\\\">\\n            <item-header>\\n                <item-avatar [icon]=\\\"item.type\\\"></item-avatar>\\n                <item-title>{{item.name}}</item-title>\\n            </item-header>\\n            <item-content direction=\\\"vertical\\\">\\n                <p>\\n                    <i *ngIf=\\\"item.icon.name\\\" class=\\\"{{item.icon.name}} {{item.icon.sentiment}}\\\"></i>\\n                    {{item.comment}}\\n                </p>\\n                <span>\\n                    <i class=\\\"bhi-clock\\\"></i>\\n                    {{item.timeAgo | date: 'shortTime'}}\\n                </span>\\n            </item-content>\\n            <item-end>\\n                <i class=\\\"bhi-next\\\"></i>\\n            </item-end>\\n        </novo-list-item>\\n    </novo-list>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nThemedListExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    ThemedListExample.prototype.pulseItems;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/stepper/stepper-horizontal/stepper-horizontal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Stepper Component\n */\nclass StepperHorizontalExample {\n    /**\n     * @param {?} _formBuilder\n     */\n    constructor(_formBuilder) {\n        this._formBuilder = _formBuilder;\n        this.isLinear = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.firstFormGroup = this._formBuilder.group({\n            firstCtrl: ['', Validators.required],\n        });\n        this.secondFormGroup = this._formBuilder.group({\n            secondCtrl: ['', Validators.required],\n        });\n    }\n    /**\n     * @param {?} stepper\n     * @param {?} step\n     * @return {?}\n     */\n    next(stepper, step) {\n        step.editable = false;\n        stepper.next();\n    }\n}\nStepperHorizontalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'stepper-horizontal-example',\n                template: \"\\n<novo-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <novo-step [stepControl]=\\\"firstFormGroup\\\" label=\\\"Fill out your name\\\" theme=\\\"candidate\\\" icon=\\\"candidate\\\" #step1>\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <input placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      <div>Form Valid? {{firstFormGroup?.valid}}</div>\\n      <div>\\n        <button (click)=\\\"next(stepper, step1)\\\">Next</button>\\n      </div>\\n    </form>\\n  </novo-step>\\n  <novo-step [stepControl]=\\\"secondFormGroup\\\" theme=\\\"contact\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template novoStepLabel>Fill out your address</ng-template>\\n      <input placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      <div>\\n        <button (click)=\\\"stepper.previous()\\\">Back</button>\\n        <button (click)=\\\"stepper.next()\\\">Next</button>\\n      </div>\\n    </form>\\n  </novo-step>\\n  <novo-step>\\n    <ng-template novoStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button novo-button (click)=\\\"stepper.previous()\\\">Back</button>\\n      <button novo-button (click)=\\\"stepper.complete()\\\">Done</button>\\n    </div>\\n  </novo-step>\\n</novo-horizontal-stepper>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nStepperHorizontalExample.ctorParameters = () => [\n    { type: FormBuilder }\n];\nif (false) {\n    /** @type {?} */\n    StepperHorizontalExample.prototype.isLinear;\n    /** @type {?} */\n    StepperHorizontalExample.prototype.firstFormGroup;\n    /** @type {?} */\n    StepperHorizontalExample.prototype.secondFormGroup;\n    /**\n     * @type {?}\n     * @private\n     */\n    StepperHorizontalExample.prototype._formBuilder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/stepper/stepper-vertical/stepper-vertical-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Stepper w/ Vertical Layout\n */\nclass StepperVerticalExample {\n    /**\n     * @param {?} _formBuilder\n     */\n    constructor(_formBuilder) {\n        this._formBuilder = _formBuilder;\n        this.isLinear = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.firstFormGroup = this._formBuilder.group({\n            firstCtrl: ['', Validators.required],\n        });\n        this.secondFormGroup = this._formBuilder.group({\n            secondCtrl: ['', Validators.required],\n        });\n    }\n    /**\n     * @param {?} stepper\n     * @param {?} step\n     * @return {?}\n     */\n    next(stepper, step) {\n        step.editable = false;\n        stepper.next();\n    }\n}\nStepperVerticalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'stepper-vertical-example',\n                template: \"\\n<novo-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <novo-step [stepControl]=\\\"firstFormGroup\\\" theme=\\\"candidate\\\" icon=\\\"candidate\\\" #step1>\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template novoStepLabel>Fill out your name</ng-template>\\n      <input placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      <div>\\n        <!-- <button novo-button novoStepperNext>Next</button> -->\\n        <button (click)=\\\"next(stepper, step1)\\\" [disabled]=\\\"!firstFormGroup?.valid\\\">Next</button>\\n      </div>\\n    </form>\\n  </novo-step>\\n  <novo-step [stepControl]=\\\"secondFormGroup\\\" theme=\\\"contact\\\" icon=\\\"person\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template novoStepLabel>Fill out your address</ng-template>\\n      <input placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      <div>\\n        <!-- <button novo-button novoStepperPrevious>Back</button>\\n        <button novo-button novoStepperNext>Next</button> -->\\n        <button (click)=\\\"stepper.previous()\\\">Back</button>\\n        <button (click)=\\\"stepper.next()\\\">Next</button>\\n      </div>\\n    </form>\\n  </novo-step>\\n  <novo-step>\\n    <ng-template novoStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button novo-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </novo-step>\\n</novo-vertical-stepper>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nStepperVerticalExample.ctorParameters = () => [\n    { type: FormBuilder }\n];\nif (false) {\n    /** @type {?} */\n    StepperVerticalExample.prototype.isLinear;\n    /** @type {?} */\n    StepperVerticalExample.prototype.firstFormGroup;\n    /** @type {?} */\n    StepperVerticalExample.prototype.secondFormGroup;\n    /**\n     * @type {?}\n     * @private\n     */\n    StepperVerticalExample.prototype._formBuilder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/tabs/tabs-basic/tabs-basic-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Tabs\n */\nclass TabsBasicExample {\n    /**\n     * @return {?}\n     */\n    tabSelected() {\n        console.log('TAB SELECTED'); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    tabDeselected() {\n        console.log('TAB DESELECTED'); // tslint:disable-line\n    }\n}\nTabsBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-basic-example',\n                template: \"\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/tabs/tabs-color/tabs-color-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Colorful Tabs\n */\nclass TabsColorExample {\n    /**\n     * @return {?}\n     */\n    tabSelected() {\n        console.log('TAB SELECTED'); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    tabDeselected() {\n        console.log('TAB DESELECTED'); // tslint:disable-line\n    }\n}\nTabsColorExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-color-example',\n                template: \"<header>\\n  <novo-nav theme=\\\"color\\\" [outlet]=\\\"colornav\\\" direction=\\\"horizontal\\\">\\n      <novo-tab>\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 1</span>\\n      </novo-tab>\\n      <novo-tab>\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 2</span>\\n      </novo-tab>\\n       <novo-tab [disabled]=\\\"true\\\">\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 3</span>\\n      </novo-tab>\\n  </novo-nav>\\n</header>\\n\\n<novo-nav-outlet #colornav>\\n  <novo-nav-content>\\n      <h1>Tab 1 Content</h1>\\n  </novo-nav-content>\\n  <novo-nav-content>\\n      <h1>Tab 2 Content</h1>\\n  </novo-nav-content>\\n</novo-nav-outlet>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/tabs/tabs-condensed/tabs-condensed-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Condensed Tabs\n */\nclass TabsCondensedExample {\n    /**\n     * @return {?}\n     */\n    tabSelected() {\n        console.log('TAB SELECTED'); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    tabDeselected() {\n        console.log('TAB DESELECTED'); // tslint:disable-line\n    }\n}\nTabsCondensedExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-condensed-example',\n                template: \"<novo-nav theme=\\\"white\\\" [outlet]=\\\"condensed\\\" condensed=\\\"true\\\">\\n  <novo-tab>\\n      <span><i class=\\\"bhi-person\\\"></i>Tab 1</span>\\n  </novo-tab>\\n  <novo-tab>\\n      <span><i class=\\\"bhi-person\\\"></i>Tab 2</span>\\n  </novo-tab>\\n  <novo-tab [disabled]=\\\"true\\\">\\n      <span><i class=\\\"bhi-person\\\"></i>Tab 3</span>\\n  </novo-tab>\\n</novo-nav>\\n\\n\\n<novo-nav-outlet #condensed>\\n  <novo-nav-content>\\n      <h1>Tab 1 Content</h1>\\n  </novo-nav-content>\\n  <novo-nav-content>\\n      <h1>Tab 2 Content</h1>\\n  </novo-nav-content>\\n</novo-nav-outlet>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/tabs/tabs-router/tabs-router-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tabs for Navigation\n */\nclass TabsRouterExample {\n    /**\n     * @return {?}\n     */\n    tabSelected() {\n        console.log('TAB SELECTED'); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    tabDeselected() {\n        console.log('TAB DESELECTED'); // tslint:disable-line\n    }\n}\nTabsRouterExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-router-example',\n                template: \"<header>\\n  <novo-nav theme=\\\"white\\\" router>\\n      <novo-tab-link>\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 1</span>\\n      </novo-tab-link>\\n      <novo-tab-link>\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 2</span>\\n      </novo-tab-link>\\n       <novo-tab-link [disabled]=\\\"true\\\">\\n          <span>\\n              <i class=\\\"bhi-person\\\"></i>Tab 3</span>\\n      </novo-tab-link>\\n  </novo-nav>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: layouts/tabs/tabs-vertical/tabs-vertical-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Vertical Tabs\n */\nclass TabsVerticalExample {\n    /**\n     * @return {?}\n     */\n    tabSelected() {\n        console.log('TAB SELECTED'); // tslint:disable-line\n    }\n    /**\n     * @return {?}\n     */\n    tabDeselected() {\n        console.log('TAB DESELECTED'); // tslint:disable-line\n    }\n}\nTabsVerticalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-vertical-example',\n                template: \"<novo-nav theme=\\\"white\\\" [outlet]=\\\"colorVert\\\" direction=\\\"vertical\\\">\\n  <novo-tab>\\n      <span>\\n          <i class=\\\"bhi-person\\\"></i>Tab 1</span>\\n  </novo-tab>\\n  <novo-tab>\\n      <span>\\n          <i class=\\\"bhi-person\\\"></i>Tab 2</span>\\n  </novo-tab>\\n  <novo-tab [disabled]=\\\"true\\\">\\n      <span>\\n          <i class=\\\"bhi-person\\\"></i>Tab 3</span>\\n  </novo-tab>\\n</novo-nav>\\n\\n<novo-nav-outlet #colorVert>\\n  <novo-nav-content>\\n      <h1>Tab 1 Content</h1>\\n\\n      <p>\\n          Synth polaroid bitters chillwave pickled. Vegan disrupt tousled,\\n          Portland keffiyeh aesthetic food truck sriracha cornhole\\n          single-origin coffee church-key roof party. Leggings\\n          ethical McSweeney's, normcore you probably haven't\\n          heard of them Marfa organic squid. Slow-carb 90's\\n          ennui Godard pug asymmetrical, narwhal VHS Tonx High\\n          Life. Retro dreamcatcher synth Godard pickled Etsy\\n          jean shorts beard, pour-over fanny pack mumblecore.\\n          Quinoa retro aesthetic polaroid, Williamsburg American\\n          Apparel plaid small batch. Blue Bottle Vice fanny\\n          pack, Williamsburg roof party Wes Anderson mlkshk\\n          seitan brunch before they sold out lo-fi XOXO tofu\\n          scenester small batch.\\n      </p>\\n  </novo-nav-content>\\n  <novo-nav-content>\\n      <h1>Tab 2 Content</h1>\\n\\n      <p>\\n          Synth polaroid bitters chillwave pickled.\\n      </p>\\n  </novo-nav-content>\\n</novo-nav-outlet>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: patterns/activity-section/activity-section-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Activity Section\n */\nclass ActivitySectionExample {\n    constructor() {\n        this.isDisabled = true;\n        /** @type {?} */\n        const columns = [\n            { title: 'Name', name: 'name', ordering: true, type: 'link', filtering: true },\n            { title: 'Position', name: 'position', ordering: true, filtering: true },\n            {\n                title: 'Extn.',\n                name: 'ext',\n                ordering: true,\n                renderer: (/**\n                 * @param {?} object\n                 * @return {?}\n                 */\n                (object) => {\n                    return object.ext.obj;\n                }),\n                compare: (/**\n                 * @param {?} sort\n                 * @param {?} previous\n                 * @param {?} current\n                 * @return {?}\n                 */\n                (sort, previous, current) => {\n                    /** @type {?} */\n                    const first = previous.obj;\n                    /** @type {?} */\n                    const second = current.obj;\n                    if (first > second) {\n                        return sort === 'desc' ? -1 : 1;\n                    }\n                    if (first < second) {\n                        return sort === 'asc' ? -1 : 1;\n                    }\n                    return 0;\n                }),\n            },\n            {\n                title: 'Start date',\n                type: 'date',\n                name: 'startDate',\n                renderer: DateCell,\n                ordering: true,\n                filtering: true,\n                range: true,\n            },\n            {\n                title: '%',\n                name: 'percent',\n                ordering: true,\n                renderer: PercentageCell,\n            },\n            {\n                title: 'Salary',\n                name: 'salary',\n                ordering: true,\n                renderer: (/**\n                 * @param {?} object\n                 * @return {?}\n                 */\n                (object) => {\n                    return `$ ${Number(object.salary).toFixed(2)}`;\n                }),\n            },\n            {\n                title: 'Status',\n                name: 'status',\n            },\n        ];\n        this.details = {\n            columns: columns.slice(),\n            rows: TableData$1.slice(),\n            config: {\n                paging: {\n                    current: 1,\n                    itemsPerPage: 10,\n                },\n                sorting: true,\n                filtering: true,\n                ordering: true,\n                resizing: true,\n            },\n        };\n    }\n}\nActivitySectionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'activity-section-example',\n                template: \"<novo-expansion-panel theme=\\\"contact\\\" padding=\\\"false\\\">\\n    <novo-expansion-panel-header>\\n        <novo-panel-title>\\n            <novo-icon>person</novo-icon>\\n            <label>Contacts</label>\\n        </novo-panel-title>\\n    </novo-expansion-panel-header>\\n\\n    <novo-table class=\\\"table-condensed\\\"\\n        [rows]=\\\"details.rows\\\"\\n        [columns]=\\\"details.columns\\\"\\n        [config]=\\\"details.config\\\"\\n        rowIdentifier=\\\"name\\\"></novo-table>\\n\\n\\n</novo-expansion-panel>\\n<novo-expansion-panel theme=\\\"job\\\" [hideToggle]=\\\"jp.expanded\\\" #jp>\\n    <novo-expansion-panel-header>\\n        <novo-panel-title>\\n            <novo-icon>job</novo-icon>\\n            <label>Job Orders</label>\\n        </novo-panel-title>\\n        <button theme=\\\"primary\\\" icon=\\\"add-thin\\\" [hidden]=\\\"!jp.expanded\\\">Add Job Order</button>\\n    </novo-expansion-panel-header>\\n\\n    <p>This is the primary content of the panel.</p>\\n\\n</novo-expansion-panel>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nActivitySectionExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    ActivitySectionExample.prototype.isDisabled;\n    /** @type {?} */\n    ActivitySectionExample.prototype.details;\n}\n/** @type {?} */\nconst TableData$1 = [\n    {\n        name: 'Victoria Cantrell',\n        position: 'Integer Corporation',\n        office: 'Croatia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/08/19'),\n        salary: 208178,\n        percent: 0.5,\n        status: 'New Lead',\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Pearl Crosby',\n        position: 'In PC',\n        office: 'Cambodia',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/10/08'),\n        salary: 114367,\n        percent: 0.5,\n        status: 'New Lead',\n        description: 'When there was despair in the dust bowl and depression across the land, she saw a nation conquer fear itself with a New Deal, new jobs and a new sense of common purpose. Yes we can.',\n        categories: ['Temporary', 'Developer'],\n    },\n    {\n        name: 'Colette Foley',\n        position: 'Lorem Inc.',\n        office: 'Korea, North',\n        ext: { obj: '8262' },\n        startDate: new Date('2017/07/19'),\n        salary: 721473,\n        status: 'New Lead',\n        percent: 1,\n        description: 'To my campaign manager David Plouffe, my chief strategist David Axelrod, and the best campaign team ever assembled in the history of politics – you made this happen, and I am forever grateful for what you’ve sacrificed to get it done.',\n        categories: ['Temporary', 'Developer'],\n    },\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: patterns/record-header/record-header-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst HEADER_THEMES$4 = ['company', 'job', 'candidate', 'contact', 'opportunity', 'lead', 'light', 'white'];\n/** @type {?} */\nconst HEADER_ICONS$4 = ['company', 'job', 'candidate', 'person', 'opportunity', 'lead', 'bolt', 'shield'];\n/**\n * \\@title Basic Header Example\n */\nclass RecordHeaderExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.theme = 'company';\n        this.icon = 'company';\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n            theme: 'ocean',\n            icon: 'clipboard',\n            position: 'growlTopRight',\n        };\n        this.themeIndex = 0;\n        this.refresh();\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.values = undefined;\n        this.tabs = undefined;\n        this.record = undefined;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.values = [{ label: 'Status', data: 'Open' }, { label: 'Phone', data: '555-555-5555' }, { label: 'Address', data: 'Boston, MA' }];\n            this.tabs = ['Overview', 'Edit', 'Activity'];\n            this.record = {\n                id: 101,\n                name: 'Acme Corporation, LLC',\n            };\n        }), 5000);\n    }\n    /**\n     * @return {?}\n     */\n    changeTheme() {\n        this.themeIndex = this.themeIndex === HEADER_THEMES$4.length - 1 ? 0 : this.themeIndex + 1;\n        this.theme = HEADER_THEMES$4[this.themeIndex];\n        this.icon = HEADER_ICONS$4[this.themeIndex];\n    }\n    /**\n     * @param {?} type\n     * @param {?} ev\n     * @return {?}\n     */\n    catchEv(type, ev) {\n        // Set toast options\n        this.options = {\n            title: `${type}`,\n            message: `${ev} fired...`,\n            theme: 'ocean',\n            icon: `${type}`,\n            position: 'growlTopRight',\n        };\n        // Fire toast\n        this.toaster.alert(this.options);\n    }\n}\nRecordHeaderExample.decorators = [\n    { type: Component, args: [{\n                selector: 'record-header-example',\n                template: \"<header theme=\\\"company\\\">\\n  <novo-icon>company</novo-icon>\\n  <h1 novo-title [isLoading]=\\\"record\\\">\\n    <span *skeleton></span>\\n    <span *loaded>{{record.id}} | {{record.name}}</span>\\n  </h1>\\n  <novo-action icon=\\\"convert\\\" tooltip=\\\"Change Theme\\\" (click)=\\\"changeTheme()\\\"></novo-action>\\n  <novo-action icon=\\\"refresh\\\" tooltip=\\\"Refresh\\\" (click)=\\\"refresh()\\\"></novo-action>\\n  <novo-action icon=\\\"times\\\" tooltip=\\\"Show Popup\\\" (click)=\\\"catchEv('close', $event)\\\"></novo-action>\\n  <section>\\n    <button theme=\\\"icon\\\" icon=\\\"google\\\"></button>\\n    <button theme=\\\"icon\\\" icon=\\\"linkedin-f\\\"></button>\\n    <button theme=\\\"icon\\\" icon=\\\"location\\\"></button>\\n  </section>\\n  <novo-list class=\\\"bgc-off-white\\\" direction=\\\"horizontal\\\" [isLoading]=\\\"values\\\">\\n    <novo-value *skeleton></novo-value>\\n    <novo-value *skeleton></novo-value>\\n    <novo-value *ngFor=\\\"let value of values\\\" [label]=\\\"value.label\\\" [data]=\\\"value.data\\\"></novo-value>\\n  </novo-list>\\n  <novo-nav theme=\\\"white\\\" direction=\\\"horizontal\\\" condensed=\\\"true\\\" [isLoading]=\\\"tabs\\\">\\n    <novo-tab *skeleton></novo-tab>\\n    <novo-tab *skeleton></novo-tab>\\n    <novo-tab *skeleton></novo-tab>\\n    <novo-tab *ngFor=\\\"let tab of tabs\\\">\\n      <span>{{tab}}</span>\\n    </novo-tab>\\n  </novo-nav>\\n</header>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nRecordHeaderExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    RecordHeaderExample.prototype.theme;\n    /** @type {?} */\n    RecordHeaderExample.prototype.icon;\n    /** @type {?} */\n    RecordHeaderExample.prototype.record;\n    /** @type {?} */\n    RecordHeaderExample.prototype.values;\n    /** @type {?} */\n    RecordHeaderExample.prototype.tabs;\n    /**\n     * @type {?}\n     * @private\n     */\n    RecordHeaderExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    RecordHeaderExample.prototype.themeIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    RecordHeaderExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky/date-translations/date-translations-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Date Translations Example\n */\nclass DateTranslationsExample {\n    constructor() {\n        this.currentLocale = 'en-US';\n        this.useMilitaryTime = false;\n        this.locales = [\n            {\n                label: 'en-US',\n                value: 'en-US',\n            },\n            {\n                label: 'fr-FR',\n                value: 'fr-FR',\n            },\n            {\n                label: 'ru-RU',\n                value: 'ru-RU',\n            },\n        ];\n        this.militaryTime = [\n            {\n                label: '12 Hour',\n                value: false,\n            },\n            {\n                label: '24 Hour',\n                value: true,\n            },\n        ];\n        this.greeting = 'greeting';\n        this.demoVariables = {\n            today: new Date(),\n            name: 'Jane',\n            balance: 9874.34,\n            count: 1,\n            timestamp: 1506470400000,\n        };\n        this.translateService = TranslateService;\n        TranslateService.setLocation('assets/i18n/');\n        TranslateService.onLocaleChange.subscribe((/**\n         * @param {?} locale\n         * @return {?}\n         */\n        (locale) => {\n            this.currentLocale = locale;\n        }));\n        // Use en-US\n        this.changeLanguage('en-US');\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    changeLanguage(locale) {\n        this.currentLocale = locale;\n        TranslateService.use(locale);\n    }\n    /**\n     * @param {?} useMilitaryTime\n     * @return {?}\n     */\n    changeMilitaryTime(useMilitaryTime) {\n        this.useMilitaryTime = useMilitaryTime;\n        TranslateService.forceDisplayTo24HourTime(useMilitaryTime);\n        this.changeLanguage(this.currentLocale);\n    }\n}\nDateTranslationsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'date-translations-example',\n                template: \"\\n<novo-tiles [options]=\\\"locales\\\" [(ngModel)]=\\\"currentLocale\\\" (onChange)=\\\"changeLanguage($event)\\\"></novo-tiles>\\n<span class=\\\"spacer\\\"></span>\\n<novo-tiles [options]=\\\"militaryTime\\\" [(ngModel)]=\\\"useMilitaryTime\\\" (onChange)=\\\"changeMilitaryTime($event)\\\"></novo-tiles>\\n\\n<h4>Pipe</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p>{{ 'today' | translate: { today: demoVariables.today } }}</p>\\n        <p>{{ 'formatToday' | translate: { today: demoVariables.today } }}</p>\\n        <p>{{ 'long' | translate: { today: demoVariables.today } }}</p>\\n        <p>{{ 'timeLong' | translate: { today: demoVariables.today } }}</p>\\n        <p>{{ 'militaryFormat' | translate: { today: demoVariables.timestamp } }}</p>\\n    </div>\\n</div>\\n\\n<h4>Directive</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p [translate]=\\\"'today'\\\" [dynamicValues]=\\\"{ today: demoVariables.today }\\\"></p>\\n        <p [translate]=\\\"'formatToday'\\\" [dynamicValues]=\\\"{ today: demoVariables.today }\\\"></p>\\n        <p [translate]=\\\"'long'\\\" [dynamicValues]=\\\"{ today: demoVariables.today }\\\"></p>\\n        <p [translate]=\\\"'timeLong'\\\" [dynamicValues]=\\\"{ today: demoVariables.today }\\\"></p>\\n        <p [translate]=\\\"'militaryFormat'\\\" [dynamicValues]=\\\"{ today: demoVariables.timestamp }\\\"></p>\\n    </div>\\n</div>\\n\",\n                styles: [\".spacer{width:8em;display:inline-block}\"]\n            }] }\n];\n/** @nocollapse */\nDateTranslationsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    DateTranslationsExample.prototype.currentLocale;\n    /** @type {?} */\n    DateTranslationsExample.prototype.useMilitaryTime;\n    /** @type {?} */\n    DateTranslationsExample.prototype.locales;\n    /** @type {?} */\n    DateTranslationsExample.prototype.militaryTime;\n    /** @type {?} */\n    DateTranslationsExample.prototype.greeting;\n    /** @type {?} */\n    DateTranslationsExample.prototype.demoVariables;\n    /** @type {?} */\n    DateTranslationsExample.prototype.translateService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky/number-translations/number-translations-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Number & Currency Translations Example\n */\nclass NumberTranslationsExample {\n    constructor() {\n        this.currentLocale = 'en-US';\n        this.locales = [\n            {\n                label: 'en-US',\n                value: 'en-US',\n            },\n            {\n                label: 'fr-FR',\n                value: 'fr-FR',\n            },\n            {\n                label: 'ru-RU',\n                value: 'ru-RU',\n            },\n        ];\n        this.greeting = 'greeting';\n        this.demoVariables = {\n            today: new Date(),\n            name: 'Jane',\n            balance: 9874.34,\n            count: 1,\n        };\n        this.translateService = TranslateService;\n        TranslateService.setLocation('assets/i18n/');\n        TranslateService.onLocaleChange.subscribe((/**\n         * @param {?} locale\n         * @return {?}\n         */\n        (locale) => {\n            this.currentLocale = locale;\n        }));\n        // Use en-US\n        this.changeLanguage('en-US');\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    changeLanguage(locale) {\n        this.currentLocale = locale;\n        TranslateService.use(locale);\n    }\n}\nNumberTranslationsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'number-translations-example',\n                template: \"\\n<novo-tiles [options]=\\\"locales\\\" [(ngModel)]=\\\"currentLocale\\\" (onChange)=\\\"changeLanguage($event)\\\"></novo-tiles>\\n\\n<h4>Pipe</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p>{{ 'alert' | translate: { count: demoVariables.count } }}</p>\\n        <p>{{ 'debt' | translate: { balance: demoVariables.balance } }}</p>\\n    </div>\\n</div>\\n\\n<h4>Directive</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p [translate]=\\\"'alert'\\\" [dynamicValues]=\\\"{ count: demoVariables.count }\\\"></p>\\n        <p [translate]=\\\"'debt'\\\" [dynamicValues]=\\\"{ balance: demoVariables.balance }\\\"></p>\\n    </div>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nNumberTranslationsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    NumberTranslationsExample.prototype.currentLocale;\n    /** @type {?} */\n    NumberTranslationsExample.prototype.locales;\n    /** @type {?} */\n    NumberTranslationsExample.prototype.greeting;\n    /** @type {?} */\n    NumberTranslationsExample.prototype.demoVariables;\n    /** @type {?} */\n    NumberTranslationsExample.prototype.translateService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky/plural-translations/plural-translations-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Plural Translations Example\n */\nclass PluralTranslationsExample {\n    constructor() {\n        this.currentLocale = 'en-US';\n        this.locales = [\n            {\n                label: 'en-US',\n                value: 'en-US',\n            },\n            {\n                label: 'fr-FR',\n                value: 'fr-FR',\n            },\n            {\n                label: 'ru-RU',\n                value: 'ru-RU',\n            },\n        ];\n        this.greeting = 'greeting';\n        this.demoVariables = {\n            today: new Date(),\n            name: 'Jane',\n            balance: 9874.34,\n            count: 1,\n        };\n        this.translateService = TranslateService;\n        TranslateService.setLocation('assets/i18n/');\n        TranslateService.onLocaleChange.subscribe((/**\n         * @param {?} locale\n         * @return {?}\n         */\n        (locale) => {\n            this.currentLocale = locale;\n        }));\n        // Use en-US\n        this.changeLanguage('en-US');\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    changeLanguage(locale) {\n        this.currentLocale = locale;\n        TranslateService.use(locale);\n    }\n}\nPluralTranslationsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'plural-translations-example',\n                template: \"\\n<novo-tiles [options]=\\\"locales\\\" [(ngModel)]=\\\"currentLocale\\\" (onChange)=\\\"changeLanguage($event)\\\"></novo-tiles>\\n\\n<h4>Pipe</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p>{{ 'messages' | translate: { quantity: 0 } }}</p>\\n        <p>{{ 'messages' | translate: { quantity: 1 } }}</p>\\n        <p>{{ 'messages' | translate: { quantity: 20 } }}</p>\\n        <p>{{ 'messages' | translate: { quantity: 50 } }}</p>\\n        <p>{{ 'candidate' | translate:{ gender: 'female', quantity: 1, host: 'Jane', candidate: 'candidates' } }}</p>\\n        <p>{{ 'candidate' | translate:{ gender: 'male', quantity: 0, host: 'John', candidate: 'candidates' } }}</p>\\n        <p>{{ 'candidate' | translate:{ gender: 'other', quantity: 0, host: 'Les gens', candidate: 'candidates' } }}</p>\\n    </div>\\n</div>\\n\\n<h4>Directive</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p [translate]=\\\"'messages'\\\" [dynamicValues]=\\\"{ quantity: 0 }\\\"></p>\\n        <p [translate]=\\\"'messages'\\\" [dynamicValues]=\\\"{ quantity: 1 }\\\"></p>\\n        <p [translate]=\\\"'messages'\\\" [dynamicValues]=\\\"{ quantity: 20 }\\\"></p>\\n        <p [translate]=\\\"'messages'\\\" [dynamicValues]=\\\"{ quantity: 50 }\\\"></p>\\n        <p [translate]=\\\"'candidate'\\\" [dynamicValues]=\\\"{ gender: 'female', quantity: 1, host: 'Jane', candidate: 'candidates' }\\\"></p>\\n        <p [translate]=\\\"'candidate'\\\" [dynamicValues]=\\\"{ gender: 'male', quantity: 0, host: 'John', candidate: 'candidates' }\\\"></p>\\n        <p [translate]=\\\"'candidate'\\\" [dynamicValues]=\\\"{ gender: 'other', quantity: 0, host: 'Les gens', candidate: 'candidates' }\\\"></p>\\n    </div>\\n</div>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nPluralTranslationsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    PluralTranslationsExample.prototype.currentLocale;\n    /** @type {?} */\n    PluralTranslationsExample.prototype.locales;\n    /** @type {?} */\n    PluralTranslationsExample.prototype.greeting;\n    /** @type {?} */\n    PluralTranslationsExample.prototype.demoVariables;\n    /** @type {?} */\n    PluralTranslationsExample.prototype.translateService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky/simple-translations/simple-translations-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Simple Translations Example\n */\nclass SimpleTranslationsExample {\n    constructor() {\n        this.currentLocale = 'en-US';\n        this.locales = [\n            {\n                label: 'en-US',\n                value: 'en-US',\n            },\n            {\n                label: 'fr-FR',\n                value: 'fr-FR',\n            },\n            {\n                label: 'ru-RU',\n                value: 'ru-RU',\n            },\n        ];\n        this.greeting = 'greeting';\n        this.demoVariables = {\n            today: new Date(),\n            name: 'Jane',\n            balance: 9874.34,\n            count: 1,\n        };\n        this.translateService = TranslateService;\n        TranslateService.onLocaleChange.subscribe((/**\n         * @param {?} locale\n         * @return {?}\n         */\n        (locale) => {\n            this.currentLocale = locale;\n        }));\n        // Use en-US\n        this.changeLanguage('en-US');\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    changeLanguage(locale) {\n        this.currentLocale = locale;\n        TranslateService.use(locale);\n    }\n}\nSimpleTranslationsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'simple-translations-example',\n                template: \"\\n<novo-tiles [options]=\\\"locales\\\" [(ngModel)]=\\\"currentLocale\\\" (onChange)=\\\"changeLanguage($event)\\\"></novo-tiles>\\n\\n<h4>Pipe</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p>{{ 'greeting' | translate }}</p>\\n    </div>\\n</div>\\n\\n<h4>Directive</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p [translate]=\\\"'greeting'\\\"></p>\\n    </div>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nSimpleTranslationsExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    SimpleTranslationsExample.prototype.currentLocale;\n    /** @type {?} */\n    SimpleTranslationsExample.prototype.locales;\n    /** @type {?} */\n    SimpleTranslationsExample.prototype.greeting;\n    /** @type {?} */\n    SimpleTranslationsExample.prototype.demoVariables;\n    /** @type {?} */\n    SimpleTranslationsExample.prototype.translateService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/chomsky/translations-variables/translations-variables-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Translations with Variables Example\n */\nclass TranslationsVariablesExample {\n    constructor() {\n        this.currentLocale = 'en-US';\n        this.locales = [\n            {\n                label: 'en-US',\n                value: 'en-US',\n            },\n            {\n                label: 'fr-FR',\n                value: 'fr-FR',\n            },\n            {\n                label: 'ru-RU',\n                value: 'ru-RU',\n            },\n        ];\n        this.greeting = 'greeting';\n        this.demoVariables = {\n            today: new Date(),\n            name: 'Jane',\n            balance: 9874.34,\n            count: 1,\n        };\n        this.translateService = TranslateService;\n        // Listen for changes\n        TranslateService.onLocaleChange.subscribe((/**\n         * @param {?} locale\n         * @return {?}\n         */\n        (locale) => {\n            this.currentLocale = locale;\n        }));\n        // Use en-US\n        this.changeLanguage('en-US');\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    changeLanguage(locale) {\n        this.currentLocale = locale;\n        TranslateService.use(locale);\n    }\n}\nTranslationsVariablesExample.decorators = [\n    { type: Component, args: [{\n                selector: 'translations-variables-example',\n                template: \"\\n<novo-tiles [options]=\\\"locales\\\" [(ngModel)]=\\\"currentLocale\\\" (onChange)=\\\"changeLanguage($event)\\\"></novo-tiles>\\n\\n<h4>Pipe</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p>{{ 'farewell' | translate: { name: 'Jane' } }}</p>\\n    </div>\\n</div>\\n\\n<h4>Directive</h4>\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-body\\\">\\n        <p [translate]=\\\"'farewell'\\\" [dynamicValues]=\\\"{ name: 'Jane' }\\\"></p>\\n    </div>\\n</div>\\n\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nTranslationsVariablesExample.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    TranslationsVariablesExample.prototype.currentLocale;\n    /** @type {?} */\n    TranslationsVariablesExample.prototype.locales;\n    /** @type {?} */\n    TranslationsVariablesExample.prototype.greeting;\n    /** @type {?} */\n    TranslationsVariablesExample.prototype.demoVariables;\n    /** @type {?} */\n    TranslationsVariablesExample.prototype.translateService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/MockMeta.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MockMeta$1 = {\n    entity: 'ENTITY_NAME',\n    entityMetaUrl: '',\n    label: 'ENTIY_LABEL',\n    fields: [\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            sortOrder: 10,\n        },\n        {\n            name: 'jersey-number',\n            type: 'float',\n            label: 'Jersey Number',\n            description: 'There was a field below me!',\n            sortOrder: 50,\n        },\n        {\n            name: 'jersey-color',\n            type: 'select',\n            label: 'Jersey Color',\n            options: ['Red', 'Blue', 'Green'],\n            sortOrder: 51,\n        },\n        {\n            name: 'cat',\n            type: 'text',\n            label: 'Favorite Cat',\n            sortOrder: 550,\n        },\n        {\n            name: 'remove-select',\n            type: 'select',\n            label: 'Remove the field below?',\n            options: ['Yes', 'No'],\n            sortOrder: 301,\n        },\n        {\n            name: 'to-be-removed',\n            type: 'text',\n            label: 'This field will be removed',\n            sortOrder: 302,\n        },\n    ],\n};\n/** @type {?} */\nconst MockMetaHeaders$1 = {\n    sectionHeaders: [\n        {\n            label: 'Cat Related',\n            name: 'sectionHeader1',\n            sortOrder: 500,\n            enabled: true,\n        },\n        {\n            label: 'Important',\n            name: 'sectionHeader2',\n            sortOrder: 45,\n            enabled: true,\n        },\n        {\n            label: 'Remove field on change',\n            name: 'sectionHeader3',\n            sortOrder: 300,\n            enabled: true,\n        },\n    ],\n};\nObject.assign(MockMetaHeaders$1, MockMeta$1);\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-adding-removing/fi-adding-removing-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Adding Removing Example\n */\nclass FiAddingRemovingExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = [];\n        /** @type {?} */\n        const addingRemovingFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - addingRemovingFunction'); // tslint:disable-line\n            // Control above field\n            API.addControl('cat', {\n                key: 'fieldAbove',\n                type: 'text',\n                label: 'Added Above Cat',\n            }, FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD, 'DEFAULT');\n            // Control below field\n            API.addControl('name', {\n                key: 'fieldBelow',\n                type: 'text',\n                label: 'Added Below Name',\n            }, FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD, ':)');\n            // Control at the top of the form\n            API.addControl('name', {\n                key: 'top',\n                type: 'text',\n                label: 'Added To The Very Top',\n            }, FieldInteractionApi.FIELD_POSITIONS.TOP_OF_FORM, 'HIGHEST');\n            // Control at the bottom of the form\n            API.addControl('name', {\n                key: 'bottom',\n                type: 'text',\n                label: 'Added To The Very Bottom',\n            }, FieldInteractionApi.FIELD_POSITIONS.BOTTOM_OF_FORM, 'LOWEST');\n            // Remove the jersey color field\n            API.removeControl('jersey-color');\n        });\n        /** @type {?} */\n        const removeAddOnChangeFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - removeAddOnChangeFunction'); // tslint:disable-line\n            // tslint:disable-line\n            // Select control with a field interaction on change event\n            /** @type {?} */\n            const currentValue = API.getActiveValue();\n            if (currentValue === 'Yes') {\n                API.removeControl('to-be-removed');\n            }\n            else {\n                API.addControl('remove-select', {\n                    key: 'to-be-removed',\n                    name: 'to-be-removed',\n                    type: 'text',\n                    label: 'This field will be removed',\n                }, FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD);\n            }\n        });\n        // Adding / Removing Interactions\n        this.controls = formUtils.toFieldSets(MockMetaHeaders$1, '$ USD', {}, { token: 'TOKEN', military: true });\n        this.controls[2].controls[0].interactions = [{ event: 'change', script: removeAddOnChangeFunction }];\n        this.controls[0].controls[0].interactions = [{ event: 'init', script: addingRemovingFunction }];\n        this.form = formUtils.toFormGroupFromFieldset(this.controls);\n    }\n}\nFiAddingRemovingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-adding-removing-example',\n                template: \"<novo-dynamic-form [fieldsets]=\\\"controls\\\" [(form)]=\\\"form\\\" layout=\\\"vertical\\\"></novo-dynamic-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiAddingRemovingExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiAddingRemovingExample.prototype.form;\n    /** @type {?} */\n    FiAddingRemovingExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiAddingRemovingExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-async/fi-async-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Async Example\n */\nclass FiAsyncExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = {};\n        /** @type {?} */\n        const asyncFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - asyncFunction'); // tslint:disable-line\n            if (API.getActiveKey() === 'async1') {\n                API.setLoading(API.getActiveKey(), true);\n                setTimeout((/**\n                 * @return {?}\n                 */\n                function () {\n                    API.setLoading(API.getActiveKey(), false);\n                }), 3000);\n            }\n            else {\n                API.setLoading(API.getActiveKey(), true);\n                setTimeout((/**\n                 * @return {?}\n                 */\n                function () {\n                    API.setLoading(API.getActiveKey(), false);\n                }), 15000);\n            }\n        });\n        // Async Interactions\n        this.controls.async1Control = new TextBoxControl({\n            type: 'text',\n            key: 'async1',\n            value: 5,\n            label: 'Async Validation',\n            description: 'As you finish typing, the async check will mark the form as invalid',\n            interactions: [{ event: 'change', script: asyncFunction }],\n        });\n        this.controls.async2Control = new TextBoxControl({\n            type: 'text',\n            key: 'async2',\n            value: 5,\n            label: 'Async Validation (takes too long)',\n            description: 'This one will take too long and trigger the default timeout (10s)',\n            interactions: [{ event: 'change', script: asyncFunction }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.async1Control, this.controls.async2Control]);\n    }\n}\nFiAsyncExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-async-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.async1Control\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.async2Control\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiAsyncExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiAsyncExample.prototype.form;\n    /** @type {?} */\n    FiAsyncExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiAsyncExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-calculation/fi-calculation-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Calculation Example\n */\nclass FiCalculationExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = {};\n        this.snippet = {};\n        /** @type {?} */\n        const calculationFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - calculationFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const a = Number(API.getValue('a'));\n            /** @type {?} */\n            const b = Number(API.getValue('b'));\n            API.setValue('sum', a + b);\n            API.setValue('date', new Date());\n        });\n        // Calculation Field Interactions\n        this.controls.aControl = new TextBoxControl({\n            type: 'number',\n            key: 'a',\n            label: 'A',\n            value: 1,\n            interactions: [{ event: 'change', invokeOnInit: false, script: calculationFunction }],\n        });\n        this.controls.bControl = new TextBoxControl({\n            type: 'number',\n            key: 'b',\n            label: 'B',\n            value: 1,\n            interactions: [{ event: 'change', invokeOnInit: false, script: calculationFunction }],\n        });\n        this.controls.sumControl = new TextBoxControl({\n            type: 'number',\n            key: 'sum',\n            label: 'Sum',\n            description: 'I am automatically set when you type in the boxes above me!',\n            readOnly: true,\n        });\n        this.controls.dateModifiedControl = new DateTimeControl({\n            key: 'date',\n            label: 'Date Last Modified',\n            value: new Date(),\n        });\n        this.form = formUtils.toFormGroup([\n            this.controls.aControl,\n            this.controls.bControl,\n            this.controls.sumControl,\n            this.controls.dateModifiedControl,\n        ]);\n    }\n}\nFiCalculationExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-calculation-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.aControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.bControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.sumControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.dateModifiedControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">\\n    Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiCalculationExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiCalculationExample.prototype.form;\n    /** @type {?} */\n    FiCalculationExample.prototype.controls;\n    /** @type {?} */\n    FiCalculationExample.prototype.snippet;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiCalculationExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-confirm/fi-confirm-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Confirm Example\n */\nclass FiConfirmExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = {};\n        /** @type {?} */\n        const confirmFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - confirmFunction'); // tslint:disable-line\n            if (API.getActiveKey() === 'confirm1') {\n                API.confirmChanges(API.getActiveKey());\n            }\n            else {\n                API.confirmChanges(API.getActiveKey(), 'This is VERY serious!');\n            }\n        });\n        // Confirm Interactions\n        this.controls.confirm1Control = new TextBoxControl({\n            type: 'text',\n            key: 'confirm1',\n            value: 'Hello!',\n            label: 'Prompt!',\n            description: 'As you take focus out of this field you will be prompted for changes!',\n            interactions: [{ event: 'change', script: confirmFunction }],\n        });\n        this.controls.confirm2Control = new TextBoxControl({\n            type: 'text',\n            key: 'confirm2',\n            value: 'Another!',\n            label: 'Custom Promp!',\n            description: 'You can provide a custom message!',\n            interactions: [{ event: 'change', script: confirmFunction }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.confirm1Control, this.controls.confirm2Control]);\n    }\n}\nFiConfirmExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-confirm-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.confirm1Control\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.confirm2Control\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiConfirmExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiConfirmExample.prototype.form;\n    /** @type {?} */\n    FiConfirmExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiConfirmExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-enable-disable/fi-enable-disable-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Enable Disable Example\n */\nclass FiEnableDisableExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = {};\n        /** @type {?} */\n        const enableDisableFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - enableDisableFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const currentValue = API.getActiveValue();\n            if (!currentValue) {\n                API.enable('text');\n            }\n            else {\n                API.disable('text');\n            }\n        });\n        // Enable/Disable Field Interactions\n        this.controls.textControl = new TextBoxControl({\n            type: 'text',\n            key: 'text',\n            label: 'MyField',\n        });\n        this.controls.toggleControl = new CheckboxControl({\n            key: 'toggle',\n            label: 'Disable?',\n            description: 'I will disable the above field!',\n            interactions: [{ event: 'change', script: enableDisableFunction }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.textControl, this.controls.toggleControl]);\n    }\n}\nFiEnableDisableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-enable-disable-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.textControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.toggleControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiEnableDisableExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiEnableDisableExample.prototype.form;\n    /** @type {?} */\n    FiEnableDisableExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiEnableDisableExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-globals/fi-globals-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Globals Example\n */\nclass FiGlobalsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const globalsFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - globalsFunction'); // tslint:disable-line\n            API.setProperty(API.getActiveKey(), 'label', `${API.getProperty(API.getActiveKey(), 'label')} -- ${API.globals.TEST}`);\n        });\n        // Global Field Interactions\n        this.controls.globalControl = new TextBoxControl({\n            type: 'number',\n            key: 'global',\n            value: 5,\n            label: 'Form Input',\n            description: 'The label gets updated on load to use a global!',\n            interactions: [{ event: 'init', script: globalsFunction, invokeOnInit: true }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.globalControl]);\n    }\n}\nFiGlobalsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-globals-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.globalControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiGlobalsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiGlobalsExample.prototype.form;\n    /** @type {?} */\n    FiGlobalsExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiGlobalsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-hide-show/fi-hide-show-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Hide Show Example\n */\nclass FiHideShowExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const hideShowFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - hideShowFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const activeValue = API.getActiveValue();\n            if (!activeValue) {\n                API.show('text');\n            }\n            else {\n                API.hide('text');\n            }\n        });\n        // Hide/Show Field Interactions\n        this.controls.textControl = new TextBoxControl({\n            type: 'text',\n            key: 'text',\n            required: true,\n            label: 'MyField',\n        });\n        this.controls.text2Control = new TextBoxControl({\n            type: 'text',\n            key: 'text2',\n            label: 'MyField',\n        });\n        this.controls.toggleControl = new CheckboxControl({\n            key: 'toggle',\n            label: 'Hidden?',\n            description: 'I will toggle the above field to display or not!',\n            interactions: [{ event: 'change', script: hideShowFunction }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.textControl, this.controls.text2Control, this.controls.toggleControl]);\n    }\n}\nFiHideShowExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-hide-show-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.textControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.text2Control\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.toggleControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiHideShowExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiHideShowExample.prototype.form;\n    /** @type {?} */\n    FiHideShowExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiHideShowExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-messaging/fi-messaging-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Messaging Example\n */\nclass FiMessagingExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const messagingFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - messagingFunction'); // tslint:disable-line\n            if (API.getActiveKey() === 'toast') {\n                API.displayToast({\n                    title: 'New Value',\n                    message: API.getActiveValue(),\n                });\n            }\n            else if (API.getActiveKey() === 'tip' || API.getActiveKey() === 'tipHtml') {\n                /** @type {?} */\n                const sanitize = !API.getValue('tipHtml');\n                API.displayTip('tip', API.getValue('tip'), 'info', true, sanitize);\n            }\n            else if (API.getActiveKey() === 'prompt') {\n                API.promptUser(API.getActiveKey(), ['Update Fee Arrangement from Selected Company', 'Update DateLastModified to right now!']).then((/**\n                 * @param {?} result\n                 * @return {?}\n                 */\n                function (result) {\n                    if (result) {\n                        console.log('PERFORM'); // tslint:disable-line\n                    }\n                    else {\n                        console.log(\"DON'T PERFORM\"); // tslint:disable-line\n                    }\n                }));\n            }\n        });\n        // Messaging Field Interactions\n        this.controls.toastControl = new TextBoxControl({\n            type: 'text',\n            key: 'toast',\n            label: 'Toast',\n            description: 'I will trigger a toast as you change the value!',\n            interactions: [{ event: 'change', script: messagingFunction }],\n        });\n        this.controls.tipControl = new TextBoxControl({\n            type: 'text',\n            key: 'tip',\n            label: 'Tip',\n            description: 'I will trigger a tip well as you change the value!',\n            interactions: [{ event: 'change', script: messagingFunction }],\n        });\n        this.controls.tipHtmlControl = new CheckboxControl({\n            key: 'tipHtml',\n            label: 'Display Tip as HTML',\n            description: 'Sets the API.displayTip() sanitize parameter to false.',\n            value: false,\n            interactions: [{ event: 'change', script: messagingFunction }],\n        });\n        this.controls.promptControl = new TextBoxControl({\n            type: 'text',\n            key: 'prompt',\n            label: 'Prompt User of Downstream Changes',\n            interactions: [{ event: 'change', script: messagingFunction }],\n        });\n        this.form = formUtils.toFormGroup([\n            this.controls.toastControl,\n            this.controls.tipControl,\n            this.controls.tipHtmlControl,\n            this.controls.promptControl,\n        ]);\n    }\n}\nFiMessagingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-messaging-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.tipControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.tipHtmlControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.toastControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.promptControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiMessagingExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiMessagingExample.prototype.form;\n    /** @type {?} */\n    FiMessagingExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiMessagingExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-modify-added-picker/fi-modify-added-picker-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Modify Added Picker Example\n */\nclass FiModifyAddedPickerExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.controls = {};\n        // Adding / Removing Interactions\n        /** @type {?} */\n        let entityPickerFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - entityPickerFunction'); // tslint:disable-line\n            API.modifyPickerConfig('custom-entity-picker', {\n                optionsPromise: (/**\n                 * @param {?} query\n                 * @param {?} http\n                 * @return {?}\n                 */\n                (query, http) => {\n                    return new Promise((/**\n                     * @param {?} resolve\n                     * @param {?} reject\n                     * @return {?}\n                     */\n                    function (resolve, reject) {\n                        if (query && query.length) {\n                            http\n                                .get('http://novo-elements-mock.getsandbox.com/users')\n                                .map((/**\n                             * @param {?} results\n                             * @return {?}\n                             */\n                            function (results) {\n                                return results.map((/**\n                                 * @param {?} result\n                                 * @return {?}\n                                 */\n                                (result) => {\n                                    // Setting the searchEntity on the item is important. We use it to format your display properly.\n                                    // Valid options are: Candidate, ClientContact, ClientCorporation, CorporateUser, JobOrder, Lead, Opportunity, and Placement\n                                    result.searchEntity = 'Candidate';\n                                    return result;\n                                }));\n                            }))\n                                .subscribe(resolve, reject);\n                        }\n                        else {\n                            resolve(['DEFAULT']);\n                        }\n                    }));\n                }),\n                format: '$name',\n                // This is how we set the picker to be of an entity type\n                resultsTemplateType: 'entity-picker',\n            });\n        });\n        this.controls.pickerControl = new PickerControl({\n            key: 'custom-entity-picker',\n            name: 'custom-entity-picker',\n            config: {\n                options: [],\n            },\n            label: 'Custom Entity Picker',\n            interactions: [{ event: 'init', script: entityPickerFunction }],\n        });\n        this.form = this.formUtils.toFormGroup([this.controls.pickerControl]);\n    }\n}\nFiModifyAddedPickerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-modify-added-picker-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n  <div class=\\\"novo-form-row\\\">\\n    <novo-control [form]=\\\"form\\\" [control]=\\\"controls.pickerControl\\\"></novo-control>\\n  </div>\\n</novo-form>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiModifyAddedPickerExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiModifyAddedPickerExample.prototype.form;\n    /** @type {?} */\n    FiModifyAddedPickerExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiModifyAddedPickerExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-modify-options/fi-modify-options-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Modify Options Example\n */\nclass FiModifyOptionsExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const modifyOptionsAddFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - modifyOptionsAddFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const currentValue = API.getActiveValue();\n            if (!currentValue) {\n                API.removeStaticOption('select', 'NEW');\n                API.removeStaticOption('picker', 'NEW');\n            }\n            else {\n                API.addStaticOption('select', 'NEW');\n                API.addStaticOption('select', 'NEW'); // Duplicate options will be ignored\n                API.addStaticOption('picker', 'NEW');\n            }\n        });\n        /** @type {?} */\n        const modifyOptionsAsyncFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - modifyOptionsAsyncFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const currentValue = API.getActiveValue();\n            switch (currentValue) {\n                case 1:\n                    // Static\n                    API.setProperty('picker', 'label', 'Static Picker');\n                    API.modifyPickerConfig('picker', {\n                        options: ['A', 'B', 'C'],\n                    });\n                    break;\n                case 2:\n                    // Async with Options URL\n                    API.setProperty('picker', 'label', 'Async Picker (with options url)');\n                    API.modifyPickerConfig('picker', {\n                        format: '$name $test',\n                        optionsUrl: 'http://novo-elements-mock.getsandbox.com/users',\n                    }, (/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    function (result) {\n                        result.test = 'Built with Options URL!';\n                        return result;\n                    }));\n                    break;\n                case 3:\n                    // Async with Options URL Builder\n                    API.setProperty('picker', 'label', 'Async Picker (with options url builder)');\n                    API.modifyPickerConfig('picker', {\n                        format: '$name $test',\n                        optionsUrlBuilder: (/**\n                         * @param {?} query\n                         * @return {?}\n                         */\n                        (query) => {\n                            return 'http://novo-elements-mock.getsandbox.com/users';\n                        }),\n                    }, (/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    function (result) {\n                        result.test = 'Built with Options URL Builder!';\n                        return result;\n                    }));\n                    break;\n                case 4:\n                    // Async with Options Promise\n                    API.setProperty('picker', 'label', 'Async Picker (with options promise)');\n                    API.modifyPickerConfig('picker', {\n                        format: '$name $test',\n                        /**\n                         * @param {?} query\n                         * @param {?} http\n                         * @return {?}\n                         */\n                        optionsPromise(query, http) {\n                            return new Promise((/**\n                             * @param {?} resolve\n                             * @param {?} reject\n                             * @return {?}\n                             */\n                            function (resolve, reject) {\n                                if (query && query.length) {\n                                    http\n                                        .get('http://novo-elements-mock.getsandbox.com/users')\n                                        .map((/**\n                                     * @param {?} results\n                                     * @return {?}\n                                     */\n                                    function (results) {\n                                        return results.map((/**\n                                         * @param {?} result\n                                         * @return {?}\n                                         */\n                                        (result) => {\n                                            result.test = 'Built with Options Promise';\n                                            return result;\n                                        }));\n                                    }))\n                                        .subscribe(resolve, reject);\n                                }\n                                else {\n                                    resolve(['DEFAULT']);\n                                }\n                            }));\n                        },\n                    });\n                    break;\n                default:\n                    break;\n            }\n        });\n        // Modify Options Field Interactions\n        this.controls.selectControl = new SelectControl({\n            key: 'select',\n            label: 'Select',\n            options: ['A', 'B', 'C'],\n        });\n        this.controls.pickerControl = new PickerControl({\n            key: 'picker',\n            label: 'Static Picker',\n            config: {\n                options: ['A', 'B', 'C'],\n            },\n        });\n        this.controls.toggleControl = new CheckboxControl({\n            key: 'toggle',\n            label: 'Add Option?',\n            description: 'I will add options to the above field!',\n            interactions: [{ event: 'change', script: modifyOptionsAddFunction }],\n        });\n        this.controls.makePickerAsyncControl = new SelectControl({\n            key: 'async',\n            label: 'Async Picker?',\n            description: 'I will make the picker now hit a service!',\n            value: 1,\n            options: [\n                { label: 'Not Async', value: 1 },\n                { label: 'Async With Options URL', value: 2 },\n                { label: 'Async With Options URL Builder', value: 3 },\n                { label: 'Async With Options Promise', value: 4 },\n            ],\n            interactions: [{ event: 'change', script: modifyOptionsAsyncFunction }],\n        });\n        this.form = formUtils.toFormGroup([\n            this.controls.selectControl,\n            this.controls.pickerControl,\n            this.controls.toggleControl,\n            this.controls.makePickerAsyncControl,\n        ]);\n    }\n}\nFiModifyOptionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-modify-options-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.selectControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.pickerControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.toggleControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.makePickerAsyncControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiModifyOptionsExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiModifyOptionsExample.prototype.form;\n    /** @type {?} */\n    FiModifyOptionsExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiModifyOptionsExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-nested/fi-nested-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Nested Form Example\n */\nclass FiNestedExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.initialValue = [\n            { selected: true, label: `First Shift`, multiplier: 1, payRate: 40 },\n            { selected: false, label: ``, multiplier: 1.5, payRate: 60 },\n            { selected: false, label: ``, multiplier: 2.0, payRate: 80 },\n        ];\n        /** @type {?} */\n        const onMinMaxPayRateChanged = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            // Validate the min/max range\n            /** @type {?} */\n            const minPayRate = Number(API.getValue('minPayRate'));\n            /** @type {?} */\n            const maxPayRate = Number(API.getValue('maxPayRate'));\n            if (minPayRate > maxPayRate) {\n                API.markAsInvalid(API.getActiveKey(), 'Range is invalid. Please ensure that the minimum does not exceed the maximum.');\n                API.displayTip('minPayRate', 'Range is invalid. Please ensure that the minimum does not exceed the maximum.', 'caution');\n            }\n            else {\n                // The API.form is equal the top level form since the min/max fields are directly on the form, not part of a nested form\n                this.calculatePayRates(API, API.form);\n                API.clearTip('minPayRate');\n            }\n        });\n        /** @type {?} */\n        const onSelectedChanged = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            // If my row is selected, deselect other rows without causing cascading changes\n            if (API.getActiveValue() === true) {\n                API.getParent().controls.forEach((/**\n                 * @param {?} form\n                 * @return {?}\n                 */\n                form => {\n                    if (API.getIndex() !== API.getIndex(form)) {\n                        API.setValue(API.getActiveKey(), false, { emitEvent: false }, form);\n                    }\n                }));\n            }\n        });\n        /** @type {?} */\n        const onLabelChanged = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            // Update the labels for the Overtime/Double Time earn codes\n            if (API.getIndex() === 0) {\n                /** @type {?} */\n                const overtimeForm = API.getParent().controls[1];\n                /** @type {?} */\n                const doubleTimeForm = API.getParent().controls[2];\n                if (overtimeForm) {\n                    API.setValue(API.getActiveKey(), API.getActiveValue() + ' - OT', { emitEvent: false }, overtimeForm);\n                    API.setReadOnly(API.getActiveKey(), true, overtimeForm);\n                }\n                if (doubleTimeForm) {\n                    API.setValue(API.getActiveKey(), API.getActiveValue() + ' - DT', { emitEvent: false }, doubleTimeForm);\n                    API.setReadOnly(API.getActiveKey(), true, doubleTimeForm);\n                }\n            }\n        });\n        /** @type {?} */\n        const onMultiplierChanged = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            // Disable the base rate multiplier since it is fixed at one\n            API.setReadOnly(API.getActiveKey(), API.getIndex() === 0);\n            // The parent of this nested row form is the rows form array, and the grandparent is the main form object\n            /** @type {?} */\n            const rowsFormArray = API.getParent();\n            /** @type {?} */\n            const topLevelForm = API.getParent(rowsFormArray);\n            this.calculatePayRates(API, topLevelForm);\n        });\n        /** @type {?} */\n        const onPayRateChanged = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            // Disable the non-base rate payRates since they are auto calculated\n            API.setReadOnly(API.getActiveKey(), API.getIndex() > 0);\n            // The parent of this nested row form is the rows form array, and the grandparent is the main form object\n            /** @type {?} */\n            const rowsFormArray = API.getParent();\n            /** @type {?} */\n            const topLevelForm = API.getParent(rowsFormArray);\n            this.calculatePayRates(API, topLevelForm);\n        });\n        this.minPayRateControl = new TextBoxControl({\n            key: 'minPayRate',\n            type: 'currency',\n            label: 'Minimum Pay Rate',\n            value: 20,\n            currencyFormat: '$ USD',\n            interactions: [{ event: 'change', script: onMinMaxPayRateChanged }],\n            tooltip: 'If the value of any pay rates are below this value then the form will be marked invalid.',\n        });\n        this.maxPayRateControl = new TextBoxControl({\n            key: 'maxPayRate',\n            type: 'currency',\n            label: 'Maximum Pay Rate',\n            value: 80,\n            tooltip: 'If the value of any pay rates are above this value then the form will be marked invalid.',\n            currencyFormat: '$ USD',\n            interactions: [{ event: 'change', script: onMinMaxPayRateChanged }],\n            tipWell: {\n                tip: 'This form is interactive! Try adjusting the min/max and pay rates to see the custom form validation logic that is enabled by field interactions across nested forms.',\n                icon: 'info',\n            },\n        });\n        this.form = formUtils.toFormGroup([this.minPayRateControl, this.maxPayRateControl]);\n        this.controls = [\n            new RadioControl({\n                key: 'selected',\n                label: 'Selected',\n                options: [{ label: '', value: true }],\n                interactions: [{ event: 'change', script: onSelectedChanged }],\n                tooltip: 'Selecting a radio button will de-select buttons on the other forms, making multiple nested forms appear as a single form.',\n            }),\n            new TextBoxControl({\n                key: 'label',\n                label: 'Earn Code',\n                required: true,\n                interactions: [{ invokeOnInit: true, event: 'change', script: onLabelChanged }],\n                tooltip: 'Labels on other nested forms will be updated based on this label.',\n            }),\n            new TextBoxControl({\n                key: 'multiplier',\n                label: 'Multiplier',\n                type: 'bigdecimal',\n                required: true,\n                interactions: [{ invokeOnInit: true, event: 'change', script: onMultiplierChanged }],\n                tooltip: 'Updating the multiplier will auto calculate the resulting pay rate.',\n            }),\n            new TextBoxControl({\n                key: 'payRate',\n                label: 'Pay Rate',\n                type: 'currency',\n                required: true,\n                interactions: [{ invokeOnInit: true, event: 'change', script: onPayRateChanged }],\n                currencyFormat: '$ USD',\n            }),\n        ];\n    }\n    /**\n     * @private\n     * @param {?} API\n     * @param {?} topLevelForm\n     * @return {?}\n     */\n    calculatePayRates(API, topLevelForm) {\n        // Get values from the top level form controls\n        /** @type {?} */\n        const minPayRate = Number(API.getValue('minPayRate', topLevelForm));\n        /** @type {?} */\n        const maxPayRate = Number(API.getValue('maxPayRate', topLevelForm));\n        // Walk down to the nested forms: 'rows' is the key input value passed to the NovoControlGroup for constructing the formArray\n        /** @type {?} */\n        const rowForms = API.getFormGroupArray('rows', topLevelForm);\n        /** @type {?} */\n        const baseRowForm = rowForms[0];\n        /** @type {?} */\n        const basePayRate = Number(API.getValue('payRate', baseRowForm));\n        /** @type {?} */\n        let isPayRateValid = true;\n        rowForms.forEach((/**\n         * @param {?} form\n         * @return {?}\n         */\n        form => {\n            // Calculate the payRate for read only Overtime / Double time fields\n            if (API.getIndex(form) > 0) {\n                /** @type {?} */\n                const multiplier = Number(API.getValue('multiplier', form));\n                API.setValue('payRate', basePayRate * multiplier, { emitEvent: false }, form);\n            }\n            // Determine if each pay rate is valid. Put a tipWell on the invalid rows.\n            /** @type {?} */\n            const payRate = Number(API.getValue('payRate', form));\n            if (payRate < minPayRate) {\n                isPayRateValid = false;\n                API.displayTip('payRate', 'rate is below the minimum', 'caution', false, false, form);\n            }\n            else if (payRate > maxPayRate) {\n                isPayRateValid = false;\n                API.displayTip('payRate', 'rate exceeds the maximum', 'caution', false, false, form);\n            }\n            else {\n                API.clearTip('payRate', form);\n            }\n        }));\n        // Mark the editable row as invalid if any nested payRate form has a value outside of the min/max bounds\n        if (isPayRateValid) {\n            API.markAsValid('payRate', baseRowForm);\n        }\n        else {\n            API.markAsInvalid('payRate', 'pay rate is less than the minimum pay rate', baseRowForm);\n        }\n    }\n}\nFiNestedExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-nested-example',\n                template: \"<novo-form [form]=\\\"form\\\">\\n  <div class=\\\"novo-form-row\\\">\\n    <novo-control [form]=\\\"form\\\" [control]=\\\"minPayRateControl\\\"></novo-control>\\n  </div>\\n  <div class=\\\"novo-form-row\\\">\\n    <novo-control [form]=\\\"form\\\" [control]=\\\"maxPayRateControl\\\"></novo-control>\\n  </div>\\n  <novo-control-group [form]=\\\"form\\\"\\n                      [controls]=\\\"controls\\\"\\n                      [initialValue]=\\\"initialValue\\\"\\n                      remove=\\\"false\\\"\\n                      edit=\\\"false\\\"\\n                      key=\\\"rows\\\"></novo-control-group>\\n</novo-form>\\n\\n<div class=\\\"final-value\\\">Form Value - <pre>{{ form.value | json }}</pre></div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiNestedExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiNestedExample.prototype.form;\n    /** @type {?} */\n    FiNestedExample.prototype.minPayRateControl;\n    /** @type {?} */\n    FiNestedExample.prototype.maxPayRateControl;\n    /** @type {?} */\n    FiNestedExample.prototype.controls;\n    /** @type {?} */\n    FiNestedExample.prototype.initialValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiNestedExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-required/fi-required-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Required Example\n */\nclass FiRequiredExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const requiredFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - requiredFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const activeValue = API.getActiveValue();\n            if (activeValue) {\n                API.setRequired('required', true);\n            }\n            else {\n                API.setRequired('required', false);\n            }\n        });\n        // Required Field Interactions\n        this.controls.requiredControl = new TextBoxControl({\n            type: 'text',\n            key: 'required',\n            label: 'Test',\n            description: 'I may or may not be required, play with the checkbox below!',\n        });\n        this.controls.toggleControl = new CheckboxControl({\n            key: 'toggle',\n            label: 'Required?',\n            interactions: [{ event: 'change', script: requiredFunction }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.requiredControl, this.controls.toggleControl]);\n    }\n}\nFiRequiredExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-required-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.requiredControl\\\"></novo-control>\\n    </div>\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.toggleControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiRequiredExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiRequiredExample.prototype.form;\n    /** @type {?} */\n    FiRequiredExample.prototype.controls;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-tooltip/fi-tooltip-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Tooltip Example\n */\nclass FiTooltipExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const tooltipFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - tooltipFunction'); // tslint:disable-line\n            API.setTooltip(API.getActiveKey(), API.getActiveValue());\n        });\n        /** @type {?} */\n        const tooltipUpdateFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - tooltipUpdateFunction'); // tslint:disable-line\n            API.getControl(this.controls.tooltipControl.key).tooltipSize = API.getValue(this.controls.tooltipSizeControl.key);\n            API.getControl(this.controls.tooltipControl.key).tooltipPreline = API.getValue(this.controls.tooltipPrelineControl.key);\n        });\n        // Tooltip Field Interactions\n        this.controls.tooltipControl = new TextBoxControl({\n            type: 'text',\n            key: 'toolTipValue',\n            label: 'Tooltip',\n            description: 'I will add a tooltip to this control as a value is typed',\n            interactions: [{ event: 'change', script: tooltipFunction }],\n        });\n        this.controls.tooltipSizeControl = new TilesControl({\n            key: 'tooltipSize',\n            label: 'Tooltip Size',\n            description: 'Changing me will set a fixed width on the tooltip',\n            options: [{ value: 'small', label: 'Small' }, { value: 'medium', label: 'Medium' }, { value: 'large', label: 'Large' }],\n            interactions: [{ event: 'change', script: tooltipUpdateFunction }],\n        });\n        this.controls.tooltipPrelineControl = new TilesControl({\n            key: 'tooltipPreline',\n            label: 'Tooltip Multiline',\n            description: 'Should the tooltip be multiple lines tall or all on one line?',\n            options: [{ value: true, label: 'Yes' }, { value: false, label: 'No' }],\n            interactions: [{ event: 'change', script: tooltipUpdateFunction }],\n        });\n        this.form = formUtils.toFormGroup([\n            this.controls.tooltipControl,\n            this.controls.tooltipSizeControl,\n            this.controls.tooltipPrelineControl,\n        ]);\n    }\n}\nFiTooltipExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-tooltip-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n  <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"form\\\" [control]=\\\"controls.tooltipControl\\\"></novo-control>\\n  </div>\\n  <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"form\\\" [control]=\\\"controls.tooltipSizeControl\\\"></novo-control>\\n  </div>\\n  <div class=\\\"novo-form-row\\\">\\n      <novo-control [form]=\\\"form\\\" [control]=\\\"controls.tooltipPrelineControl\\\"></novo-control>\\n  </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiTooltipExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiTooltipExample.prototype.form;\n    /** @type {?} */\n    FiTooltipExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiTooltipExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/field-interactions/fi-validation/fi-validation-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Fi Validation Example\n */\nclass FiValidationExample {\n    /**\n     * @param {?} formUtils\n     */\n    constructor(formUtils) {\n        this.formUtils = formUtils;\n        this.form = {};\n        this.controls = {};\n        /** @type {?} */\n        const validationFunction = (/**\n         * @param {?} API\n         * @return {?}\n         */\n        (API) => {\n            console.log('[FieldInteractionDemo] - validationFunction'); // tslint:disable-line\n            // tslint:disable-line\n            /** @type {?} */\n            const activeValue = API.getActiveValue();\n            if (activeValue > 10) {\n                API.markAsInvalid(API.getActiveKey(), 'Too high! Make it a lot lower!!');\n            }\n        });\n        // Validation Field Interactions\n        this.controls.validationControl = new TextBoxControl({\n            type: 'number',\n            key: 'validation',\n            value: 5,\n            label: 'Validation Test',\n            description: 'Try to input a number larger then 10!',\n            interactions: [{ event: 'change', script: validationFunction, invokeOnInit: true }],\n        });\n        this.form = formUtils.toFormGroup([this.controls.validationControl]);\n    }\n}\nFiValidationExample.decorators = [\n    { type: Component, args: [{\n                selector: 'fi-validation-example',\n                template: \"<novo-form [form]=\\\"form\\\" layout=\\\"vertical\\\">\\n    <div class=\\\"novo-form-row\\\">\\n        <novo-control [form]=\\\"form\\\" [control]=\\\"controls.validationControl\\\"></novo-control>\\n    </div>\\n</novo-form>\\n<div class=\\\"final-value\\\">Form Value - {{ form.value | json }}</div>\\n<div class=\\\"final-value\\\">Form Dirty - {{ form.dirty | json }}</div>\\n<div class=\\\"final-value\\\">Is Form Valid? - {{ form.valid | json }}</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nFiValidationExample.ctorParameters = () => [\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    FiValidationExample.prototype.form;\n    /** @type {?} */\n    FiValidationExample.prototype.controls;\n    /**\n     * @type {?}\n     * @private\n     */\n    FiValidationExample.prototype.formUtils;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/custom-modal/custom-modal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalCustomDemo {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalCustomDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-custom-demo',\n                template: `\n  <novo-notification type=\"custom\" icon=\"trending-up\">\n    <h1>I have a trending icon!</h1>\n    <h2>This notification type allows for any Bullhorn Icon</h2>\n    <button theme=\"primary\" icon=\"check\" (click)=\"close()\">Sweet.</button>\n  </novo-notification>\n`\n            }] }\n];\n/** @nocollapse */\nModalCustomDemo.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalCustomDemo.prototype.modalRef;\n}\n/**\n * \\@title Custom Modal Example\n */\nclass CustomModalExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalCustomDemo);\n    }\n}\nCustomModalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'custom-modal-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nCustomModalExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CustomModalExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/error-modal/error-modal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalErrorDemo {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalErrorDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-error-demo',\n                template: `\n  <novo-notification type=\"error\">\n    <h1>Sorry, something went wrong.</h1>\n    <h2>You did not have 1.21 gigawatts of power.</h2>\n    <button theme=\"primary\" icon=\"refresh-o\" (click)=\"close()\">Refresh this page</button>\n  </novo-notification>\n`\n            }] }\n];\n/** @nocollapse */\nModalErrorDemo.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalErrorDemo.prototype.modalRef;\n}\n/**\n * \\@title Error Modal Example\n */\nclass ErrorModalExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalErrorDemo);\n    }\n}\nErrorModalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'error-modal-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nErrorModalExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ErrorModalExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/modal-add-form/modal-add-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalAddFormDemo {\n    /**\n     * @param {?} modalRef\n     * @param {?} formUtils\n     */\n    constructor(modalRef, formUtils) {\n        this.modalRef = modalRef;\n        this.formUtils = formUtils;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.textControl = new TextBoxControl({ key: 'text', label: 'Text Box' });\n        this.emailControl = new TextBoxControl({ type: 'email', key: 'email', label: 'Email' });\n        this.numberControl = new TextBoxControl({ type: 'number', key: 'number', label: 'Number' });\n        this.pickerControl = new PickerControl({\n            key: 'picker',\n            multiple: false,\n            label: 'Picker',\n            required: true,\n            config: {\n                resultsTemplate: PickerResults,\n                options: ['Apple', 'Banana', 'Grapes', 'Orange', 'Pear'],\n            },\n        });\n        this.textForm = this.formUtils.toFormGroup([this.textControl, this.emailControl, this.numberControl, this.pickerControl]);\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalAddFormDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-edit-form-demo',\n                template: `\n  <novo-modal>\n    <header title=\"Add Contact\" icon=\"person\" theme=\"contact\">\n        <utils>\n            <util-action icon=\"times\" (click)=\"close()\"></util-action>\n        </utils>\n    </header>\n    <section>\n        <novo-form [form]=\"textForm\">\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"textControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"emailControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"numberControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"pickerControl\"></novo-control>\n            </div>\n        </novo-form>\n    </section>\n    <button theme=\"standard\" (click)=\"close()\">Cancel</button>\n    <button theme=\"primary\" color=\"success\" icon=\"check\" (click)=\"close()\">Save</button>\n  </novo-modal>\n`\n            }] }\n];\n/** @nocollapse */\nModalAddFormDemo.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    ModalAddFormDemo.prototype.textControl;\n    /** @type {?} */\n    ModalAddFormDemo.prototype.emailControl;\n    /** @type {?} */\n    ModalAddFormDemo.prototype.numberControl;\n    /** @type {?} */\n    ModalAddFormDemo.prototype.pickerControl;\n    /** @type {?} */\n    ModalAddFormDemo.prototype.textForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalAddFormDemo.prototype.modalRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalAddFormDemo.prototype.formUtils;\n}\n/**\n * \\@title Modal Add Form Example\n */\nclass ModalAddFormExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalAddFormDemo);\n    }\n}\nModalAddFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-add-form-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nModalAddFormExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalAddFormExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/modal-edit-form/modal-edit-form-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalEditFormDemo {\n    /**\n     * @param {?} modalRef\n     * @param {?} formUtils\n     */\n    constructor(modalRef, formUtils) {\n        this.modalRef = modalRef;\n        this.formUtils = formUtils;\n        this.formUtils = formUtils;\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.textControl = new TextBoxControl({ key: 'text', label: 'Text Box' });\n        this.emailControl = new TextBoxControl({ type: 'email', key: 'email', label: 'Email' });\n        this.numberControl = new TextBoxControl({ type: 'number', key: 'number', label: 'Number' });\n        this.pickerControl = new PickerControl({\n            key: 'picker',\n            multiple: true,\n            label: 'Picker',\n            required: true,\n            config: {\n                resultsTemplate: PickerResults,\n                options: ['Apple', 'Banana', 'Grapes', 'Orange', 'Pear'],\n            },\n        });\n        this.textForm = this.formUtils.toFormGroup([this.textControl, this.emailControl, this.numberControl, this.pickerControl]);\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalEditFormDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-edit-form-demo',\n                template: `\n  <novo-modal>\n    <header title=\"John Deere\" icon=\"candidate\" theme=\"candidate\">\n        <utils>\n            <util-action icon=\"times\" (click)=\"close()\"></util-action>\n        </utils>\n    </header>\n    <section>\n        <novo-form [form]=\"textForm\">\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"textControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"emailControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"numberControl\"></novo-control>\n            </div>\n            <div class=\"novo-form-row\">\n                <novo-control [form]=\"textForm\" [control]=\"pickerControl\"></novo-control>\n            </div>\n        </novo-form>\n    </section>\n    <button theme=\"standard\" (click)=\"close()\">Cancel</button>\n    <button theme=\"primary\" color=\"success\" icon=\"check\" (click)=\"close()\">Save</button>\n  </novo-modal>\n`\n            }] }\n];\n/** @nocollapse */\nModalEditFormDemo.ctorParameters = () => [\n    { type: NovoModalRef },\n    { type: FormUtils }\n];\nif (false) {\n    /** @type {?} */\n    ModalEditFormDemo.prototype.textControl;\n    /** @type {?} */\n    ModalEditFormDemo.prototype.emailControl;\n    /** @type {?} */\n    ModalEditFormDemo.prototype.numberControl;\n    /** @type {?} */\n    ModalEditFormDemo.prototype.pickerControl;\n    /** @type {?} */\n    ModalEditFormDemo.prototype.textForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalEditFormDemo.prototype.modalRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalEditFormDemo.prototype.formUtils;\n}\n/**\n * \\@title Modal Edit Form Example\n */\nclass ModalEditFormExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalEditFormDemo);\n    }\n}\nModalEditFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-edit-form-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nModalEditFormExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalEditFormExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/success-modal/success-modal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalSuccessDemo {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalSuccessDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-success-demo',\n                template: `\n  <novo-notification type=\"success\">\n    <h1>Woooo!</h1>\n    <h2>You did something awesome!</h2>\n    <button theme=\"primary\" icon=\"check\" (click)=\"close()\">I'm awesome</button>\n  </novo-notification>\n`\n            }] }\n];\n/** @nocollapse */\nModalSuccessDemo.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalSuccessDemo.prototype.modalRef;\n}\n/**\n * \\@title Success Modal Example\n */\nclass SuccessModalExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalSuccessDemo);\n    }\n}\nSuccessModalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'success-modal-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nSuccessModalExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    SuccessModalExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/modal/warning-modal/warning-modal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalWarningDemo {\n    /**\n     * @param {?} modalRef\n     */\n    constructor(modalRef) {\n        this.modalRef = modalRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.modalRef.close();\n    }\n}\nModalWarningDemo.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-warning-demo',\n                template: `\n  <novo-notification type=\"warning\">\n    <h1>This action will delete 25 records.</h1>\n    <h2>Are you sure you wish to continue?</h2>\n    <button theme=\"standard\" (click)=\"close()\">Cancel</button>\n    <button theme=\"primary\" color=\"negative\" icon=\"delete\" (click)=\"close()\">Delete</button>\n  </novo-notification>\n`\n            }] }\n];\n/** @nocollapse */\nModalWarningDemo.ctorParameters = () => [\n    { type: NovoModalRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalWarningDemo.prototype.modalRef;\n}\n/**\n * \\@title Warning Modal Example\n */\nclass WarningModalExample {\n    /**\n     * @param {?} modalService\n     */\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    /**\n     * @return {?}\n     */\n    showModal() {\n        this.modalService.open(ModalWarningDemo);\n    }\n}\nWarningModalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'warning-modal-example',\n                template: \"<button data-automation-id=\\\"modal-trigger\\\" theme=\\\"secondary\\\" (click)=\\\"showModal()\\\">Show Me :)</button>\\n\",\n                styles: [\":host{display:block;background:rgba(0,0,0,.55);padding:35px 0;position:relative;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nWarningModalExample.ctorParameters = () => [\n    { type: NovoModalService }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    WarningModalExample.prototype.modalService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pipes/pluralize/pluralize-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Pluralize Example\n */\nclass PluralizeExample {\n}\nPluralizeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pluralize-example',\n                template: \"<p>{{'Kitty' | plural}}</p>\\n<p>{{'Cat' | plural}}</p>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-auto-placement/pop-over-auto-placement-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOver with Automatic Positioning Example\n */\nclass PopOverAutoPlacementExample {\n}\nPopOverAutoPlacementExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-auto-placement-example',\n                template: \"<span popover=\\\"If the placement of the PopOver will make it appear off-screen, then it will be automatically adjusted to appear on the opposite side. For example: this PopOver should appear below the element.&#13;&#10; &#13;&#10; &#13;&#10;Need to make extra space so this PopOver would actually appear below the screen.\\\"\\n    popoverTitle=\\\"PopOver Moves to Top if near Bottom of Screen\\\"\\n    popoverPlacement=\\\"bottom\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    Hover Me\\n</span>\\n<span popover=\\\"Too small to drop below screen.\\\"\\n    popoverTitle=\\\"PopOver Won't Change\\\"\\n    popoverPlacement=\\\"bottom\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    Hover Me Next\\n</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-behaviors/pop-over-behaviors-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOver Behaviors Example\n */\nclass PopOverBehaviorsExample {\n}\nPopOverBehaviorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-behaviors-example',\n                template: \"<span class=\\\"popover-element\\\"\\n    popover=\\\"PopOver appears when hovering over the element. When the mouse is no longer over the element or the PopOver, then it will be dismissed.\\\"\\n    popoverTitle=\\\"ON HOVER\\\"\\n    popoverPlacement=\\\"right\\\"\\n    [popoverOnHover]=\\\"true\\\">\\nON HOVER\\n</span>\\n\\n<span class=\\\"popover-element\\\"\\n    popover=\\\"PopOver appears when clicking on the element. Dismiss it by clicking the element again.\\\"\\n    popoverTitle=\\\"ON CLICK\\\"\\n    popoverPlacement=\\\"right\\\">\\nON CLICK\\n</span>\\n\\n<span class=\\\"popover-element\\\"\\n    popover=\\\"This PopOver has a 2000 ms or 2 second timeout on it. Dismiss it by clicking on the element or waiting for the timeout.\\\"\\n    popoverTitle=\\\"ON CLICK WITH TIMEOUT\\\"\\n    popoverPlacement=\\\"right\\\"\\n    [popoverDismissTimeout]=\\\"2000\\\">\\nON CLICK WITH TIMEOUT\\n</span>\\n\\n<span class=\\\"popover-element\\\"\\n    popover=\\\"This PopOver will never appear when clicking on the element or when hovering over the element.\\\"\\n    popoverTitle=\\\"popoverDisabled\\\"\\n    popoverPlacement=\\\"right\\\"\\n    [popoverDisabled]=\\\"true\\\">\\nDISABLED POPOVER\\n</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-dynamic/pop-over-dynamic-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOver with Dynamic HTML Template Example\n */\nclass PopOverDynamicExample {\n}\nPopOverDynamicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-dynamic-example',\n                template: \"<popover-content\\n    #dynamicHtmlPopOver\\n    title=\\\"this header can be omitted\\\"\\n    placement=\\\"right\\\">\\n\\n    <b>Very</b> <span style=\\\"color: #C21F39\\\">Dynamic</span> <span style=\\\"color: #00b3ee\\\">Reusable</span>\\n    <b><i><span style=\\\"color: #ffc520\\\">Popover With</span></i></b> <small>Html support</small>. Click outside of this popover and it will be dismissed automatically.\\n    <u (click)=\\\"dynamicHtmlPopOver.hide()\\\" style=\\\"cursor: pointer\\\">Or click here to close it</u> and can listen to the onHidden or onShown events to perform additional tasks.\\n</popover-content>\\n\\n<span [popover]=\\\"dynamicHtmlPopOver\\\">Click to see a popover with dynamic html</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-horizontal/pop-over-horizontal-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOvers with Horizontal Positioning\n */\nclass PopOverHorizontalExample {\n}\nPopOverHorizontalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-horizontal-example',\n                template: \"<span popover=\\\"Popover is on the top side and to the right of the element. Can also apply 'left' to 'top' placement PopOvers.\\\"\\n    popoverTitle=\\\"Top-Right PopOver\\\"\\n    popoverPlacement=\\\"top-right\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    TOP-RIGHT\\n</span>\\n<span popover=\\\"Popover is on the bottom side and to the left of the element. Can also apply 'right' to 'bottom' placement PopOvers.\\\"\\n    popoverTitle=\\\"Bottom-Left PopOver\\\"\\n    popoverPlacement=\\\"bottom-left\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    BOTTOM-LEFT\\n</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-placement/pop-over-placement-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOver Placement Example\n */\nclass PopOverPlacementExample {\n}\nPopOverPlacementExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-placement-example',\n                template: \"<span popover=\\\"Popover is to left of element\\\" popoverTitle=\\\"Left PopOver\\\" popoverPlacement=\\\"left\\\" [popoverOnHover]=\\\"true\\\">LEFT</span>\\n<span popover=\\\"Popover is to right of element\\\" popoverTitle=\\\"Right PopOver\\\" popoverPlacement=\\\"right\\\" [popoverOnHover]=\\\"true\\\">RIGHT</span>\\n<span popover=\\\"Popover is above the element\\\" popoverTitle=\\\"Top PopOver\\\" popoverPlacement=\\\"top\\\" [popoverOnHover]=\\\"true\\\">TOP</span>\\n<span popover=\\\"Popover is below the element\\\" popoverTitle=\\\"Bottom PopOver\\\" popoverPlacement=\\\"bottom\\\" [popoverOnHover]=\\\"true\\\">BOTTOM</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/pop-over/pop-over-vertical/pop-over-vertical-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title PopOvers with Vertical Positioning\n */\nclass PopOverVerticalExample {\n}\nPopOverVerticalExample.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-vertical-example',\n                template: \"<span popover=\\\"Popover is on the right side and below the element. Can also apply 'top' to 'right' placement PopOvers.\\\"\\n    popoverTitle=\\\"Right-Bottom PopOver\\\"\\n    popoverPlacement=\\\"right-bottom\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    RIGHT-BOTTOM\\n</span>\\n<span popover=\\\"Popover is on the left side and above the element. Can also apply 'bottom' to 'left' placement PopOvers.\\\"\\n    popoverTitle=\\\"Left-Top PopOver\\\"\\n    popoverPlacement=\\\"left-top\\\"\\n    [popoverOnHover]=\\\"true\\\">\\n    LEFT-TOP\\n</span>\\n\",\n                styles: [\":host{margin:auto;padding:20px 30px;position:relative;display:flex}:host>span{cursor:pointer;margin:auto}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/security/security/security-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Security Example\n */\nclass SecurityExample {\n    /**\n     * @param {?} security\n     */\n    constructor(security) {\n        this.security = security;\n        this.perms = [];\n    }\n    /**\n     * @return {?}\n     */\n    shufflePermissions() {\n        /** @type {?} */\n        const numOfPerms = Math.floor(Math.random() * 2) + 1;\n        this.perms = this.shuffle(['A', 'B', 'C']).slice(0, numOfPerms);\n        this.security.clear();\n        this.security.grant(this.perms);\n    }\n    /**\n     * @param {?} array\n     * @return {?}\n     */\n    shuffle(array) {\n        /** @type {?} */\n        let currentIndex = array.length;\n        /** @type {?} */\n        let temporaryValue;\n        /** @type {?} */\n        let randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        return array;\n    }\n}\nSecurityExample.decorators = [\n    { type: Component, args: [{\n                selector: 'security-example',\n                template: \"<div>\\n    <p *bhUnless=\\\"'A'\\\">Shown if has permission <strong>A</strong></p>\\n    <p *bhUnless=\\\"'B'\\\">Shown if has permission <strong>B</strong></p>\\n    <p *bhUnless=\\\"'C'\\\">Shown if has permission <strong>C</strong></p>\\n    <p *bhUnless=\\\"'A && B'\\\">Shown if has permissions <strong>A && B</strong></p>\\n    <p *bhUnless=\\\"'A && C'\\\">Shown if has permissions <strong>A && C</strong></p>\\n    <p *bhUnless=\\\"'A && B && C'\\\">Shown if has permissions <strong>A && B && C</strong></p>\\n    <p *bhUnless=\\\"'A || B'\\\">Shown if has permissions <strong>A || B</strong></p>\\n    <p> Permissions are : <strong>{{ perms | json }}</strong></p>\\n    <button (click)=\\\"shufflePermissions()\\\">Shuffle</button>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nSecurityExample.ctorParameters = () => [\n    { type: Security }\n];\nif (false) {\n    /** @type {?} */\n    SecurityExample.prototype.perms;\n    /**\n     * @type {?}\n     * @private\n     */\n    SecurityExample.prototype.security;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tip-well/basic-tip-well/basic-tip-well-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Basic Tip Well Example\n */\nclass BasicTipWellExample {\n    constructor() {\n        this.demoTip = 'Sed sodales ligula et fermentum bibendum. Aliquam tincidunt sagittis leo eget auctor. Fusce eu sagittis metus, ut viverra magna. Mauris mollis nisl nec libero tincidunt posuere.';\n    }\n    /**\n     * @return {?}\n     */\n    clearLocalStorage() {\n        localStorage.removeItem('novo-tw_Demo');\n        location.reload();\n    }\n}\nBasicTipWellExample.decorators = [\n    { type: Component, args: [{\n                selector: 'basic-tip-well-example',\n                template: \"<novo-tip-well name=\\\"Demo\\\" [tip]=\\\"demoTip\\\"></novo-tip-well>\\n\\n<p>Did you hide the TipWell?</p>\\n\\n<button theme=\\\"secondary\\\" (click)=\\\"clearLocalStorage()\\\">Reset</button> localStorage and Reload\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    BasicTipWellExample.prototype.demoTip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tip-well/buttonless-tip-well/buttonless-tip-well-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tip Well with No Button Example\n */\nclass ButtonlessTipWellExample {\n    constructor() {\n        this.demoTip = 'Sed sodales ligula et fermentum bibendum. Aliquam tincidunt sagittis leo eget auctor. Fusce eu sagittis metus, ut viverra magna. Mauris mollis nisl nec libero tincidunt posuere.';\n    }\n    /**\n     * @return {?}\n     */\n    clearLocalStorage() {\n        localStorage.removeItem('novo-tw_Demo');\n        location.reload();\n    }\n}\nButtonlessTipWellExample.decorators = [\n    { type: Component, args: [{\n                selector: 'buttonless-tip-well-example',\n                template: \"<novo-tip-well name=\\\"Demo\\\" [tip]=\\\"demoTip\\\" [button]=\\\"false\\\"></novo-tip-well>\\n\\n<p>Did you hide the TipWell?</p>\\n\\n<button theme=\\\"secondary\\\" (click)=\\\"clearLocalStorage()\\\">Reset</button> localStorage and Reload\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ButtonlessTipWellExample.prototype.demoTip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tip-well/html-tip-well/html-tip-well-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tip Well with HTML Example\n */\nclass HtmlTipWellExample {\n    constructor() {\n        this.demoHtmlTip = `\n    <h2>Title</h2>\n    <p>\n      <div style=\"color:red\">This text is RED</div>\n      <div><b>This text is BOLD</b></div>\n      <div><i>This text is ITALIC</i></div>\n    </p>\n    <table>\n        <tr>\n            <th width=\"305px\">Firstname</th>\n            <th width=\"305px\">Lastname</th>\n            <th>Age</th>\n        </tr>\n        <tr>\n            <td>Jeff</td>\n            <td>Smith</td>\n            <td>20</td>\n        </tr>\n        <tr>\n            <td>Steve</td>\n            <td>White</td>\n            <td>25</td>\n        </tr>\n    </table>`;\n    }\n    /**\n     * @return {?}\n     */\n    clearLocalStorage() {\n        localStorage.removeItem('novo-tw_Demo');\n        location.reload();\n    }\n}\nHtmlTipWellExample.decorators = [\n    { type: Component, args: [{\n                selector: 'html-tip-well-example',\n                template: \"<novo-tip-well name=\\\"Demo\\\" [sanitize]=\\\"false\\\" [tip]=\\\"demoHtmlTip\\\"></novo-tip-well>\\n\\n<p>Did you hide the TipWell?</p>\\n\\n<button theme=\\\"secondary\\\" (click)=\\\"clearLocalStorage()\\\">Reset</button> localStorage and Reload\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    HtmlTipWellExample.prototype.demoHtmlTip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tip-well/icon-tip-well/icon-tip-well-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tip Well with Icon Example\n */\nclass IconTipWellExample {\n    constructor() {\n        this.demoTip = 'Sed sodales ligula et fermentum bibendum. Aliquam tincidunt sagittis leo eget auctor. Fusce eu sagittis metus, ut viverra magna. Mauris mollis nisl nec libero tincidunt posuere.';\n    }\n    /**\n     * @return {?}\n     */\n    clearLocalStorage() {\n        localStorage.removeItem('novo-tw_Demo');\n        location.reload();\n    }\n}\nIconTipWellExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-tip-well-example',\n                template: \"<novo-tip-well name=\\\"Demo\\\" [tip]=\\\"demoTip\\\" icon=\\\"info\\\" button=\\\"false\\\"></novo-tip-well>\\n\\n<p>Did you hide the TipWell?</p>\\n\\n<button theme=\\\"secondary\\\" (click)=\\\"clearLocalStorage()\\\">Reset</button> localStorage and Reload\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    IconTipWellExample.prototype.demoTip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/toaster/toast-service/toast-service-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Toaster Service Usage\n */\nclass ToastServiceExample {\n    /**\n     * @param {?} toaster\n     */\n    constructor(toaster) {\n        this.toaster = toaster;\n        this.options = {\n            title: 'Title',\n            message: 'Some Message...',\n        };\n    }\n    /**\n     * @param {?} arg\n     * @return {?}\n     */\n    toastToggled(arg) {\n        if (arg === 'top') {\n            this.options = {\n                title: 'Top',\n                message: 'This positioning is fixedTop',\n                icon: 'coffee',\n                theme: 'success',\n                position: 'fixedTop',\n            };\n        }\n        else if (arg === 'bottom') {\n            this.options = {\n                title: 'Bottom',\n                message: 'This positioning is fixedBottom',\n                icon: 'check',\n                theme: 'warning-outline',\n                position: 'fixedBottom',\n                hideDelay: 1000000,\n            };\n        }\n        else if (arg === 'growlTopRight') {\n            this.options = {\n                title: 'Growl',\n                message: 'This positioning is growlTopRight',\n                icon: 'times',\n                theme: 'danger',\n                position: 'growlTopRight',\n                hideDelay: 100000000,\n            };\n        }\n        else if (arg === 'growlTopLeft') {\n            this.options = {\n                title: 'Growl',\n                message: 'This positioning is growlTopLeft',\n                icon: 'coffee',\n                theme: 'ocean',\n                position: 'growlTopLeft',\n                hideDelay: 100000000,\n            };\n        }\n        else if (arg === 'growlBottomRight') {\n            this.options = {\n                title: 'Growl',\n                message: 'This positioning is growlTopRight',\n                icon: 'times',\n                theme: 'danger',\n                position: 'growlBottomRight',\n            };\n        }\n        else if (arg === 'growlBottomLeft') {\n            this.options = {\n                title: 'Growl',\n                message: 'This positioning is growlTopLeft',\n                icon: 'coffee',\n                theme: 'ocean',\n                position: 'growlBottomLeft',\n            };\n        }\n        this.toaster.alert(this.options);\n    }\n}\nToastServiceExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toast-service-example',\n                template: \"<button theme=\\\"dialogue\\\" color=\\\"success\\\" icon=\\\"coffee\\\" (click)=\\\"toastToggled('top')\\\" data-automation-id=\\\"toast-trigger\\\">Fixed Top</button>\\n<button theme=\\\"dialogue\\\" color=\\\"primary\\\" icon=\\\"check\\\" (click)=\\\"toastToggled('bottom')\\\">Fixed Bottom</button>\\n<button theme=\\\"dialogue\\\" color=\\\"negative\\\" icon=\\\"times\\\" (click)=\\\"toastToggled('growlTopRight')\\\">Growl: Top Right</button>\\n<button theme=\\\"dialogue\\\" color=\\\"primary\\\" icon=\\\"coffee\\\" (click)=\\\"toastToggled('growlTopLeft')\\\">Growl: Top Left</button>\\n<button theme=\\\"dialogue\\\" color=\\\"negative\\\" icon=\\\"times\\\" (click)=\\\"toastToggled('growlBottomRight')\\\">Growl: Bottom Right</button>\\n<button theme=\\\"dialogue\\\" color=\\\"primary\\\" icon=\\\"coffee\\\" (click)=\\\"toastToggled('growlBottomLeft')\\\">Growl: Bottom Left</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\n/** @nocollapse */\nToastServiceExample.ctorParameters = () => [\n    { type: NovoToastService }\n];\nif (false) {\n    /** @type {?} */\n    ToastServiceExample.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    ToastServiceExample.prototype.toaster;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/toaster/toast-usage/toast-usage-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Static Toast Usage\n */\nclass ToastUsageExample {\n    constructor() {\n        this.themes = ['default', 'success', 'info', 'warning', 'danger'];\n        this.icons = ['add', 'check', 'clock', 'lock', 'caution'];\n        this.toast = {\n            theme: 'danger',\n            icon: 'caution',\n        };\n    }\n    /**\n     * @return {?}\n     */\n    changeToast() {\n        this.toast = {\n            theme: this.themes[(this.themes.indexOf(this.toast.theme) + 1) % this.themes.length],\n            icon: this.icons[(this.icons.indexOf(this.toast.icon) + 1) % this.icons.length],\n        };\n    }\n}\nToastUsageExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toast-usage-example',\n                template: \"<div class=\\\"fake-card\\\">\\n    <header title=\\\"John Deere\\\" icon=\\\"person\\\" theme=\\\"contact\\\">\\n        <utils>\\n            <util-action icon=\\\"flag\\\"></util-action>\\n            <util-action icon=\\\"refresh\\\"></util-action>\\n            <util-action icon=\\\"times\\\"></util-action>\\n        </utils>\\n    </header>\\n    <novo-toast [theme]=\\\"toast.theme\\\" [icon]=\\\"toast.icon\\\" title=\\\"Save Failed\\\" message=\\\"Oops! Looks like you're missing some required fields\\\"></novo-toast>\\n    <div class=\\\"content\\\">\\n        <p>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\\n            do eiusmod tempor incididunt ut labore et dolore\\n            magna aliqua. Ut enim ad minim veniam, quis nostrud\\n            exercitation ullamco laboris nisi ut aliquip ex ea\\n            commodo consequat. Duis aute irure dolor in reprehenderit\\n            in voluptate velit esse cillum dolore eu fugiat nulla\\n            pariatur. Excepteur sint occaecat cupidatat non proident,\\n            sunt in culpa qui officia deserunt mollit anim id\\n            est laborum.\\n        </p>\\n        <button (click)=\\\"changeToast()\\\">Change toast!</button>\\n    </div>\\n</div>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    ToastUsageExample.prototype.themes;\n    /** @type {?} */\n    ToastUsageExample.prototype.icons;\n    /** @type {?} */\n    ToastUsageExample.prototype.toast;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-align/tooltip-align-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Align Example\n */\nclass TooltipAlignExample {\n}\nTooltipAlignExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-align-example',\n                template: \"<span tooltip=\\\"bottom-left\\\" tooltipPosition=\\\"bottom-left\\\">Bottom Left</span>\\n<span tooltip=\\\"bottom-right\\\" tooltipPosition=\\\"bottom-right\\\">Bottom Right</span>\\n<span tooltip=\\\"top-left\\\" tooltipPosition=\\\"top-left\\\">Top Left</span>\\n<span tooltip=\\\"top-right\\\" tooltipPosition=\\\"top-right\\\">Top Right</span>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-options/tooltip-options-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Options Example\n */\nclass TooltipOptionsExample {\n}\nTooltipOptionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-options-example',\n                template: \"<span tooltip=\\\"ALWAYS\\\" tooltipAlways=\\\"true\\\">Always Shown</span>\\n<span tooltip=\\\"ROUNDED\\\" tooltipRounded=\\\"true\\\">Rounded</span>\\n<span tooltip=\\\"NO ANIMATE\\\" tooltipNoAnimate=\\\"true\\\">No Animation</span>\\n<span tooltip=\\\"BOUNCE\\\" tooltipBounce=\\\"true\\\">Bounce</span>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-placement/tooltip-placement-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Placement Example\n */\nclass TooltipPlacementExample {\n}\nTooltipPlacementExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-placement-example',\n                template: \"<span tooltip=\\\"left\\\" tooltipPosition=\\\"left\\\">Left</span>\\n<span tooltip=\\\"right\\\" tooltipPosition=\\\"right\\\">Right</span>\\n<span tooltip=\\\"top\\\" tooltipPosition=\\\"top\\\">Top</span>\\n<span tooltip=\\\"bottom\\\" tooltipPosition=\\\"bottom\\\">Bottom</span>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-sizes/tooltip-sizes-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Sizes Example\n */\nclass TooltipSizesExample {\n    constructor() {\n        this.mediumTooltip = `Lorem Ipsum\\n\\n is simply dummy text of the printing and typesetting industry.`;\n        this.largeTooltip = `Lorem Ipsum\\n\\n is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`;\n        this.extraLargeTooltip = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis placerat nisi at elit molestie, eget dapibus erat mattis. Sed nec est sit amet dolor hendrerit placerat quis vitae sapien. Nulla non consectetur lorem, nec ultricies lacus. Ut maximus eget tortor a bibendum. Vivamus vel mollis magna. Nullam sit amet urna a elit sollicitudin ultrices. Donec scelerisque dolor vel lacus blandit aliquam. Morbi tellus nunc, interdum eget laoreet vitae, tristique a odio. Maecenas ligula nisl, volutpat id augue vel, sollicitudin bibendum massa. Aenean dapibus quam nec ante volutpat, id tincidunt mauris malesuada. Aliquam vitae consectetur justo.\n\n    Nunc vel felis in quam iaculis vulputate eu non erat. Phasellus vel purus eget est elementum tempus a non mauris. Mauris cursus convallis enim, non malesuada felis suscipit vel. Maecenas nec hendrerit erat. Morbi vehicula condimentum mi non gravida. Aenean varius risus arcu. Sed blandit ipsum sit amet tincidunt convallis. Praesent consectetur elementum nisi, sit amet placerat diam commodo at. Vivamus aliquet sagittis libero, id efficitur nisl varius eget. Aenean tempor augue a erat tincidunt hendrerit. Cras et dictum nisl. Sed pulvinar leo quis urna malesuada tincidunt. Sed enim tortor, semper egestas orci pellentesque, scelerisque egestas eros. Aliquam in ex sit amet tortor fringilla convallis.\n\n    Nam ac nulla accumsan, tristique orci tincidunt, condimentum nunc. Fusce eget neque dolor. Vestibulum volutpat, libero non maximus maximus, libero ante semper tellus, et commodo lectus mi nec orci. Donec pretium pharetra cursus. Nam a egestas augue. Sed et condimentum lectus. Sed vel justo semper, convallis ante id, tincidunt nisi. Aliquam non lorem commodo, laoreet diam nec, feugiat dolor.\n\n    Aliquam orci diam, vestibulum et odio id, molestie interdum diam. Donec et molestie mi. Suspendisse potenti. Nam sit amet faucibus nulla. In tincidunt pharetra turpis, fringilla convallis dui scelerisque vel. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce eget tellus sem. Donec ac maximus massa.\n\n    Aliquam vehicula ligula justo, faucibus semper lorem sodales eu. Fusce nec augue quis diam iaculis dapibus. Cras consectetur eros ut nunc cursus, non laoreet dolor rhoncus. In luctus risus sed nunc feugiat, in imperdiet velit euismod. Curabitur sed nunc dapibus, convallis tortor sit amet, interdum sapien. Donec auctor mauris est, ac molestie diam sagittis id. Curabitur pretium metus et ante tincidunt convallis. Aenean quis mollis nulla.`;\n    }\n}\nTooltipSizesExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-sizes-example',\n                template: \"<span tooltip=\\\"Small Tooltip\\\" tooltipSize=\\\"small\\\" tooltipPosition=\\\"bottom\\\" tooltipPreline=\\\"true\\\">Small Tooltip</span>\\n<span [tooltip]=\\\"mediumTooltip\\\" tooltipSize=\\\"medium\\\" tooltipPosition=\\\"left\\\" tooltipPreline=\\\"true\\\">Medium Tooltip</span>\\n<span [tooltip]=\\\"largeTooltip\\\" tooltipSize=\\\"large\\\" tooltipPosition=\\\"top\\\" tooltipPreline=\\\"true\\\">Large Tooltip</span>\\n<span [tooltip]=\\\"extraLargeTooltip\\\" tooltipSize=\\\"extra-large\\\" tooltipPosition=\\\"top\\\" tooltipPreline=\\\"true\\\">Extra-Large Tooltip</span>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TooltipSizesExample.prototype.mediumTooltip;\n    /** @type {?} */\n    TooltipSizesExample.prototype.largeTooltip;\n    /** @type {?} */\n    TooltipSizesExample.prototype.extraLargeTooltip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-toggle/tooltip-toggle-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Toggle Example\n */\nclass TooltipToggleExample {\n    /**\n     * @return {?}\n     */\n    toggleTooltip() {\n        this.tooltipActive = !this.tooltipActive;\n    }\n}\nTooltipToggleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-toggle-example',\n                template: \"<span tooltip=\\\"I HAVE A TOOLTIP!\\\" [tooltipActive]=\\\"tooltipActive\\\">\\n    <span *ngIf=\\\"tooltipActive\\\">My tooltip can display!</span>\\n    <span *ngIf=\\\"!tooltipActive\\\">My tooltip is disabled!</span>\\n</span>\\n<button theme=\\\"secondary\\\" (click)=\\\"toggleTooltip()\\\">Toggle</button>\\n\",\n                styles: [\"\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    TooltipToggleExample.prototype.tooltipActive;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/tooltip/tooltip-types/tooltip-types-example.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title Tooltip Types Example\n */\nclass TooltipTypesExample {\n}\nTooltipTypesExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-types-example',\n                template: \"<span tooltip=\\\"ERROR\\\" tooltipType=\\\"error\\\">Error</span>\\n<span tooltip=\\\"INFO\\\" tooltipType=\\\"info\\\">Info</span>\\n<span tooltip=\\\"WARNING\\\" tooltipType=\\\"warning\\\">Warning</span>\\n<span tooltip=\\\"SUCCESS\\\" tooltipType=\\\"success\\\">Success</span>\\n\",\n                styles: [\"\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: examples.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction LiveExample() { }\nif (false) {\n    /** @type {?} */\n    LiveExample.prototype.title;\n    /** @type {?} */\n    LiveExample.prototype.component;\n    /** @type {?|undefined} */\n    LiveExample.prototype.additionalFiles;\n    /** @type {?|undefined} */\n    LiveExample.prototype.selectorName;\n    /** @type {?|undefined} */\n    LiveExample.prototype.tsSource;\n    /** @type {?|undefined} */\n    LiveExample.prototype.cssSource;\n    /** @type {?|undefined} */\n    LiveExample.prototype.htmlSource;\n}\n/** @type {?} */\nconst EXAMPLE_COMPONENTS = {\n    'basic-ace': {\n        title: 'Basic Ace Editor Example',\n        component: BasicAceExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Ace%20Editor%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-ace-example'%2C%0A%20%20templateUrl%3A%20'basic-ace-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-ace-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicAceExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-ace-editor%3E%3C%2Fnovo-ace-editor%3E%0A`\n    },\n    'button-dialogue': {\n        title: 'Dialogue buttons',\n        component: ButtonDialogueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Dialogue%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-dialogue-example'%2C%0A%20%20templateUrl%3A%20'button-dialogue-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-dialogue-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonDialogueExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22dialogue%22%20icon%3D%22addcard%22%3EAdd%20Card%3C%2Fbutton%3E%0A%3Cdiv%20class%3D%22inverse-color%22%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22dialogue%22%20icon%3D%22list-o%22%20side%3D%22left%22%20color%3D%22white%22%20inverse%3EAdd%2FRemove%3C%2Fbutton%3E%0A%3C%2Fdiv%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20icon%3D%22check%22%20color%3D%22success%22%3EDialogue%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20disabled%3EDialogue%3C%2Fbutton%3E%0A`\n    },\n    'button-dynamic': {\n        title: 'Dynamic buttons',\n        component: ButtonDynamicExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Dynamic%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-dynamic-example'%2C%0A%20%20templateUrl%3A%20'button-dynamic-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-dynamic-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonDynamicExample%20%7B%0A%20%20theme%3A%20string%20%3D%20'primary'%3B%0A%20%20isChecked%3A%20boolean%20%3D%20false%3B%0A%20%20negativeColor%3A%20string%20%3D%20'negative'%3B%0A%20%20color%3A%20string%20%3D%20'blue'%3B%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20const%20i%20%3D%20Math.floor(Math.random()%20*%204)%3B%0A%20%20%20%20this.theme%20%3D%20%5B'primary'%2C%20'secondary'%2C%20'dialogue'%2C%20'standard'%2C%20'icon'%5D%5Bi%5D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20%5Btheme%5D%3D%22theme%22%20%5Bicon%5D%3D%22isChecked%20%3F%20'check'%20%3A%20'times'%22%20(click)%3D%22changeTheme()%22%3EChange%20Theme%3C%2Fbutton%3E%0A%3Cnovo-checkbox%20label%3D%22Checked%3F%22%20%5B(ngModel)%5D%3D%22isChecked%22%3E%3C%2Fnovo-checkbox%3E%0A%3Cbutton%20%5Btheme%5D%3D%22theme%22%20%5Bicon%5D%3D%22isChecked%20%3F%20'check'%20%3A%20'times'%22%20(click)%3D%22changeTheme()%22%20%5Bdisabled%5D%3D%22isChecked%22%3EChange%20Theme%3C%2Fbutton%3E%0A`\n    },\n    'button-fab': {\n        title: 'Basic buttons',\n        component: ButtonFabExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-fab-example'%2C%0A%20%20templateUrl%3A%20'button-fab-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-fab-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonFabExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22fab%22%20color%3D%22success%22%20icon%3D%22check%22%3E%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22fab%22%20color%3D%22warning%22%20icon%3D%22caution-o%22%3E%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22fab%22%20color%3D%22pulse%22%20icon%3D%22next%22%3E%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22fab%22%20color%3D%22grapefruit%22%20icon%3D%22print%22%20inverse%3E%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22fab%22%20icon%3D%22neutral%22%20inverse%20disabled%3E%3C%2Fbutton%3E%0A`\n    },\n    'button-icon': {\n        title: 'Icon buttons',\n        component: ButtonIconExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Icon%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-icon-example'%2C%0A%20%20templateUrl%3A%20'button-icon-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-icon-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonIconExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22icon%22%20icon%3D%22print%22%3E%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22icon%22%20icon%3D%22print%22%3E%3C%2Fbutton%3E%0A`\n    },\n    'button-inverse': {\n        title: 'Invers buttons',\n        component: ButtonInverseExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Invers%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-inverse-example'%2C%0A%20%20templateUrl%3A%20'button-inverse-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-inverse-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonInverseExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22background%20candidate%22%3E%0A%20%20%3Cbutton%20theme%3D%22secondary%22%20icon%3D%22collapse%22%20inverse%3EActions%3C%2Fbutton%3E%0A%20%20%3Cbutton%20theme%3D%22secondary%22%20icon%3D%22convert%22%20inverse%3EConvert%3C%2Fbutton%3E%0A%20%20%3Cbutton%20theme%3D%22secondary%22%20icon%3D%22convert%22%20inverse%20disabled%3EConvert%3C%2Fbutton%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'button-loading': {\n        title: 'Loading buttons',\n        component: ButtonLoadingExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Loading%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-loading-example'%2C%0A%20%20templateUrl%3A%20'button-loading-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-loading-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonLoadingExample%20%7B%0A%20%20loading%3A%20boolean%20%3D%20false%3B%0A%20%20loadingButtonText%3A%20string%20%3D%20'Delete'%3B%0A%20%20fakeRequest()%20%7B%0A%20%20%20%20this.loading%20%3D%20true%3B%0A%20%20%20%20this.loadingButtonText%20%3D%20this.loading%20%3F%20'Removing...%20'%20%3A%20'Delete'%3B%0A%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.loading%20%3D%20false%3B%0A%20%20%20%20%20%20this.loadingButtonText%20%3D%20this.loading%20%3F%20'Removing...%20'%20%3A%20'Delete'%3B%0A%20%20%20%20%7D%2C%205000)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22primary%22%20icon%3D%22times%22%20%5Bloading%5D%3D%22loading%22%20(click)%3D%22fakeRequest()%22%3E%7B%7BloadingButtonText%7D%7D%3C%2Fbutton%3E%0A`\n    },\n    'button-overview': {\n        title: 'Basic buttons',\n        component: ButtonOverviewExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-overview-example'%2C%0A%20%20templateUrl%3A%20'button-overview-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-overview-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonOverviewExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22primary%22%20icon%3D%22next%22%3EPrimary%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%3ESecondary%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22standard%22%20color%3D%22success%22%20icon%3D%22check%22%3EStandard%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22pulse%22%20icon%3D%22send%22%3EDialogue%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22icon%22%20color%3D%22warning%22%20icon%3D%22caution-o%22%3E%3C%2Fbutton%3E%0A%0A`\n    },\n    'button-primary': {\n        title: 'Primary buttons',\n        component: ButtonPrimaryExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Primary%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-primary-example'%2C%0A%20%20templateUrl%3A%20'button-primary-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-primary-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonPrimaryExample%20%7B%0A%20%20negativeColor%3A%20string%20%3D%20'negative'%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22primary%22%20icon%3D%22next%22%3ENext%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22primary%22%20%5Bcolor%5D%3D%22negativeColor%22%20icon%3D%22times%22%3ECancel%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22primary%22%20color%3D%22success%22%20icon%3D%22check%22%3ESave%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22primary%22%20color%3D%22warning%22%20icon%3D%22caution-o%22%3ECaution%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22primary%22%20color%3D%22pulse%22%20icon%3D%22send%22%20disabled%3ESubmit%3C%2Fbutton%3E%0A`\n    },\n    'button-secondary': {\n        title: 'Basic buttons',\n        component: ButtonSecondaryExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-secondary-example'%2C%0A%20%20templateUrl%3A%20'button-secondary-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-secondary-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonSecondaryExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22secondary%22%3ESecondary%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20disabled%3ESecondary%3C%2Fbutton%3E%0A`\n    },\n    'button-standard': {\n        title: 'Basic buttons',\n        component: ButtonStandardExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-standard-example'%2C%0A%20%20templateUrl%3A%20'button-standard-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-standard-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonStandardExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22standard%22%3EStandard%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22standard%22%20color%3D%22light%22%3EStandard%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22standard%22%20color%3D%22light%22%20disabled%3EStandard%3C%2Fbutton%3E%0A`\n    },\n    'big-calendar': {\n        title: 'Big Calendar Example',\n        component: BigCalendarExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20CalendarEvent%2C%20CalendarEventResponse%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20colors%3A%20any%20%3D%20%7B%0A%20%20red%3A%20%7B%0A%20%20%20%20primary%3A%20'%23ad2121'%2C%0A%20%20%20%20secondary%3A%20'%23FAE3E3'%2C%0A%20%20%7D%2C%0A%20%20blue%3A%20%7B%0A%20%20%20%20primary%3A%20'%231e90ff'%2C%0A%20%20%20%20secondary%3A%20'%23D1E8FF'%2C%0A%20%20%7D%2C%0A%20%20yellow%3A%20%7B%0A%20%20%20%20primary%3A%20'%23e3bc08'%2C%0A%20%20%20%20secondary%3A%20'%23FDF1BA'%2C%0A%20%20%7D%2C%0A%20%20green%3A%20%7B%0A%20%20%20%20primary%3A%20'%238CC152'%2C%0A%20%20%20%20secondary%3A%20'%2337BC9B'%2C%0A%20%20%7D%2C%0A%7D%3B%0A%0A%2F**%0A%20*%20%40title%20Big%20Calendar%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'big-calendar-example'%2C%0A%20%20templateUrl%3A%20'big-calendar-example.html'%2C%0A%20%20styleUrls%3A%20%5B'big-calendar-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BigCalendarExample%20%7B%0A%20%20public%20views%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Month'%2C%0A%20%20%20%20%20%20value%3A%20'month'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Week'%2C%0A%20%20%20%20%20%20value%3A%20'week'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Day'%2C%0A%20%20%20%20%20%20value%3A%20'day'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20view%3A%20string%20%3D%20'month'%3B%0A%0A%20%20viewDate%3A%20Date%20%3D%20new%20Date()%3B%0A%20%20events%3A%20CalendarEvent%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40bvkimball'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date()%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Rejected%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Client%20Visit'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40asibilia'%2C%0A%20%20%20%20%20%20color%3A%20colors.red%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2030)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Visit'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johndoe'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Phone%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20180)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20150)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Final%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20120)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Phone%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20180)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20150)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Final%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20120)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Phone%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20180)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20150)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Final%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2090)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20120)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Phone%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2075)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20120)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Phone%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%2075)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20150)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20270)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20300)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Final%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20270)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20360)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20title%3A%20'Final%20Interview'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40johnsully83'%2C%0A%20%20%20%20%20%20color%3A%20colors.green%2C%0A%20%20%20%20%20%20start%3A%20new%20Date(Date.now()%20%2B%2060000%20*%20270)%2C%0A%20%20%20%20%20%20end%3A%20new%20Date(Date.now()%20%2B%2060000%20*%202880000)%2C%0A%20%20%20%20%20%20response%3A%20CalendarEventResponse.Accepted%2C%0A%20%20%20%20%20%20type%3A%20'Interview'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20getNewEvent(date%2C%20color%2C%20type)%3A%20CalendarEvent%20%7B%0A%20%20%20%20const%20evt%3A%20CalendarEvent%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20'Meeting'%2C%0A%20%20%20%20%20%20description%3A%20'with%20%40jgodi'%2C%0A%20%20%20%20%20%20color%2C%0A%20%20%20%20%20%20start%3A%20date%2C%0A%20%20%20%20%20%20response%3A%20type%2C%0A%20%20%20%20%20%20type%3A%20'Meeting'%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20return%20evt%3B%0A%20%20%7D%0A%0A%20%20dayClicked(date)%20%7B%0A%20%20%20%20const%20evt%3A%20CalendarEvent%20%3D%20this.getNewEvent(date%2C%20colors.blue%2C%20CalendarEventResponse.Maybe)%3B%0A%20%20%20%20this.events.push(evt)%3B%0A%20%20%20%20this.events%20%3D%20%5B...this.events%5D%3B%0A%20%20%7D%0A%0A%20%20addShift(event)%20%7B%0A%20%20%20%20const%20evt%3A%20CalendarEvent%20%3D%20this.getNewEvent(event.day.date%2C%20colors.blue%2C%20CalendarEventResponse.Maybe)%3B%0A%20%20%20%20this.events.push(evt)%3B%0A%20%20%20%20this.events%20%3D%20%5B...this.events%5D%3B%0A%20%20%7D%0A%0A%20%20removeShift(event)%20%7B%0A%20%20%20%20this.events.splice(event.day.events.indexOf(event.event)%2C%201)%3B%0A%20%20%7D%0A%0A%20%20toggleAvailable(event)%20%7B%0A%20%20%20%20let%20evt%3A%20CalendarEvent%3B%0A%20%20%20%20if%20(!event.day.events.length)%20%7B%0A%20%20%20%20%20%20evt%20%3D%20this.getNewEvent(event.day.date%2C%20colors.green%2C%20CalendarEventResponse.Accepted)%3B%0A%20%20%20%20%20%20this.events.push(evt)%3B%0A%20%20%20%20%20%20this.events%20%3D%20%5B...this.events%5D%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20evt%20%3D%20event.day.events%5B0%5D%3B%0A%20%20%20%20%20%20switch%20(evt.response)%20%7B%0A%20%20%20%20%20%20%20%20case%20CalendarEventResponse.Accepted%3A%0A%20%20%20%20%20%20%20%20%20%20evt.response%20%3D%20CalendarEventResponse.Rejected%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20case%20CalendarEventResponse.Rejected%3A%0A%20%20%20%20%20%20%20%20%20%20event.day.events%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%3E%0A%20%20%20%20%3Cnovo-calendar-date-change%20%5Bview%5D%3D%22view%22%20%5B(viewDate)%5D%3D%22viewDate%22%3E%0A%20%20%20%20%3C%2Fnovo-calendar-date-change%3E%0A%0A%20%20%20%20%3Cnovo-tiles%20%5Boptions%5D%3D%22views%22%20%5B(ngModel)%5D%3D%22view%22%3E%3C%2Fnovo-tiles%3E%0A%3C%2Fdiv%3E%0A%3Cdiv%20%5BngSwitch%5D%3D%22view%22%20class%3D%22cal-demo-content%22%3E%0A%20%20%20%20%3Cnovo-calendar-month%20*ngSwitchCase%3D%22'month'%22%20%5B(viewDate)%5D%3D%22viewDate%22%20%5Bevents%5D%3D%22events%22%20(dayClicked)%3D%22dayClicked(%24event.day.date)%22%3E%0A%20%20%20%20%3C%2Fnovo-calendar-month%3E%0A%0A%20%20%20%20%3Cnovo-calendar-week%20*ngSwitchCase%3D%22'week'%22%20%5B(viewDate)%5D%3D%22viewDate%22%20%5Bevents%5D%3D%22events%22%20(dayClicked)%3D%22dayClicked(%24event.date)%22%20%5BdayStartHour%5D%3D%220%22%20%5BdayEndHour%5D%3D%2223%22%3E%0A%20%20%20%20%3C%2Fnovo-calendar-week%3E%0A%0A%20%20%20%20%3Cnovo-calendar-day%20*ngSwitchCase%3D%22'day'%22%20%5B(viewDate)%5D%3D%22viewDate%22%20%5Bevents%5D%3D%22events%22%20%5BdayStartHour%5D%3D%220%22%20%5BdayEndHour%5D%3D%2223%22%3E%0A%20%20%20%20%3C%2Fnovo-calendar-day%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'calendar': {\n        title: 'Calendar Example',\n        component: CalendarExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Calendar%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'calendar-example'%2C%0A%20%20templateUrl%3A%20'calendar-example.html'%2C%0A%20%20styleUrls%3A%20%5B'calendar-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CalendarExample%20%7B%0A%20%20public%20dateOne%3A%20Date%3B%0A%20%20public%20dateTwo%3A%20Date%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22calendar-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%20One%3C%2Flabel%3E%20%7B%7B(dateOne%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%20Two%3C%2Flabel%3E%20%7B%7B(dateTwo%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22dateOne%22%20minYear%3D%222000%22%20maxYear%3D%222020%22%3E%3C%2Fnovo-date-picker%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22dateTwo%22%3E%3C%2Fnovo-date-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'range': {\n        title: 'Range Example',\n        component: RangeExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Range%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'range-example'%2C%0A%20%20templateUrl%3A%20'range-example.html'%2C%0A%20%20styleUrls%3A%20%5B'range-example.css'%5D%2C%0A%7D)%0Aexport%20class%20RangeExample%20%7B%0A%20%20public%20value%3A%20any%20%3D%20%7B%20startDate%3A%20null%2C%20endDate%3A%20null%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22calendar-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EStart%20date%3C%2Flabel%3E%20%7B%7B(value%3F.startDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%0A%20%20%20%20%20%20%20%20%3Clabel%3EEnd%20date%3C%2Flabel%3E%20%7B%7B(value%3F.endDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22value%22%20range%3D%22true%22%3E%3C%2Fnovo-date-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'time': {\n        title: 'Time Example',\n        component: TimeExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Time%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'time-example'%2C%0A%20%20templateUrl%3A%20'time-example.html'%2C%0A%20%20styleUrls%3A%20%5B'time-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TimeExample%20%7B%0A%20%20public%20time%3A%20Date%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22calendar-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%3C%2Flabel%3E%20%7B%7B(time%20%7C%20date%3A'mediumTime')%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-time-picker%20%5B(ngModel)%5D%3D%22time%22%3E%3C%2Fnovo-time-picker%3E%0A%20%20%20%20%3Cnovo-time-picker%20%5B(ngModel)%5D%3D%22time%22%20military%3D%22true%22%3E%3C%2Fnovo-time-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'data-table-remote': {\n        title: 'Remote Data Table Example',\n        component: DataTableRemoteExample,\n        tsSource: `import%20%7B%20Component%2C%20ChangeDetectionStrategy%2C%20ChangeDetectorRef%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20delay%20%7D%20from%20'rxjs%2Foperators'%3B%0Aimport%20*%20as%20dateFns%20from%20'date-fns'%3B%0Aimport%20%7B%20Subject%2C%20Observable%2C%20of%20%7D%20from%20'rxjs'%3B%0A%0Aimport%20%7B%0A%20%20IDataTableColumn%2C%0A%20%20RemoteDataTableService%2C%0A%20%20IDataTablePaginationOptions%2C%0A%20%20IDataTableSearchOptions%2C%0A%20%20NovoModalService%2C%0A%20%20IDataTablePreferences%2C%0A%20%20IDataTableFilter%2C%0A%20%20Helpers%2C%0A%7D%20from%20'novo-elements'%3B%0A%0Aimport%20%7B%20ConfigureColumnsModal%2C%20MockData%20%7D%20from%20'..%2Fextras'%3B%0A%0A%2F**%0A%20*%20%40title%20Remote%20Data%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'data-table-remote-example'%2C%0A%20%20templateUrl%3A%20'data-table-remote-example.html'%2C%0A%20%20styleUrls%3A%20%5B'data-table-remote-example.css'%5D%2C%0A%20%20changeDetection%3A%20ChangeDetectionStrategy.OnPush%2C%0A%7D)%0Aexport%20class%20DataTableRemoteExample%20%7B%0A%20%20%2F%2F%20Table%20configuration%0A%20%20public%20dataSetOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Dataset%20%231'%2C%20value%3A%201%20%7D%2C%20%7B%20label%3A%20'Dataset%20%232'%2C%20value%3A%202%20%7D%2C%20%7B%20label%3A%20'Dataset%20%233'%2C%20value%3A%203%20%7D%5D%3B%0A%20%20public%20loadedDataSet%3A%20number%20%3D%201%3B%0A%20%20public%20paginationTypeOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Standard'%2C%20value%3A%20'standard'%20%7D%2C%20%7B%20label%3A%20'Basic'%2C%20value%3A%20'basic'%20%7D%5D%3B%0A%20%20public%20loadedPaginationType%3A%20string%20%3D%20'standard'%3B%0A%20%20public%20globalSearchOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Show'%2C%20value%3A%20true%20%7D%2C%20%7B%20label%3A%20'Hide'%2C%20value%3A%20false%20%7D%5D%3B%0A%20%20public%20loadedGlobalSearch%3A%20boolean%20%3D%20false%3B%0A%0A%20%20%2F%2F%20Shared%20configuration%0A%20%20public%20sharedColumns%3A%20IDataTableColumn%3CMockData%3E%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'preview'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'preview'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'actions'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20label%3A%20'Actions'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%201'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%202'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabled%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%203'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabledFunc%3A%20this.checkDisabled.bind(this)%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20%20%20label%3A%20'ID'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'telephone'%2C%0A%20%20%20%20%20%20label%3A%20'Phone'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Atel'%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'email'%2C%0A%20%20%20%20%20%20label%3A%20'Email'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Amailto'%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'address'%2C%0A%20%20%20%20%20%20label%3A%20'Address'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24city%2C%20%24state'%2C%20'%24city'%2C%20'%24state'%5D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'embeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(hard)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24another.id'%2C%20'%24firstName%20%24lastName'%5D%2C%0A%20%20%20%20%20%20type%3A%20'link'%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'simpleEmbeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(simple)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20'%24id'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'date'%2C%0A%20%20%20%20%20%20label%3A%20'Date'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20%20%20allowCustomRange%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'dateTime'%2C%0A%20%20%20%20%20%20label%3A%20'DateTime'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'datetime'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'time'%2C%0A%20%20%20%20%20%20label%3A%20'Time'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'time'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'money'%2C%0A%20%20%20%20%20%20label%3A%20'Money'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'percent'%2C%0A%20%20%20%20%20%20label%3A%20'Percent'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'percent'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'name'%2C%0A%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20labelIcon%3A%20'bull'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20template%3A%20'custom'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'status'%2C%0A%20%20%20%20%20%20label%3A%20'Status'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'priority'%2C%0A%20%20%20%20%20%20label%3A%20'Priority'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'multi-select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20this.getPriorityOptions()%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'enabled'%2C%0A%20%20%20%20%20%20label%3A%20'Enabled'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20true%2C%20label%3A%20'True'%20%7D%2C%20%7B%20value%3A%20false%2C%20label%3A%20'False'%20%7D%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'edit'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20disabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'edit'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20sharedDisplayColumns%20%3D%20%5B%0A%20%20%20%20'selection'%2C%0A%20%20%20%20'expand'%2C%0A%20%20%20%20'preview'%2C%0A%20%20%20%20'actions'%2C%0A%20%20%20%20'id'%2C%0A%20%20%20%20'date'%2C%0A%20%20%20%20'name'%2C%0A%20%20%20%20'telephone'%2C%0A%20%20%20%20'email'%2C%0A%20%20%20%20'simpleEmbeddedObj'%2C%0A%20%20%20%20'status'%2C%0A%20%20%20%20'priority'%2C%0A%20%20%20%20'percent'%2C%0A%20%20%20%20'embeddedObj'%2C%0A%20%20%20%20'edit'%2C%0A%20%20%5D%3B%0A%20%20public%20sharedPaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'standard'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20widePaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'basic-wide'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20sharedSearchOptions%3A%20IDataTableSearchOptions%20%3D%20%7B%0A%20%20%20%20placeholder%3A%20'Search%20for%20things...'%2C%0A%20%20%20%20tooltip%3A%20'HELLO'%2C%0A%20%20%7D%3B%0A%20%20public%20sharedDefaultSort%3A%20%7B%20id%3A%20string%3B%20value%3A%20string%20%7D%20%3D%20%7B%0A%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20value%3A%20'asc'%2C%0A%20%20%7D%3B%0A%20%20public%20globalSearchEnabled%3A%20boolean%20%3D%20false%3B%0A%20%20public%20refreshSubject%3A%20Subject%3Cboolean%3E%20%3D%20new%20Subject()%3B%0A%0A%20%20%2F%2F%20Remote%20configuration%0A%20%20public%20remoteService%3A%20RemoteDataTableService%3CMockData%3E%3B%0A%0A%20%20private%20staticDataSet1%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20constructor(private%20ref%3A%20ChangeDetectorRef%2C%20private%20modalService%3A%20NovoModalService)%20%7B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%201000%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20day%20%3D%20i%20%3C%20500%20%3F%20dateFns.subDays(new%20Date()%2C%20i)%20%3A%20dateFns.addDays(new%20Date()%2C%20i%20-%20500)%3B%0A%20%20%20%20%20%20this.staticDataSet1.push(%7B%0A%20%20%20%20%20%20%20%20id%3A%20i%2C%0A%20%20%20%20%20%20%20%20embeddedObj%3A%20%7B%20id%3A%20i%2C%20test%3A%20%60HMM%20%24%7Bi%7D%60%2C%20another%3A%20%7B%20id%3A%20777%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20simpleEmbeddedObj%3A%20%7B%20id%3A%20i%20%7D%2C%0A%20%20%20%20%20%20%20%20name%3A%20%60(1)%20Name%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20status%3A%20%60(1)%20Status%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20priority%3A%20this.getPriority()%2C%0A%20%20%20%20%20%20%20%20enabled%3A%20i%20%25%202%20%3D%3D%3D%200%2C%0A%20%20%20%20%20%20%20%20date%3A%20day%2C%0A%20%20%20%20%20%20%20%20dateTime%3A%20day%2C%0A%20%20%20%20%20%20%20%20time%3A%20day%2C%0A%20%20%20%20%20%20%20%20money%3A%20i%20%2B%2010%2C%0A%20%20%20%20%20%20%20%20percent%3A%20i%20%2F%20100%2C%0A%20%20%20%20%20%20%20%20telephone%3A%20'555-555-5555'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'test%40google.com'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'City'%2C%20state%3A%20null%20%7D%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.remoteService%20%3D%20new%20RemoteMockDataService(%5B...this.staticDataSet1.slice(0%2C%2010)%5D)%3B%0A%20%20%7D%0A%0A%20%20public%20getPriority()%3A%20string%20%7B%0A%20%20%20%20const%20x%20%3D%20Math.round(Math.random()%20*%2050)%3B%0A%20%20%20%20return%20'test%20'%20%2B%20x.toString()%3B%0A%20%20%7D%0A%0A%20%20public%20getPriorityOptions()%20%7B%0A%20%20%20%20const%20options%20%3D%20new%20Array()%3B%0A%20%20%20%20let%20i%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%2049%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20options.push('test%20'%20%2B%20i.toString())%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20options%3B%0A%20%20%7D%0A%0A%20%20public%20switchPaginationType(type%3A%20'basic'%20%7C%20'standard')%20%7B%0A%20%20%20%20this.sharedPaginationOptions%20%3D%20Object.assign(%7B%7D%2C%20this.sharedPaginationOptions%2C%20%7B%20theme%3A%20type%20%7D)%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20toggleGlobalSearch(toggle%3A%20boolean)%3A%20void%20%7B%0A%20%20%20%20this.globalSearchEnabled%20%3D%20toggle%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20log(event%3A%20%7B%20originalEvent%3A%20MouseEvent%3B%20row%3A%20MockData%20%7D)%3A%20void%20%7B%0A%20%20%20%20console.log('%5BDataTable%5D%20Event%20Triggered!'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20checkDisabled(row%3A%20MockData)%3A%20boolean%20%7B%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%0A%20%20public%20configureColumns()%3A%20void%20%7B%0A%20%20%20%20this.modalService%0A%20%20%20%20%20%20.open(ConfigureColumnsModal%2C%20%7B%20columns%3A%20this.sharedColumns%20%7D)%0A%20%20%20%20%20%20.onClosed.then((columns%3A%20IDataTableColumn%3CMockData%3E%5B%5D)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20if%20(columns)%20%7B%0A%20%20%20%20%20%20%20%20%20%20const%20enabledColumns%20%3D%20columns.filter((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.enabled)%3B%0A%20%20%20%20%20%20%20%20%20%20this.sharedDisplayColumns%20%3D%20%5B'selection'%2C%20'expand'%2C%20...enabledColumns.map((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.id)%5D%3B%0A%20%20%20%20%20%20%20%20%20%20this.ref.markForCheck()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20public%20onPreferencesChanged(event%3A%20IDataTablePreferences)%3A%20void%20%7B%0A%20%20%20%20console.log('Preferences%20changed%20(persist%20manually)%3A'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20refresh()%3A%20void%20%7B%0A%20%20%20%20this.refreshSubject.next()%3B%0A%20%20%7D%0A%7D%0A%0Aclass%20RemoteMockDataService%20extends%20RemoteDataTableService%3CMockData%3E%20%7B%0A%20%20public%20url%3A%20string%3B%0A%0A%20%20constructor(private%20data%3A%20MockData%5B%5D)%20%7B%0A%20%20%20%20super()%3B%0A%20%20%7D%0A%0A%20%20public%20getTableResults(%0A%20%20%20%20sort%3A%20%7B%20id%3A%20string%3B%20value%3A%20string%3B%20transform%3F%3A%20Function%20%7D%2C%0A%20%20%20%20filter%3A%20IDataTableFilter%20%7C%20IDataTableFilter%5B%5D%2C%0A%20%20%20%20page%3A%20number%2C%0A%20%20%20%20pageSize%3A%20number%2C%0A%20%20%20%20globalSearch%3F%3A%20string%2C%0A%20%20)%3A%20Observable%3C%7B%20results%3A%20MockData%5B%5D%3B%20total%3A%20number%20%7D%3E%20%7B%0A%20%20%20%20const%20whereQuery%3A%20string%20%3D%20this.buildWhereClause(filter)%3B%0A%20%20%20%20const%20sortQuery%3A%20string%20%3D%20this.buildSortColumn(sort)%3B%0A%20%20%20%20const%20pageQuery%3A%20number%20%3D%20this.buildStart(page%2C%20pageSize)%3B%0A%20%20%20%20this.url%20%3D%20%60http%3A%2F%2Fmock-api.com%3Fwhere%3D%24%7BwhereQuery%7D%26sort%3D%24%7BsortQuery%7D%26pageSize%3D%24%7BpageSize%7D%26page%3D%24%7BpageQuery%7D%60%3B%0A%20%20%20%20return%20of(%7B%20results%3A%20this.data%2C%20total%3A%20this.data.length%20%7D).pipe(delay(5000))%3B%0A%20%20%7D%0A%0A%20%20private%20buildWhereClause(filter%3A%20IDataTableFilter%20%7C%20IDataTableFilter%5B%5D)%3A%20string%20%7B%0A%20%20%20%20const%20query%3A%20any%20%3D%20%7B%7D%3B%0A%20%20%20%20if%20(filter)%20%7B%0A%20%20%20%20%20%20const%20filters%20%3D%20Helpers.convertToArray(filter)%3B%0A%20%20%20%20%20%20filters.forEach((aFilter)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20query%5BaFilter.id%5D%20%3D%20aFilter.transform%20%3F%20aFilter.transform(aFilter.value)%20%3A%20aFilter.value%3B%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20this.toQuerySyntax(query)%3B%0A%20%20%7D%0A%0A%20%20private%20buildSortColumn(sort%3A%20%7B%20id%3A%20string%3B%20value%3A%20string%3B%20transform%3F%3A%20Function%20%7D)%3A%20string%20%7B%0A%20%20%20%20if%20(sort)%20%7B%0A%20%20%20%20%20%20let%20value%20%3D%20sort.id%3B%0A%20%20%20%20%20%20if%20(sort.transform)%20%7B%0A%20%20%20%20%20%20%20%20value%20%3D%20sort.transform(value)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20sort.value%20%3D%3D%3D%20'asc'%20%3F%20value%20%3A%20%60-%24%7Bvalue%7D%60%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20''%3B%0A%20%20%7D%0A%0A%20%20private%20buildStart(page%3A%20number%2C%20pageSize%3A%20number)%3A%20number%20%7B%0A%20%20%20%20return%20(page%20%7C%7C%200)%20*%20pageSize%3B%0A%20%20%7D%0A%0A%20%20private%20toQuerySyntax(data%3A%20any)%20%7B%0A%20%20%20%20const%20queries%3A%20Array%3Cstring%3E%20%3D%20%5B%5D%3B%0A%20%20%20%20for%20(const%20key%20in%20data)%20%7B%0A%20%20%20%20%20%20const%20value%20%3D%20data%5Bkey%5D%3B%0A%20%20%20%20%20%20if%20(key%20%3D%3D%3D%20'or')%20%7B%0A%20%20%20%20%20%20%20%20queries.push(%60(%24%7Bthis.toQuerySyntax(value).replace(%2F%20AND%20%2Fg%2C%20'%20OR%20')%7D)%60)%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20queries.push(this.parseQueryValue(key%2C%20value))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20queries.join('%20AND%20')%3B%0A%20%20%7D%0A%0A%20%20private%20parseQueryValue(key%3A%20string%2C%20value%3A%20any%2C%20isNot%3A%20boolean%20%3D%20false)%20%7B%0A%20%20%20%20const%20clauses%3A%20Array%3Cstring%3E%20%3D%20%5B%5D%2C%0A%20%20%20%20%20%20IN%20%3D%20isNot%20%3F%20'%20NOT%20IN%20'%20%3A%20'%20IN%20'%2C%0A%20%20%20%20%20%20EQ%20%3D%20isNot%20%3F%20'%3C%3E'%20%3A%20'%3D'%2C%0A%20%20%20%20%20%20GT%20%3D%20isNot%20%3F%20'%3C'%20%3A%20'%3E%3D'%2C%0A%20%20%20%20%20%20LT%20%3D%20isNot%20%3F%20'%3E%3D'%20%3A%20'%3C'%3B%0A%20%20%20%20if%20(Array.isArray(value))%20%7B%0A%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BIN%7D(%24%7Bthis.writeQueryValues(value)%7D)%60)%3B%0A%20%20%20%20%7D%20else%20if%20(value%20instanceof%20Object)%20%7B%0A%20%20%20%20%20%20if%20(typeof%20value.isNull%20%3D%3D%3D%20'boolean')%20%7B%0A%20%20%20%20%20%20%20%20const%20query%3A%20string%20%3D%20value.isNull%20%3F%20'IS%20NULL'%20%3A%20'IS%20NOT%20NULL'%3B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%20%24%7Bquery%7D%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.min%20!%3D%3D%20null%20%26%26%20value.min%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BGT%7D%24%7Bthis.writeQueryValue(value.min)%7D%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.max%20!%3D%3D%20null%20%26%26%20value.max%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BLT%7D%24%7Bthis.writeQueryValue(value.max)%7D%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.any%20%26%26%20Array.isArray(value.any))%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BIN%7D(%24%7Bthis.writeQueryValues(value.any)%7D)%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.all%20%26%26%20Array.isArray(value.all))%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BIN%7D(%24%7Bthis.writeQueryValues(value.all)%7D)%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.not%20!%3D%3D%20null%20%26%26%20value.not%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(this.parseQueryValue(key%2C%20value.not%2C%20true))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.like%20!%3D%3D%20null%20%26%26%20value.like%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%20like%20'%25%24%7Bvalue.like%7D%25'%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.lookup%20!%3D%3D%20null%20%26%26%20value.lookup%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20const%20obj%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20obj%5Bkey%5D%20%3D%20value.lookup%3B%0A%20%20%20%20%20%20%20%20clauses.push(this.toQuerySyntax(obj))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.with%20!%3D%3D%20null%20%26%26%20value.with%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%20IS%20NOT%20EMPTY%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.without%20!%3D%3D%20null%20%26%26%20value.without%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%20IS%20EMPTY%60)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(value.or%20!%3D%3D%20null%20%26%26%20value.or%20!%3D%3D%20undefined)%20%7B%0A%20%20%20%20%20%20%20%20const%20obj%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20obj%5Bkey%5D%20%3D%20value.or%3B%0A%20%20%20%20%20%20%20%20clauses.push(this.toQuerySyntax(obj).replace('AND'%2C%20'OR'))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20for%20(const%20subkey%20in%20value)%20%7B%0A%20%20%20%20%20%20%20%20if%20(%5B'min'%2C%20'max'%2C%20'any'%2C%20'all'%2C%20'not'%2C%20'or'%2C%20'like'%2C%20'lookup'%2C%20'with'%2C%20'without'%2C%20'isNull'%5D.indexOf(subkey)%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20const%20subvalue%20%3D%20value%5Bsubkey%5D%3B%0A%20%20%20%20%20%20%20%20%20%20clauses.push(this.parseQueryValue(%60%24%7Bkey%7D.%24%7Bsubkey%7D%60%2C%20subvalue))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20clauses.push(%60%24%7Bkey%7D%24%7BEQ%7D%24%7Bthis.writeQueryValue(value)%7D%60)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20clauses.join('%20AND%20')%3B%0A%20%20%7D%0A%0A%20%20private%20writeQueryValues(values)%20%7B%0A%20%20%20%20if%20(typeof%20values%5B0%5D%20%3D%3D%3D%20'number'%20%7C%7C%20typeof%20values%5B0%5D%20%3D%3D%3D%20'boolean')%20%7B%0A%20%20%20%20%20%20return%20%60%24%7Bvalues.join('%2C')%7D%60%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20return%20%60'%24%7Bvalues.join(%60'%2C'%60)%7D'%60%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20private%20writeQueryValue(value)%20%7B%0A%20%20%20%20if%20(value%20instanceof%20Date)%20%7B%0A%20%20%20%20%20%20return%20value.getTime()%3B%0A%20%20%20%20%7D%20else%20if%20(typeof%20value%20%3D%3D%3D%20'number'%20%7C%7C%20typeof%20value%20%3D%3D%3D%20'boolean')%20%7B%0A%20%20%20%20%20%20return%20%60%24%7Bvalue%7D%60%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20return%20%60'%24%7Bvalue.replace(%2F%5C*%2Fg%2C%20'')%7D'%60%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-data-table%20%5BdataTableService%5D%3D%22remoteService%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22sharedColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BallowMultipleFilters%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BhideGlobalSearch%5D%3D%22!globalSearchEnabled%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BdisplayedColumns%5D%3D%22sharedDisplayColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BpaginationOptions%5D%3D%22widePaginationOptions%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BfixedHeader%5D%3D%22true%22%3E%0A%20%20%3C!--%20Custom%20Cell%20--%20passed%20with%20template%20property%20on%20Column%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22custom%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-row%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-col%3D%22col%22%3E%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%20%7B%7B%20row.name%20%7D%7D%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%0A%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-data-table%3E%0A`\n    },\n    'data-table-rows': {\n        title: 'Rows Data Table Example',\n        component: DataTableRowsExample,\n        tsSource: `import%20%7B%20Component%2C%20ChangeDetectionStrategy%2C%20ChangeDetectorRef%2C%20ViewChild%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20*%20as%20dateFns%20from%20'date-fns'%3B%0Aimport%20%7B%20Subject%20%7D%20from%20'rxjs'%3B%0A%0Aimport%20%7B%0A%20%20IDataTableColumn%2C%0A%20%20IDataTablePaginationOptions%2C%0A%20%20IDataTableSearchOptions%2C%0A%20%20NovoModalService%2C%0A%20%20NovoDataTable%2C%0A%20%20IDataTablePreferences%2C%0A%7D%20from%20'novo-elements'%3B%0A%0Aimport%20%7B%20ConfigureColumnsModal%2C%20MockData%20%7D%20from%20'..%2Fextras'%3B%0A%0A%2F**%0A%20*%20%40title%20Rows%20Data%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'data-table-rows-example'%2C%0A%20%20templateUrl%3A%20'data-table-rows-example.html'%2C%0A%20%20styleUrls%3A%20%5B'data-table-rows-example.css'%5D%2C%0A%20%20changeDetection%3A%20ChangeDetectionStrategy.OnPush%2C%0A%7D)%0Aexport%20class%20DataTableRowsExample%20%7B%0A%20%20%40ViewChild('basic'%2C%20%7B%20static%3A%20false%20%7D)%0A%20%20table%3A%20NovoDataTable%3CMockData%3E%3B%0A%0A%20%20%2F%2F%20Table%20configuration%0A%20%20public%20dataSetOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Dataset%20%231'%2C%20value%3A%201%20%7D%2C%20%7B%20label%3A%20'Dataset%20%232'%2C%20value%3A%202%20%7D%2C%20%7B%20label%3A%20'Dataset%20%233'%2C%20value%3A%203%20%7D%5D%3B%0A%20%20public%20loadedDataSet%3A%20number%20%3D%201%3B%0A%20%20public%20paginationTypeOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Standard'%2C%20value%3A%20'standard'%20%7D%2C%20%7B%20label%3A%20'Basic'%2C%20value%3A%20'basic'%20%7D%5D%3B%0A%20%20public%20loadedPaginationType%3A%20string%20%3D%20'standard'%3B%0A%20%20public%20globalSearchOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Show'%2C%20value%3A%20true%20%7D%2C%20%7B%20label%3A%20'Hide'%2C%20value%3A%20false%20%7D%5D%3B%0A%20%20public%20loadedGlobalSearch%3A%20boolean%20%3D%20false%3B%0A%20%20public%20customStatusColumnValue%3A%20string%20%3D%20''%3B%0A%20%20public%20customStatusColumnOptions%3A%20object%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Has%20A%205%20in%20status'%2C%0A%20%20%20%20%20%20value%3A%20'5'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'All'%2C%0A%20%20%20%20%20%20value%3A%20''%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20%2F%2F%20Shared%20configuration%0A%20%20public%20sharedColumns%3A%20IDataTableColumn%3CMockData%3E%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'preview'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.preview.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'preview'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'actions'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20label%3A%20'Actions'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%201'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%202'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabled%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%203'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabledFunc%3A%20this.checkDisabled.bind(this)%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20%20%20label%3A%20'ID'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'telephone'%2C%0A%20%20%20%20%20%20label%3A%20'Phone'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Atel'%2C%0A%20%20%20%20%20%20resizable%3A%20true%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'email'%2C%0A%20%20%20%20%20%20label%3A%20'Email'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Amailto'%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'address'%2C%0A%20%20%20%20%20%20label%3A%20'Address'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24city%2C%20%24state'%2C%20'%24city'%2C%20'%24state'%5D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'embeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(hard)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24another.id'%2C%20'%24firstName%20%24lastName'%5D%2C%0A%20%20%20%20%20%20type%3A%20'link'%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'simpleEmbeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(simple)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20'%24id'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'date'%2C%0A%20%20%20%20%20%20label%3A%20'Date'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20%20%20allowCustomRange%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20'%24year-%24month-%24day%20%24hour%3A%24minute'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'dateTime'%2C%0A%20%20%20%20%20%20label%3A%20'DateTime'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'datetime'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'time'%2C%0A%20%20%20%20%20%20label%3A%20'Time'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'time'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'money'%2C%0A%20%20%20%20%20%20label%3A%20'Money'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'percent'%2C%0A%20%20%20%20%20%20label%3A%20'Percent'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'percent'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'bigdecimal'%2C%0A%20%20%20%20%20%20label%3A%20'BigDecimal'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'bigdecimal'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'name'%2C%0A%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20labelIcon%3A%20'bull'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20template%3A%20'custom'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'status'%2C%0A%20%20%20%20%20%20label%3A%20'Status'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%20type%3A%20'custom'%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'priority'%2C%0A%20%20%20%20%20%20label%3A%20'Priority'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'multi-select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20this.getPriorityOptions()%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'enabled'%2C%0A%20%20%20%20%20%20label%3A%20'Enabled'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20true%2C%20label%3A%20'True'%20%7D%2C%20%7B%20value%3A%20false%2C%20label%3A%20'False'%20%7D%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'edit'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20disabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'edit'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20sharedDisplayColumns%20%3D%20%5B%0A%20%20%20%20'selection'%2C%0A%20%20%20%20'expand'%2C%0A%20%20%20%20'preview'%2C%0A%20%20%20%20'actions'%2C%0A%20%20%20%20'id'%2C%0A%20%20%20%20'date'%2C%0A%20%20%20%20'name'%2C%0A%20%20%20%20'telephone'%2C%0A%20%20%20%20'email'%2C%0A%20%20%20%20'simpleEmbeddedObj'%2C%0A%20%20%20%20'status'%2C%0A%20%20%20%20'priority'%2C%0A%20%20%20%20'percent'%2C%0A%20%20%20%20'bigdecimal'%2C%0A%20%20%20%20'embeddedObj'%2C%0A%20%20%20%20'edit'%2C%0A%20%20%5D%3B%0A%20%20public%20sharedPaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'standard'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20widePaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'basic-wide'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20sharedSearchOptions%3A%20IDataTableSearchOptions%20%3D%20%7B%0A%20%20%20%20placeholder%3A%20'Search%20for%20things...'%2C%0A%20%20%20%20tooltip%3A%20'HELLO'%2C%0A%20%20%7D%3B%0A%20%20public%20sharedDefaultSort%3A%20%7B%20id%3A%20string%3B%20value%3A%20string%20%7D%20%3D%20%7B%0A%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20value%3A%20'asc'%2C%0A%20%20%7D%3B%0A%20%20public%20globalSearchEnabled%3A%20boolean%20%3D%20false%3B%0A%20%20public%20refreshSubject%3A%20Subject%3Cboolean%3E%20%3D%20new%20Subject()%3B%0A%0A%20%20%2F%2F%20Basic%20configuration%0A%20%20public%20basicRows%3A%20MockData%5B%5D%3B%0A%0A%20%20private%20staticDataSet1%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%20%20private%20staticDataSet2%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%20%20private%20staticDataSet3%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20public%20selectedRecordId%3A%20string%20%3D%20''%3B%0A%0A%20%20constructor(private%20ref%3A%20ChangeDetectorRef%2C%20private%20modalService%3A%20NovoModalService)%20%7B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%201000%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20day%20%3D%20i%20%3C%20500%20%3F%20dateFns.subDays(new%20Date()%2C%20i)%20%3A%20dateFns.addDays(new%20Date()%2C%20i%20-%20500)%3B%0A%20%20%20%20%20%20this.staticDataSet1.push(%7B%0A%20%20%20%20%20%20%20%20id%3A%20i%2C%0A%20%20%20%20%20%20%20%20embeddedObj%3A%20%7B%20id%3A%20i%2C%20test%3A%20%60HMM%20%24%7Bi%7D%60%2C%20another%3A%20%7B%20id%3A%20777%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20simpleEmbeddedObj%3A%20%7B%20id%3A%20i%20%7D%2C%0A%20%20%20%20%20%20%20%20name%3A%20%60(1)%20Name%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20status%3A%20%60(1)%20Status%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20priority%3A%20this.getPriority()%2C%0A%20%20%20%20%20%20%20%20enabled%3A%20i%20%25%202%20%3D%3D%3D%200%2C%0A%20%20%20%20%20%20%20%20date%3A%20day%2C%0A%20%20%20%20%20%20%20%20dateTime%3A%20day%2C%0A%20%20%20%20%20%20%20%20time%3A%20day%2C%0A%20%20%20%20%20%20%20%20money%3A%20i%20%2B%2010%2C%0A%20%20%20%20%20%20%20%20percent%3A%20i%20%2F%20100%2C%0A%20%20%20%20%20%20%20%20telephone%3A%20'555-555-5555'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'test%40google.com'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'City'%2C%20state%3A%20null%20%7D%2C%0A%20%20%20%20%20%20%20%20bigdecimal%3A%203.25%20*%20(i%20%2B%201)%20*%20(i%20%25%205%20%3D%3D%3D%201%20%3F%20-1%20%3A%201)%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20this.staticDataSet2.push(%7B%0A%20%20%20%20%20%20%20%20id%3A%20i%20%2B%201001%2C%0A%20%20%20%20%20%20%20%20embeddedObj%3A%20%7B%20id%3A%20i%2C%20test%3A%20%60HMM%20%24%7Bi%7D%60%2C%20another%3A%20%7B%20id%3A%20777%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20simpleEmbeddedObj%3A%20%7B%20id%3A%20i%20%7D%2C%0A%20%20%20%20%20%20%20%20name%3A%20%60(2)%20Name%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20status%3A%20%60(2)%20Status%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20priority%3A%20this.getPriority()%2C%0A%20%20%20%20%20%20%20%20enabled%3A%20i%20%25%202%20%3D%3D%3D%200%2C%0A%20%20%20%20%20%20%20%20date%3A%20day%2C%0A%20%20%20%20%20%20%20%20dateTime%3A%20day%2C%0A%20%20%20%20%20%20%20%20time%3A%20day%2C%0A%20%20%20%20%20%20%20%20money%3A%20i%20%2B%2010%2C%0A%20%20%20%20%20%20%20%20percent%3A%20i%20%2F%20100%2C%0A%20%20%20%20%20%20%20%20telephone%3A%20'555-555-5555'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'test%40google.com'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'City'%2C%20state%3A%20'State'%20%7D%2C%0A%20%20%20%20%20%20%20%20bigdecimal%3A%20-75%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.basicRows%20%3D%20%5B...this.staticDataSet1%5D%3B%0A%20%20%7D%0A%0A%20%20public%20getPriority()%3A%20string%20%7B%0A%20%20%20%20const%20x%20%3D%20Math.round(Math.random()%20*%2050)%3B%0A%20%20%20%20return%20'test%20'%20%2B%20x.toString()%3B%0A%20%20%7D%0A%0A%20%20public%20getPriorityOptions()%20%7B%0A%20%20%20%20const%20options%20%3D%20new%20Array()%3B%0A%20%20%20%20let%20i%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%2049%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20options.push('test%20'%20%2B%20i.toString())%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20options%3B%0A%20%20%7D%0A%0A%20%20public%20switchPaginationType(type%3A%20'basic'%20%7C%20'standard')%20%7B%0A%20%20%20%20this.sharedPaginationOptions%20%3D%20Object.assign(%7B%7D%2C%20this.sharedPaginationOptions%2C%20%7B%20theme%3A%20type%20%7D)%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20loadDataset(setIndex%3A%20number)%20%7B%0A%20%20%20%20switch%20(setIndex)%20%7B%0A%20%20%20%20%20%20case%201%3A%0A%20%20%20%20%20%20%20%20this.basicRows%20%3D%20%5B...this.staticDataSet1%5D%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%202%3A%0A%20%20%20%20%20%20%20%20this.basicRows%20%3D%20%5B...this.staticDataSet2%5D%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%203%3A%0A%20%20%20%20%20%20%20%20this.basicRows%20%3D%20%5B...this.staticDataSet3%5D%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20public%20toggleGlobalSearch(toggle%3A%20boolean)%3A%20void%20%7B%0A%20%20%20%20this.globalSearchEnabled%20%3D%20toggle%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20log(event%3A%20%7B%20originalEvent%3A%20MouseEvent%3B%20row%3A%20MockData%20%7D)%3A%20void%20%7B%0A%20%20%20%20console.log('%5BDataTable%5D%20Event%20Triggered!'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20preview(event%3A%20%7B%20originalEvent%3A%20MouseEvent%3B%20row%3A%20MockData%20%7D)%3A%20void%20%7B%0A%20%20%20%20this.selectedRecordId%20%3D%20event.row.id.toString()%3B%0A%20%20%20%20this.log(event)%3B%0A%20%20%7D%0A%0A%20%20public%20checkDisabled()%3A%20boolean%20%7B%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%0A%20%20public%20configureColumns()%3A%20void%20%7B%0A%20%20%20%20this.modalService%0A%20%20%20%20%20%20.open(ConfigureColumnsModal%2C%20%7B%20columns%3A%20this.sharedColumns%20%7D)%0A%20%20%20%20%20%20.onClosed.then((columns%3A%20IDataTableColumn%3CMockData%3E%5B%5D)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20if%20(columns)%20%7B%0A%20%20%20%20%20%20%20%20%20%20const%20enabledColumns%20%3D%20columns.filter((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.enabled)%3B%0A%20%20%20%20%20%20%20%20%20%20this.sharedDisplayColumns%20%3D%20%5B'selection'%2C%20'expand'%2C%20...enabledColumns.map((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.id)%5D%3B%0A%20%20%20%20%20%20%20%20%20%20this.ref.markForCheck()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20public%20onPreferencesChanged(event%3A%20IDataTablePreferences)%3A%20void%20%7B%0A%20%20%20%20console.log('Preferences%20changed%20(persist%20manually)%3A'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20resized(event)%3A%20void%20%7B%0A%20%20%20%20console.log('Column%20Width%20changed%20(persist%20manually)%3A%20'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20refresh()%3A%20void%20%7B%0A%20%20%20%20this.refreshSubject.next()%3B%0A%20%20%7D%0A%0A%20%20public%20toggleRowDetails(expand%3A%20boolean)%3A%20void%20%7B%0A%20%20%20%20this.table.expandRows(expand)%3B%0A%20%20%7D%0A%0A%20%20public%20filterList(value%3A%20any)%3A%20void%20%7B%0A%20%20%20%20this.table.state.filter%20%3D%20%7B%20id%3A%20'status'%2C%20type%3A%20'text'%2C%20value%20%7D%3B%0A%20%20%20%20this.table.state.updates.next(%7B%0A%20%20%20%20%20%20globalSearch%3A%20this.table.state.globalSearch%2C%0A%20%20%20%20%20%20filter%3A%20this.table.state.filter%2C%0A%20%20%20%20%20%20sort%3A%20this.table.state.sort%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.ref.markForCheck()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A.fixedWindowSize%20%7B%0A%20%20height%3A%20600px%3B%0A%7D%0A%0Anovo-data-table%20%7B%0A%20%20height%3A%20100%25%3B%0A%7D%0A`,\n        htmlSource: `%3Ch6%3EChange%20Dataset%3C%2Fh6%3E%0A%20%20%20%20%3Cnovo-tiles%20%5Boptions%5D%3D%22dataSetOptions%22%20(onChange)%3D%22loadDataset(%24event)%22%20%5B(ngModel)%5D%3D%22loadedDataSet%22%3E%3C%2Fnovo-tiles%3E%0A%20%20%20%20%3Ch6%3EChange%20Pagination%20Style%3C%2Fh6%3E%0A%20%20%20%20%3Cnovo-tiles%20%5Boptions%5D%3D%22paginationTypeOptions%22%20(onChange)%3D%22switchPaginationType(%24event)%22%20%5B(ngModel)%5D%3D%22loadedPaginationType%22%3E%3C%2Fnovo-tiles%3E%0A%20%20%20%20%3Ch6%3EToggle%20Global%20Search%3C%2Fh6%3E%0A%20%20%20%20%3Cnovo-tiles%20%5Boptions%5D%3D%22globalSearchOptions%22%20(onChange)%3D%22toggleGlobalSearch(%24event)%22%20%5B(ngModel)%5D%3D%22loadedGlobalSearch%22%3E%3C%2Fnovo-tiles%3E%0A%20%20%20%20%3Ch6%3EConfigure%20Columns%3C%2Fh6%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22configureColumns()%22%3EConfigure%20Columns%3C%2Fbutton%3E%0A%20%20%20%20%3Ch6%3EConfigure%20Columns%3C%2Fh6%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22toggleRowDetails(true)%22%3EShow%20Row%20Details%20(first%20table)%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22toggleRowDetails(false)%22%3EHide%20Row%20Details%20(first%20table)%3C%2Fbutton%3E%0A%0A%3Cdiv%20class%3D%22fixedWindowSize%22%3E%0A%3Cnovo-data-table%20%5Brows%5D%3D%22basicRows%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22sharedColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BallowMultipleFilters%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BhideGlobalSearch%5D%3D%22!globalSearchEnabled%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BdisplayedColumns%5D%3D%22sharedDisplayColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BpaginationOptions%5D%3D%22sharedPaginationOptions%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%3D%22demo-basic-rows%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BrefreshSubject%5D%3D%22refreshSubject%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(preferencesChanged)%3D%22onPreferencesChanged(%24event)%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(resized)%3D%22resized(%24event)%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BactiveRowIdentifier%5D%3D%22selectedRecordId%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BfixedHeader%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23basic%3E%0A%20%20%3C!--%20Custom%20Actions%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22customActions%22%3E%0A%20%20%20%20%3Cspan%3ETotal%3A%20%7B%7B%20basic.dataSource.currentTotal%20%7D%7D%3C%2Fspan%3E%0A%20%20%20%20%3Cnovo-data-table-clear-button%20*ngIf%3D%22basic.state.userFiltered%22%3E%3C%2Fnovo-data-table-clear-button%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22refresh()%22%3ERefresh%3C%2Fbutton%3E%0A%20%20%20%20%3Cnovo-dropdown%20side%3D%22right%22%3E%0A%20%20%20%20%20%20%3Cbutton%20theme%3D%22primary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20inverse%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20*ngIf%3D%22basic.state.selected.length%20%3D%3D%3D%200%22%3EActions%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20*ngIf%3D%22basic.state.selected.length%20!%3D%3D%200%22%3E%7B%7B%20basic.state.selected.length%20%7D%7D!%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EAction%201%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EAction%202%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%20%5Bdisabled%5D%3D%22basic.state.selected.length%20%3D%3D%3D%200%22%3EAction%203%3C%2Fitem%3E%0A%20%20%20%20%20%20%3C%2Flist%3E%0A%20%20%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3C%2Fng-template%3E%0A%20%20%3C!--%20Custom%20Empty%20Message%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22emptyMessage%22%3EYo!%20No%20Records!%3C%2Fng-template%3E%0A%20%20%3C!--%20Custom%20No%20Results%20Message%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22noResultsMessage%22%3EYo!%20That%20search%20is%20really%20complex%2C%20no%20data%20matches%20that!%3C%2Fng-template%3E%0A%20%20%3C!--%20Custom%20Cell%20for%20ID%20Column%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22id%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-row%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-col%3D%22col%22%3E%0A%20%20%20%20%3Ci%20class%3D%22bhi-bull%22%3E%3C%2Fi%3E%20%7B%7B%20row.id%20%7D%7D%0A%20%20%3C%2Fng-template%3E%0A%20%20%3C!--%20Custom%20Cell%20--%20passed%20with%20template%20property%20on%20Column%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22custom%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-row%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-col%3D%22col%22%3E%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%20%7B%7B%20row.name%20%7D%7D%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%0A%20%20%3C%2Fng-template%3E%0A%20%20%3C!--%20Row%20Details%20Template%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22expandedRow%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-row%3E%0A%20%20%20%20Why%20look%20at%20that%2C%20you%20clicked%20the%20details!%0A%20%20%3C%2Fng-template%3E%0A%20%20%3C!--%20Custom%20Status%20Filter%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22column-filter-status%22%3E%0A%20%20%20%20%3Cnovo-tiles%20%5Boptions%5D%3D%22customStatusColumnOptions%22%20(onChange)%3D%22filterList(%24event)%22%20%5B(ngModel)%5D%3D%22customStatusColumnValue%22%3E%3C%2Fnovo-tiles%3E%0A%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-data-table%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'data-table-service': {\n        title: 'Data Table Service Example',\n        component: DataTableServiceExample,\n        tsSource: `import%20%7B%20Component%2C%20ChangeDetectionStrategy%2C%20ChangeDetectorRef%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20*%20as%20dateFns%20from%20'date-fns'%3B%0Aimport%20%7B%20Subject%20%7D%20from%20'rxjs'%3B%0A%0Aimport%20%7B%0A%20%20IDataTableColumn%2C%0A%20%20StaticDataTableService%2C%0A%20%20IDataTablePaginationOptions%2C%0A%20%20IDataTableSearchOptions%2C%0A%20%20IDataTableService%2C%0A%20%20NovoModalService%2C%0A%20%20IDataTablePreferences%2C%0A%7D%20from%20'novo-elements'%3B%0A%0Aimport%20%7B%20ConfigureColumnsModal%2C%20MockData%20%7D%20from%20'..%2Fextras'%3B%0A%0A%2F**%0A%20*%20%40title%20Data%20Table%20Service%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'data-table-service-example'%2C%0A%20%20templateUrl%3A%20'data-table-service-example.html'%2C%0A%20%20styleUrls%3A%20%5B'data-table-service-example.css'%5D%2C%0A%20%20changeDetection%3A%20ChangeDetectionStrategy.OnPush%2C%0A%7D)%0Aexport%20class%20DataTableServiceExample%20%7B%0A%20%20%2F%2F%20Table%20configuration%0A%20%20public%20dataSetOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Dataset%20%231'%2C%20value%3A%201%20%7D%2C%20%7B%20label%3A%20'Dataset%20%232'%2C%20value%3A%202%20%7D%2C%20%7B%20label%3A%20'Dataset%20%233'%2C%20value%3A%203%20%7D%5D%3B%0A%20%20public%20loadedDataSet%3A%20number%20%3D%201%3B%0A%20%20public%20paginationTypeOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Standard'%2C%20value%3A%20'standard'%20%7D%2C%20%7B%20label%3A%20'Basic'%2C%20value%3A%20'basic'%20%7D%5D%3B%0A%20%20public%20loadedPaginationType%3A%20string%20%3D%20'standard'%3B%0A%20%20public%20globalSearchOptions%3A%20any%5B%5D%20%3D%20%5B%7B%20label%3A%20'Show'%2C%20value%3A%20true%20%7D%2C%20%7B%20label%3A%20'Hide'%2C%20value%3A%20false%20%7D%5D%3B%0A%20%20public%20loadedGlobalSearch%3A%20boolean%20%3D%20false%3B%0A%0A%20%20%2F%2F%20Shared%20configuration%0A%20%20public%20sharedColumns%3A%20IDataTableColumn%3CMockData%3E%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'preview'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'preview'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'actions'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20label%3A%20'Actions'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%201'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%202'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabled%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%20label%3A%20'Action%203'%2C%20handlers%3A%20%7B%20click%3A%20this.log.bind(this)%20%7D%2C%20disabledFunc%3A%20this.checkDisabled.bind(this)%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20%20%20label%3A%20'ID'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'telephone'%2C%0A%20%20%20%20%20%20label%3A%20'Phone'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Atel'%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'email'%2C%0A%20%20%20%20%20%20label%3A%20'Email'%2C%0A%20%20%20%20%20%20type%3A%20'link%3Amailto'%2C%0A%20%20%20%20%20%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20target%3A%20'_blank'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'address'%2C%0A%20%20%20%20%20%20label%3A%20'Address'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24city%2C%20%24state'%2C%20'%24city'%2C%20'%24state'%5D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'embeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(hard)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20%5B'%24another.id'%2C%20'%24firstName%20%24lastName'%5D%2C%0A%20%20%20%20%20%20type%3A%20'link'%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'simpleEmbeddedObj'%2C%0A%20%20%20%20%20%20label%3A%20'Embedded%20(simple)'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20format%3A%20'%24id'%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'date'%2C%0A%20%20%20%20%20%20label%3A%20'Date'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20%20%20allowCustomRange%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'dateTime'%2C%0A%20%20%20%20%20%20label%3A%20'DateTime'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'datetime'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'time'%2C%0A%20%20%20%20%20%20label%3A%20'Time'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'time'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'money'%2C%0A%20%20%20%20%20%20label%3A%20'Money'%2C%0A%20%20%20%20%20%20enabled%3A%20false%2C%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'percent'%2C%0A%20%20%20%20%20%20label%3A%20'Percent'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'percent'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'name'%2C%0A%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20labelIcon%3A%20'bull'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20template%3A%20'custom'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'status'%2C%0A%20%20%20%20%20%20label%3A%20'Status'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20true%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'priority'%2C%0A%20%20%20%20%20%20label%3A%20'Priority'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'multi-select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20this.getPriorityOptions()%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'enabled'%2C%0A%20%20%20%20%20%20label%3A%20'Enabled'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20sortable%3A%20true%2C%0A%20%20%20%20%20%20filterable%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'select'%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20true%2C%20label%3A%20'True'%20%7D%2C%20%7B%20value%3A%20false%2C%20label%3A%20'False'%20%7D%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20id%3A%20'edit'%2C%0A%20%20%20%20%20%20type%3A%20'action'%2C%0A%20%20%20%20%20%20enabled%3A%20true%2C%0A%20%20%20%20%20%20disabled%3A%20true%2C%0A%20%20%20%20%20%20handlers%3A%20%7B%0A%20%20%20%20%20%20%20%20click%3A%20this.log.bind(this)%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20action%3A%20%7B%0A%20%20%20%20%20%20%20%20icon%3A%20'edit'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20sharedDisplayColumns%20%3D%20%5B%0A%20%20%20%20'selection'%2C%0A%20%20%20%20'expand'%2C%0A%20%20%20%20'preview'%2C%0A%20%20%20%20'actions'%2C%0A%20%20%20%20'id'%2C%0A%20%20%20%20'date'%2C%0A%20%20%20%20'name'%2C%0A%20%20%20%20'telephone'%2C%0A%20%20%20%20'email'%2C%0A%20%20%20%20'simpleEmbeddedObj'%2C%0A%20%20%20%20'status'%2C%0A%20%20%20%20'priority'%2C%0A%20%20%20%20'percent'%2C%0A%20%20%20%20'embeddedObj'%2C%0A%20%20%20%20'edit'%2C%0A%20%20%5D%3B%0A%20%20public%20sharedPaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'standard'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20widePaginationOptions%3A%20IDataTablePaginationOptions%20%3D%20%7B%0A%20%20%20%20theme%3A%20'basic-wide'%2C%0A%20%20%20%20pageSize%3A%2010%2C%0A%20%20%20%20pageSizeOptions%3A%20%5B10%2C%2050%2C%20100%2C%20250%2C%20500%5D%2C%0A%20%20%7D%3B%0A%20%20public%20sharedSearchOptions%3A%20IDataTableSearchOptions%20%3D%20%7B%0A%20%20%20%20placeholder%3A%20'Search%20for%20things...'%2C%0A%20%20%20%20tooltip%3A%20'HELLO'%2C%0A%20%20%7D%3B%0A%20%20public%20sharedDefaultSort%3A%20%7B%20id%3A%20string%3B%20value%3A%20string%20%7D%20%3D%20%7B%0A%20%20%20%20id%3A%20'id'%2C%0A%20%20%20%20value%3A%20'asc'%2C%0A%20%20%7D%3B%0A%20%20public%20globalSearchEnabled%3A%20boolean%20%3D%20false%3B%0A%20%20public%20refreshSubject%3A%20Subject%3Cboolean%3E%20%3D%20new%20Subject()%3B%0A%0A%20%20%2F%2F%20Basic%20configuration%0A%20%20public%20basicService%3A%20IDataTableService%3CMockData%3E%3B%0A%0A%20%20private%20staticDataSet1%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%20%20private%20staticDataSet2%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%20%20private%20staticDataSet3%3A%20MockData%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20constructor(private%20ref%3A%20ChangeDetectorRef%2C%20private%20modalService%3A%20NovoModalService)%20%7B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%201000%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20day%20%3D%20i%20%3C%20500%20%3F%20dateFns.subDays(new%20Date()%2C%20i)%20%3A%20dateFns.addDays(new%20Date()%2C%20i%20-%20500)%3B%0A%20%20%20%20%20%20this.staticDataSet1.push(%7B%0A%20%20%20%20%20%20%20%20id%3A%20i%2C%0A%20%20%20%20%20%20%20%20embeddedObj%3A%20%7B%20id%3A%20i%2C%20test%3A%20%60HMM%20%24%7Bi%7D%60%2C%20another%3A%20%7B%20id%3A%20777%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20simpleEmbeddedObj%3A%20%7B%20id%3A%20i%20%7D%2C%0A%20%20%20%20%20%20%20%20name%3A%20%60(1)%20Name%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20status%3A%20%60(1)%20Status%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20priority%3A%20this.getPriority()%2C%0A%20%20%20%20%20%20%20%20enabled%3A%20i%20%25%202%20%3D%3D%3D%200%2C%0A%20%20%20%20%20%20%20%20date%3A%20day%2C%0A%20%20%20%20%20%20%20%20dateTime%3A%20day%2C%0A%20%20%20%20%20%20%20%20time%3A%20day%2C%0A%20%20%20%20%20%20%20%20money%3A%20i%20%2B%2010%2C%0A%20%20%20%20%20%20%20%20percent%3A%20i%20%2F%20100%2C%0A%20%20%20%20%20%20%20%20telephone%3A%20'555-555-5555'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'test%40google.com'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'City'%2C%20state%3A%20null%20%7D%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20this.staticDataSet2.push(%7B%0A%20%20%20%20%20%20%20%20id%3A%20i%20%2B%201001%2C%0A%20%20%20%20%20%20%20%20embeddedObj%3A%20%7B%20id%3A%20i%2C%20test%3A%20%60HMM%20%24%7Bi%7D%60%2C%20another%3A%20%7B%20id%3A%20777%20%7D%20%7D%2C%0A%20%20%20%20%20%20%20%20simpleEmbeddedObj%3A%20%7B%20id%3A%20i%20%7D%2C%0A%20%20%20%20%20%20%20%20name%3A%20%60(2)%20Name%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20status%3A%20%60(2)%20Status%20%24%7Bi%7D%60%2C%0A%20%20%20%20%20%20%20%20priority%3A%20this.getPriority()%2C%0A%20%20%20%20%20%20%20%20enabled%3A%20i%20%25%202%20%3D%3D%3D%200%2C%0A%20%20%20%20%20%20%20%20date%3A%20day%2C%0A%20%20%20%20%20%20%20%20dateTime%3A%20day%2C%0A%20%20%20%20%20%20%20%20time%3A%20day%2C%0A%20%20%20%20%20%20%20%20money%3A%20i%20%2B%2010%2C%0A%20%20%20%20%20%20%20%20percent%3A%20i%20%2F%20100%2C%0A%20%20%20%20%20%20%20%20telephone%3A%20'555-555-5555'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'test%40google.com'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'City'%2C%20state%3A%20'State'%20%7D%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.basicService%20%3D%20new%20StaticDataTableService(%5B...this.staticDataSet1%5D)%3B%0A%20%20%7D%0A%0A%20%20public%20getPriority()%3A%20string%20%7B%0A%20%20%20%20const%20x%20%3D%20Math.round(Math.random()%20*%2050)%3B%0A%20%20%20%20return%20'test%20'%20%2B%20x.toString()%3B%0A%20%20%7D%0A%0A%20%20public%20getPriorityOptions()%20%7B%0A%20%20%20%20const%20options%20%3D%20new%20Array()%3B%0A%20%20%20%20let%20i%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%2049%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20options.push('test%20'%20%2B%20i.toString())%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20options%3B%0A%20%20%7D%0A%20%20public%20switchPaginationType(type%3A%20'basic'%20%7C%20'standard')%20%7B%0A%20%20%20%20this.sharedPaginationOptions%20%3D%20Object.assign(%7B%7D%2C%20this.sharedPaginationOptions%2C%20%7B%20theme%3A%20type%20%7D)%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20loadDataset(setIndex%3A%20number)%20%7B%0A%20%20%20%20switch%20(setIndex)%20%7B%0A%20%20%20%20%20%20case%201%3A%0A%20%20%20%20%20%20%20%20this.basicService%20%3D%20new%20StaticDataTableService(%5B...this.staticDataSet1%5D)%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%202%3A%0A%20%20%20%20%20%20%20%20this.basicService%20%3D%20new%20StaticDataTableService(%5B...this.staticDataSet2%5D)%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%203%3A%0A%20%20%20%20%20%20%20%20this.basicService%20%3D%20new%20StaticDataTableService(%5B...this.staticDataSet3%5D)%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20public%20toggleGlobalSearch(toggle%3A%20boolean)%3A%20void%20%7B%0A%20%20%20%20this.globalSearchEnabled%20%3D%20toggle%3B%0A%20%20%20%20this.ref.detectChanges()%3B%0A%20%20%7D%0A%0A%20%20public%20log(event%3A%20%7B%20originalEvent%3A%20MouseEvent%3B%20row%3A%20MockData%20%7D)%3A%20void%20%7B%0A%20%20%20%20console.log('%5BDataTable%5D%20Event%20Triggered!'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20checkDisabled()%3A%20boolean%20%7B%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%0A%20%20public%20configureColumns()%3A%20void%20%7B%0A%20%20%20%20this.modalService%0A%20%20%20%20%20%20.open(ConfigureColumnsModal%2C%20%7B%20columns%3A%20this.sharedColumns%20%7D)%0A%20%20%20%20%20%20.onClosed.then((columns%3A%20IDataTableColumn%3CMockData%3E%5B%5D)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20if%20(columns)%20%7B%0A%20%20%20%20%20%20%20%20%20%20const%20enabledColumns%20%3D%20columns.filter((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.enabled)%3B%0A%20%20%20%20%20%20%20%20%20%20this.sharedDisplayColumns%20%3D%20%5B'selection'%2C%20'expand'%2C%20...enabledColumns.map((column%3A%20IDataTableColumn%3CMockData%3E)%20%3D%3E%20column.id)%5D%3B%0A%20%20%20%20%20%20%20%20%20%20this.ref.markForCheck()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20public%20onPreferencesChanged(event%3A%20IDataTablePreferences)%3A%20void%20%7B%0A%20%20%20%20console.log('Preferences%20changed%20(persist%20manually)%3A'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20refresh()%3A%20void%20%7B%0A%20%20%20%20this.refreshSubject.next()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-data-table%20%5BdataTableService%5D%3D%22basicService%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22sharedColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BallowMultipleFilters%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BhideGlobalSearch%5D%3D%22!globalSearchEnabled%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BdisplayedColumns%5D%3D%22sharedDisplayColumns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BpaginationOptions%5D%3D%22sharedPaginationOptions%22%3E%0A%20%20%3C!--%20Custom%20Cell%20--%20passed%20with%20template%20property%20on%20Column%20--%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22custom%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-row%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let-col%3D%22col%22%3E%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%20%7B%7B%20row.name%20%7D%7D%0A%20%20%20%20%3Cb%3ECUSTOM%3C%2Fb%3E%0A%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-data-table%3E%0A`\n    },\n    'configure-columns-modal': {\n        title: 'Configure Columns Modal Example',\n        component: ConfigureColumnsModal,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0Aimport%20%7B%20IDataTableColumn%2C%20NovoModalRef%2C%20NovoModalParams%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockData%20%7D%20from%20'.%2Fmock-data'%3B%0A%0A%2F**%0A%20*%20%40title%20Configure%20Columns%20Modal%20Example%0A%20*%2F%0A%0A%40Component(%7B%0A%20%20selector%3A%20'configure-columns-modal-example'%2C%0A%20%20template%3A%20%60%0A%20%20%20%20%3Cnovo-modal%3E%0A%20%20%20%20%20%20%3Cheader%20title%3D%22Configure%20Columns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22contact%22%3E%0A%20%20%20%20%20%20%20%20%3Cutils%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22times%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22close()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%3C%2Futils%3E%0A%20%20%20%20%20%20%3C%2Fheader%3E%0A%20%20%20%20%20%20%3Csection%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-list%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cnovo-list-item%20*ngFor%3D%22let%20column%20of%20columns%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-title%3E%7B%7B%20column.id%20%7D%7D%3C%2Fitem-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header-end%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-checkbox%20%5B(ngModel)%5D%3D%22column.enabled%22%3E%3C%2Fnovo-checkbox%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header-end%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-list%3E%0A%20%20%20%20%20%20%3C%2Fsection%3E%0A%20%20%20%20%20%20%3Cbutton%20theme%3D%22standard%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22close()%22%3ECancel%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3Cbutton%20theme%3D%22primary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20color%3D%22success%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22check%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22save()%22%3ESave%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fnovo-modal%3E%0A%20%20%60%2C%0A%7D)%0Aexport%20class%20ConfigureColumnsModal%20%7B%0A%20%20public%20columns%3A%20IDataTableColumn%3CMockData%3E%3B%0A%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef%2C%20private%20params%3A%20NovoModalParams)%20%7B%0A%20%20%20%20this.columns%20%3D%20params%5B'columns'%5D%3B%0A%20%20%7D%0A%0A%20%20public%20close()%3A%20void%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%0A%20%20public%20save()%20%7B%0A%20%20%20%20this.modalRef.close(this.columns)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: ``\n    },\n    'basic-drop-down': {\n        title: 'Basic Drop Down',\n        component: BasicDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Drop%20Down%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-drop-down-example'%2C%0A%20%20templateUrl%3A%20'basic-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicDropDownExample%20%7B%0A%20%20public%20clickMe(event%3F%3A%20string)%20%7B%0A%20%20%20%20window.alert(event)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dropdown%3E%0A%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20inverse%3EActions%3C%2Fbutton%3E%0A%20%20%3Clist%3E%0A%20%20%20%20%3Cdropdown-item-header%3ESection%201%3C%2Fdropdown-item-header%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Hello!')%22%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Another!')%22%3EJosh%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20tooltip%3D%22Test%20tooltip%20%3A)%22%0A%20%20%20%20%20%20%20%20%20%20tooltipPosition%3D%22right%22%0A%20%20%20%20%20%20%20%20%20%20%5Bdisabled%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20(action)%3D%22clickMe()%22%3EMenu%20Item%20With%20Lots%20of%20Text%20in%20it%20to%20Show%20Dynamic%20Width%3C%2Fitem%3E%0A%20%20%20%20%3Cdropdown-item-header%3ESection%202%3C%2Fdropdown-item-header%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Hello!')%22%3EGermany%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Another!')%22%3EAlgebra%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20tooltip%3D%22Test%20tooltip%20%3A)%22%0A%20%20%20%20%20%20%20%20%20%20tooltipPosition%3D%22right%22%0A%20%20%20%20%20%20%20%20%20%20%5Bdisabled%5D%3D%22true%22%0A%20%20%20%20%20%20%20%20%20%20(action)%3D%22clickMe()%22%3EBlah%3C%2Fitem%3E%0A%20%20%3C%2Flist%3E%0A%3C%2Fnovo-dropdown%3E%0A%3Cnovo-dropdown%20side%3D%22right%22%3E%0A%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20theme%3D%22icon%22%0A%20%20%20%20%20%20%20%20%20%20icon%3D%22menu%22%0A%20%20%20%20%20%20%20%20%20%20inverse%3E%3C%2Fbutton%3E%0A%20%20%3Clist%3E%0A%20%20%20%20%3Citem%3EAction%201%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20tooltip%3D%22Test%20tooltip%20%3A)%22%0A%20%20%20%20%20%20%20%20%20%20tooltipPosition%3D%22left%22%3EAction%202%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%203%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%204%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%205%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%206%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%207%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%208%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%209%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EAction%2010%3C%2Fitem%3E%0A%20%20%20%20%3Citem%3EMenu%20Item%20With%20Lots%20of%20Text%20in%20it%20to%20Show%20Dynamic%20Width%3C%2Fitem%3E%0A%20%20%3C%2Flist%3E%0A%3C%2Fnovo-dropdown%3E%0A`\n    },\n    'custom-drop-down': {\n        title: 'Custom Drop Down',\n        component: CustomDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Custom%20Drop%20Down%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-drop-down-example'%2C%0A%20%20templateUrl%3A%20'custom-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomDropDownExample%20%7B%0A%20%20public%20clickMe(event%3F%3A%20string)%20%7B%0A%20%20%20%20window.alert(event)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dropdown%20containerClass%3D%22custom-class%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20scrollStrategy%3D%22close%22%3E%0A%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20inverse%3EI%20Have%20A%20Custom%20Class!%3C%2Fbutton%3E%0A%20%20%3Clist%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Hello!')%22%3EAction%201%3C%2Fitem%3E%0A%20%20%20%20%3Citem%20(action)%3D%22clickMe('Another!')%22%3EAction%202%3C%2Fitem%3E%0A%20%20%3C%2Flist%3E%0A%3C%2Fnovo-dropdown%3E%0A`\n    },\n    'large-drop-down': {\n        title: 'Large Drop Down',\n        component: LargeDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Large%20Drop%20Down%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'large-drop-down-example'%2C%0A%20%20templateUrl%3A%20'large-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'large-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20LargeDropDownExample%20%7B%0A%20%20public%20MOCK_WORDS%3A%20string%5B%5D%20%3D%20%5B%0A%20%20%20%20'lorem'%2C%0A%20%20%20%20'ipsum'%2C%0A%20%20%20%20'dolor'%2C%0A%20%20%20%20'sit'%2C%0A%20%20%20%20'amet'%2C%0A%20%20%20%20'consectetur'%2C%0A%20%20%20%20'adipiscing'%2C%0A%20%20%20%20'elit'%2C%0A%20%20%20%20'curabitur'%2C%0A%20%20%20%20'vel'%2C%0A%20%20%20%20'hendrerit'%2C%0A%20%20%20%20'libero'%2C%0A%20%20%20%20'eleifend'%2C%0A%20%20%20%20'blandit'%2C%0A%20%20%20%20'nunc'%2C%0A%20%20%20%20'ornare'%2C%0A%20%20%20%20'odio'%2C%0A%20%20%20%20'ut'%2C%0A%20%20%20%20'orci'%2C%0A%20%20%20%20'gravida'%2C%0A%20%20%20%20'imperdiet'%2C%0A%20%20%20%20'nullam'%2C%0A%20%20%20%20'purus'%2C%0A%20%20%20%20'lacinia'%2C%0A%20%20%20%20'a'%2C%0A%20%20%20%20'pretium'%2C%0A%20%20%20%20'quis'%2C%0A%20%20%20%20'congue'%2C%0A%20%20%20%20'praesent'%2C%0A%20%20%20%20'sagittis'%2C%0A%20%20%20%20'laoreet'%2C%0A%20%20%20%20'auctor'%2C%0A%20%20%20%20'mauris'%2C%0A%20%20%20%20'non'%2C%0A%20%20%20%20'velit'%2C%0A%20%20%20%20'eros'%2C%0A%20%20%20%20'dictum'%2C%0A%20%20%20%20'proin'%2C%0A%20%20%20%20'accumsan'%2C%0A%20%20%20%20'sapien'%2C%0A%20%20%20%20'nec'%2C%0A%20%20%20%20'massa'%2C%0A%20%20%20%20'volutpat'%2C%0A%20%20%20%20'venenatis'%2C%0A%20%20%20%20'sed'%2C%0A%20%20%20%20'eu'%2C%0A%20%20%20%20'molestie'%2C%0A%20%20%20%20'lacus'%2C%0A%20%20%20%20'quisque'%2C%0A%20%20%20%20'porttitor'%2C%0A%20%20%20%20'ligula'%2C%0A%20%20%20%20'dui'%2C%0A%20%20%20%20'mollis'%2C%0A%20%20%20%20'tempus'%2C%0A%20%20%20%20'at'%2C%0A%20%20%20%20'magna'%2C%0A%20%20%20%20'vestibulum'%2C%0A%20%20%20%20'turpis'%2C%0A%20%20%20%20'ac'%2C%0A%20%20%20%20'diam'%2C%0A%20%20%20%20'tincidunt'%2C%0A%20%20%20%20'id'%2C%0A%20%20%20%20'condimentum'%2C%0A%20%20%20%20'enim'%2C%0A%20%20%20%20'sodales'%2C%0A%20%20%20%20'in'%2C%0A%20%20%20%20'hac'%2C%0A%20%20%20%20'habitasse'%2C%0A%20%20%20%20'platea'%2C%0A%20%20%20%20'dictumst'%2C%0A%20%20%20%20'aenean'%2C%0A%20%20%20%20'neque'%2C%0A%20%20%20%20'fusce'%2C%0A%20%20%20%20'augue'%2C%0A%20%20%20%20'leo'%2C%0A%20%20%20%20'eget'%2C%0A%20%20%20%20'semper'%2C%0A%20%20%20%20'mattis'%2C%0A%20%20%20%20'tortor'%2C%0A%20%20%20%20'scelerisque'%2C%0A%20%20%20%20'nulla'%2C%0A%20%20%20%20'interdum'%2C%0A%20%20%20%20'tellus'%2C%0A%20%20%20%20'malesuada'%2C%0A%20%20%20%20'rhoncus'%2C%0A%20%20%20%20'porta'%2C%0A%20%20%20%20'sem'%2C%0A%20%20%20%20'aliquet'%2C%0A%20%20%20%20'et'%2C%0A%20%20%20%20'nam'%2C%0A%20%20%20%20'suspendisse'%2C%0A%20%20%20%20'potenti'%2C%0A%20%20%20%20'vivamus'%2C%0A%20%20%20%20'luctus'%2C%0A%20%20%20%20'fringilla'%2C%0A%20%20%20%20'erat'%2C%0A%20%20%20%20'donec'%2C%0A%20%20%20%20'justo'%2C%0A%20%20%20%20'vehicula'%2C%0A%20%20%20%20'ultricies'%2C%0A%20%20%20%20'varius'%2C%0A%20%20%20%20'ante'%2C%0A%20%20%20%20'primis'%2C%0A%20%20%20%20'faucibus'%2C%0A%20%20%20%20'ultrices'%2C%0A%20%20%20%20'posuere'%2C%0A%20%20%20%20'cubilia'%2C%0A%20%20%20%20'curae'%2C%0A%20%20%20%20'etiam'%2C%0A%20%20%20%20'cursus'%2C%0A%20%20%20%20'aliquam'%2C%0A%20%20%20%20'quam'%2C%0A%20%20%20%20'dapibus'%2C%0A%20%20%20%20'nisl'%2C%0A%20%20%20%20'feugiat'%2C%0A%20%20%20%20'egestas'%2C%0A%20%20%20%20'class'%2C%0A%20%20%20%20'aptent'%2C%0A%20%20%20%20'taciti'%2C%0A%20%20%20%20'sociosqu'%2C%0A%20%20%20%20'ad'%2C%0A%20%20%20%20'litora'%2C%0A%20%20%20%20'torquent'%2C%0A%20%20%20%20'per'%2C%0A%20%20%20%20'conubia'%2C%0A%20%20%20%20'nostra'%2C%0A%20%20%20%20'inceptos'%2C%0A%20%20%20%20'himenaeos'%2C%0A%20%20%20%20'phasellus'%2C%0A%20%20%20%20'nibh'%2C%0A%20%20%20%20'pulvinar'%2C%0A%20%20%20%20'vitae'%2C%0A%20%20%20%20'urna'%2C%0A%20%20%20%20'iaculis'%2C%0A%20%20%20%20'lobortis'%2C%0A%20%20%20%20'nisi'%2C%0A%20%20%20%20'viverra'%2C%0A%20%20%20%20'arcu'%2C%0A%20%20%20%20'morbi'%2C%0A%20%20%20%20'pellentesque'%2C%0A%20%20%20%20'metus'%2C%0A%20%20%20%20'commodo'%2C%0A%20%20%20%20'ut'%2C%0A%20%20%20%20'facilisis'%2C%0A%20%20%20%20'felis'%2C%0A%20%20%20%20'tristique'%2C%0A%20%20%20%20'ullamcorper'%2C%0A%20%20%20%20'placerat'%2C%0A%20%20%20%20'aenean'%2C%0A%20%20%20%20'convallis'%2C%0A%20%20%20%20'sollicitudin'%2C%0A%20%20%20%20'integer'%2C%0A%20%20%20%20'rutrum'%2C%0A%20%20%20%20'duis'%2C%0A%20%20%20%20'est'%2C%0A%20%20%20%20'etiam'%2C%0A%20%20%20%20'bibendum'%2C%0A%20%20%20%20'donec'%2C%0A%20%20%20%20'pharetra'%2C%0A%20%20%20%20'vulputate'%2C%0A%20%20%20%20'maecenas'%2C%0A%20%20%20%20'mi'%2C%0A%20%20%20%20'fermentum'%2C%0A%20%20%20%20'consequat'%2C%0A%20%20%20%20'suscipit'%2C%0A%20%20%20%20'aliquam'%2C%0A%20%20%20%20'habitant'%2C%0A%20%20%20%20'senectus'%2C%0A%20%20%20%20'netus'%2C%0A%20%20%20%20'fames'%2C%0A%20%20%20%20'quisque'%2C%0A%20%20%20%20'euismod'%2C%0A%20%20%20%20'curabitur'%2C%0A%20%20%20%20'lectus'%2C%0A%20%20%20%20'elementum'%2C%0A%20%20%20%20'tempor'%2C%0A%20%20%20%20'risus'%2C%0A%20%20%20%20'cras'%2C%0A%20%20%5D%3B%0A%0A%20%20public%20clickMe(data%3A%20string)%3A%20void%20%7B%0A%20%20%20%20console.log('CLICKED!'%2C%20data)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dropdown%20height%3D%22250%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ELots%20of%20Data%20Points!%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%20*ngFor%3D%22let%20name%20of%20MOCK_WORDS%22%0A%20%20%20%20%20%20%20%20%20%20%20%20(action)%3D%22clickMe(name)%22%3E%7B%7B%20name%20%7D%7D%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A`\n    },\n    'multi-drop-down': {\n        title: 'Multi Drop Down',\n        component: MultiDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Multi%20Drop%20Down%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'multi-drop-down-example'%2C%0A%20%20templateUrl%3A%20'multi-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'multi-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20MultiDropDownExample%20%7B%0A%20%20public%20clickMe(data%3A%20string)%3A%20void%20%7B%0A%20%20%20%20console.log('CLICKED!'%2C%20data)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dropdown%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EKeep%20Open%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%20(action)%3D%22clickMe('Hello!')%22%0A%20%20%20%20%20%20%20%20%20%20%20%20keepOpen%3D%22true%22%3EAction%201%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%20(action)%3D%22clickMe('Another!')%22%0A%20%20%20%20%20%20%20%20%20%20%20%20keepOpen%3D%22true%22%3EAction%202%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A`\n    },\n    'position-drop-down': {\n        title: 'Drop Down Positions',\n        component: PositionDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Drop%20Down%20Positions%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'position-drop-down-example'%2C%0A%20%20templateUrl%3A%20'position-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'position-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PositionDropDownExample%20%7B%0A%20%20public%20POSITION_OPTIONS%3A%20%7B%20name%3A%20string%3B%20description%3A%20string%20%7D%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'default%20(left)'%2C%0A%20%20%20%20%20%20description%3A%20'Prefer%20bottom-left%2C%20with%20fallback%20positions%20(in%20order)%3A%20top-left%2C%20bottom-right%2C%20top-right%2C%20center-left%2C%20center-right'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'right'%2C%0A%20%20%20%20%20%20description%3A%20'Prefer%20bottom-right%2C%20with%20fallback%20positions%20(in%20order)%3A%20top-right%2C%20bottom-left%2C%20top-left%2C%20center-left%2C%20center-right'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'above-below'%2C%0A%20%20%20%20%20%20description%3A%20'Prefer%20bottom-left%2C%20with%20fallback%20positions%20(in%20order)%3A%20top-left%2C%20bottom-right%2C%20top-right%20(no%20center)'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'right-above-below'%2C%0A%20%20%20%20%20%20description%3A%20'Prefer%20bottom-left%2C%20with%20fallback%20positions%20(in%20order)%3A%20top-left%2C%20bottom-right%2C%20top-right%20(no%20center)'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'center'%2C%20description%3A%20'Prefer%20center-left%2C%20with%20fallback%20positions%20above%20and%20below%2C%20but%20always%20covering%20the%20dropdown'%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'bottom'%2C%20description%3A%20'Prefer%20bottom-left%2C%20with%20fallback%20position%20of%20bottom-right'%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'bottom-left'%2C%20description%3A%20'Always%20popup%20to%20the%20bottom-left'%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'bottom-right'%2C%20description%3A%20'Always%20popup%20to%20the%20bottom-right'%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'top-left'%2C%20description%3A%20'Always%20popup%20to%20the%20top-left'%20%7D%2C%0A%20%20%20%20%7B%20name%3A%20'top-right'%2C%20description%3A%20'Always%20popup%20to%20the%20top-right'%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20public%20clickMe(data%3A%20string)%3A%20void%20%7B%0A%20%20%20%20console.log('CLICKED!'%2C%20data)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20background%3A%20%234a89dc%3B%0A%20%20padding%3A%201rem%3B%0A%20%20display%3A%20flex%3B%0A%20%20justify-content%3A%20space-between%3B%0A%20%20align-items%3A%20center%3B%0A%20%20flex-wrap%3A%20wrap%3B%0A%20%20padding%3A%200.5rem%3B%0A%7D%0A%0A%3Ahost%20novo-dropdown%20%7B%0A%20%20margin%3A%200.5rem%3B%0A%7D%0A`,\n        htmlSource: `%3Cnovo-dropdown%20side%3D%22default%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EDefault%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22right%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ERight%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22above-below%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EAbove-below%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22right-above-below%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ERight-Above-Below%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22center%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ECenter%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22bottom%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EBottom%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22bottom-left%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EBottom-Left%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22bottom-right%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EBottom-Right%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22top-left%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ETop-Left%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%3Cnovo-dropdown%20side%3D%22top-right%22%3E%0A%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20inverse%3ETop-Right%3C%2Fbutton%3E%0A%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%3Citem%3EFive%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EItems%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EFor%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3EPosition%3C%2Fitem%3E%0A%20%20%20%20%20%20%3Citem%3ETest%3C%2Fitem%3E%0A%20%20%20%20%3C%2Flist%3E%0A%20%20%3C%2Fnovo-dropdown%3E%0A`\n    },\n    'scrollable-drop-down': {\n        title: 'Scrollable Drop Down',\n        component: ScrollableDropDownExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Scrollable%20Drop%20Down%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'scrollable-drop-down-example'%2C%0A%20%20templateUrl%3A%20'scrollable-drop-down-example.html'%2C%0A%20%20styleUrls%3A%20%5B'scrollable-drop-down-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ScrollableDropDownExample%20%7B%0A%20%20public%20clickMe(event%3F%3A%20string)%20%7B%0A%20%20%20%20window.alert(event)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20background%3A%20%234a89dc%3B%0A%20%20display%3A%20block%3B%0A%20%20justify-content%3A%20space-between%3B%0A%20%20align-items%3A%20center%3B%0A%20%20padding%3A%200.5rem%3B%0A%7D%0A%3Ahost%20.scrollable-container%20%7B%0A%20%20max-height%3A%2010rem%3B%0A%20%20overflow%3A%20scroll%3B%0A%7D%0A%3Ahost%20.scrollable-container%20.scrollable-content%20%7B%0A%20%20height%3A%2030em%3B%0A%7D%0A%3Ahost%20novo-dropdown%20%7B%0A%20%20margin%3A%205rem%3B%0A%7D%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22scrollable-container%22%20cdkScrollable%3E%0A%20%20%20%20%3Cdiv%20class%3D%22scrollable-content%22%3E%0A%20%20%20%20%20%20%3Cnovo-dropdown%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20type%3D%22button%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20icon%3D%22collapse%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20inverse%3EInside%20a%20Scrollable%20Container%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%20%20%20%20%3Citem%20(action)%3D%22clickMe('This')%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keepOpen%3D%22true%22%3EThis%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%20%20%3Citem%20(action)%3D%22clickMe('Scrolls!')%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20keepOpen%3D%22true%22%3EScrolls!%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3C%2Flist%3E%0A%20%20%20%20%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A`\n    },\n    'basic-icons': {\n        title: 'Basic Icons',\n        component: BasicIconsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Icons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-icons-example'%2C%0A%20%20templateUrl%3A%20'basic-icons-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-icons-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicIconsExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-icon%3Ecandidate%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%3Ejob%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%3Ecompany%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%3Elead%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%3Eopportunity%3C%2Fnovo-icon%3E%0A%3Cbr%3E%0A%3Ci%20class%3D%22bhi-candidate%22%3E%3C%2Fi%3E%0A%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3E%0A%3Ci%20class%3D%22bhi-job%22%3E%3C%2Fi%3E%0A%3Ci%20class%3D%22bhi-company%22%3E%3C%2Fi%3E%0A%3Ci%20class%3D%22bhi-lead%22%3E%3C%2Fi%3E%0A%3Ci%20class%3D%22bhi-opportunity%22%3E%3C%2Fi%3E%0A`\n    },\n    'raised-icons': {\n        title: 'Raised Icons',\n        component: RaisedIconsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Raised%20Icons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'raised-icons-example'%2C%0A%20%20templateUrl%3A%20'raised-icons-example.html'%2C%0A%20%20styleUrls%3A%20%5B'raised-icons-example.css'%5D%2C%0A%7D)%0Aexport%20class%20RaisedIconsExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-icon%20theme%3D%22candidate%22%20raised%3D%22true%22%3Ecandidate%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22job%22%20raised%3D%22true%22%3Ejob%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22company%22%20raised%3D%22true%22%3Ecompany%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22submission%22%20raised%3D%22true%22%3Estar-o%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22placement%22%20raised%3D%22true%22%3Estar%3C%2Fnovo-icon%3E%0A`\n    },\n    'themed-icons': {\n        title: 'Themed Icons',\n        component: ThemedIconsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Themed%20Icons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'themed-icons-example'%2C%0A%20%20templateUrl%3A%20'themed-icons-example.html'%2C%0A%20%20styleUrls%3A%20%5B'themed-icons-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ThemedIconsExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-icon%20color%3D%22candidate%22%3Ecandidate%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20color%3D%22job%22%3Ejob%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20color%3D%22company%22%3Ecompany%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20color%3D%22submission%22%3Estar-o%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20color%3D%22placement%22%3Estar%3C%2Fnovo-icon%3E%0A%3Cbr%3E%0A%3Cnovo-icon%20theme%3D%22candidate%22%3Ecandidate%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22job%22%3Ejob%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22company%22%3Ecompany%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22submission%22%3Estar-o%3C%2Fnovo-icon%3E%0A%3Cnovo-icon%20theme%3D%22placement%22%3Estar%3C%2Fnovo-icon%3E%0A`\n    },\n    'loading-circle': {\n        title: 'Circular Loading Symbol',\n        component: LoadingCircleExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Circular%20Loading%20Symbol%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'loading-circle-example'%2C%0A%20%20templateUrl%3A%20'loading-circle-example.html'%2C%0A%20%20styleUrls%3A%20%5B'loading-circle-example.css'%5D%2C%0A%7D)%0Aexport%20class%20LoadingCircleExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A.flex%20%7B%0A%20%20display%3A%20flex%3B%0A%20%20flex-flow%3A%20row%20nowrap%3B%0A%7D%0A`,\n        htmlSource: `%3Csection%20class%3D%22flex%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22white%20background%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-spinner%20theme%3D%22multicolor%22%3E%3C%2Fnovo-spinner%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22light%20background%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-spinner%3E%3C%2Fnovo-spinner%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22ocean%20background%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-spinner%20inverse%3E%3C%2Fnovo-spinner%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22navy%20background%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-spinner%20theme%3D%22bittersweet%22%3E%3C%2Fnovo-spinner%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fsection%3E%0A`\n    },\n    'loading-line': {\n        title: 'Linear Loading Symbol',\n        component: LoadingLineExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Linear%20Loading%20Symbol%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'loading-line-example'%2C%0A%20%20templateUrl%3A%20'loading-line-example.html'%2C%0A%20%20styleUrls%3A%20%5B'loading-line-example.css'%5D%2C%0A%7D)%0Aexport%20class%20LoadingLineExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%3E%0A%20%20%20%20%3Cnovo-loading%3E%3C%2Fnovo-loading%3E%0A%3C%2Fheader%3E%0A%3Cheader%20class%3D%22color-container%22%3E%0A%20%20%20%20%3Cnovo-loading%20inverse%3E%3C%2Fnovo-loading%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'basic-quick-note': {\n        title: 'Basic Quick Note Example',\n        component: BasicQuickNoteExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Quick%20Note%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-quick-note-example'%2C%0A%20%20templateUrl%3A%20'basic-quick-note-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-quick-note-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicQuickNoteExample%20%7B%0A%20%20public%20note%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%0A%20%20%20%20'Enter%20your%20note%20text%20here.%20Reference%20people%20and%20distribution%20lists%20using%20%40%20(eg.%20%40John%20Smith).%20Reference%20other%20records%20using%20%23%20(e.g.%20%23Project%20Manager)'%3B%0A%20%20public%20basic%3A%20any%20%3D%20%7B%0A%20%20%20%20triggers%3A%20%7B%0A%20%20%20%20%20%20tags%3A%20'%40'%2C%0A%20%20%20%20%20%20references%3A%20'%23'%2C%0A%20%20%20%20%20%20boos%3A%20'%5E'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20options%3A%20%7B%0A%20%20%20%20%20%20tags%3A%20%5B'First'%2C%20'Second'%2C%20'Space%20Between'%5D%2C%0A%20%20%20%20%20%20references%3A%20%5B'Third'%2C%20'Fourth'%5D%2C%0A%20%20%20%20%20%20boos%3A%20%5B'Test'%5D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20renderer%3A%20%7B%0A%20%20%20%20%20%20tags%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dbullhorn%26oq%3Dbullhorn%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20references%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dbullhorn%26oq%3Dbullhorn%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20boos%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Cstrong%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fstrong%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-quick-note%20%5B(ngModel)%5D%3D%22note%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5Bconfig%5D%3D%22basic%22%3E%3C%2Fnovo-quick-note%3E%0A%3Cdiv%20class%3D%22data%22%3E%0A%20%20%20%20%3Cp%3ENote%3A%20%7B%7Bnote%20%7C%20json%7D%7D%3C%2Fp%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'custom-quick-note-results': {\n        title: 'Custom Quick Note Results Example',\n        component: CustomQuickNoteResultsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20QuickNoteResults%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20DATA%20%3D%20%7B%0A%20%20tags%3A%20%5B%7B%20id%3A%201%2C%20name%3A%20'OH%20YA!'%2C%20test%3A%20'TWO'%20%7D%2C%20%7B%20id%3A%202%2C%20name%3A%20'TAGGING!'%2C%20test%3A%20'ONE'%20%7D%5D%2C%0A%20%20references%3A%20%5B%7B%20id%3A%201%2C%20title%3A%20'Awesome%20Reference'%20%7D%2C%20%7B%20id%3A%202%2C%20title%3A%20'Angular2'%20%7D%5D%2C%0A%7D%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'custom-quick-note-results'%2C%0A%20%20host%3A%20%7B%0A%20%20%20%20class%3A%20'active%20quick-note-results'%2C%0A%20%20%7D%2C%0A%20%20template%3A%20%60%0A%20%20%20%20%20%20%20%20%3Cnovo-loading%20theme%3D%22line%22%20*ngIf%3D%22isLoading%20%26%26%20!matches.length%22%3E%3C%2Fnovo-loading%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-list%20*ngIf%3D%22matches.length%20%3E%200%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-list-item%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20*ngFor%3D%22let%20match%20of%20matches%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22selectMatch(%24event)%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Bclass.active%5D%3D%22match%3D%3D%3DactiveMatch%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(mouseenter)%3D%22selectActive(match)%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-content%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20**CUSTOM**%20%3Cb%20%5BinnerHtml%5D%3D%22highlight(match.label%2C%20term)%22%3E%3C%2Fb%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-content%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-list%3E%0A%20%20%20%20%20%20%20%20%3Cp%20class%3D%22picker-error%22%20*ngIf%3D%22hasError%22%3EOops!%20An%20error%20occured.%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20class%3D%22picker-null%22%20*ngIf%3D%22!isLoading%20%26%26%20!matches.length%20%26%26%20!hasError%22%3ENo%20results%20to%20display...%3C%2Fp%3E%0A%20%20%20%20%60%2C%0A%7D)%0Aexport%20class%20CustomQuickNoteResults%20extends%20QuickNoteResults%20%7B%7D%0A%0A%2F**%0A%20*%20%40title%20Custom%20Quick%20Note%20Results%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-quick-note-results-example'%2C%0A%20%20templateUrl%3A%20'custom-quick-note-results-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-quick-note-results-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomQuickNoteResultsExample%20%7B%0A%20%20public%20note%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%0A%20%20%20%20'Enter%20your%20note%20text%20here.%20Reference%20people%20and%20distribution%20lists%20using%20%40%20(eg.%20%40John%20Smith).%20Reference%20other%20records%20using%20%23%20(e.g.%20%23Project%20Manager)'%3B%0A%0A%20%20public%20customResults%3A%20any%20%3D%20%7B%0A%20%20%20%20resultsTemplate%3A%20CustomQuickNoteResults%2C%0A%20%20%20%20triggers%3A%20%7B%0A%20%20%20%20%20%20names%3A%20'%40'%2C%0A%20%20%20%20%20%20tags%3A%20'%23'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20options%3A%20%7B%0A%20%20%20%20%20%20names%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(DATA.tags)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20tags%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(DATA.references)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20format%3A%20%7B%0A%20%20%20%20%20%20names%3A%20'%24name'%2C%0A%20%20%20%20%20%20tags%3A%20'%24title'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20renderer%3A%20%7B%0A%20%20%20%20%20%20names%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22http%3A%2F%2Fwww.bullhorn.com%22%20class%3D%22names%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20tags%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22http%3A%2F%2Fwww.bullhorn.com%22%20class%3D%22tags%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-quick-note%20%5B(ngModel)%5D%3D%22note%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5Bconfig%5D%3D%22customResults%22%3E%3C%2Fnovo-quick-note%3E%0A%3Cdiv%20class%3D%22data%22%3E%0A%20%20%20%20%3Cp%3ENote%3A%20%7B%7Bnote%20%7C%20json%7D%7D%3C%2Fp%3E%0A%3C%2Fdiv%3E%0A`,\n        selectorName: 'CustomQuickNoteResultsExample, CustomQuickNoteResults'\n    },\n    'custom-quick-note': {\n        title: 'Custom Quick Note Example',\n        component: CustomQuickNoteExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0Aconst%20DATA%20%3D%20%7B%0A%20%20tags%3A%20%5B%7B%20id%3A%201%2C%20name%3A%20'OH%20YA!'%2C%20test%3A%20'TWO'%20%7D%2C%20%7B%20id%3A%202%2C%20name%3A%20'TAGGING!'%2C%20test%3A%20'ONE'%20%7D%5D%2C%0A%20%20references%3A%20%5B%7B%20id%3A%201%2C%20title%3A%20'Awesome%20Reference'%20%7D%2C%20%7B%20id%3A%202%2C%20title%3A%20'Angular2'%20%7D%5D%2C%0A%7D%3B%0A%0A%2F**%0A%20*%20%40title%20Custom%20Quick%20Note%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-quick-note-example'%2C%0A%20%20templateUrl%3A%20'custom-quick-note-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-quick-note-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomQuickNoteExample%20%7B%0A%20%20public%20note%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%0A%20%20%20%20'Enter%20your%20note%20text%20here.%20Reference%20people%20and%20distribution%20lists%20using%20%40%20(eg.%20%40John%20Smith).%20Reference%20other%20records%20using%20%23%20(e.g.%20%23Project%20Manager)'%3B%0A%20%20public%20custom%3A%20any%20%3D%20%7B%0A%20%20%20%20triggers%3A%20%7B%0A%20%20%20%20%20%20whos%3A%20'%40'%2C%0A%20%20%20%20%20%20whats%3A%20'%23'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20options%3A%20%7B%0A%20%20%20%20%20%20whos%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(DATA.tags)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20whats%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(DATA.references)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20format%3A%20%7B%0A%20%20%20%20%20%20whos%3A%20'%24name%20%24test'%2C%0A%20%20%20%20%20%20whats%3A%20'%24title'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20renderer%3A%20%7B%0A%20%20%20%20%20%20whos%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22http%3A%2F%2Fwww.bullhorn.com%22%20class%3D%22WHOS%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20whats%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22http%3A%2F%2Fwww.bullhorn.com%22%20class%3D%22tag%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-quick-note%20%5B(ngModel)%5D%3D%22note%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5Bconfig%5D%3D%22custom%22%3E%3C%2Fnovo-quick-note%3E%0A%3Cdiv%20class%3D%22data%22%3E%0A%20%20%20%20%3Cp%3ENote%3A%20%7B%7Bnote%20%7C%20json%7D%7D%3C%2Fp%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'search-usage': {\n        title: 'Search Box Usage',\n        component: SearchUsageExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20Subject%20%7D%20from%20'rxjs'%3B%0A%0A%2F**%0A%20*%20%40title%20Search%20Box%20Usage%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'search-usage-example'%2C%0A%20%20templateUrl%3A%20'search-usage-example.html'%2C%0A%20%20styleUrls%3A%20%5B'search-usage-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SearchUsageExample%20%7B%0A%20%20public%20test%3A%20string%20%3D%20'TEST'%3B%0A%20%20public%20geo%3A%20string%20%3D%20''%3B%0A%20%20public%20entity%3A%20string%20%3D%20''%3B%0A%20%20public%20searchResults%3A%20Subject%3Cany%5B%5D%3E%20%3D%20new%20Subject()%3B%0A%20%20public%20searchData%3A%20any%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'new-bank-inquiries%40centralbank.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(651)%20555-1234'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Washington'%2C%20state%3A%20'DC'%20%7D%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientCorporation'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'company'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'info%40federalbank.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(545)%20555-1212'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientCorporation'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'company'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Aaron%20Burr'%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Aaron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Burr'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Aaron%20Burr'%2C%0A%20%20%20%20%20%20%20%20companyName%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'aburr%40centralbank.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(333)%20555-3434'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Washington'%2C%20state%3A%20'DC'%20%7D%2C%0A%20%20%20%20%20%20%20%20status%3A%20'Hold'%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientContact'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'person'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Alexander%20Hamilton'%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alexander'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Hamilton'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Alexander%20Hamilton'%2C%0A%20%20%20%20%20%20%20%20companyName%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'ahamilton%40federalbank.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(333)%20555-2222'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20status%3A%20'Active'%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientContact'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'person'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Ben%20Franklin'%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Ben'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Franklin'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Ben%20Franklin'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'bfranklin%40gmail.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(654)%20525-2222'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Boston'%2C%20state%3A%20'MA'%20%7D%2C%0A%20%20%20%20%20%20%20%20status%3A%20'Interviewing'%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'Candidate'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20data%3A%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Thomas%20Jefferson'%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Thomas'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Jefferson'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Thomas%20Jefferson'%2C%0A%20%20%20%20%20%20%20%20email%3A%20'tjefferson%40usa.com'%2C%0A%20%20%20%20%20%20%20%20phone%3A%20'(123)%20542-1234'%2C%0A%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20status%3A%20'New%20Lead'%2C%0A%20%20%20%20%20%20%20%20searchEntity%3A%20'Candidate'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20public%20search(term%3A%20string)%3A%20void%20%7B%0A%20%20%20%20this.searchResults.next(this.searchData.map((x)%20%3D%3E%20x.data))%3B%0A%20%20%7D%0A%20%20public%20onSelectMatch(item)%20%7B%0A%20%20%20%20this.test%20%3D%20item.name%3B%0A%20%20%7D%0A%20%20public%20onSelectEntity(item)%20%7B%0A%20%20%20%20this.entity%20%3D%20item.data.name%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-search%3E%3C%2Fnovo-search%3E%0A%0A%3Cbr%2F%3E%0A%0A%3Cnovo-search%20alwaysOpen%3D%22true%22%3E%3C%2Fnovo-search%3E%0A%0A%3Cbr%2F%3E%0A%0A%3Cnovo-search%20%5BngModel%5D%3D%22test%22%20(ngModelChange)%3D%22search(%24event)%22%3E%0A%20%20%20%20%3Cnovo-list%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-list-item%20*ngFor%3D%22let%20item%20of%20searchResults%20%7C%20async%22%20(click)%3D%22onSelectMatch(item)%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-avatar%20%5Bicon%5D%3D%22item.type%22%3E%3C%2Fitem-avatar%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-title%3E%7B%7Bitem.name%7D%7D%3C%2Fitem-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%3C%2Fnovo-list%3E%0A%3C%2Fnovo-search%3E%0A%0A%3Cbr%2F%3E%0A%0A%3Cnovo-search%20icon%3D%22location%22%20theme%3D%22grapefruit%22%20alwaysOpen%3D%22true%22%20%5B(ngModel)%5D%3D%22geo%22%20displayField%3D%22formatted_address%22%20%5BcloseOnSelect%5D%3D%22false%22%20hint%3D%22Search%20Google%20to%20find%20your%20address.%22%3E%0A%20%20%20%20%3Cgoogle-places-list%20%5B(term)%5D%3D%22geo%22%3E%3C%2Fgoogle-places-list%3E%0A%3C%2Fnovo-search%3E%0A%3Cdiv%3EValue%20is%3A%20%7B%7Bgeo%7D%7D%3C%2Fdiv%3E%0A%3Cbr%2F%3E%0A%0A%3Cnovo-search%20icon%3D%22candidate%22%20theme%3D%22candidate%22%20alwaysOpen%3D%22true%22%20%5B(ngModel)%5D%3D%22entity%22%3E%0A%20%20%20%20%3Centity-picker-results%20%5Bmatches%5D%3D%22searchData%22%20(select)%3D%22onSelectEntity(%24event)%22%3E%3C%2Fentity-picker-results%3E%0A%3C%2Fnovo-search%3E%0A`\n    },\n    'basic-slide': {\n        title: 'Basic Slide Example',\n        component: BasicSlideExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Slide%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-slide-example'%2C%0A%20%20templateUrl%3A%20'basic-slide-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-slide-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicSlideExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-slider%20%5Bslides%5D%3D%222%22%3E%0A%20%20%20%20%3Cdiv%20slide%3D%221%22%3E%0A%20%20%20%20%20%20%20%20SLIDE%20%231%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20slide%3D%222%22%3E%0A%20%20%20%20%20%20%20%20SLIDE%20%232%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-slider%3E%0A`\n    },\n    'switch-usage': {\n        title: 'Switch Usage Example',\n        component: SwitchUsageExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Switch%20Usage%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'switch-usage-example'%2C%0A%20%20templateUrl%3A%20'switch-usage-example.html'%2C%0A%20%20styleUrls%3A%20%5B'switch-usage-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SwitchUsageExample%20%7B%0A%20%20public%20toggleCount%3A%20number%20%3D%200%3B%0A%20%20public%20checked%3A%20boolean%20%3D%20true%3B%0A%0A%20%20public%20increment()%3A%20void%20%7B%0A%20%20%20%20this.toggleCount%2B%2B%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Clabel%3E%0A%20%20Count%0A%20%20%3Cspan%3E%7B%7BtoggleCount%7D%7D%3C%2Fspan%3E%0A%3C%2Flabel%3E%0A%3Clabel%3E%0A%20%20Toggled%0A%20%20%3Cspan%3E%7B%7Bchecked%7D%7D%3C%2Fspan%3E%0A%3C%2Flabel%3E%0A%3Cnovo-switch%20%5B(ngModel)%5D%3D%22checked%22%20(onChange)%3D%22increment()%22%3E%3C%2Fnovo-switch%3E%0A%3Cnovo-switch%20theme%3D%22grapefruit%22%3E%3C%2Fnovo-switch%3E%0A%3Cnovo-switch%20disabled%3E%3C%2Fnovo-switch%3E%0A`\n    },\n    'tabbed-group-picker-basic': {\n        title: 'Tabbed Group Picker - Basic Example',\n        component: TabbedGroupPickerBasicExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TabbedGroupPickerTab%2C%20ChildTab%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Tabbed%20Group%20Picker%20-%20Basic%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabbed-group-picker-basic-example'%2C%0A%20%20templateUrl%3A%20'tabbed-group-picker-basic-example.html'%2C%0A%20%20styleUrls%3A%20%5B'..%2Ftabbed-group-picker-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20TabbedGroupPickerBasicExample%20%7B%0A%20%20getAnimals%20%3D%20()%3A%20%7B%20animalId%3A%20number%3B%20name%3A%20string%20%7D%5B%5D%20%3D%3E%0A%20%20%20%20%5B'Dog'%2C%20'Cat'%2C%20'Mouse'%2C%20'Horse'%2C%20'Cow'%2C%20'Chicken'%2C%20'Pig'%2C%20'Sheep'%2C%20'Goat'%2C%20'Goose'%5D.map((name%2C%20index)%20%3D%3E%20(%7B%0A%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20animalId%3A%20index%20%2B%201%2C%0A%20%20%20%20%7D))%3B%0A%0A%20%20getPlaces%20%3D%20()%3A%20%7B%20localName%3A%20string%3B%20englishName%3A%20string%20%7D%5B%5D%20%3D%3E%0A%20%20%20%20%5B%0A%20%20%20%20%20%20%5B'Roma'%2C%20'Rome'%5D%2C%0A%20%20%20%20%20%20%5B'Firenze'%2C%20'Florence'%5D%2C%0A%20%20%20%20%20%20%5B'Munchen'%2C%20'Munich'%5D%2C%0A%20%20%20%20%20%20%5B'Paris'%2C%20'Paris'%5D%2C%0A%20%20%20%20%20%20%5B'Sevilla'%2C%20'Seville'%5D%2C%0A%20%20%20%20%20%20%5B'Athinai'%2C%20'Athens'%5D%2C%0A%20%20%20%20%5D.map((%5BlocalName%2C%20englishName%5D)%20%3D%3E%20(%7B%20localName%2C%20englishName%20%7D))%3B%0A%20%20getColors%20%3D%20()%3A%20%7B%20rgb%3A%20string%3B%20colorName%3A%20string%20%7D%5B%5D%20%3D%3E%0A%20%20%20%20%5B%5B'255%2C0%2C0'%2C%20'Red'%5D%2C%20%5B'0%2C255%2C0'%2C%20'Green'%5D%2C%20%5B'0%2C0%2C255'%2C%20'Blue'%5D%2C%20%5B'0%2C0%2C0'%2C%20'Black'%5D%2C%20%5B'255%2C255%2C255'%2C%20'White'%5D%5D.map(%0A%20%20%20%20%20%20(%5Brgb%2C%20colorName%5D)%20%3D%3E%20(%7B%20rgb%2C%20colorName%20%7D)%2C%0A%20%20%20%20)%3B%0A%0A%20%20animalTab%20%3D%20%7B%0A%20%20%20%20typeName%3A%20'animals'%2C%0A%20%20%20%20typeLabel%3A%20'Animals'%2C%0A%20%20%20%20valueField%3A%20'animalId'%2C%0A%20%20%20%20labelField%3A%20'name'%2C%0A%20%20%20%20data%3A%20this.getAnimals()%2C%0A%20%20%7D%3B%0A%0A%20%20example_tab%20%3D%20%5B%0A%20%20%20%20this.animalTab%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'places'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Places'%2C%0A%20%20%20%20%20%20valueField%3A%20'localName'%2C%0A%20%20%20%20%20%20labelField%3A%20'englishName'%2C%0A%20%20%20%20%20%20data%3A%20this.getPlaces()%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'colors'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Colors'%2C%0A%20%20%20%20%20%20valueField%3A%20'rgb'%2C%0A%20%20%20%20%20%20labelField%3A%20'colorName'%2C%0A%20%20%20%20%20%20data%3A%20this.getColors()%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20public%20buttonLabel%3A%20string%20%3D%20'Nothing%20Selected'%3B%0A%20%20public%20example_buttonConfig%20%3D%20%7B%0A%20%20%20%20theme%3A%20'select'%2C%0A%20%20%20%20side%3A%20'right'%2C%0A%20%20%20%20icon%3A%20'collapse'%2C%0A%20%20%20%20label%3A%20this.buttonLabel%2C%0A%20%20%20%20selector%3A%20'buttonConfig'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20selectedAnimals%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20selectedPlaces%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20selectedColors%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20onSelectionChange(selectedData%3A%20TabbedGroupPickerTab%5B%5D)%20%7B%0A%20%20%20%20this.selectedAnimals%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'animals')%20as%20ChildTab).data.map(%0A%20%20%20%20%20%20(%7B%20animalId%20%7D)%20%3D%3E%20animalId%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.selectedPlaces%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'places')%20as%20ChildTab).data.map(%0A%20%20%20%20%20%20(%7B%20localName%20%7D)%20%3D%3E%20localName%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.selectedColors%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'colors')%20as%20ChildTab).data.map((%7B%20rgb%20%7D)%20%3D%3E%20rgb)%3B%0A%20%20%20%20this.example_buttonConfig.label%20%3D%20this.buildButtonLabel()%3B%0A%20%20%7D%0A%0A%20%20buildButtonLabel()%3A%20string%20%7B%0A%20%20%20%20const%20labelParts%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%20%20%20%20this.selectedAnimals.length%20%3F%20labelParts.push(%60Animals%20(%24%7Bthis.selectedAnimals.length%7D)%60)%20%3A%20''%3B%0A%20%20%20%20this.selectedPlaces.length%20%3F%20labelParts.push(%60Places%20(%24%7Bthis.selectedPlaces.length%7D)%60)%20%3A%20''%3B%0A%20%20%20%20this.selectedColors.length%20%3F%20labelParts.push(%60Colors%20(%24%7Bthis.selectedColors.length%7D)%60)%20%3A%20''%3B%0A%20%20%20%20return%20labelParts.join('%2C%20')%20%7C%7C%20'Nothing%20Selected'%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Cdiv%20class%3D%22tabbed-group-picker-example%22%3E%0A%20%20%3Cnovo-tabbed-group-picker%0A%20%20%20%20%5Btabs%5D%3D%22example_tab%22%0A%20%20%20%20title%3D%22basic-example%22%0A%20%20%20%20%5BbuttonConfig%5D%3D%22example_buttonConfig%22%0A%20%20%20%20(selectionChange)%3D%22onSelectionChange(%24event)%22%0A%20%20%3E%3C%2Fnovo-tabbed-group-picker%3E%0A%20%20%3Cdiv%20class%3D%22selected-data-wrapper%22%3E%0A%20%20%20%20%3Ch6%3ESelected%20Animal%20IDs%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedAnimals.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%3Ch6%3ESelected%20Local%20Place%20Names%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedPlaces.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%3Ch6%3ESelected%20Colors%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedColors.join('%20%7C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'tabbed-group-picker-big-groups': {\n        title: 'Tabbed Group Picker - Big Groups Example',\n        component: TabbedGroupPickerBigGroupsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TabbedGroupPickerTab%2C%20ChildTab%2C%20ParentTab%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Tabbed%20Group%20Picker%20-%20Big%20Groups%20Example%0A%20*%2F%0A%0A%40Component(%7B%0A%20%20selector%3A%20'tabbed-group-picker-big-groups-example'%2C%0A%20%20templateUrl%3A%20'tabbed-group-picker-big-groups-example.html'%2C%0A%20%20styleUrls%3A%20%5B'..%2Ftabbed-group-picker-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20TabbedGroupPickerBigGroupsExample%20%7B%0A%20%20isPrime(number)%3A%20boolean%20%7B%0A%20%20%20%20const%20squareRoot%20%3D%20Math.ceil(Math.sqrt(number))%3B%0A%20%20%20%20return%20!Array(squareRoot)%0A%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20.map((value%2C%20index)%20%3D%3E%20index%20%2B%202)%0A%20%20%20%20%20%20.some((divisor)%20%3D%3E%20number%20%25%20divisor%20%3D%3D%3D%200)%3B%0A%20%20%7D%0A%20%20example_tab%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'integers'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Integers'%2C%0A%20%20%20%20%20%20valueField%3A%20'value'%2C%0A%20%20%20%20%20%20labelField%3A%20'label'%2C%0A%20%20%20%20%20%20data%3A%20Array(2000)%0A%20%20%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20%20%20.map((value%2C%20index)%20%3D%3E%20index%20%2B%201)%0A%20%20%20%20%20%20%20%20.map((value)%20%3D%3E%20(%7B%20value%2C%20label%3A%20String(value)%20%7D))%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'divisibles'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Divisible%20By'%2C%0A%20%20%20%20%20%20valueField%3A%20'v'%2C%0A%20%20%20%20%20%20labelField%3A%20'l'%2C%0A%20%20%20%20%20%20childTypeName%3A%20'integers'%2C%0A%20%20%20%20%20%20data%3A%20Array(100)%0A%20%20%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20%20%20.map((v%2C%20i)%20%3D%3E%20i%20%2B%201)%0A%20%20%20%20%20%20%20%20.map((v)%20%3D%3E%20(%7B%0A%20%20%20%20%20%20%20%20%20%20v%2C%0A%20%20%20%20%20%20%20%20%20%20l%3A%20%60Divisible%20By%20%24%7Bv%7D%60%2C%0A%20%20%20%20%20%20%20%20%20%20children%3A%20Array(2000)%0A%20%20%20%20%20%20%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20%20%20%20%20%20%20.map((value%2C%20index)%20%3D%3E%20index%20%2B%201)%0A%20%20%20%20%20%20%20%20%20%20%20%20.filter((number)%20%3D%3E%20number%20%25%20v%20%3D%3D%3D%200)%0A%20%20%20%20%20%20%20%20%20%20%20%20.map((child)%20%3D%3E%20(%7B%20value%3A%20child%2C%20label%3A%20String(child)%20%7D))%2C%0A%20%20%20%20%20%20%20%20%7D))%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'prime%20factorization'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Prime%20Factors'%2C%0A%20%20%20%20%20%20valueField%3A%20'v'%2C%0A%20%20%20%20%20%20labelField%3A%20'l'%2C%0A%20%20%20%20%20%20childTypeName%3A%20'integers'%2C%0A%20%20%20%20%20%20data%3A%20Array(100)%0A%20%20%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20%20%20.map((v%2C%20i)%20%3D%3E%20i%20%2B%201990)%0A%20%20%20%20%20%20%20%20.map((parent)%20%3D%3E%20(%7B%0A%20%20%20%20%20%20%20%20%20%20v%3A%20parent%2C%0A%20%20%20%20%20%20%20%20%20%20l%3A%20%60Prime%20Factors%20of%20%24%7Bparent%7D%60%2C%0A%20%20%20%20%20%20%20%20%20%20children%3A%20Array(2000)%0A%20%20%20%20%20%20%20%20%20%20%20%20.fill(0)%0A%20%20%20%20%20%20%20%20%20%20%20%20.map((value%2C%20index)%20%3D%3E%20index%20%2B%201)%0A%20%20%20%20%20%20%20%20%20%20%20%20.filter((child)%20%3D%3E%20parent%20%25%20child%20%3D%3D%3D%200%20%26%26%20this.isPrime(child))%0A%20%20%20%20%20%20%20%20%20%20%20%20.map((child)%20%3D%3E%20(%7B%20value%3A%20child%2C%20label%3A%20String(child)%20%7D))%2C%0A%20%20%20%20%20%20%20%20%7D))%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20public%20buttonLabel%3A%20string%20%3D%20'Nothing%20Selected'%3B%0A%20%20public%20example_buttonConfig%20%3D%20%7B%0A%20%20%20%20theme%3A%20'select'%2C%0A%20%20%20%20side%3A%20'right'%2C%0A%20%20%20%20icon%3A%20'collapse'%2C%0A%20%20%20%20label%3A%20this.buttonLabel%2C%0A%20%20%20%20selector%3A%20'buttonConfig'%2C%0A%20%20%7D%3B%0A%0A%20%20selectedPrimeFactorizations%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%20%20selectedDivisibles%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20selectedIntegers%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20onSelectionChange(selectedData%3A%20TabbedGroupPickerTab%5B%5D)%20%7B%0A%20%20%20%20this.selectedIntegers%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'integers')%20as%20ChildTab).data.map((%7B%20value%20%7D)%20%3D%3E%20value)%3B%0A%20%20%20%20this.selectedDivisibles%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'divisibles')%20as%20ParentTab).data.map((%7B%20v%20%7D)%20%3D%3E%20v)%3B%0A%20%20%20%20this.selectedPrimeFactorizations%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'prime%20factorization')%20as%20ParentTab).data.map(%0A%20%20%20%20%20%20(%7B%20v%20%7D)%20%3D%3E%20v%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.example_buttonConfig.label%20%3D%20this.buildButtonLabel()%3B%0A%20%20%7D%0A%0A%20%20buildButtonLabel()%3A%20string%20%7B%0A%20%20%20%20return%20this.selectedIntegers.length%20%3F%20%60Integers%20(%24%7Bthis.selectedIntegers.length%7D)%60%20%3A%20'Nothing%20Selected'%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Cdiv%20class%3D%22tabbed-group-picker-example%22%3E%0A%20%20%3Cnovo-tabbed-group-picker%0A%20%20%20%20%5Btabs%5D%3D%22example_tab%22%0A%20%20%20%20title%3D%22big-groups-example%22%0A%20%20%20%20%5BbuttonConfig%5D%3D%22example_buttonConfig%22%0A%20%20%20%20(selectionChange)%3D%22onSelectionChange(%24event)%22%0A%20%20%3E%3C%2Fnovo-tabbed-group-picker%3E%0A%20%20%3Cdiv%20class%3D%22selected-data-wrapper%22%3E%0A%20%20%20%20%3Ch6%3ESelected%20Integers%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedIntegers.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%3Ch6%3ESelected%20Divisibles%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedDivisibles.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%3Ch6%3ESelected%20Prime%20Factorizations%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedPrimeFactorizations.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'tabbed-group-picker-groups': {\n        title: 'Tabbed Group Picker - Groups Example',\n        component: TabbedGroupPickerGroupsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TabbedGroupPickerTab%2C%20ChildTab%2C%20ParentTab%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Tabbed%20Group%20Picker%20-%20Groups%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabbed-group-picker-groups-example'%2C%0A%20%20templateUrl%3A%20'tabbed-group-picker-groups-example.html'%2C%0A%20%20styleUrls%3A%20%5B'..%2Ftabbed-group-picker-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20TabbedGroupPickerGroupsExample%20%7B%0A%20%20getAnimals%20%3D%20()%3A%20%7B%20animalId%3A%20number%3B%20name%3A%20string%20%7D%5B%5D%20%3D%3E%0A%20%20%20%20%5B'Dog'%2C%20'Cat'%2C%20'Mouse'%2C%20'Horse'%2C%20'Cow'%2C%20'Chicken'%2C%20'Pig'%2C%20'Sheep'%2C%20'Goat'%2C%20'Goose'%5D.map((name%2C%20index)%20%3D%3E%20(%7B%0A%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20animalId%3A%20index%20%2B%201%2C%0A%20%20%20%20%7D))%3B%0A%0A%20%20getAnimalCategories%20%3D%20()%3A%20%7B%20groupId%3A%20number%3B%20name%3A%20string%3B%20children%3F%3A%20%7B%20animalId%3A%20number%3B%20name%3A%20string%20%7D%5B%5D%20%7D%5B%5D%20%3D%3E%20%7B%0A%20%20%20%20const%20animals%20%3D%20this.getAnimals()%3B%0A%20%20%20%20const%20birds%20%3D%20%5B'Chicken'%2C%20'Goose'%5D.map((name)%20%3D%3E%20animals.find((animal)%20%3D%3E%20animal.name%20%3D%3D%3D%20name))%3B%0A%20%20%20%20const%20livestock%20%3D%20%5B'Cow'%2C%20'Pig'%2C%20'Sheep'%2C%20'Goat'%5D.map((name)%20%3D%3E%20animals.find((animal)%20%3D%3E%20animal.name%20%3D%3D%3D%20name))%3B%0A%20%20%20%20return%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20name%3A%20'Birds'%2C%0A%20%20%20%20%20%20%20%20groupId%3A%201%2C%0A%20%20%20%20%20%20%20%20children%3A%20birds%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20name%3A%20'Livestock'%2C%0A%20%20%20%20%20%20%20%20groupId%3A%202%2C%0A%20%20%20%20%20%20%20%20children%3A%20livestock%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%3B%0A%20%20example_tab%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'animals'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Animals'%2C%0A%20%20%20%20%20%20valueField%3A%20'animalId'%2C%0A%20%20%20%20%20%20labelField%3A%20'name'%2C%0A%20%20%20%20%20%20data%3A%20this.getAnimals()%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'animalCategories'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Animal%20Categories'%2C%0A%20%20%20%20%20%20valueField%3A%20'groupId'%2C%0A%20%20%20%20%20%20labelField%3A%20'name'%2C%0A%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20data%3A%20this.getAnimalCategories()%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20example_quickSelectConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Quick%20Select'%2C%0A%20%20%20%20items%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20children%3A%20%5B2%5D%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Pure%20Evil'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20children%3A%20%5B1%2C%206%2C%209%5D%2C%0A%20%20%20%20%20%20%20%20label%3A%20'My%20Pets'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20all%3A%20true%2C%0A%20%20%20%20%20%20%20%20label%3A%20'All%20Animals'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%0A%20%20public%20buttonLabel%3A%20string%20%3D%20'Nothing%20Selected'%3B%0A%20%20public%20example_buttonConfig%20%3D%20%7B%0A%20%20%20%20theme%3A%20'select'%2C%0A%20%20%20%20side%3A%20'right'%2C%0A%20%20%20%20icon%3A%20'collapse'%2C%0A%20%20%20%20label%3A%20this.buttonLabel%2C%0A%20%20%20%20selector%3A%20'buttonConfig'%2C%0A%20%20%7D%3B%0A%0A%20%20selectedAnimals%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%20%20selectedAnimalCategories%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20onSelectionChange(selectedData%3A%20TabbedGroupPickerTab%5B%5D)%20%7B%0A%20%20%20%20this.selectedAnimals%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'animals')%20as%20ChildTab).data.map(%0A%20%20%20%20%20%20(%7B%20animalId%20%7D)%20%3D%3E%20animalId%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.selectedAnimalCategories%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'animalCategories')%20as%20ParentTab).data.map(%0A%20%20%20%20%20%20(%7B%20groupId%20%7D)%20%3D%3E%20groupId%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.example_buttonConfig.label%20%3D%20this.buildButtonLabel()%3B%0A%20%20%7D%0A%0A%20%20buildButtonLabel()%3A%20string%20%7B%0A%20%20%20%20return%20this.selectedAnimals.length%20%3F%20%60Animals%20(%24%7Bthis.selectedAnimals.length%7D)%60%20%3A%20'Nothing%20Selected'%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Cdiv%20class%3D%22tabbed-group-picker-example%22%3E%0A%20%20%3Cnovo-tabbed-group-picker%0A%20%20%20%20%5Btabs%5D%3D%22example_tab%22%0A%20%20%20%20title%3D%22groups-example%22%0A%20%20%20%20%5BquickSelectConfig%5D%3D%22example_quickSelectConfig%22%0A%20%20%20%20%5BbuttonConfig%5D%3D%22example_buttonConfig%22%0A%20%20%20%20(selectionChange)%3D%22onSelectionChange(%24event)%22%0A%20%20%3E%3C%2Fnovo-tabbed-group-picker%3E%0A%20%20%3Cdiv%20class%3D%22selected-data-wrapper%22%3E%0A%20%20%20%20%3Ch6%3ESelected%20Animal%20IDs%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedAnimals.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%3Ch6%3ESelected%20Animal%20Category%20IDs%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedAnimalCategories.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'tabbed-group-picker-quick-select': {\n        title: 'Tabbed Group Picker - Quick Select Example',\n        component: TabbedGroupPickerQuickSelectExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TabbedGroupPickerTab%2C%20ChildTab%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Tabbed%20Group%20Picker%20-%20Quick%20Select%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabbed-group-picker-quick-select-example'%2C%0A%20%20templateUrl%3A%20'tabbed-group-picker-quick-select-example.html'%2C%0A%20%20styleUrls%3A%20%5B'..%2Ftabbed-group-picker-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20TabbedGroupPickerQuickSelectExample%20%7B%0A%20%20getAnimals%20%3D%20()%3A%20%7B%20animalId%3A%20number%3B%20name%3A%20string%20%7D%5B%5D%20%3D%3E%0A%20%20%20%20%5B'Dog'%2C%20'Cat'%2C%20'Mouse'%2C%20'Horse'%2C%20'Cow'%2C%20'Chicken'%2C%20'Pig'%2C%20'Sheep'%2C%20'Goat'%2C%20'Goose'%5D.map((name%2C%20index)%20%3D%3E%20(%7B%0A%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20animalId%3A%20index%20%2B%201%2C%0A%20%20%20%20%7D))%3B%0A%20%20public%20example_tab%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20typeName%3A%20'animals'%2C%0A%20%20%20%20%20%20typeLabel%3A%20'Animals'%2C%0A%20%20%20%20%20%20valueField%3A%20'animalId'%2C%0A%20%20%20%20%20%20labelField%3A%20'name'%2C%0A%20%20%20%20%20%20data%3A%20this.getAnimals()%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20example_quickSelectConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Quick%20Select'%2C%0A%20%20%20%20items%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20children%3A%20%5B2%5D%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Pure%20Evil'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20children%3A%20%5B1%2C%206%2C%209%5D%2C%0A%20%20%20%20%20%20%20%20label%3A%20'My%20Pets'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20childTypeName%3A%20'animals'%2C%0A%20%20%20%20%20%20%20%20all%3A%20true%2C%0A%20%20%20%20%20%20%20%20label%3A%20'All%20Animals'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%0A%20%20public%20buttonLabel%3A%20string%20%3D%20'Nothing%20Selected'%3B%0A%20%20public%20example_buttonConfig%20%3D%20%7B%0A%20%20%20%20theme%3A%20'select'%2C%0A%20%20%20%20side%3A%20'right'%2C%0A%20%20%20%20icon%3A%20'collapse'%2C%0A%20%20%20%20label%3A%20this.buttonLabel%2C%0A%20%20%20%20selector%3A%20'buttonConfig'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20selectedAnimals%3A%20string%5B%5D%20%3D%20%5B%5D%3B%0A%0A%20%20onSelectionChange(selectedData%3A%20TabbedGroupPickerTab%5B%5D)%20%7B%0A%20%20%20%20this.selectedAnimals%20%3D%20(selectedData.find((%7B%20typeName%20%7D)%20%3D%3E%20typeName%20%3D%3D%3D%20'animals')%20as%20ChildTab).data.map(%0A%20%20%20%20%20%20(%7B%20animalId%20%7D%3A%20%7B%20animalId%3A%20string%20%7D)%20%3D%3E%20animalId%2C%0A%20%20%20%20)%3B%0A%20%20%20%20this.example_buttonConfig.label%20%3D%20this.buildButtonLabel()%3B%0A%20%20%7D%0A%0A%20%20buildButtonLabel()%3A%20string%20%7B%0A%20%20%20%20return%20this.selectedAnimals.length%20%3F%20%60Animals%20(%24%7Bthis.selectedAnimals.length%7D)%60%20%3A%20'Nothing%20Selected'%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Cdiv%20class%3D%22tabbed-group-picker-example%22%3E%0A%20%20%3Cnovo-tabbed-group-picker%0A%20%20%20%20%5Btabs%5D%3D%22example_tab%22%0A%20%20%20%20title%3D%22quick-select-example%22%0A%20%20%20%20%5BquickSelectConfig%5D%3D%22example_quickSelectConfig%22%0A%20%20%20%20%5BbuttonConfig%5D%3D%22example_buttonConfig%22%0A%20%20%20%20(selectionChange)%3D%22onSelectionChange(%24event)%22%0A%20%20%3E%3C%2Fnovo-tabbed-group-picker%3E%0A%20%20%3Cdiv%20class%3D%22selected-data-wrapper%22%3E%0A%20%20%20%20%3Ch6%3ESelected%20Animal%20IDs%3A%3C%2Fh6%3E%0A%20%20%20%20%3Cdiv%3E%7B%7B%20selectedAnimals.join('%2C%20')%20%7D%7D%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'actions-cell': {\n        title: 'Actions Cell Example',\n        component: ActionsCellExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20BaseRenderer%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Actions%20Cell%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'actions-cell-example'%2C%0A%20%20template%3A%20%60%0A%20%20%20%20%3Cnovo-dropdown%20parentScrollSelector%3D%22.table-container%22%3E%0A%20%20%20%20%20%20%3Cbutton%20type%3D%22button%22%20theme%3D%22dialogue%22%20icon%3D%22collapse%22%3EActions!%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%201%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%202%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%203%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%204%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%205%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%206%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%207%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%208%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%3Citem%3EItem%209%3C%2Fitem%3E%0A%20%20%20%20%20%20%3C%2Flist%3E%0A%20%20%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%60%2C%0A%7D)%0Aexport%20class%20ActionsCellExample%20extends%20BaseRenderer%20%7B%0A%20%20constructor()%20%7B%0A%20%20%20%20super()%3B%0A%20%20%7D%0A%0A%20%20getActionContext(data%2C%20meta)%20%7B%0A%20%20%20%20return%20%7B%20item%3A%20data%2C%20meta%20%7D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: ``\n    },\n    'details-table': {\n        title: 'Details Table Example',\n        component: DetailsTableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20BaseRenderer%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20HEADER_COLORS%2C%20TableData%2C%20TableColumns%20%7D%20from%20'..%2Ftable-extras'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'extra-details'%2C%0A%20%20template%3A%20%60%0A%20%20%20%20%3Cdiv%20class%3D%22extra-data%22%3E%0A%20%20%20%20%20%20%3Clabel%3E%3Ci%20class%3D%22bhi-info%22%3E%3C%2Fi%3EDescription%3C%2Flabel%3E%0A%20%20%20%20%20%20%3Cp%3E%7B%7B%20data.description%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%3Clabel%3E%3Ci%20class%3D%22bhi-info%22%3E%3C%2Fi%3ECategories%3C%2Flabel%3E%0A%20%20%20%20%20%20%3Cp%3E%7B%7B%20data.categories%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%60%2C%0A%7D)%0Aexport%20class%20ExtraDetails%20extends%20BaseRenderer%20%7B%7D%0A%0A%2F**%0A%20*%20%40title%20Details%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'details-table-example'%2C%0A%20%20templateUrl%3A%20'details-table-example.html'%2C%0A%20%20styleUrls%3A%20%5B'details-table-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DetailsTableExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20HEADER_COLORS%5B0%5D%3B%0A%20%20public%20configuration%3A%20any%20%3D%20%7B%0A%20%20%20%20columns%3A%20TableColumns.slice()%2C%0A%20%20%20%20rows%3A%20TableData.slice()%2C%0A%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20onPageChange%3A%20(event)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.current%20%3D%20event.page%3B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.itemsPerPage%20%3D%20event.itemsPerPage%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%20%20hasDetails%3A%20true%2C%0A%20%20%20%20%20%20detailsRenderer%3A%20ExtraDetails%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-table%20class%3D%22table-condensed%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5Brows%5D%3D%22configuration.rows%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22configuration.columns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5Bconfig%5D%3D%22configuration.config%22%0A%20%20%20%20%20%20%20%20%20%20%20%20rowIdentifier%3D%22name%22%3E%3C%2Fnovo-table%3E%0A`,\n        selectorName: 'DetailsTableExample, ExtraDetails'\n    },\n    'editable-table': {\n        title: 'Editable Table Example',\n        component: EditableTableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20ArrayCollection%2C%20PercentageCell%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Editable%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'editable-table-example'%2C%0A%20%20templateUrl%3A%20'editable-table-example.html'%2C%0A%20%20styleUrls%3A%20%5B'editable-table-example.css'%5D%2C%0A%7D)%0Aexport%20class%20EditableTableExample%20%7B%0A%20%20public%20configuration%3A%20any%20%3D%20%7B%0A%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Name'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'name'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20%20%20editorType%3A%20'TablePickerControl'%2C%0A%20%20%20%20%20%20%20%20editorConfig%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'name'%2C%0A%20%20%20%20%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Joshua%20Godi'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Kameron%20Sween'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Brian%20Kimball'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Sweeney%20Todd'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Tom%20Cruise'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Ed%20Bailey'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Bo%20Jackson'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Ernie%20McDudson'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Job%20Type'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'jobType'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B'Freelance'%2C%20'Contact'%2C%20'Billable'%5D%2C%0A%20%20%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20%20%20editorType%3A%20'SelectControl'%2C%0A%20%20%20%20%20%20%20%20editorConfig%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'jobType'%2C%0A%20%20%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'Freelance'%2C%20label%3A%20'Freelance'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'Contract'%2C%20label%3A%20'Contract'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'Billable'%2C%20label%3A%20'Billable'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Rate'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'rate'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20%20%20renderer%3A%20PercentageCell%2C%0A%20%20%20%20%20%20%20%20editorType%3A%20'TextBoxControl'%2C%0A%20%20%20%20%20%20%20%20editorConfig%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'rate'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'percentage'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20interactions%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20event%3A%20'change'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20script%3A%20(form)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20console.log('Form%20Interaction%20Called!'%2C%20form)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(form.value.rate)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(Number(form.value.rate)%20%3E%3D%200.75)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20form.controls.rating.setValue('High')%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if%20(Number(form.value.rate)%20%3E%3D%200.5)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20form.controls.rating.setValue('Medium')%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20form.controls.rating.setValue('Low')%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%20title%3A%20'Rating'%2C%20name%3A%20'rating'%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%20%20rows%3A%20new%20ArrayCollection(%5B%0A%20%20%20%20%20%20%7B%20id%3A%201%2C%20name%3A%20'Joshua%20Godi'%2C%20jobType%3A%20'Freelance'%2C%20rate%3A%20null%2C%20rating%3A%20'Low'%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%202%2C%20name%3A%20'Brian%20Kimball'%2C%20jobType%3A%20'Contact'%2C%20rate%3A%200.5%2C%20rating%3A%20'Medium'%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%203%2C%20name%3A%20'Kameron%20Sween'%2C%20jobType%3A%20'Billable'%2C%20rate%3A%201.0%2C%20rating%3A%20'High'%20%7D%2C%0A%20%20%20%20%5D)%2C%0A%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20onPageChange%3A%20(event)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.current%20%3D%20event.page%3B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.itemsPerPage%20%3D%20event.itemsPerPage%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%20%20public%20editableNewRowDefault%3A%20any%20%3D%20%7B%20name%3A%20'Default'%2C%20jobType%3A%20'Contract'%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-table%20%5Btheme%5D%3D%22'sunflower'%22%20%5BdataProvider%5D%3D%22configuration.rows%22%20%5Bcolumns%5D%3D%22configuration.columns%22%20%5Bconfig%5D%3D%22configuration.config%22%20editable%3D%22true%22%20%23table%3E%0A%20%20%20%20%3Cnovo-table-header%20class%3D%22demo-custom-header%22%3E%0A%20%20%20%20%20%20%20%20%3Ch4%3EEditable%20Table%3C%2Fh4%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cinput%20type%3D%22text%22%20placeholder%3D%22row%22%20%23row%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cinput%20type%3D%22text%22%20placeholder%3D%22column%22%20%23column%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22table.setTableEdit(row.value%2C%20column.value)%22%20*ngIf%3D%22!table.editing%22%3EAdd%2FEdit%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22table.cancelEditing()%22%20*ngIf%3D%22table.editing%22%3ECancel%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22table.cancelEditing()%22%20*ngIf%3D%22table.editing%22%3ESave%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fnovo-table-header%3E%0A%20%20%20%20%3Cnovo-table-footer%20class%3D%22demo-custom-footer%22%20%5Bclass.editing%5D%3D%22table.editing%22%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22dialogue%22%20icon%3D%22addcard%22%20side%3D%22left%22%20*ngIf%3D%22table.editing%22%20(click)%3D%22table.addEditableRow(editableNewRowDefault)%22%3EAdd%20Row%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fnovo-table-footer%3E%0A%20%20%20%20%3Cdiv%20classs%3D%22table-message%22%20table-empty-message%3E%3Ci%20class%3D%22bhi-search-question%22%3E%3C%2Fi%3E%20Custom%20Empty%20State%20Template!%20Click%20RELOAD%20to%20get%20Data!%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20classs%3D%22table-message%22%20table-no-matching-records-message%3E%3Ci%20class%3D%22bhi-search-question%22%3E%3C%2Fi%3E%20Custom%20No%20Matched%20Records%3C%2Fdiv%3E%0A%3C%2Fnovo-table%3E%0A%3Cdiv%20class%3D%22final-value%22%3ETable%20Value%3A%20%7B%7Btable.formValue%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'select-all-table': {\n        title: 'Select All Table Example',\n        component: SelectAllTableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20HEADER_COLORS%2C%20TableData%2C%20TableColumns%20%7D%20from%20'..%2Ftable-extras'%3B%0A%0A%2F**%0A%20*%20%40title%20Select%20All%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'select-all-table-example'%2C%0A%20%20templateUrl%3A%20'select-all-table-example.html'%2C%0A%20%20styleUrls%3A%20%5B'select-all-table-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SelectAllTableExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20HEADER_COLORS%5B0%5D%3B%0A%20%20public%20configuration%3A%20any%20%3D%20%7B%0A%20%20%20%20columns%3A%20TableColumns.slice()%2C%0A%20%20%20%20rows%3A%20TableData.slice()%2C%0A%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20onPageChange%3A%20(event)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.current%20%3D%20event.page%3B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.itemsPerPage%20%3D%20event.itemsPerPage%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%20%20selectAllEnabled%3A%20true%2C%0A%20%20%20%20%20%20rowSelectionStyle%3A%20'checkbox'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%0A%20%20singleAction()%20%7B%0A%20%20%20%20window.alert('Action!')%3B%0A%20%20%7D%0A%0A%20%20selectedAction(action)%20%7B%0A%20%20%20%20window.alert(%60You%20clicked%20%24%7Baction%7D!%60)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-table%20%5Brows%5D%3D%22configuration.rows%22%20%5Bcolumns%5D%3D%22configuration.columns%22%20%5Bconfig%5D%3D%22configuration.config%22%20%23table%3E%0A%20%20%20%20%3Cnovo-table-actions%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22singleAction()%22%3EClick%20Me!%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-dropdown%20side%3D%22right%22%20*ngIf%3D%22table.selected.length%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20icon%3D%22collapse%22%20inverse%3E%7B%7Btable.selected.length%7D%7D%20Selected%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Clist%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem%20(action)%3D%22selectedAction('action%201')%22%3EAction%201%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem%20(action)%3D%22selectedAction('action%202')%22%3EAction%202%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem%20(action)%3D%22selectedAction('action%203')%22%20disabled%3D%22true%22%3EAction%203%3C%2Fitem%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Flist%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-dropdown%3E%0A%20%20%20%20%3C%2Fnovo-table-actions%3E%0A%3C%2Fnovo-table%3E%0A`\n    },\n    'table': {\n        title: 'Table Example',\n        component: TableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20HEADER_COLORS%2C%20TableData%2C%20TableColumns%20%7D%20from%20'..%2Ftable-extras'%3B%0A%0A%2F**%0A%20*%20%40title%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'table-example'%2C%0A%20%20templateUrl%3A%20'table-example.html'%2C%0A%20%20styleUrls%3A%20%5B'table-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TableExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20HEADER_COLORS%5B0%5D%3B%0A%20%20public%20configuration%3A%20any%20%3D%20%7B%0A%20%20%20%20columns%3A%20TableColumns.slice()%2C%0A%20%20%20%20rows%3A%20%5B%5D%2C%0A%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20onPageChange%3A%20(event)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.current%20%3D%20event.page%3B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.itemsPerPage%20%3D%20event.itemsPerPage%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%0A%20%20reload()%20%7B%0A%20%20%20%20this.configuration.rows%20%3D%20TableData.slice()%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20let%20idx%20%3D%20HEADER_COLORS.indexOf(this.theme)%3B%0A%20%20%20%20if%20(idx%20%3D%3D%3D%20HEADER_COLORS.length%20-%201)%20%7B%0A%20%20%20%20%20%20idx%20%3D%20-1%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.theme%20%3D%20HEADER_COLORS%5Bidx%20%2B%201%5D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-table%20%5Btheme%5D%3D%22theme%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5BdataProvider%5D%3D%22configuration.rows%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22configuration.columns%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%5Bconfig%5D%3D%22configuration.config%22%0A%20%20%20%20%20%20%20%20%20%20%20%20rowIdentifier%3D%22name%22%3E%0A%20%20%20%20%3Cnovo-table-header%20class%3D%22demo-custom-header%22%3E%0A%20%20%20%20%20%20%20%20TEST%20%3A)%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22reload()%22%3EReload%20Data%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22secondary%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(click)%3D%22changeTheme()%22%3EChange%20Theme!%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fnovo-table-header%3E%0A%20%20%20%20%3Cdiv%20classs%3D%22table-message%22%0A%20%20%20%20%20%20%20%20%20table-empty-message%3E%0A%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-search-question%22%3E%3C%2Fi%3E%20Custom%20Empty%20State%20Template!%20Click%20RELOAD%20to%20get%20Data!%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20classs%3D%22table-message%22%0A%20%20%20%20%20%20%20%20%20table-no-matching-records-message%3E%0A%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-search-question%22%3E%3C%2Fi%3E%20Custom%20No%20Matched%20Records%3C%2Fdiv%3E%0A%3C%2Fnovo-table%3E%0A`\n    },\n    'total-footer-table': {\n        title: 'Total Footer Table Example',\n        component: TotalFooterTableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20HEADER_COLORS%20%7D%20from%20'..%2Ftable-extras'%3B%0A%0A%2F**%0A%20*%20%40title%20Total%20Footer%20Table%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'total-footer-table-example'%2C%0A%20%20templateUrl%3A%20'total-footer-table-example.html'%2C%0A%20%20styleUrls%3A%20%5B'total-footer-table-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TotalFooterTableExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20HEADER_COLORS%5B0%5D%3B%0A%20%20public%20configuration%3A%20any%20%3D%20%7B%0A%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%7B%20title%3A%20'Name'%2C%20name%3A%20'name'%2C%20ordering%3A%20true%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%20title%3A%20'Count%201'%2C%20name%3A%20'count1'%2C%20ordering%3A%20true%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%20title%3A%20'Count%202'%2C%20name%3A%20'count2'%2C%20ordering%3A%20true%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%20title%3A%20'Count%203'%2C%20name%3A%20'count3'%2C%20ordering%3A%20true%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%20%20rows%3A%20%5B%0A%20%20%20%20%20%20%7B%20id%3A%201%2C%20name%3A%20'Name%201'%2C%20count1%3A%201%2C%20count2%3A%202%2C%20count3%3A%203%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%202%2C%20name%3A%20'Name%202'%2C%20count1%3A%201%2C%20count2%3A%202%2C%20count3%3A%203%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%203%2C%20name%3A%20'Name%203'%2C%20count1%3A%201%2C%20count2%3A%202%2C%20count3%3A%203%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%204%2C%20name%3A%20'Name%204'%2C%20count1%3A%201%2C%20count2%3A%202%2C%20count3%3A%203%20%7D%2C%0A%20%20%20%20%20%20%7B%20id%3A%205%2C%20name%3A%20'Name%205'%2C%20count1%3A%201%2C%20count2%3A%202%2C%20count3%3A%203%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20onPageChange%3A%20(event)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.current%20%3D%20event.page%3B%0A%20%20%20%20%20%20%20%20%20%20this.configuration.config.paging.itemsPerPage%20%3D%20event.itemsPerPage%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20footers%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20columns%3A%20%5B'count1'%2C%20'count2'%2C%20'count3'%5D%2C%0A%20%20%20%20%20%20%20%20%20%20method%3A%20'SUM'%2C%0A%20%20%20%20%20%20%20%20%20%20labelColumn%3A%20'name'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Mega%20Total'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20columns%3A%20%5B'count1'%2C%20'count2'%2C%20'count3'%5D%2C%0A%20%20%20%20%20%20%20%20%20%20method%3A%20'AVG'%2C%0A%20%20%20%20%20%20%20%20%20%20labelColumn%3A%20'name'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Yep%2C%20Average!'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-table%20%5Btheme%5D%3D%22'grass'%22%20%5BdataProvider%5D%3D%22configuration.rows%22%20%5Bcolumns%5D%3D%22configuration.columns%22%20%5Bconfig%5D%3D%22configuration.config%22%3E%0A%20%20%20%20%3Cnovo-table-header%20class%3D%22demo-custom-header%22%3E%0A%20%20%20%20%20%20%20%20%3Ch4%3ETotal%20Footer%3C%2Fh4%3E%0A%20%20%20%20%3C%2Fnovo-table-header%3E%0A%3C%2Fnovo-table%3E%0A`\n    },\n    'analytics-colors': {\n        title: 'Analytics Colors',\n        component: AnalyticsColorsExample,\n        tsSource: `%2F%2F%20NG2%0Aimport%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Analytics%20Colors%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'analytics-colors-example'%2C%0A%20%20templateUrl%3A%20'.%2Fanalytics-colors-example.html'%2C%0A%20%20styleUrls%3A%20%5B'.%2Fanalytics-colors-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20AnalyticsColorsExample%20%7B%0A%20%20public%20analyticsColors%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'grapefruit'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'grapefruit'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'DA4453'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'bittersweet'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'bittersweet'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'EB6845'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'sunflower'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'sunflower'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'F6B042'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'grass'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'grass'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'8CC152'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'mint'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'mint'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'37BC9B'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'aqua'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'aqua'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'3BAFDA'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'ocean'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'ocean'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'4A89DC'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'carnation'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'carnation'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'D770AD'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'lavender'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'lavender'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'967ADC'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'mountain'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'mountain'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'9678B6'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20options%3A%20any%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20copyLink(color)%20%7B%0A%20%20%20%20%2F%2F%20Create%20dom%20element%20to%20copy%20from%0A%20%20%20%20const%20copyFrom%20%3D%20document.createElement('textarea')%3B%0A%20%20%20%20copyFrom.textContent%20%3D%20%60%23%24%7Bcolor.hex%7D%60%3B%0A%20%20%20%20const%20body%20%3D%20document.getElementsByTagName('body')%5B0%5D%3B%0A%20%20%20%20body.appendChild(copyFrom)%3B%0A%20%20%20%20copyFrom.select()%3B%0A%20%20%20%20%2F%2F%20Copy%20text%0A%20%20%20%20document.execCommand('copy')%3B%0A%20%20%20%20%2F%2F%20Delete%20element%0A%20%20%20%20body.removeChild(copyFrom)%3B%0A%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%23%24%7Bcolor.hex%7D%60%2C%0A%20%20%20%20%20%20message%3A%20'Copied%20to%20your%20clipboard'%2C%0A%20%20%20%20%20%20theme%3A%20color.variables%5B0%5D%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20if%20(color.name%20%3D%3D%3D%20'action')%20%7B%0A%20%20%20%20%20%20this.options.theme%20%3D%20'ocean'%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Carticle%20class%3D%22color-blocks%20analytics-colors%22%3E%0A%20%20%3Cdiv%20*ngFor%3D%22let%20color%20of%20analyticsColors%22%20class%3D%22block%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22color-square%20bgc-%7B%7Bcolor.variables%5B0%5D%7D%7D%22%20(click)%3D%22copyLink(color)%22%3E%0A%20%20%20%20%20%20%20%20%3Ch3%20class%3D%22color-text%22%3E%3Cspan%3E%23%3C%2Fspan%3E%7B%7Bcolor.hex%7D%7D%3C%2Fh3%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Ch6%3E%7B%7Bcolor.name%7D%7D%3C%2Fh6%3E%0A%20%20%20%20%20%20%3Cspan%20class%3D%22vars%22%20*ngFor%3D%22let%20variable%20of%20color.variables%22%3E%24%7B%7Bvariable%7D%7D%3C%2Fspan%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Farticle%3E%0A`\n    },\n    'entity-colors': {\n        title: 'Entity Colors',\n        component: EntityColorsExample,\n        tsSource: `%2F%2F%20NG2%0Aimport%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Entity%20Colors%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'entity-colors-example'%2C%0A%20%20templateUrl%3A%20'.%2Fentity-colors-example.html'%2C%0A%20%20styleUrls%3A%20%5B'.%2Fentity-colors-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20EntityColorsExample%20%7B%0A%20%20entityColors%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'lead'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'lead'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'AA6699'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'contact'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'contact'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'FFAA44'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'company'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'company'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'3399DD'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'candidate'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'candidate'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'44BB77'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'opportunity'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'opportunity'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'662255'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'job'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'job'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'BB5566'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'job%20code'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'jobCode'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'696D79'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'earn%20code'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'earnCode'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'696D79'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'submission'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'submission'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'A9ADBB'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'placement'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'placement'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'0B344F'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'sendout'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'sendout'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'747884'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'note'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'note'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'747884'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'contract'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'contract'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'454EA0'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'invoice%20statement'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'invoiceStatement'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'696D79'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'billable%20charge'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'billableCharge'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'696D79'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'payable%20charge'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'payableCharge'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'696D79'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20options%3A%20any%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20copyLink(color)%20%7B%0A%20%20%20%20%2F%2F%20Create%20dom%20element%20to%20copy%20from%0A%20%20%20%20const%20copyFrom%20%3D%20document.createElement('textarea')%3B%0A%20%20%20%20copyFrom.textContent%20%3D%20%60%23%24%7Bcolor.hex%7D%60%3B%0A%20%20%20%20const%20body%20%3D%20document.getElementsByTagName('body')%5B0%5D%3B%0A%20%20%20%20body.appendChild(copyFrom)%3B%0A%20%20%20%20copyFrom.select()%3B%0A%20%20%20%20%2F%2F%20Copy%20text%0A%20%20%20%20document.execCommand('copy')%3B%0A%20%20%20%20%2F%2F%20Delete%20element%0A%20%20%20%20body.removeChild(copyFrom)%3B%0A%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%23%24%7Bcolor.hex%7D%60%2C%0A%20%20%20%20%20%20message%3A%20'Copied%20to%20your%20clipboard'%2C%0A%20%20%20%20%20%20theme%3A%20color.variables%5B0%5D%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20if%20(color.name%20%3D%3D%3D%20'action')%20%7B%0A%20%20%20%20%20%20this.options.theme%20%3D%20'ocean'%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Carticle%20class%3D%22color-blocks%20entity-colors%22%3E%0A%20%20%3Cdiv%20*ngFor%3D%22let%20color%20of%20entityColors%22%20class%3D%22block%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22color-square%20bgc-%7B%7Bcolor.variables%5B0%5D%7D%7D%22%20(click)%3D%22copyLink(color)%22%3E%0A%20%20%20%20%20%20%20%20%3Ch3%20class%3D%22color-text%22%3E%3Cspan%3E%23%3C%2Fspan%3E%7B%7Bcolor.hex%7D%7D%3C%2Fh3%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Ch6%3E%7B%7Bcolor.name%7D%7D%3C%2Fh6%3E%0A%20%20%20%20%20%20%3Cspan%20class%3D%22vars%22%20*ngFor%3D%22let%20variable%20of%20color.variables%22%3E%24%7B%7Bvariable%7D%7D%3C%2Fspan%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Farticle%3E%0A`\n    },\n    'primary-colors': {\n        title: 'Primary Colors',\n        component: PrimaryColorsExample,\n        tsSource: `%2F%2F%20NG2%0Aimport%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Primary%20Colors%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'primary-colors-example'%2C%0A%20%20templateUrl%3A%20'.%2Fprimary-colors-example.html'%2C%0A%20%20styleUrls%3A%20%5B'.%2Fprimary-colors-example.scss'%5D%2C%0A%7D)%0Aexport%20class%20PrimaryColorsExample%20%7B%0A%20%20primaryColors%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'navigation'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'navigation'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'2F384F'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'positive'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'positive'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'4A89DC'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'dark'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'dark'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'3D464D'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'background'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'background'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'F4F4F4'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'background%20dark'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'background-dark'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'E2E2E2'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'neutral'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'neutral'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'4F5361'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'success'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'success'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'8CC152'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'negative'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'negative'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'DA4453'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'warning'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'warning'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'F6B042'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'empty'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'empty'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'CCCDCC'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'sand'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'sand'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'F4F4F4'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'silver'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'silver'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'E2E2E2'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'stone'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'stone'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'BEBEBE'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'ash'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'ash'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'A0A0A0'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'slate'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'slate'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'707070'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20name%3A%20'charcoal'%2C%0A%20%20%20%20%20%20variables%3A%20%5B'charcoal'%5D%2C%0A%20%20%20%20%20%20hex%3A%20'282828'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20options%3A%20any%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20copyLink(color)%20%7B%0A%20%20%20%20%2F%2F%20Create%20dom%20element%20to%20copy%20from%0A%20%20%20%20const%20copyFrom%20%3D%20document.createElement('textarea')%3B%0A%20%20%20%20copyFrom.textContent%20%3D%20%60%23%24%7Bcolor.hex%7D%60%3B%0A%20%20%20%20const%20body%20%3D%20document.getElementsByTagName('body')%5B0%5D%3B%0A%20%20%20%20body.appendChild(copyFrom)%3B%0A%20%20%20%20copyFrom.select()%3B%0A%20%20%20%20%2F%2F%20Copy%20text%0A%20%20%20%20document.execCommand('copy')%3B%0A%20%20%20%20%2F%2F%20Delete%20element%0A%20%20%20%20body.removeChild(copyFrom)%3B%0A%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%23%24%7Bcolor.hex%7D%60%2C%0A%20%20%20%20%20%20message%3A%20'Copied%20to%20your%20clipboard'%2C%0A%20%20%20%20%20%20theme%3A%20color.variables%5B0%5D%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20if%20(color.name%20%3D%3D%3D%20'action')%20%7B%0A%20%20%20%20%20%20this.options.theme%20%3D%20'ocean'%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: `%3Carticle%20class%3D%22color-blocks%20primary-colors%22%3E%0A%20%20%3Cdiv%20*ngFor%3D%22let%20color%20of%20primaryColors%22%20class%3D%22block%22%3E%0A%20%20%20%20%20%20%3Cdiv%20class%3D%22color-square%20bgc-%7B%7Bcolor.variables%5B0%5D%7D%7D%22%20(click)%3D%22copyLink(color)%22%3E%0A%20%20%20%20%20%20%20%20%3Ch3%20class%3D%22color-text%22%3E%3Cspan%3E%23%3C%2Fspan%3E%7B%7Bcolor.hex%7D%7D%3C%2Fh3%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Ch6%3E%7B%7Bcolor.name%7D%7D%3C%2Fh6%3E%0A%20%20%20%20%20%20%3Cspan%20class%3D%22vars%22%20*ngFor%3D%22let%20variable%20of%20color.variables%22%3E%24%7B%7Bvariable%7D%7D%3C%2Fspan%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Farticle%3E%0A`\n    },\n    'async-chips': {\n        title: 'Async Chips Example',\n        component: AsyncChipsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Async%20Chips%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'async-chips-example'%2C%0A%20%20templateUrl%3A%20'async-chips-example.html'%2C%0A%20%20styleUrls%3A%20%5B'async-chips-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AsyncChipsExample%20%7B%0A%20%20public%20async%3A%20any%3B%0A%20%20public%20value%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20states%20%3D%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20const%20abbrieviated%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'USA'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'United%20States'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'GB'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Great%20Britain'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'CA'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Canada'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'AU'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Austrailia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.async%20%3D%20%7B%0A%20%20%20%20%20%20options%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(abbrieviated)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20getLabels%3A%20(data)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20const%20values%20%3D%20data.map((item)%20%3D%3E%20item.value)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20const%20results%20%3D%20abbrieviated.filter((item)%20%3D%3E%20values.includes(item.value))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(results)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.value%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'USA'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'GB'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22async%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A`\n    },\n    'basic-chips': {\n        title: 'Basic Chips Example',\n        component: BasicChipsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Chips%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-chips-example'%2C%0A%20%20templateUrl%3A%20'basic-chips-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-chips-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicChipsExample%20%7B%0A%20%20staticDemo%20%3D%20%7B%0A%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%20%20placeholder%20%3D%20'Select...'%3B%0A%20%20value%20%3D%20%5B'Alabama'%5D%3B%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22staticDemo%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A`\n    },\n    'close-on-select-chips': {\n        title: 'Close On Select Chips Example',\n        component: CloseOnSelectChipsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Close%20On%20Select%20Chips%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'close-on-select-chips-example'%2C%0A%20%20templateUrl%3A%20'close-on-select-chips-example.html'%2C%0A%20%20styleUrls%3A%20%5B'close-on-select-chips-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CloseOnSelectChipsExample%20%7B%0A%20%20public%20formatted%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20value%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.formatted%20%3D%20%7B%0A%20%20%20%20%20%20format%3A%20'%24firstName%20%24lastName'%2C%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5BcloseOnSelect%5D%3D%22true%22%20%5Bsource%5D%3D%22formatted%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A`\n    },\n    'formatted-chips': {\n        title: 'Formatted Chips Example',\n        component: FormattedChipsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Formatted%20Chips%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'formatted-chips-example'%2C%0A%20%20templateUrl%3A%20'formatted-chips-example.html'%2C%0A%20%20styleUrls%3A%20%5B'formatted-chips-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FormattedChipsExample%20%7B%0A%20%20public%20formatted%3A%20any%3B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20value%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.formatted%20%3D%20%7B%0A%20%20%20%20%20%20format%3A%20'%24firstName%20%24lastName'%2C%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22formatted%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A`\n    },\n    'grouped-multi-picker': {\n        title: 'Grouped Multi Picker Example',\n        component: GroupedMultiPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20GroupedMultiPickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Grouped%20Multi%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'grouped-multi-picker-example'%2C%0A%20%20templateUrl%3A%20'grouped-multi-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'grouped-multi-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20GroupedMultiPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20groupedMultiPicker1%3A%20any%3B%0A%20%20public%20groupedMultiPicker2%3A%20any%3B%0A%20%20public%20groupedMultiPicker3%3A%20any%3B%0A%20%20public%20groupedMultiPicker1Value%3A%20any%3B%0A%20%20public%20groupedMultiPicker2Value%3A%20any%3B%0A%20%20public%20groupedMultiPicker3Value%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20this.setupGroupedMultiPickerDemo()%3B%0A%20%20%7D%0A%0A%20%20setupGroupedMultiPickerDemo()%20%7B%0A%20%20%20%20const%20categoryMap%20%3D%20new%20Map%3Cstring%2C%20%7B%20value%3A%20string%3B%20label%3A%20string%3B%20items%3A%20%7B%20value%3A%20string%3B%20label%3A%20string%20%7D%5B%5D%20%7D%3E()%3B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20items%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%2010%3B%20j%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20items.push(%7B%20value%3A%20%60%24%7Bi%7D-%24%7Bj%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%20-%20Item%20%24%7Bj%7D%60%20%7D)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20categoryMap.set(%60%24%7Bi%7D%60%2C%20%7B%20value%3A%20%60%24%7Bi%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%60%2C%20items%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.groupedMultiPicker1%20%3D%20%7B%0A%20%20%20%20%20%20categoryMap%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%20%20displayAll%3A%20true%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.groupedMultiPicker2%20%3D%20%7B%0A%20%20%20%20%20%20categoryMap%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.groupedMultiPicker3%20%3D%20%7B%0A%20%20%20%20%20%20categories%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C1'%2C%20label%3A%20'Category%201'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C2'%2C%20label%3A%20'Category%202'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C3'%2C%20label%3A%20'Category%203'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C4'%2C%20label%3A%20'Category%204'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C5'%2C%20label%3A%20'Category%205'%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20getItemsForCategoryAsync%3A%20(category)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A1'%2C%20label%3A%20'Async%201'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A2'%2C%20label%3A%20'Async%202'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A3'%2C%20label%3A%20'Async%203'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A4'%2C%20label%3A%20'Async%204'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A5'%2C%20label%3A%20'Async%205'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%201000)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Ch6%3EBasic%20Static%20Example%3C%2Fh6%3E%0A%3Cp%3EFully%20static%20data%2C%20optional%20%22all%22%20category%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedMultiPicker1Value%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22groupedMultiPicker1%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedMultiPicker1Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%0A%3Ch6%3ECustom%20Static%20Example%3C%2Fh6%3E%0A%3Cp%3EFully%20static%20data%2C%20all%20category%20turned%20off%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedMultiPicker2Value%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22groupedMultiPicker2%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedMultiPicker2Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%0A%3Ch6%3EBasic%20Async%20Example%3C%2Fh6%3E%0A%3Cp%3ECategory%20list%20is%20static%20(always%20has%20to%20be)%20with%20the%20items%20fetched%20via%20async%20call%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedMultiPicker3Value%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-chips%20%5Bsource%5D%3D%22groupedMultiPicker3%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedMultiPicker3Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-chips%3E%0A`\n    },\n    'row-chips': {\n        title: 'Row Chips Example',\n        component: RowChipsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Row%20Chips%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'row-chips-example'%2C%0A%20%20templateUrl%3A%20'row-chips-example.html'%2C%0A%20%20styleUrls%3A%20%5B'row-chips-example.css'%5D%2C%0A%7D)%0Aexport%20class%20RowChipsExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20value%3A%20any%3B%0A%20%20public%20rowDemo%3A%20any%3B%0A%20%20public%20rowValue%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.rowValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.rowDemo%20%3D%20%7B%0A%20%20%20%20%20%20format%3A%20'%24firstName%20%24lastName'%2C%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20item%5B'label'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Id'%2C%0A%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20item.value%5B'id'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7BrowValue%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-row-chips%20%5Bsource%5D%3D%22rowDemo%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22rowValue%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-row-chips%3E%0A`\n    },\n    'date-picker': {\n        title: 'Date Example',\n        component: DatePickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoLabelService%20%7D%20from%20'novo-elements'%3B%0A%0A%0A%2F%2F%20%20Must%20add%20'ExtendedLabelService'%20to%20your%20module%20file%20and%0A%2F%2F%20%20include%20it%20in%20the%20constructor%20of%20your%20component%0Aexport%20class%20ExtendedLabelService%20extends%20NovoLabelService%20%7B%0A%20%20dateFormat%20%3D%20'dd%2Fmm%2Fyyyy'%3B%0A%20%20dateFormatPlaceholder%20%3D%20'DD%2FMM%2FYYYY'%3B%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Date%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-picker-example'%2C%0A%20%20templateUrl%3A%20'date-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DatePickerExample%20%7B%0A%20%20dateOne%3A%20Date%20%3D%20new%20Date()%3B%0A%20%20dateTwo%3A%20Date%20%3D%20new%20Date()%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%20One%3C%2Flabel%3E%20%7B%7B(dateOne%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%20Two%3C%2Flabel%3E%20%7B%7B(dateTwo%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22dateOne%22%3E%3C%2Fnovo-date-picker%3E%0A%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-date-picker-input%20%5B(ngModel)%5D%3D%22dateTwo%22%20format%3D%22mm%2Fdd%2Fyyyy%22%3E%3C%2Fnovo-date-picker-input%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-date-picker-input%20%5B(ngModel)%5D%3D%22dateTwo%22%20format%3D%22dd%2Fmm%2Fyyyy%22%3E%3C%2Fnovo-date-picker-input%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'date-range': {\n        title: 'Date Range Example',\n        component: DateRangeExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Date%20Range%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-range-example'%2C%0A%20%20templateUrl%3A%20'date-range-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-range-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DateRangeExample%20%7B%0A%20%20rangeOne%3A%20any%20%3D%20%7B%0A%20%20%20%20startDate%3A%20null%2C%0A%20%20%20%20endDate%3A%20null%2C%0A%20%20%7D%3B%0A%20%20rangeTwo%3A%20any%20%3D%20%7B%0A%20%20%20%20startDate%3A%20null%2C%0A%20%20%20%20endDate%3A%20null%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EStart%20date%3C%2Flabel%3E%0A%20%20%20%20%20%20%20%20%7B%7B(rangeOne%3F.startDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%20%20%20%20%3Cbr%2F%3E%20%7B%7B(rangeTwo%3F.startDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%0A%20%20%20%20%20%20%20%20%3Clabel%3EEnd%20date%3C%2Flabel%3E%0A%20%20%20%20%20%20%20%20%7B%7B(rangeOne%3F.endDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%20%20%20%20%3Cbr%2F%3E%20%7B%7B(rangeTwo%3F.endDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22rangeOne%22%20range%3D%22true%22%3E%3C%2Fnovo-date-picker%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22rangeTwo%22%20range%3D%22true%22%20weekRangeSelect%3D%22true%22%20weekStart%3D%221%22%3E%3C%2Fnovo-date-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'date-time-input': {\n        title: 'Date Time Input Example',\n        component: DateTimeInputExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Date%20Time%20Input%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-time-input-example'%2C%0A%20%20templateUrl%3A%20'date-time-input-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-time-input-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DateTimeInputExample%20%7B%0A%20%20dateTimeInput%3A%20Date%20%3D%20new%20Date('08%2F01%2F1983%2012%3A57%20PM')%3B%0A%20%20dateTimeInput2%3A%20Date%20%3D%20new%20Date('08%2F02%2F1984%2012%3A57%20PM')%3B%0A%20%20dateTimeInput3%3A%20Date%20%3D%20new%20Date('08%2F03%2F1985%2012%3A57%20PM')%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EDate-Time%3C%2Flabel%3E%20%7B%7B(dateTimeInput%20%7C%20date%3A'medium')%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%20%20%20%20%3Clabel%3EDate-Time%202%3C%2Flabel%3E%20%7B%7B(dateTimeInput2%20%7C%20date%3A'medium')%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-date-time-picker-input%20%5B(ngModel)%5D%3D%22dateTimeInput%22%3E%3C%2Fnovo-date-time-picker-input%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-date-time-picker-input%20%5B(ngModel)%5D%3D%22dateTimeInput2%22%20%5Bmilitary%5D%3D%22true%22%3E%3C%2Fnovo-date-time-picker-input%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cnovo-date-time-picker%20%5B(ngModel)%5D%3D%22dateTimeInput3%22%3E%3C%2Fnovo-date-time-picker%3E%20%0A%3C%2Fdiv%3E%0A`\n    },\n    'date-time': {\n        title: 'Date Time Example',\n        component: DateTimeExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Date%20Time%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-time-example'%2C%0A%20%20templateUrl%3A%20'date-time-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-time-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DateTimeExample%20%7B%0A%20%20dateTime%3A%20Date%20%3D%20new%20Date('12%2F04%2F1987')%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EDate-Time%3C%2Flabel%3E%20%7B%7B(dateTime%20%7C%20date%3A'medium')%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-time-picker%20%5B(ngModel)%5D%3D%22dateTime%22%3E%3C%2Fnovo-date-time-picker%3E%0A%20%20%20%20%3Cnovo-date-time-picker%20%5B(ngModel)%5D%3D%22dateTime%22%20military%3D%22true%22%3E%3C%2Fnovo-date-time-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'time-picker': {\n        title: 'Time Picker Example',\n        component: TimePickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Time%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'time-picker-example'%2C%0A%20%20templateUrl%3A%20'time-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'time-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TimePickerExample%20%7B%0A%20%20time%3A%20Date%20%3D%20new%20Date()%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%3C%2Flabel%3E%0A%20%20%20%20%20%20%20%20%7B%7B(time%20%7C%20date%3A'mediumTime')%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%20%20%20%20%3Cnovo-time-picker-input%20%5B(ngModel)%5D%3D%22time%22%3E%3C%2Fnovo-time-picker-input%3E%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-time-picker%20%5B(ngModel)%5D%3D%22time%22%20analog%3D%22true%22%3E%3C%2Fnovo-time-picker%3E%0A%20%20%20%20%3Cnovo-time-picker%20%5B(ngModel)%5D%3D%22time%22%20military%3D%22true%22%20analog%3D%22true%22%3E%3C%2Fnovo-time-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'week-start': {\n        title: 'Week Start Example',\n        component: WeekStartExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Week%20Start%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'week-start-example'%2C%0A%20%20templateUrl%3A%20'week-start-example.html'%2C%0A%20%20styleUrls%3A%20%5B'week-start-example.css'%5D%2C%0A%7D)%0Aexport%20class%20WeekStartExample%20%7B%0A%20%20weekStartDate%3A%20Date%20%3D%20new%20Date()%3B%0A%20%20weekStart%3A%20number%20%3D%200%3B%0A%0A%20%20setWeekStart(num%3A%20number)%3A%20void%20%7B%0A%20%20%20%20this.weekStart%20%3D%20num%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%200%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(0)%22%3ESunday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%201%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(1)%22%3EMonday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%202%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(2)%22%3ETuesday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%203%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(3)%22%3EWednesday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%204%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(4)%22%3EThursday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%205%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(5)%22%3EFriday%3C%2Fbutton%3E%0A%3Cbutton%20%5Btheme%5D%3D%22weekStart%20%3D%3D%3D%206%20%3F%20'primary'%20%3A%20'secondary'%22%20(click)%3D%22setWeekStart(6)%22%3ESaturday%3C%2Fbutton%3E%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%3Cdiv%20class%3D%22date-picker-demo-side-by-side%22%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%3Clabel%3EValue%3C%2Flabel%3E%20%7B%7B(weekStartDate%20%7C%20date)%20%7C%7C%20'N%2FA'%7D%7D%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Cnovo-date-picker%20%5B(ngModel)%5D%3D%22weekStartDate%22%20%5BweekStart%5D%3D%22weekStart%22%3E%3C%2Fnovo-date-picker%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'basic-editor': {\n        title: 'Basic Editor Example',\n        component: BasicEditorExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Editor%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-editor-example'%2C%0A%20%20templateUrl%3A%20'basic-editor-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-editor-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicEditorExample%20%7B%0A%20%20public%20editorValue%3A%20string%20%3D%20'%3Cp%3EI%20AM%20A%20PRE-RENDERED%20VALUE%3C%2Fp%3E%3Ch1%3ETEST%3C%2Fh1%3E'%3B%0A%0A%20%20insertText(editor)%20%7B%0A%20%20%20%20editor.insertText('Hello%20World')%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-editor%20%5Bname%5D%3D%22'demoEditor'%22%20%5B(ngModel)%5D%3D%22editorValue%22%20%23editor%3E%3C%2Fnovo-editor%3E%0A%0A%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22insertText(editor)%22%3EInsert%20%22Hello%20World%22%20at%20Cursor%3C%2Fbutton%3E%0A%0A%3Cp%3EValue%3A%3C%2Fp%3E%0A%3Cp%20%5BinnerHtml%5D%3D%22editorValue%22%3E%3C%2Fp%3E%0A%0A%3Cp%3EHTML%3A%3C%2Fp%3E%0A%3Cpre%3E%3Ccode%3E%7B%7BeditorValue%7D%7D%3C%2Fcode%3E%3C%2Fpre%3E%0A`\n    },\n    'minimal-editor': {\n        title: 'Minimal Editor Example',\n        component: MinimalEditorExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Minimal%20Editor%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'minimal-editor-example'%2C%0A%20%20templateUrl%3A%20'minimal-editor-example.html'%2C%0A%20%20styleUrls%3A%20%5B'minimal-editor-example.css'%5D%2C%0A%7D)%0Aexport%20class%20MinimalEditorExample%20%7B%0A%20%20public%20editorValue%3A%20string%20%3D%20'%3Cp%3EI%20AM%20A%20PRE-RENDERED%20VALUE%3C%2Fp%3E%3Ch1%3ETEST%3C%2Fh1%3E'%3B%0A%0A%20%20insertText(editor)%20%7B%0A%20%20%20%20editor.insertText('Hello%20World')%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-editor%20%5Bname%5D%3D%22'demoEditor'%22%20%5B(ngModel)%5D%3D%22editorValue%22%20%5Bminimal%5D%3D%22true%22%20%23editor%3E%3C%2Fnovo-editor%3E%0A%0A%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22insertText(editor)%22%3EInsert%20%22Hello%20World%22%20at%20Cursor%3C%2Fbutton%3E%0A%0A%3Cp%3EValue%3A%3C%2Fp%3E%0A%3Cp%20%5BinnerHtml%5D%3D%22editorValue%22%3E%3C%2Fp%3E%0A%0A%3Cp%3EHTML%3A%3C%2Fp%3E%0A%3Cpre%3E%3Ccode%3E%7B%7BeditorValue%7D%7D%3C%2Fcode%3E%3C%2Fpre%3E%0A`\n    },\n    'custom-template': {\n        title: 'Custom Template Example',\n        component: CustomTemplateExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormArray%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20NovoFormGroup%2C%0A%20%20BaseControl%2C%0A%20%20NovoControlGroupAddConfig%2C%0A%20%20ReadOnlyControl%2C%0A%20%20SelectControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Custom%20Template%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-template-example'%2C%0A%20%20templateUrl%3A%20'custom-template-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-template-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomTemplateExample%20%7B%0A%20%20public%20formGroup%3A%20NovoFormGroup%3B%0A%20%20public%20controls%3A%20BaseControl%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initialValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%7B%20text%3A%20'TEXT'%2C%20percentage%3A%2012%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST'%20%7D%5D%3B%0A%0A%20%20public%20simpleAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add'%2C%0A%20%20%7D%3B%0A%20%20public%20anotherAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20a%20new%20fancy%20thing!'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20emptyMessage%3A%20string%20%3D%20'There%20are%20no%20items...'%3B%0A%20%20public%20canEditFunction%3A%20Function%3B%0A%20%20public%20canRemoveFunction%3A%20Function%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Grouped%20form%20demo%0A%20%20%20%20this.setupGroupedFormDemo()%3B%0A%20%20%20%20%2F%2F%20Setup%20function%0A%20%20%20%20this.canEditFunction%20%3D%20this.canEdit.bind(this)%3B%0A%20%20%20%20this.canRemoveFunction%20%3D%20this.canRemove.bind(this)%3B%0A%20%20%7D%0A%0A%20%20public%20onRemove(value%3A%20any)%20%7B%0A%20%20%20%20console.log('REMOVING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20onEdit(value%3A%20any)%20%7B%0A%20%20%20%20console.log('EDITING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20canEdit(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canEdit'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3E%200%3B%0A%20%20%7D%0A%20%20public%20canRemove(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canRemove'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3D%3D%3D%200%3B%0A%20%20%7D%0A%0A%20%20public%20updateInitialValue()%20%7B%0A%20%20%20%20this.initValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20111'%2C%20percentage%3A%20100%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20111'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20222'%2C%20percentage%3A%205%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20222'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20333'%2C%20percentage%3A%2060%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST%20333'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20public%20customDelete(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('DELETE'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20const%20control%3A%20FormArray%20%3D%20%3CFormArray%3Eform.controls%5Bkey%5D%3B%0A%20%20%20%20control.removeAt(index)%3B%0A%20%20%7D%0A%0A%20%20public%20customEdit(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('EDIT'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20private%20setupGroupedFormDemo()%20%7B%0A%20%20%20%20this.formGroup%20%3D%20this.formUtils.emptyFormGroup()%3B%0A%20%20%20%20const%20label%20%3D%20new%20ReadOnlyControl(%7B%20key%3A%20'label'%2C%20value%3A%20'Label%20%3A)'%20%7D)%3B%0A%20%20%20%20const%20c1%20%3D%20new%20SelectControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%2C%20options%3A%20%5B%7B%20value%3A%20'hello'%2C%20label%3A%20'Hello'%20%7D%5D%20%7D)%3B%0A%20%20%20%20const%20c2%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'percentage'%2C%20key%3A%20'percentage'%2C%20label%3A%20'Percent'%2C%20required%3A%20true%20%7D)%3B%0A%20%20%20%20const%20c3%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'checkbox'%2C%20label%3A%20'Check%20Me!'%2C%20width%3A%20100%20%7D)%3B%0A%20%20%20%20const%20c4%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'test4'%2C%20label%3A%20'TEST4'%20%7D)%3B%0A%20%20%20%20this.controls.push(label)%3B%0A%20%20%20%20this.controls.push(c1)%3B%0A%20%20%20%20this.controls.push(c2)%3B%0A%20%20%20%20this.controls.push(c3)%3B%0A%20%20%20%20this.controls.push(c4)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cng-template%20%23customRowTemplate%20let-form%3D%22form%22%20let-index%3D%22index%22%20let-key%3D%22key%22%20let-controls%3D%22controls%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-control-group-control%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20*ngFor%3D%22let%20c%20of%20controls%22%20class%3D%22novo-control-container%22%20%5Bclass.is-label%5D%3D%22c.controlType%20%3D%3D%3D%20'read-only'%22%20%5Bstyle.max-width.px%5D%3D%22c.width%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%3F.controls%5Bkey%5D%5B'controls'%5D%5Bindex%5D%22%20%5Bcontrol%5D%3D%22c%22%20%5Bcondensed%5D%3D%22true%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-control-container%20last%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20tooltip%3D%22HI%22%20type%3D%22button%22%20(click)%3D%22customEdit(form%2C%20key%2C%20index)%22%20theme%3D%22icon%22%20icon%3D%22edit%22%20%5Battr.data-automation-id%5D%3D%22'novo-control-group-edit-'%20%2B%20key%22%20index%3D%22-1%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-control-container%20last%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20type%3D%22button%22%20(click)%3D%22customDelete(form%2C%20key%2C%20index)%22%20theme%3D%22icon%22%20icon%3D%22delete-o%22%20%5Battr.data-automation-id%5D%3D%22'novo-control-group-delete-'%20%2B%20key%22%20index%3D%22-1%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fng-template%3E%0A%0A%3Cnovo-form%20%5Bform%5D%3D%22formGroup%22%3E%0A%20%20%20%20%3Cnovo-control-group%20remove%3D%22true%22%20edit%3D%22true%22%20%5BinitialValue%5D%3D%22initValue%22%20%5Bcontrols%5D%3D%22controls%22%20%5BrowTemplate%5D%3D%22customRowTemplate%22%20%5Badd%5D%3D%22simpleAddConfig%22%20label%3D%22Custom%20Template%22%20key%3D%22custom%22%20%5Bform%5D%3D%22formGroup%22%20%5BemptyMessage%5D%3D%22emptyMessage%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%0A%3Cdiv%20class%3D%22final-value%22%3EInitial%20Value%3A%20%7B%7B%20initValue%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7B%20formGroup.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'horizontal-options': {\n        title: 'Horizontal Options Example',\n        component: HorizontalOptionsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormArray%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20NovoFormGroup%2C%0A%20%20BaseControl%2C%0A%20%20NovoControlGroupAddConfig%2C%0A%20%20ReadOnlyControl%2C%0A%20%20SelectControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Horizontal%20Options%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'horizontal-options-example'%2C%0A%20%20templateUrl%3A%20'horizontal-options-example.html'%2C%0A%20%20styleUrls%3A%20%5B'horizontal-options-example.css'%5D%2C%0A%7D)%0Aexport%20class%20HorizontalOptionsExample%20%7B%0A%20%20public%20formGroup%3A%20NovoFormGroup%3B%0A%20%20public%20controls%3A%20BaseControl%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initialValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%7B%20text%3A%20'TEXT'%2C%20percentage%3A%2012%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST'%20%7D%5D%3B%0A%0A%20%20public%20simpleAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add'%2C%0A%20%20%7D%3B%0A%20%20public%20anotherAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20a%20new%20fancy%20thing!'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20emptyMessage%3A%20string%20%3D%20'There%20are%20no%20items...'%3B%0A%20%20public%20canEditFunction%3A%20Function%3B%0A%20%20public%20canRemoveFunction%3A%20Function%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Grouped%20form%20demo%0A%20%20%20%20this.setupGroupedFormDemo()%3B%0A%20%20%20%20%2F%2F%20Setup%20function%0A%20%20%20%20this.canEditFunction%20%3D%20this.canEdit.bind(this)%3B%0A%20%20%20%20this.canRemoveFunction%20%3D%20this.canRemove.bind(this)%3B%0A%20%20%7D%0A%0A%20%20public%20onRemove(value%3A%20any)%20%7B%0A%20%20%20%20console.log('REMOVING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20onEdit(value%3A%20any)%20%7B%0A%20%20%20%20console.log('EDITING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20canEdit(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canEdit'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3E%200%3B%0A%20%20%7D%0A%20%20public%20canRemove(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canRemove'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3D%3D%3D%200%3B%0A%20%20%7D%0A%0A%20%20public%20updateInitialValue()%20%7B%0A%20%20%20%20this.initValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20111'%2C%20percentage%3A%20100%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20111'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20222'%2C%20percentage%3A%205%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20222'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20333'%2C%20percentage%3A%2060%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST%20333'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20public%20customDelete(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('DELETE'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20const%20control%3A%20FormArray%20%3D%20%3CFormArray%3Eform.controls%5Bkey%5D%3B%0A%20%20%20%20control.removeAt(index)%3B%0A%20%20%7D%0A%0A%20%20public%20customEdit(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('EDIT'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20private%20setupGroupedFormDemo()%20%7B%0A%20%20%20%20this.formGroup%20%3D%20this.formUtils.emptyFormGroup()%3B%0A%20%20%20%20const%20label%20%3D%20new%20ReadOnlyControl(%7B%20key%3A%20'label'%2C%20value%3A%20'Label%20%3A)'%20%7D)%3B%0A%20%20%20%20const%20c1%20%3D%20new%20SelectControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%2C%20options%3A%20%5B%7B%20value%3A%20'hello'%2C%20label%3A%20'Hello'%20%7D%5D%20%7D)%3B%0A%20%20%20%20const%20c2%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'percentage'%2C%20key%3A%20'percentage'%2C%20label%3A%20'Percent'%2C%20required%3A%20true%20%7D)%3B%0A%20%20%20%20const%20c3%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'checkbox'%2C%20label%3A%20'Check%20Me!'%2C%20width%3A%20100%20%7D)%3B%0A%20%20%20%20const%20c4%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'test4'%2C%20label%3A%20'TEST4'%20%7D)%3B%0A%20%20%20%20this.controls.push(label)%3B%0A%20%20%20%20this.controls.push(c1)%3B%0A%20%20%20%20this.controls.push(c2)%3B%0A%20%20%20%20this.controls.push(c3)%3B%0A%20%20%20%20this.controls.push(c4)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22formGroup%22%3E%0A%20%20%20%20%3Cnovo-control-group%20%5BinitialValue%5D%3D%22initialValue%22%20collapsible%3D%22true%22%20%5Badd%5D%3D%22anotherAddConfig%22%20remove%3D%22true%22%20label%3D%22Horizontal%22%20key%3D%22horizontal%22%20description%3D%22Test%20Description%22%20%5Bform%5D%3D%22formGroup%22%20%5Bcontrols%5D%3D%22controls%22%20%5BemptyMessage%5D%3D%22emptyMessage%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EInitial%20Value%3A%20%7B%7B%20initialValue%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7B%20formGroup.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'horizontal': {\n        title: 'Horizontal Example',\n        component: HorizontalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormArray%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20NovoFormGroup%2C%0A%20%20BaseControl%2C%0A%20%20NovoControlGroupAddConfig%2C%0A%20%20ReadOnlyControl%2C%0A%20%20SelectControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Horizontal%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'horizontal-example'%2C%0A%20%20templateUrl%3A%20'horizontal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'horizontal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20HorizontalExample%20%7B%0A%20%20public%20formGroup%3A%20NovoFormGroup%3B%0A%20%20public%20controls%3A%20BaseControl%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initialValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%7B%20text%3A%20'TEXT'%2C%20percentage%3A%2012%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST'%20%7D%5D%3B%0A%0A%20%20public%20simpleAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add'%2C%0A%20%20%7D%3B%0A%20%20public%20anotherAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20a%20new%20fancy%20thing!'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20emptyMessage%3A%20string%20%3D%20'There%20are%20no%20items...'%3B%0A%20%20public%20canEditFunction%3A%20Function%3B%0A%20%20public%20canRemoveFunction%3A%20Function%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Grouped%20form%20demo%0A%20%20%20%20this.setupGroupedFormDemo()%3B%0A%20%20%20%20%2F%2F%20Setup%20function%0A%20%20%20%20this.canEditFunction%20%3D%20this.canEdit.bind(this)%3B%0A%20%20%20%20this.canRemoveFunction%20%3D%20this.canRemove.bind(this)%3B%0A%20%20%7D%0A%0A%20%20public%20onRemove(value%3A%20any)%20%7B%0A%20%20%20%20console.log('REMOVING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20onEdit(value%3A%20any)%20%7B%0A%20%20%20%20console.log('EDITING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20canEdit(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canEdit'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3E%200%3B%0A%20%20%7D%0A%20%20public%20canRemove(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canRemove'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3D%3D%3D%200%3B%0A%20%20%7D%0A%0A%20%20public%20updateInitialValue()%20%7B%0A%20%20%20%20this.initValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20111'%2C%20percentage%3A%20100%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20111'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20222'%2C%20percentage%3A%205%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20222'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20333'%2C%20percentage%3A%2060%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST%20333'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20public%20customDelete(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('DELETE'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20const%20control%3A%20FormArray%20%3D%20%3CFormArray%3Eform.controls%5Bkey%5D%3B%0A%20%20%20%20control.removeAt(index)%3B%0A%20%20%7D%0A%0A%20%20public%20customEdit(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('EDIT'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20private%20setupGroupedFormDemo()%20%7B%0A%20%20%20%20this.formGroup%20%3D%20this.formUtils.emptyFormGroup()%3B%0A%20%20%20%20const%20label%20%3D%20new%20ReadOnlyControl(%7B%20key%3A%20'label'%2C%20value%3A%20'Label%20%3A)'%20%7D)%3B%0A%20%20%20%20const%20c1%20%3D%20new%20SelectControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%2C%20options%3A%20%5B%7B%20value%3A%20'hello'%2C%20label%3A%20'Hello'%20%7D%5D%20%7D)%3B%0A%20%20%20%20const%20c2%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'percentage'%2C%20key%3A%20'percentage'%2C%20label%3A%20'Percent'%2C%20required%3A%20true%20%7D)%3B%0A%20%20%20%20const%20c3%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'checkbox'%2C%20label%3A%20'Check%20Me!'%2C%20width%3A%20100%20%7D)%3B%0A%20%20%20%20const%20c4%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'test4'%2C%20label%3A%20'TEST4'%20%7D)%3B%0A%20%20%20%20this.controls.push(label)%3B%0A%20%20%20%20this.controls.push(c1)%3B%0A%20%20%20%20this.controls.push(c2)%3B%0A%20%20%20%20this.controls.push(c3)%3B%0A%20%20%20%20this.controls.push(c4)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22updateInitialValue()%22%3EUpdate%20Initial%20Value%3C%2Fbutton%3E%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22formGroup%22%3E%0A%20%20%20%20%3Cnovo-control-group%20%5BcanEdit%5D%3D%22canEditFunction%22%20%5BcanRemove%5D%3D%22canRemoveFunction%22%20(onRemove)%3D%22onRemove(%24event)%22%20(onEdit)%3D%22onEdit(%24event)%22%20%5BinitialValue%5D%3D%22initValue%22%20%5Badd%5D%3D%22simpleAddConfig%22%20remove%3D%22true%22%20edit%3D%22true%22%20label%3D%22Horizontal%22%20key%3D%22horizontal%22%20%5Bform%5D%3D%22formGroup%22%20%5Bcontrols%5D%3D%22controls%22%20%5BemptyMessage%5D%3D%22emptyMessage%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EInitial%20Value%3A%20%7B%7B%20initValue%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7B%20formGroup.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'vertical-options': {\n        title: 'Vertical Options Example',\n        component: VerticalOptionsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormArray%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20NovoFormGroup%2C%0A%20%20BaseControl%2C%0A%20%20NovoControlGroupAddConfig%2C%0A%20%20ReadOnlyControl%2C%0A%20%20SelectControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Vertical%20Options%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'vertical-options-example'%2C%0A%20%20templateUrl%3A%20'vertical-options-example.html'%2C%0A%20%20styleUrls%3A%20%5B'vertical-options-example.css'%5D%2C%0A%7D)%0Aexport%20class%20VerticalOptionsExample%20%7B%0A%20%20public%20formGroup%3A%20NovoFormGroup%3B%0A%20%20public%20controls%3A%20BaseControl%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initialValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%7B%20text%3A%20'TEXT'%2C%20percentage%3A%2012%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST'%20%7D%5D%3B%0A%0A%20%20public%20simpleAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add'%2C%0A%20%20%7D%3B%0A%20%20public%20anotherAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20a%20new%20fancy%20thing!'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20emptyMessage%3A%20string%20%3D%20'There%20are%20no%20items...'%3B%0A%20%20public%20canEditFunction%3A%20Function%3B%0A%20%20public%20canRemoveFunction%3A%20Function%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Grouped%20form%20demo%0A%20%20%20%20this.setupGroupedFormDemo()%3B%0A%20%20%20%20%2F%2F%20Setup%20function%0A%20%20%20%20this.canEditFunction%20%3D%20this.canEdit.bind(this)%3B%0A%20%20%20%20this.canRemoveFunction%20%3D%20this.canRemove.bind(this)%3B%0A%20%20%7D%0A%0A%20%20public%20onRemove(value%3A%20any)%20%7B%0A%20%20%20%20console.log('REMOVING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20onEdit(value%3A%20any)%20%7B%0A%20%20%20%20console.log('EDITING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20canEdit(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canEdit'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3E%200%3B%0A%20%20%7D%0A%20%20public%20canRemove(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canRemove'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3D%3D%3D%200%3B%0A%20%20%7D%0A%0A%20%20public%20updateInitialValue()%20%7B%0A%20%20%20%20this.initValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20111'%2C%20percentage%3A%20100%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20111'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20222'%2C%20percentage%3A%205%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20222'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20333'%2C%20percentage%3A%2060%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST%20333'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20public%20customDelete(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('DELETE'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20const%20control%3A%20FormArray%20%3D%20%3CFormArray%3Eform.controls%5Bkey%5D%3B%0A%20%20%20%20control.removeAt(index)%3B%0A%20%20%7D%0A%0A%20%20public%20customEdit(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('EDIT'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20private%20setupGroupedFormDemo()%20%7B%0A%20%20%20%20this.formGroup%20%3D%20this.formUtils.emptyFormGroup()%3B%0A%20%20%20%20const%20label%20%3D%20new%20ReadOnlyControl(%7B%20key%3A%20'label'%2C%20value%3A%20'Label%20%3A)'%20%7D)%3B%0A%20%20%20%20const%20c1%20%3D%20new%20SelectControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%2C%20options%3A%20%5B%7B%20value%3A%20'hello'%2C%20label%3A%20'Hello'%20%7D%5D%20%7D)%3B%0A%20%20%20%20const%20c2%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'percentage'%2C%20key%3A%20'percentage'%2C%20label%3A%20'Percent'%2C%20required%3A%20true%20%7D)%3B%0A%20%20%20%20const%20c3%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'checkbox'%2C%20label%3A%20'Check%20Me!'%2C%20width%3A%20100%20%7D)%3B%0A%20%20%20%20const%20c4%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'test4'%2C%20label%3A%20'TEST4'%20%7D)%3B%0A%20%20%20%20this.controls.push(label)%3B%0A%20%20%20%20this.controls.push(c1)%3B%0A%20%20%20%20this.controls.push(c2)%3B%0A%20%20%20%20this.controls.push(c3)%3B%0A%20%20%20%20this.controls.push(c4)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22formGroup%22%3E%0A%20%20%20%20%3Cnovo-control-group%20%5BinitialValue%5D%3D%22initialValue%22%20collapsible%3D%22true%22%20%5Badd%5D%3D%22anotherAddConfig%22%20remove%3D%22true%22%20icon%3D%22idea%22%20label%3D%22Vertical%22%20key%3D%22vertical%22%20vertical%3D%22true%22%20description%3D%22Test%20Description%22%20%5Bform%5D%3D%22formGroup%22%20%5Bcontrols%5D%3D%22controls%22%20%5BemptyMessage%5D%3D%22emptyMessage%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EInitial%20Value%3A%20%7B%7B%20initialValue%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7B%20formGroup.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'vertical': {\n        title: 'Vertical Example',\n        component: VerticalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormArray%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20NovoFormGroup%2C%0A%20%20BaseControl%2C%0A%20%20NovoControlGroupAddConfig%2C%0A%20%20ReadOnlyControl%2C%0A%20%20SelectControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Vertical%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'vertical-example'%2C%0A%20%20templateUrl%3A%20'vertical-example.html'%2C%0A%20%20styleUrls%3A%20%5B'vertical-example.css'%5D%2C%0A%7D)%0Aexport%20class%20VerticalExample%20%7B%0A%20%20public%20formGroup%3A%20NovoFormGroup%3B%0A%20%20public%20controls%3A%20BaseControl%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initialValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%5D%3B%0A%20%20public%20initValue%3A%20%7B%7D%5B%5D%20%3D%20%5B%7B%20text%3A%20'TEXT'%2C%20percentage%3A%2012%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST'%20%7D%5D%3B%0A%0A%20%20public%20simpleAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add'%2C%0A%20%20%7D%3B%0A%20%20public%20anotherAddConfig%3A%20NovoControlGroupAddConfig%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20a%20new%20fancy%20thing!'%2C%0A%20%20%7D%3B%0A%0A%20%20public%20emptyMessage%3A%20string%20%3D%20'There%20are%20no%20items...'%3B%0A%20%20public%20canEditFunction%3A%20Function%3B%0A%20%20public%20canRemoveFunction%3A%20Function%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Grouped%20form%20demo%0A%20%20%20%20this.setupGroupedFormDemo()%3B%0A%20%20%20%20%2F%2F%20Setup%20function%0A%20%20%20%20this.canEditFunction%20%3D%20this.canEdit.bind(this)%3B%0A%20%20%20%20this.canRemoveFunction%20%3D%20this.canRemove.bind(this)%3B%0A%20%20%7D%0A%0A%20%20public%20onRemove(value%3A%20any)%20%7B%0A%20%20%20%20console.log('REMOVING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20onEdit(value%3A%20any)%20%7B%0A%20%20%20%20console.log('EDITING'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20canEdit(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canEdit'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3E%200%3B%0A%20%20%7D%0A%20%20public%20canRemove(value%3A%20any%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('canRemove'%2C%20value%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20return%20index%20%3D%3D%3D%200%3B%0A%20%20%7D%0A%0A%20%20public%20updateInitialValue()%20%7B%0A%20%20%20%20this.initValue%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20111'%2C%20percentage%3A%20100%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20111'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20222'%2C%20percentage%3A%205%2C%20checkbox%3A%20false%2C%20test4%3A%20'TEST%20222'%20%7D%2C%0A%20%20%20%20%20%20%7B%20text%3A%20'TEXT%20333'%2C%20percentage%3A%2060%2C%20checkbox%3A%20true%2C%20test4%3A%20'TEST%20333'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20public%20customDelete(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('DELETE'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20const%20control%3A%20FormArray%20%3D%20%3CFormArray%3Eform.controls%5Bkey%5D%3B%0A%20%20%20%20control.removeAt(index)%3B%0A%20%20%7D%0A%0A%20%20public%20customEdit(form%3A%20NovoFormGroup%2C%20key%3A%20string%2C%20index%3A%20number)%20%7B%0A%20%20%20%20console.log('EDIT'%2C%20form%2C%20key%2C%20index)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20private%20setupGroupedFormDemo()%20%7B%0A%20%20%20%20this.formGroup%20%3D%20this.formUtils.emptyFormGroup()%3B%0A%20%20%20%20const%20label%20%3D%20new%20ReadOnlyControl(%7B%20key%3A%20'label'%2C%20value%3A%20'Label%20%3A)'%20%7D)%3B%0A%20%20%20%20const%20c1%20%3D%20new%20SelectControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%2C%20options%3A%20%5B%7B%20value%3A%20'hello'%2C%20label%3A%20'Hello'%20%7D%5D%20%7D)%3B%0A%20%20%20%20const%20c2%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'percentage'%2C%20key%3A%20'percentage'%2C%20label%3A%20'Percent'%2C%20required%3A%20true%20%7D)%3B%0A%20%20%20%20const%20c3%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'checkbox'%2C%20label%3A%20'Check%20Me!'%2C%20width%3A%20100%20%7D)%3B%0A%20%20%20%20const%20c4%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'test4'%2C%20label%3A%20'TEST4'%20%7D)%3B%0A%20%20%20%20this.controls.push(label)%3B%0A%20%20%20%20this.controls.push(c1)%3B%0A%20%20%20%20this.controls.push(c2)%3B%0A%20%20%20%20this.controls.push(c3)%3B%0A%20%20%20%20this.controls.push(c4)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22formGroup%22%3E%0A%20%20%20%20%3Cnovo-control-group%20%5BinitialValue%5D%3D%22initialValue%22%20%5Badd%5D%3D%22simpleAddConfig%22%20remove%3D%22true%22%20icon%3D%22idea%22%20label%3D%22Vertical%22%20key%3D%22vertical%22%20vertical%3D%22true%22%20%5Bform%5D%3D%22formGroup%22%20%5Bcontrols%5D%3D%22controls%22%20%5BemptyMessage%5D%3D%22emptyMessage%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EInitial%20Value%3A%20%7B%7B%20initialValue%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7B%20formGroup.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'address-control': {\n        title: 'Address Control Example',\n        component: AddressControlExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20AddressControl%2C%20findByCountryId%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Address%20Control%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'address-control-example'%2C%0A%20%20templateUrl%3A%20'address-control-example.html'%2C%0A%20%20styleUrls%3A%20%5B'address-control-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AddressControlExample%20%7B%0A%20%20public%20addressControl%3A%20any%3B%0A%20%20public%20secondaryAddressControl%3A%20any%3B%0A%20%20public%20addressForm%3A%20any%3B%0A%20%20public%20addressFormControls%3A%20any%3B%0A%20%20public%20states%3A%20any%5B%5D%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20value%3A%20'MA'%2C%0A%20%20%20%20%20%20label%3A%20'Massachusetts'%2C%0A%20%20%20%20%20%20countryId%3A%201%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20value%3A%20'NY'%2C%0A%20%20%20%20%20%20label%3A%20'New%20York'%2C%0A%20%20%20%20%20%20countryId%3A%201%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20value%3A%20'AB'%2C%0A%20%20%20%20%20%20label%3A%20'Alberta'%2C%0A%20%20%20%20%20%20countryId%3A%202216%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20value%3A%20'BC'%2C%0A%20%20%20%20%20%20label%3A%20'British%20Columbia'%2C%0A%20%20%20%20%20%20countryId%3A%202216%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20value%3A%20'MB'%2C%0A%20%20%20%20%20%20label%3A%20'Manitoba'%2C%0A%20%20%20%20%20%20countryId%3A%202216%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Address%20control%0A%20%20%20%20this.addressControl%20%3D%20new%20AddressControl(%7B%0A%20%20%20%20%20%20key%3A%20'address'%2C%0A%20%20%20%20%20%20name%3A%20'address'%2C%0A%20%20%20%20%20%20label%3A%20'Address'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Address'%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20address1%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Address%20Line%201'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20maxlength%3A%2020%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20address2%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Address%20Line%202'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20maxlength%3A%2015%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20state%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'State'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20countryID%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Country'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20city%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'City'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20zip%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Zipcode'%2C%0A%20%20%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20value%3A%20%7B%0A%20%20%20%20%20%20%20%20address1%3A%20'321%20Summer%20Street'%2C%0A%20%20%20%20%20%20%20%20address2%3A%20'11%20Washington%20Street'%2C%0A%20%20%20%20%20%20%20%20city%3A%20'Chicago'%2C%0A%20%20%20%20%20%20%20%20state%3A%20'California'%2C%0A%20%20%20%20%20%20%20%20zip%3A%2095133%2C%0A%20%20%20%20%20%20%20%20countryID%3A%201%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.secondaryAddressControl%20%3D%20new%20AddressControl(%7B%0A%20%20%20%20%20%20key%3A%20'secondaryAddress'%2C%0A%20%20%20%20%20%20name%3A%20'secondaryAddress'%2C%0A%20%20%20%20%20%20label%3A%20'Secondary%20Address'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Secondary%20Address'%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20address1%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Address%20Line%201'%2C%0A%20%20%20%20%20%20%20%20%20%20maxlength%3A%2020%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20address2%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Address%20Line%202'%2C%0A%20%20%20%20%20%20%20%20%20%20maxlength%3A%2015%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20state%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'State'%2C%0A%20%20%20%20%20%20%20%20%20%20pickerConfig%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20field%3A%20'value'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'%24label'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20options%3A%20(query%2C%20countryID)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20Promise.resolve(this.getStateOptions(query%2C%20countryID))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20getLabels%3A%20(value%3A%20number)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20Promise.resolve(this.getStateLabel(value))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20countryID%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Country'%2C%0A%20%20%20%20%20%20%20%20%20%20pickerConfig%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20field%3A%20'value'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'%24label'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20options%3A%20(query)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20Promise.resolve(this.getCountryOptions(query))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20getLabels%3A%20(value%3A%20number)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20new%20Promise((resolve%3A%20any)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20const%20country%3A%20any%20%3D%20findByCountryId(value)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(country)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(%7B%20value%3A%20country.id%2C%20label%3A%20country.name%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve('')%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20city%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'City'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20zip%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Zipcode'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20value%3A%20%7B%0A%20%20%20%20%20%20%20%20address1%3A%20'123%20Summer%20Street'%2C%0A%20%20%20%20%20%20%20%20address2%3A%20'10%20Washington%20Street%20and%20stuff'%2C%0A%20%20%20%20%20%20%20%20countryID%3A%202359%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.addressFormControls%20%3D%20%5Bthis.addressControl%2C%20this.secondaryAddressControl%5D%3B%0A%20%20%20%20this.addressForm%20%3D%20formUtils.toFormGroup(this.addressFormControls)%3B%0A%20%20%7D%0A%0A%20%20getStateOptions(filter%3A%20string%20%3D%20''%2C%20countryID%3A%20number)%20%7B%0A%20%20%20%20let%20states%3A%20any%5B%5D%20%3D%20this.states%3B%0A%20%20%20%20if%20(countryID)%20%7B%0A%20%20%20%20%20%20states%20%3D%20states.filter((state%3A%20any)%20%3D%3E%20state.countryId%20%3D%3D%3D%20countryID)%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(filter%20%26%26%20filter.length)%20%7B%0A%20%20%20%20%20%20states%20%3D%20states.filter((state)%20%3D%3E%20new%20RegExp(%60%24%7Bfilter%7D%60%2C%20'gi').test(state.label))%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20states%3B%0A%20%20%7D%0A%0A%20%20getStateLabel(value%3A%20number)%3A%20string%20%7B%0A%20%20%20%20const%20state%3A%20any%20%3D%20this.states.find((s%3A%20any)%20%3D%3E%20%7B%0A%20%20%20%20%20%20return%20s.value%20%3D%3D%3D%20value%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20if%20(state%20%26%26%20state.label)%20%7B%0A%20%20%20%20%20%20return%20state.label%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20''%3B%0A%20%20%7D%0A%0A%20%20getCountryOptions(filter%3F%3A%20string)%20%7B%0A%20%20%20%20let%20countries%3A%20any%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202356%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Uganda'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202357%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Ukraine'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202358%2C%0A%20%20%20%20%20%20%20%20label%3A%20'United%20Arab%20Emirates'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202359%2C%0A%20%20%20%20%20%20%20%20label%3A%20'United%20Kingdom'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%201%2C%0A%20%20%20%20%20%20%20%20label%3A%20'United%20States'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202443%2C%0A%20%20%20%20%20%20%20%20label%3A%20'United%20States%20Minor%20Outlying%20Islands'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202360%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Uruguay'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%202361%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Uzbekistan'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20if%20(filter%20%26%26%20filter.length)%20%7B%0A%20%20%20%20%20%20countries%20%3D%20countries.filter((country)%20%3D%3E%20new%20RegExp(%60%24%7Bfilter%7D%60%2C%20'gi').test(country.label))%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20countries%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22addressForm%22%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22addressForm%22%20%5Bcontrol%5D%3D%22addressControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22addressForm%22%20%5Bcontrol%5D%3D%22secondaryAddressControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BaddressForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'calendar-input-controls': {\n        title: 'Calendar Input Controls Example',\n        component: CalendarInputControlsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20DateControl%2C%20TimeControl%2C%20DateTimeControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F%2F%20import%20%7B%20MockMeta%2C%20MockMetaHeaders%20%7D%20from%20'.%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Calendar%20Input%20Controls%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'calendar-input-controls-example'%2C%0A%20%20templateUrl%3A%20'calendar-input-controls-example.html'%2C%0A%20%20styleUrls%3A%20%5B'calendar-input-controls-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CalendarInputControlsExample%20%7B%0A%20%20public%20dateControl%3A%20any%3B%0A%20%20public%20userDefinedDateControl%3A%20DateControl%3B%0A%20%20public%20timeControl%3A%20any%3B%0A%20%20public%20dateTimeControl%3A%20any%3B%0A%20%20public%20calendarForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Calendar%20input%20controls%0A%20%20%20%20this.dateControl%20%3D%20new%20DateControl(%7B%0A%20%20%20%20%20%20key%3A%20'date'%2C%0A%20%20%20%20%20%20label%3A%20'Date'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Date'%2C%0A%20%20%20%20%20%20startDate%3A%20new%20Date().setMonth(new%20Date().getMonth()%20-%201)%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.userDefinedDateControl%20%3D%20new%20DateControl(%7B%0A%20%20%20%20%20%20key%3A%20'userDefinedFormat'%2C%0A%20%20%20%20%20%20label%3A%20'User%20Defined%20Format'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Date'%2C%0A%20%20%20%20%20%20dateFormat%3A%20'MMM%20Do%20YYYY%20(dd)'%2C%0A%20%20%20%20%20%20textMaskEnabled%3A%20false%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.timeControl%20%3D%20new%20TimeControl(%7B%20key%3A%20'time'%2C%20label%3A%20'Time'%2C%20tooltip%3A%20'Time'%20%7D)%3B%0A%20%20%20%20this.dateTimeControl%20%3D%20new%20DateTimeControl(%7B%20key%3A%20'dateTime'%2C%20tooltip%3A%20'Date%20Time'%2C%20label%3A%20'Date%20Time'%2C%20military%3A%20true%20%7D)%3B%0A%20%20%20%20this.calendarForm%20%3D%20formUtils.toFormGroup(%5Bthis.dateControl%2C%20this.userDefinedDateControl%2C%20this.timeControl%2C%20this.dateTimeControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3C!--Check%20out%20the%20FormDemo.js%20for%20more%20information!--%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22calendarForm%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22calendarForm%22%20%5Bcontrol%5D%3D%22dateControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22calendarForm%22%20%5Bcontrol%5D%3D%22userDefinedDateControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22calendarForm%22%20%5Bcontrol%5D%3D%22timeControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22calendarForm%22%20%5Bcontrol%5D%3D%22dateTimeControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BcalendarForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'check-box-controls': {\n        title: 'Check Box Controls Example',\n        component: CheckBoxControlsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20CheckboxControl%2C%0A%20%20CheckListControl%2C%0A%20%20TilesControl%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F%2F%20import%20%7B%20MockMeta%2C%20MockMetaHeaders%20%7D%20from%20'.%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Check%20Box%20Controls%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'check-box-controls-example'%2C%0A%20%20templateUrl%3A%20'check-box-controls-example.html'%2C%0A%20%20styleUrls%3A%20%5B'check-box-controls-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CheckBoxControlsExample%20%7B%0A%20%20public%20checkControl%3A%20any%3B%0A%20%20public%20checkListControl%3A%20any%3B%0A%20%20public%20tilesControl%3A%20any%3B%0A%20%20public%20disabledTilesControl%3A%20any%3B%0A%20%20public%20checkForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Check%20box%20controls%0A%20%20%20%20this.checkControl%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'check'%2C%20tooltip%3A%20'Checkbox'%2C%20label%3A%20'Checkbox'%2C%20checkboxLabel%3A%20'Checkbox'%20%7D)%3B%0A%20%20%20%20this.checkListControl%20%3D%20new%20CheckListControl(%7B%0A%20%20%20%20%20%20key%3A%20'checklist'%2C%0A%20%20%20%20%20%20label%3A%20'Check%20List'%2C%0A%20%20%20%20%20%20options%3A%20%5B'One'%2C%20'Two'%2C%20'Three'%5D%2C%0A%20%20%20%20%20%20tooltip%3A%20'CheckList'%2C%0A%20%20%20%20%20%20tooltipPosition%3A%20'Top'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.tilesControl%20%3D%20new%20TilesControl(%7B%0A%20%20%20%20%20%20key%3A%20'tiles'%2C%0A%20%20%20%20%20%20label%3A%20'Tiles'%2C%0A%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20'one'%2C%20label%3A%20'One'%20%7D%2C%20%7B%20value%3A%20'two'%2C%20label%3A%20'Two'%20%7D%2C%20%7B%20value%3A%20'disabled'%2C%20label%3A%20'Disabled'%2C%20disabled%3A%20true%20%7D%5D%2C%0A%20%20%20%20%20%20tooltip%3A%20'Tiles'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.disabledTilesControl%20%3D%20new%20TilesControl(%7B%0A%20%20%20%20%20%20key%3A%20'disabledTiles'%2C%0A%20%20%20%20%20%20label%3A%20'Disabled%20Tiles'%2C%0A%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20'one'%2C%20label%3A%20'One'%20%7D%2C%20%7B%20value%3A%20'two'%2C%20label%3A%20'Two'%20%7D%5D%2C%0A%20%20%20%20%20%20tooltip%3A%20'Tiles'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.checkForm%20%3D%20formUtils.toFormGroup(%5Bthis.checkControl%2C%20this.checkListControl%2C%20this.tilesControl%2C%20this.disabledTilesControl%5D)%3B%0A%20%20%7D%0A%0A%20%20onChange(value)%20%7B%0A%20%20%20%20console.log('I%20changed!'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3C!--Check%20out%20the%20FormDemo.js%20for%20more%20information!--%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22checkForm%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22checkForm%22%20%5Bcontrol%5D%3D%22checkControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22checkForm%22%20%5Bcontrol%5D%3D%22checkListControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22checkForm%22%20%5Bcontrol%5D%3D%22tilesControl%22%20(change)%3D%22onChange(%24event)%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22checkForm%22%20%5Bcontrol%5D%3D%22disabledTilesControl%22%20(change)%3D%22onChange(%24event)%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BcheckForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'custom-demo-control': {\n        title: 'Custom Demo Control',\n        component: CustomDemoControlExample,\n        tsSource: `import%20%7B%20Component%2C%20Input%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Custom%20Demo%20Control%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-demo-control-example'%2C%0A%20%20template%3A%20%60%3Cdiv%20%5BformGroup%5D%3D%22form%22%3E%0A%20%20%20%20%20%20%20%20My%20Custom%20Input%20%3Cinput%20%5BformControlName%5D%3D%22control.key%22%20%5Bid%5D%3D%22control.key%22%20%5Btype%5D%3D%22control.type%22%20%5Bplaceholder%5D%3D%22control.placeholder%22%3E%0A%20%20%20%20%3C%2Fdiv%3E%60%2C%0A%7D)%0Aexport%20class%20CustomDemoControlExample%20%7B%0A%20%20%40Input()%0A%20%20control%3B%0A%20%20%40Input()%0A%20%20form%3A%20any%3B%0A%20%20%40Input()%0A%20%20edit%3A%20any%3B%0A%20%20%40Input()%0A%20%20save%3A%20any%3B%0A%20%20%40Input()%0A%20%20delete%3A%20any%3B%0A%20%20%40Input()%0A%20%20upload%3A%20any%3B%0A%7D%0A`,\n        cssSource: ``,\n        htmlSource: ``\n    },\n    'disabled-form': {\n        title: 'Disabled Form Example',\n        component: DisabledFormExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockMetaForDisabledForm%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Disabled%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'disabled-form-example'%2C%0A%20%20templateUrl%3A%20'disabled-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'disabled-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DisabledFormExample%20%7B%0A%20%20public%20disabledControls%3A%20any%3B%0A%20%20public%20disabledQuickNote%3A%20any%3B%0A%20%20public%20disabledForm%3A%20any%3B%0A%20%20public%20disabledNote%3A%20any%3B%0A%20%20public%20required%3A%20boolean%20%3D%20false%3B%0A%20%20public%20disabled%3A%20boolean%20%3D%20true%3B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Placeholder'%3B%0A%20%20public%20note%3A%20string%20%3D%20''%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Disabled%20Form%0A%20%20%20%20const%20disabledOverrides%3A%20any%20%3D%20%7B%0A%20%20%20%20%20%20address%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20textbox%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20textarea%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20date%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20time%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20datetime%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20select%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20tiles%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20picker%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20chips%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20checkbox%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20checklist%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20file%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20type%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20radio%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20htmlFieldFullEditor%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20rowChips%3A%20%7B%0A%20%20%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Row%20Chips'%2C%0A%20%20%20%20%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Value'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item.value%5B'value'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Description'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item.value%5B'description'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20%2F%2F%20Updating%20form%0A%20%20%20%20this.disabledControls%20%3D%20formUtils.toFieldSets(%0A%20%20%20%20%20%20MockMetaForDisabledForm%2C%0A%20%20%20%20%20%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20%20%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D%2C%0A%20%20%20%20%20%20disabledOverrides%2C%0A%20%20%20%20)%3B%0A%20%20%20%20formUtils.setInitialValuesFieldsets(this.disabledControls%2C%20%7B%0A%20%20%20%20%20%20textbox%3A%20'Disabled%20TextBox'%2C%0A%20%20%20%20%20%20textarea%3A%0A%20%20%20%20%20%20%20%20'Disabled%20TextArea%20Disabled%20TextArea%20Disabled%20TextArea%20Disabled%20TextArea%20Disabled%20TextArea%20Disabled%20TextArea%20Disabled%20TextArea%20'%2C%0A%20%20%20%20%20%20select%3A%20'disabledValue'%2C%0A%20%20%20%20%20%20checklist%3A%20'Disabled'%2C%0A%20%20%20%20%20%20tiles%3A%20'Disabled'%2C%0A%20%20%20%20%20%20radio%3A%20'Yes'%2C%0A%20%20%20%20%20%20chips%3A%20%5B'Disabled'%2C%20'Chip'%5D%2C%0A%20%20%20%20%20%20address%3A%20%7B%0A%20%20%20%20%20%20%20%20address1%3A%20'100%20Summer%20St'%2C%0A%20%20%20%20%20%20%20%20address2%3A%20'apt%2025'%2C%0A%20%20%20%20%20%20%20%20countryID%3A%201%2C%0A%20%20%20%20%20%20%20%20state%3A%20'Georgia'%2C%0A%20%20%20%20%20%20%20%20city%3A%20'Atlanta'%2C%0A%20%20%20%20%20%20%20%20zip%3A%20'30312'%2C%0A%20%20%20%20%20%20%20%20countryName%3A%20'United%20States'%2C%0A%20%20%20%20%20%20%20%20countryCode%3A%20'US'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20file%3A%20%5B%7B%20name%3A%20'yourFile.pdf'%2C%20loaded%3A%20true%2C%20link%3A%20'www.google.com'%2C%20description%3A%20'file%20description'%20%7D%5D%2C%0A%20%20%20%20%20%20htmlFieldFullEditor%3A%20%60%3Ch1%3EDisabled%20Editor%3C%2Fh1%3E%3Cbr%3E%3Cui%3E%3Cli%3EDisabled%3C%2Fli%3E%3Cli%3EEditor%3C%2Fli%3E%3C%2Fui%3E%60%2C%0A%20%20%20%20%20%20picker%3A%20'Disabled%20Picker'%2C%0A%20%20%20%20%20%20rowChips%3A%20%5B%7B%20id%3A%201%2C%20value%3A%20'Disabled%20Row%20Chip'%2C%20description%3A%20'This%20is%20a%20disabled%20Row%20Chip'%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.disabledForm%20%3D%20formUtils.toFormGroupFromFieldset(this.disabledControls)%3B%0A%20%20%20%20this.disabledNote%20%3D%20'Disabled%20QuickNote'%3B%0A%20%20%20%20this.disabledQuickNote%20%3D%20%7B%0A%20%20%20%20%20%20triggers%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20'%40'%2C%0A%20%20%20%20%20%20%20%20references%3A%20'%23'%2C%0A%20%20%20%20%20%20%20%20boos%3A%20'%5E'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20options%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20%5B'First'%2C%20'Second'%2C%20'Space%20Between'%5D%2C%0A%20%20%20%20%20%20%20%20references%3A%20%5B'Third'%2C%20'Fourth'%5D%2C%0A%20%20%20%20%20%20%20%20boos%3A%20%5B'Test'%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20renderer%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dbullhorn%26oq%3Dbullhorn%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20references%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Ca%20href%3D%22https%3A%2F%2Fwww.google.com%2Fsearch%3Fq%3Dbullhorn%26oq%3Dbullhorn%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20boos%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Cstrong%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fstrong%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dynamic-form%20%5BautoFocusFirstField%5D%3D%22true%22%20class%3D%22dynamic%22%20%5Bfieldsets%5D%3D%22disabledControls%22%20%5B(form)%5D%3D%22disabledForm%22%20%23myform%3E%3C%2Fnovo-dynamic-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValues%3A%20%7B%7Bmyform.values%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cbr%3E%0A%3Ch5%3EQUICK%20NOTE%3C%2Fh5%3E%0A%3Cbr%3E%0A%3Cnovo-quick-note%20%5B(ngModel)%5D%3D%22disabledNote%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5Bconfig%5D%3D%22disabledQuickNote%22%3E%3C%2Fnovo-quick-note%3E%0A%3Cdiv%20class%3D%22data%22%3E%0A%20%20%3Cp%3ENote%3A%20%7B%7Bnote%20%7C%20json%7D%7D%3C%2Fp%3E%0A%3C%2Fdiv%3E%0A%0A`\n    },\n    'dynamic-form-field-sets': {\n        title: 'Dynamic Form Field Sets Example',\n        component: DynamicFormFieldSetsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormUtils%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockMeta%2C%20MockMetaHeaders%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Dynamic%20Form%20Field%20Sets%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'dynamic-form-field-sets-example'%2C%0A%20%20templateUrl%3A%20'dynamic-form-field-sets-example.html'%2C%0A%20%20styleUrls%3A%20%5B'dynamic-form-field-sets-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DynamicFormFieldSetsExample%20%7B%0A%20%20public%20dynamic%3A%20any%3B%0A%20%20public%20dynamicForm%3A%20any%3B%0A%20%20public%20fieldsets%3A%20Array%3Cany%3E%3B%0A%20%20public%20fieldsetsForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Dynamic%0A%20%20%20%20this.dynamic%20%3D%20formUtils.toFieldSets(%0A%20%20%20%20%20%20MockMeta%2C%0A%20%20%20%20%20%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20%20%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20customfield%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20template%3A%20'custom-demo-component'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20)%3B%0A%20%20%20%20formUtils.setInitialValuesFieldsets(this.dynamic%2C%20%7B%20firstName%3A%20'Initial%20F%20Name'%2C%20number%3A%2012%20%7D)%3B%0A%20%20%20%20this.dynamicForm%20%3D%20formUtils.toFormGroupFromFieldset(this.dynamic)%3B%0A%0A%20%20%20%20%2F%2F%20Dynamic%20%2B%20Fieldsets%0A%20%20%20%20this.fieldsets%20%3D%20formUtils.toFieldSets(%0A%20%20%20%20%20%20MockMetaHeaders%2C%0A%20%20%20%20%20%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20%20%20%7B%20token%3A%20'TOKEN'%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20customfield%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20template%3A%20'custom-demo-component'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20)%3B%0A%20%20%20%20formUtils.setInitialValuesFieldsets(this.fieldsets%2C%20%7B%20firstName%3A%20'Initial%20F%20Name'%2C%20number%3A%2012%20%7D)%3B%0A%20%20%20%20this.fieldsetsForm%20%3D%20formUtils.toFormGroupFromFieldset(this.fieldsets)%3B%0A%20%20%7D%0A%0A%20%20save(form)%20%7B%0A%20%20%20%20if%20(!form.isValid)%20%7B%0A%20%20%20%20%20%20form.showOnlyRequired(true)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20alert('SAVING')%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20clear()%20%7B%0A%20%20%20%20this.dynamic.forEach((control)%20%3D%3E%20%7B%0A%20%20%20%20%20%20control.forceClear.emit()%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20onChange(value)%20%7B%0A%20%20%20%20console.log('I%20changed!'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22secondary%22%20*ngIf%3D%22!myFieldsetsForm.showingAllFields%20%26%26%20!(myFieldsetsForm.allFieldsRequired%20%7C%7C%20myFieldsetsForm.allFieldsNotRequired)%22%20(click)%3D%22myFieldsetsForm.showAllFields()%22%3EShow%20All%20Fields%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20*ngIf%3D%22!myFieldsetsForm.showingRequiredFields%20%26%26%20!(myFieldsetsForm.allFieldsRequired%20%7C%7C%20myFieldsetsForm.allFieldsNotRequired)%22%20(click)%3D%22myFieldsetsForm.showOnlyRequired(false)%22%3EShow%20Required%20Fields%3C%2Fbutton%3E%0A%3Cnovo-dynamic-form%20class%3D%22dynamic%22%20layout%3D%22vertical%22%20%5Bfieldsets%5D%3D%22fieldsets%22%20%5B(form)%5D%3D%22fieldsetsForm%22%20%23myFieldsetsForm%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22custom-demo-component%22%20let-control%20let-form%3D%22form%22%3E%0A%20%20%20%20%3Ccustom-demo-control-example%20%5Bcontrol%5D%3D%22control%22%20%5Bform%5D%3D%22form%22%3E%3C%2Fcustom-demo-control-example%3E%0A%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-dynamic-form%3E%0A%3Cfooter%20class%3D%22dynamic-demo-footer%22%3E%0A%20%20%3Cbutton%20(click)%3D%22save(myFieldsetsForm)%22%20theme%3D%22primary%22%20icon%3D%22check%22%3ESave%3C%2Fbutton%3E%0A%20%20%3Cbutton%20(click)%3D%22clear()%22%20theme%3D%22secondary%22%20icon%3D%22check%22%3EClear%3C%2Fbutton%3E%0A%3C%2Ffooter%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValid%3A%20%7B%7BmyFieldsetsForm.isValid%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValues%3A%20%7B%7BmyFieldsetsForm.values%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EUpdated%20Values%3A%20%7B%7BmyFieldsetsForm.updatedValues()%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'dynamic-form': {\n        title: 'Dynamic Form Example',\n        component: DynamicFormExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormUtils%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockMeta%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Dynamic%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'dynamic-form-example'%2C%0A%20%20templateUrl%3A%20'dynamic-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'dynamic-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DynamicFormExample%20%7B%0A%20%20public%20dynamic%3A%20any%3B%0A%20%20public%20dynamicForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Dynamic%0A%20%20%20%20this.dynamic%20%3D%20formUtils.toFieldSets(%0A%20%20%20%20%20%20MockMeta%2C%0A%20%20%20%20%20%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20%20%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20customfield%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20template%3A%20'custom-demo-component'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20)%3B%0A%20%20%20%20formUtils.setInitialValuesFieldsets(this.dynamic%2C%20%7B%20firstName%3A%20'Initial%20F%20Name'%2C%20number%3A%2012%20%7D)%3B%0A%20%20%20%20this.dynamicForm%20%3D%20formUtils.toFormGroupFromFieldset(this.dynamic)%3B%0A%20%20%7D%0A%0A%20%20save(form)%20%7B%0A%20%20%20%20if%20(!form.isValid)%20%7B%0A%20%20%20%20%20%20form.showOnlyRequired(true)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20alert('SAVING')%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20clear()%20%7B%0A%20%20%20%20this.dynamic.forEach((control)%20%3D%3E%20%7B%0A%20%20%20%20%20%20control.forceClear.emit()%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20onChange(value)%20%7B%0A%20%20%20%20console.log('I%20changed!'%2C%20value)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22secondary%22%20*ngIf%3D%22!myform.showingAllFields%20%26%26%20!(myform.allFieldsRequired%20%7C%7C%20myform.allFieldsNotRequired)%22%20(click)%3D%22myform.showAllFields()%22%3EShow%20All%20Fields%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20*ngIf%3D%22!myform.showingRequiredFields%20%26%26%20!(myform.allFieldsRequired%20%7C%7C%20myform.allFieldsNotRequired)%22%20(click)%3D%22myform.showOnlyRequired(false)%22%3EShow%20Required%20Fields%3C%2Fbutton%3E%0A%3Cnovo-dynamic-form%20%5BautoFocusFirstField%5D%3D%22true%22%20class%3D%22dynamic%22%20%5Bfieldsets%5D%3D%22dynamic%22%20%5B(form)%5D%3D%22dynamicForm%22%20%23myform%3E%3C%2Fnovo-dynamic-form%3E%0A%3Cfooter%20class%3D%22dynamic-demo-footer%22%3E%0A%20%20%20%20%3Cbutton%20(click)%3D%22save(myform)%22%20theme%3D%22primary%22%20icon%3D%22check%22%3ESave%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20(click)%3D%22clear()%22%20theme%3D%22secondary%22%20icon%3D%22check%22%3EClear%3C%2Fbutton%3E%0A%3C%2Ffooter%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValid%3A%20%7B%7Bmyform.isValid%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValues%3A%20%7B%7Bmyform.values%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EUpdated%20Values%3A%20%7B%7Bmyform.updatedValues()%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'enable-disable-all-fields-in-form': {\n        title: 'Enable/Disable all Fields in Form Example',\n        component: EnableDisableAllFieldsInFormExample,\n        tsSource: `%2F%2F%20NG%0Aimport%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%20%7D%20from%20'novo-elements'%3B%0A%2F%2F%20App%0Aimport%20%7B%20MockMetaForForm%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Enable%2FDisable%20all%20Fields%20in%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'enable-disable-all-fields-in-form-example'%2C%0A%20%20templateUrl%3A%20'enable-disable-all-fields-in-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'enable-disable-all-fields-in-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20EnableDisableAllFieldsInFormExample%20%7B%0A%20%20public%20controls%3A%20any%3B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20disabled%3A%20boolean%20%3D%20false%3B%0A%0A%20%20constructor(public%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Updating%20form%0A%20%20%20%20this.controls%20%3D%20formUtils.toFieldSets(%0A%20%20%20%20%20%20MockMetaForForm%2C%0A%20%20%20%20%20%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20%20%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%7D%2C%0A%20%20%20%20)%3B%0A%20%20%20%20formUtils.setInitialValuesFieldsets(this.controls%2C%20%7B%0A%20%20%20%20%20%20select%3A%20'disabledValue'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroupFromFieldset(this.controls)%3B%0A%20%20%7D%0A%0A%20%20public%20toggleEnableDisableAllFields()%3A%20void%20%7B%0A%20%20%20%20this.disabled%20%3D%20!this.disabled%3B%0A%20%20%20%20if%20(this.disabled)%20%7B%0A%20%20%20%20%20%20this.form.enableAllControls()%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.form.disableAllControls()%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dynamic-form%20class%3D%22dynamic%22%20%5Bfieldsets%5D%3D%22controls%22%20%5B(form)%5D%3D%22form%22%20%23myform%3E%3C%2Fnovo-dynamic-form%3E%0A%3Cbutton%20theme%3D%22primary%22%20(click)%3D%22toggleEnableDisableAllFields()%22%3EToggle%20fields%3C%2Fbutton%3E%0A`\n    },\n    'file-input-controls': {\n        title: 'File Input Controls Example',\n        component: FileInputControlsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20FileControl%2C%20NovoFormGroup%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20File%20Input%20Controls%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'file-input-controls-example'%2C%0A%20%20templateUrl%3A%20'file-input-controls-example.html'%2C%0A%20%20styleUrls%3A%20%5B'file-input-controls-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FileInputControlsExample%20%7B%0A%20%20public%20fileControl%3A%20any%3B%0A%20%20public%20multiFileControl%3A%20any%3B%0A%20%20public%20multiFileControlMixRemove%3A%20FileControl%3B%0A%20%20public%20fileForm%3A%20any%3B%0A%0A%20%20%2F%2F%20custom%20upload%20validation%0A%20%20public%20message%3A%20string%20%3D%20''%3B%0A%20%20public%20customValidationFileControl%3A%20FileControl%3B%0A%20%20public%20customValidationFileForm%3A%20NovoFormGroup%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20File%20input%20controls%0A%20%20%20%20this.fileControl%20%3D%20new%20FileControl(%7B%20key%3A%20'file'%2C%20name%3A%20'myfile'%2C%20label%3A%20'File'%2C%20tooltip%3A%20'Files%20Control'%20%7D)%3B%0A%20%20%20%20this.multiFileControl%20%3D%20new%20FileControl(%7B%0A%20%20%20%20%20%20key%3A%20'files'%2C%0A%20%20%20%20%20%20name%3A%20'myfiles'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20Files'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20Files'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20layoutOptions%3A%20%7B%20order%3A%20'displayFilesBelow'%2C%20download%3A%20true%2C%20edit%3A%20true%2C%20customActions%3A%20true%2C%20labelStyle%3A%20'no-box'%20%7D%2C%0A%20%20%20%20%20%20value%3A%20%5B%7B%20name%3A%20'yourFile.pdf'%2C%20loaded%3A%20true%2C%20link%3A%20'www.google.com'%2C%20description%3A%20'file%20description'%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.fileForm%20%3D%20formUtils.toFormGroup(%5Bthis.fileControl%2C%20this.multiFileControl%5D)%3B%0A%0A%20%20%20%20this.customValidationFileControl%20%3D%20new%20FileControl(%7B%0A%20%20%20%20%20%20key%3A%20'customValidationFiles'%2C%0A%20%20%20%20%20%20name%3A%20'customValidationFiles'%2C%0A%20%20%20%20%20%20label%3A%20'Custom%20Validation'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Custom%20Validation%20Multiple%20Files'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20layoutOptions%3A%20%7B%0A%20%20%20%20%20%20%20%20order%3A%20'displayFilesBelow'%2C%0A%20%20%20%20%20%20%20%20download%3A%20true%2C%0A%20%20%20%20%20%20%20%20edit%3A%20true%2C%0A%20%20%20%20%20%20%20%20customActions%3A%20false%2C%0A%20%20%20%20%20%20%20%20customValidation%3A%20%5B%7B%20action%3A%20'upload'%2C%20fn%3A%20this.checkFileSize.bind(this)%20%7D%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.customValidationFileForm%20%3D%20formUtils.toFormGroup(%5Bthis.customValidationFileControl%5D)%3B%0A%20%20%20%20this.multiFileControlMixRemove%20%3D%20new%20FileControl(%7B%0A%20%20%20%20%20%20key%3A%20'mixDeleteFiles'%2C%0A%20%20%20%20%20%20name%3A%20'mymixDeleteFiles'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20Files%20-%20Delete%20New%20Only'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20Files%20-%20Delete%20New%20Only'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20layoutOptions%3A%20%7B%0A%20%20%20%20%20%20%20%20order%3A%20'displayFilesBelow'%2C%0A%20%20%20%20%20%20%20%20labelStyle%3A%20'no-box'%2C%0A%20%20%20%20%20%20%20%20download%3A%20true%2C%0A%20%20%20%20%20%20%20%20edit%3A%20false%2C%0A%20%20%20%20%20%20%20%20removable%3A%20false%2C%0A%20%20%20%20%20%20%20%20removableWhenNew%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20value%3A%20%5B%7B%20name%3A%20'yourFile.pdf'%2C%20loaded%3A%20true%2C%20link%3A%20'www.google.com'%2C%20description%3A%20'file%20description'%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.fileForm%20%3D%20formUtils.toFormGroup(%5Bthis.fileControl%2C%20this.multiFileControl%2C%20this.multiFileControlMixRemove%5D)%3B%0A%20%20%7D%0A%0A%20%20public%20handleEdit(file)%20%7B%0A%20%20%20%20console.log('This%20is%20an%20Edit%20Action!'%2C%20file)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20handleSave(file)%20%7B%0A%20%20%20%20console.log('This%20is%20a%20Save%20Action!'%2C%20file)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20handleDelete(file)%20%7B%0A%20%20%20%20console.log('This%20is%20a%20Delete%20Action!'%2C%20file)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20handleUpload(files)%20%7B%0A%20%20%20%20console.log('This%20is%20an%20upload%20Action!'%2C%20files)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20public%20checkFileSize(fileList)%3A%20boolean%20%7B%0A%20%20%20%20const%20maxSizeKb%3A%20number%20%3D%205120%3B%20%2F%2F%20(5%20MB%20in%20KB)%0A%20%20%20%20for%20(const%20file%20of%20fileList)%20%7B%0A%20%20%20%20%20%20if%20(file.size%20%3E%20maxSizeKb%20*%201024)%20%7B%0A%20%20%20%20%20%20%20%20this.message%20%3D%20'File%20is%20bigger%20than%20the%20allowed%205MB'%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3C!--Check%20out%20the%20FormDemo.js%20for%20more%20information!--%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22fileForm%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22fileForm%22%20%5Bcontrol%5D%3D%22fileControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22fileForm%22%20%5Bcontrol%5D%3D%22multiFileControl%22%20(edit)%3D%22handleEdit(%24event)%22%20(save)%3D%22handleSave(%24event)%22%20(delete)%3D%22handleDelete(%24event)%22%20(upload)%3D%22handleUpload(%24event)%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22fileForm%22%20%5Bcontrol%5D%3D%22multiFileControlMixRemove%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BfileForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cbr%20%2F%3E%0A%3Cbr%20%2F%3E%0A%3Cnovo-form%20layout%3D%22vertical%22%20%5Bform%5D%3D%22customValidationFileForm%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22customValidationFileForm%22%20%5Bcontrol%5D%3D%22customValidationFileControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%3E%7B%7B%20message%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'picker-controls': {\n        title: 'Picker Controls Example',\n        component: PickerControlsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20PickerControl%2C%20EntityPickerResult%2C%20EntityPickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%2F%2F%20import%20%7B%20MockMeta%2C%20MockMetaHeaders%20%7D%20from%20'.%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Picker%20Controls%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'picker-controls-example'%2C%0A%20%20templateUrl%3A%20'picker-controls-example.html'%2C%0A%20%20styleUrls%3A%20%5B'picker-controls-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PickerControlsExample%20%7B%0A%20%20public%20singlePickerControl%3A%20any%3B%0A%20%20public%20multiPickerControl%3A%20any%3B%0A%20%20public%20multiPickerControlWithMaxlength%3A%20any%3B%0A%20%20public%20multiPickerControlWithMaxlengthAndPreselects%3A%20any%3B%0A%20%20public%20entityMultiPickerControl%3A%20any%3B%0A%20%20public%20rowMultiPickerControl%3A%20any%3B%0A%20%20public%20rowMultiPickerControlWithMaxlength%3A%20any%3B%0A%20%20public%20textPickerWithGetLabels%3A%20any%3B%0A%20%20public%20pickerForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20fruits%20%3D%20%5B'Apples'%2C%20'Oranges'%2C%20'Bananas'%2C%20'Grapes'%5D%3B%0A%20%20%20%20const%20cities%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Boston'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20name%3A%20'New%20York'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Washington%20D.C.'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Orlando'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%205%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Houston'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%206%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Chicago'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20const%20states%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'ME'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Maine'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MD'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Maryland'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MA'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Massachusetts'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MI'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Michigan'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MN'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Minnesota'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MS'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Mississippi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MO'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Missouri'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'MT'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Montana'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20%2F%2F%20Picker%20controls%0A%20%20%20%20this.singlePickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'singlePicker'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Single'%2C%0A%20%20%20%20%20%20label%3A%20'Single'%2C%0A%20%20%20%20%20%20config%3A%20%7B%20options%3A%20%5B'One'%2C%20'Two'%2C%20'Three'%5D%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.multiPickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'multiPicker'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20config%3A%20%7B%20options%3A%20%5B'One'%2C%20'Two'%2C%20'Three'%5D%2C%20type%3A%20'candidate'%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.multiPickerControlWithMaxlength%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'multiPickerWithMaxlength'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20With%20Maxlength'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20With%20Maxlength'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20maxlength%3A%202%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20fruits%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.multiPickerControlWithMaxlengthAndPreselects%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'multiPickerControlWithMaxlengthAndPreselects'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20With%20Maxlength%20and%20Preselects'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20With%20Maxlength%20%26%20Preselects'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20maxlength%3A%202%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20fruits%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.entityMultiPickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'entityMultiPicker'%2C%0A%20%20%20%20%20%20label%3A%20'Entities'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20readOnly%3A%20false%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20tooltip%3A%20'Entities'%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20resultsTemplate%3A%20EntityPickerResults%2C%0A%20%20%20%20%20%20%20%20previewTemplate%3A%20EntityPickerResult%2C%0A%20%20%20%20%20%20%20%20format%3A%20'%24title'%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'new-bank-inquiries%40centralbank.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(651)%20555-1234'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Washington'%2C%20state%3A%20'DC'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientCorporation'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'info%40federalbank.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(545)%20555-1212'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientCorporation'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Aaron%20Burr'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Aaron'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Burr'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Aaron%20Burr'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20companyName%3A%20'Central%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'aburr%40centralbank.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(333)%20555-3434'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Washington'%2C%20state%3A%20'DC'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20status%3A%20'Hold'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientContact'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Alexander%20Hamilton'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Alexander'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Hamilton'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Alexander%20Hamilton'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20companyName%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'ahamilton%40federalbank.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(333)%20555-2222'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20status%3A%20'Active'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientContact'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Ben%20Franklin'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Ben'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Franklin'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Ben%20Franklin'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'bfranklin%40gmail.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(654)%20525-2222'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Boston'%2C%20state%3A%20'MA'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20status%3A%20'Interviewing'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'Candidate'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20title%3A%20'Thomas%20Jefferson'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Thomas'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Jefferson'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'Thomas%20Jefferson'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20email%3A%20'tjefferson%40usa.com'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phone%3A%20'(123)%20542-1234'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20status%3A%20'New%20Lead'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'Candidate'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.rowMultiPickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'rowMultiPickerControl'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20Rows'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20Rows'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20format%3A%20'%24name'%2C%0A%20%20%20%20%20%20%20%20options%3A%20cities%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item%5B'label'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Id'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item.value%5B'id'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.rowMultiPickerControlWithMaxlength%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'rowMultiPickerControlWithMaxlength'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Multiple%20Rows%20With%20Maxlength'%2C%0A%20%20%20%20%20%20label%3A%20'Multiple%20Rows%20With%20Maxlength'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20maxlength%3A%204%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20format%3A%20'%24name'%2C%0A%20%20%20%20%20%20%20%20options%3A%20cities%2C%0A%20%20%20%20%20%20%20%20type%3A%20'candidate'%2C%0A%20%20%20%20%20%20%20%20columns%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Name'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item%5B'label'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'Id'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20(item%3A%20any)%3A%20string%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20item.value%5B'id'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.textPickerWithGetLabels%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'textPickerWithGetLabels'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Text%20Value%20Picker%20with%20getLabels()'%2C%0A%20%20%20%20%20%20label%3A%20'Text%20Value%20Picker%20with%20getLabels()'%2C%0A%20%20%20%20%20%20multiple%3A%20false%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20field%3A%20'value'%2C%0A%20%20%20%20%20%20%20%20format%3A%20'%24label'%2C%0A%20%20%20%20%20%20%20%20options%3A%20states%2C%0A%20%20%20%20%20%20%20%20useGetLabels%3A%20true%2C%0A%20%20%20%20%20%20%20%20getLabels%3A%20(value)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20states.forEach((state)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(state.value%20%3D%3D%3D%20value)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(state)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20const%20controls%20%3D%20%5B%0A%20%20%20%20%20%20this.singlePickerControl%2C%0A%20%20%20%20%20%20this.multiPickerControl%2C%0A%20%20%20%20%20%20this.entityMultiPickerControl%2C%0A%20%20%20%20%20%20this.multiPickerControlWithMaxlength%2C%0A%20%20%20%20%20%20this.multiPickerControlWithMaxlengthAndPreselects%2C%0A%20%20%20%20%20%20this.rowMultiPickerControl%2C%0A%20%20%20%20%20%20%2F%2F%20this.rowMultiPickerControlWithMaxlength%2C%0A%20%20%20%20%20%20this.textPickerWithGetLabels%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20formUtils.setInitialValues(controls%2C%20%7B%0A%20%20%20%20%20%20entityMultiPicker%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20title%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20name%3A%20'Federal%20Bank'%2C%0A%20%20%20%20%20%20%20%20%20%20email%3A%20'info%40federalbank.com'%2C%0A%20%20%20%20%20%20%20%20%20%20phone%3A%20'(545)%20555-1212'%2C%0A%20%20%20%20%20%20%20%20%20%20address%3A%20%7B%20city%3A%20'Arlington'%2C%20state%3A%20'VA'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20searchEntity%3A%20'ClientCorporation'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20multiPickerControlWithMaxlengthAndPreselects%3A%20%5B'Oranges'%2C%20'Bananas'%5D%2C%0A%20%20%20%20%20%20rowMultiPickerControlWithMaxlength%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20%20%20name%3A%20'Boston'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20id%3A%205%2C%0A%20%20%20%20%20%20%20%20%20%20name%3A%20'Houston'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20id%3A%206%2C%0A%20%20%20%20%20%20%20%20%20%20name%3A%20'Chicago'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20textPickerWithGetLabels%3A%20'MD'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.pickerForm%20%3D%20formUtils.toFormGroup(controls)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3C!--Check%20out%20the%20FormDemo.js%20for%20more%20information!--%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22pickerForm%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22singlePickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22multiPickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22entityMultiPickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22rowMultiPickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22multiPickerControlWithMaxlength%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22multiPickerControlWithMaxlengthAndPreselects%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C!--%20Row%20picker%20with%20maxlength%20is%20implemented%20but%20currently%20turned%20off%20because%20it%20is%20not%20being%20used%20and%20there%20was%20no%20UI%20created%20for%20it.%0A%20%20%20%20%20%20%20%20%20To%20turn%20it%20back%20on%2C%20add%20'%5Bmaxlength%5D%3D%22control%3F.maxlength%22'%20to%20ControlTemplate.ts%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22rowMultiPickerControlWithMaxlength%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv--%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22pickerForm%22%20%5Bcontrol%5D%3D%22textPickerWithGetLabels%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BpickerForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'text-based-controls': {\n        title: 'Text Based Controls Example',\n        component: TextBasedControlsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20QuickNoteControl%2C%20TextAreaControl%2C%20AceEditorControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F%2F%20import%20%7B%20MockMeta%2C%20MockMetaHeaders%20%7D%20from%20'.%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Text%20Based%20Controls%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'text-based-controls-example'%2C%0A%20%20templateUrl%3A%20'text-based-controls-example.html'%2C%0A%20%20styleUrls%3A%20%5B'text-based-controls-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TextBasedControlsExample%20%7B%0A%20%20public%20quickNoteConfig%3A%20any%3B%0A%20%20public%20textControl%3A%20any%3B%0A%20%20public%20emailControl%3A%20any%3B%0A%20%20public%20numberControl%3A%20any%3B%0A%20%20public%20currencyControl%3A%20any%3B%0A%20%20public%20aceEditorControl%3A%20any%3B%0A%20%20public%20floatControl%3A%20any%3B%0A%20%20public%20percentageControl%3A%20any%3B%0A%20%20public%20quickNoteControl%3A%20any%3B%0A%20%20public%20textAreaControl%3A%20any%3B%0A%20%20public%20textForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Quick%20note%20config%3B%0A%20%20%20%20this.quickNoteConfig%20%3D%20%7B%0A%20%20%20%20%20%20triggers%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20'%40'%2C%0A%20%20%20%20%20%20%20%20references%3A%20'%23'%2C%0A%20%20%20%20%20%20%20%20boos%3A%20'%5E'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20options%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20%5B'First'%2C%20'Second'%5D%2C%0A%20%20%20%20%20%20%20%20references%3A%20%5B'Third'%2C%20'Fourth'%5D%2C%0A%20%20%20%20%20%20%20%20boos%3A%20%5B'Test'%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20renderer%3A%20%7B%0A%20%20%20%20%20%20%20%20tags%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Ca%20class%3D%22tag%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20references%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Ca%20class%3D%22tag%22%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fa%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20boos%3A%20(symbol%2C%20item)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%3Cstrong%3E%24%7Bsymbol%7D%24%7Bitem.label%7D%3C%2Fstrong%3E%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20%2F%2F%20Text-based%20Controls%0A%20%20%20%20this.textControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20key%3A%20'text'%2C%0A%20%20%20%20%20%20label%3A%20'Text%20Box'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Textbox'%2C%0A%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20value%3A%20'HI'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.textAreaControl%20%3D%20new%20TextAreaControl(%7B%0A%20%20%20%20%20%20key%3A%20'textarea'%2C%0A%20%20%20%20%20%20label%3A%20'Text%20Area'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Text%20Area'%2C%0A%20%20%20%20%20%20value%3A%0A%20%20%20%20%20%20%20%20'Bro%20ipsum%20dolor%20sit%20amet%20yard%20sale%20saddle%20pipe%2C%20poaching%20cork%20360%20punter%20ACL%20back%20country%20cornice%20Whistler.%20%20Avie%20Ski%20taco%20mitt%2C%20manny%20first%20tracks%20yard%20sale%20caballerial%20heli%20fatty.%20%20Epic%20dope%20grab%2C%20brain%20bucket%20japan%20air%20wack%20bowl%20%20mute%20heli%20corn%20Snowboard%20Whistler%20giblets%20table%20top.%20%20Crunchy%20Snowboard%20washboard%20line%20grab%20reverse%20camber.%20%20Bump%20epic%20granny%20gear%20heli%20sketching%20wheelie%20huckfest%20face%20plant%20crank%20pow%20pow%20chain%20ring%20%20dirtbag%20washboard.%20%20Flow%20endo%20ski%20bum%20sucker%20hole%2C%20death%20cookies%20manny%20schwag%20pipe.%20%20Dope%20heli%20stomp%20yard%20sale%2C%20saddle%20shreddin%20booter%20gear%20jammer%20grom%20bonk%20OTB%20brain%20bucket%20bonk%20japan%20air%20Whistler.Clipless%20pow%20pow%20pow%2C%20core%20shot%20corn%20butter%20bomb%20hole%20glades%20face%20plant%20dust%20on%20crust.%20%20Poaching%20park%20face%20shots%20bump%2C%20Bike%20cornice%20death%20cookies.%20%20Avie%20cruiser%20sucker%20hole%20face%20plant%20switch.%20%20ACL%20snake%20bite%20bonk%2C%20twin%20tip%20euro%20rig%20nose%20press%20McTwist.%20%20Ripping%20skinny%20trucks%20shreddin.%20%20Apres%20pow%20line%20euro%20sharkbite%20gapers%20lid.Snake%20bite%20derailleur%20wheels%20bomb%20hole.%20%20Huck%20apres%20steeps%20BB%20first%20tracks%20bowl%20%20daffy%20park%20euro%20park%20rat%20euro.%20%20North%20shore%20death%20cookies%20snake%20bite%20carve%2C%20freshies%20dirtbag%20huck%20reverse%20camber%20hellflip%20frozen%20chicken%20heads%20apres%20taco%20glove%20gnar%20face%20shots%20bro.%20%20Ride%20flow%20twister%20cornice%20afterbang%20saddle%20first%20tracks%20rig%20berm%20bro%20face%20shots.%20%20Ride%20stoked%20wack%20park%20twin%20tip%20trucks%20chillax%20shuttle%20Whistler%20gondy%20laps.%20%20Grind%20berm%20schwag%2C%20table%20top%20face%20shots%20steed%20liftie%20afterbang%20taco%20glove%20frozen%20chicken%20heads%20free%20ride%20clean%20huck.%20%20Rock-ectomy%20white%20room%20nose%20press%20avie.Frozen%20chicken%20heads%20gondy%20bail%20travel%20huckfest%20big%20ring%20phat%20clean.%20%20Taco%20couloir%20piste%20derailleur%20wack%20scream%20backside%20steeps%20groomer%20glades%20pipe%20gondy%20switch%20skid%20lid.%20%20Brain%20bucket%20betty%20bowl%2C%20moguls%20gondy%20Whistler%20air%20hardtail.%20%20Flow%20euro%20granny%20gear%2C%20McTwist%20cruiser%20bonk%20grom%20chain%20suck.%20%20Trucks%20line%20huck%2C%20stomp%20ripper%20washboard%20euro%20corduroy%20death%20cookies%20yard%20sale%20dope%20face%20plant%20shreddin%20chain%20suck.ACL%20T-bar%20hellflip%2C%20first%20tracks%20gondy%20hardtail%20rip%20wack%20dust%20on%20crust%20schwag%20frontside%20couloir%20laps%20presta%20backside.%20%20Road%20rash%20Ski%20ski%20bum%20gnar%20wack%20flow%20carve%20lid.%20%20Nose%20white%20room%20ollie%20rail%20table%20top%20grom%20back%20country%20washboard%20dust%20on%20crust%20chillax%20gear%20jammer%20bro%20stomp%20stoked.%20%20Lid%20wheels%20nose%20press%20frontside%2C%20park%20ACL%20dirtbag%20huck%20epic%20bowl%20%20taco%20glove%20OTB.%20%20Fatty%20mute%20whip%20stunt%2C%20Whistler%20McTwist%20stoked%20Bike.%20%20Endo%20brain%20bucket%20crank%20dust%20on%20crust%20back%20country%20line%20ollie%20gapers%20afterbang%20bump%20stoked%20taco%20road%20rash%20granny%20gear.%20%20Deck%20dirtbag%20360%20gnar%20snake%20bite%20couloir%20Bike%20corduroy%20frontside%20crank%20lid%20bro.Air%20tele%20schwag%20ollie%2C%20hardtail%20betty%20crunchy%20epic%20%20face%20shots.%20%20Travel%20flowy%20misty%20huck%20Bike%20180%20schwag%20drop%20hellflip%20ripping%20bunny%20slope%20carbon%20roadie%20tele%20bail.%20%20Cornice%20sharkbite%20360%20frozen%20chicken%20heads%20dope%20hellflip%20clipless.%20%20Switch%20sketching%20grind%20brain%20bucket%20stunt%20taco%20daffy%20OTB%20ride%20liftie%20brain%20bucket%20air%20huckfest%20park%20360.'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.emailControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'email'%2C%20key%3A%20'email'%2C%20label%3A%20'Email'%2C%20tooltip%3A%20'Email'%20%7D)%3B%0A%20%20%20%20this.numberControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'number'%2C%20key%3A%20'number'%2C%20tooltip%3A%20'Number'%2C%20label%3A%20'Number'%20%7D)%3B%0A%20%20%20%20this.currencyControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20key%3A%20'currency'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Currency'%2C%0A%20%20%20%20%20%20label%3A%20'Currency'%2C%0A%20%20%20%20%20%20currencyFormat%3A%20'%24%20USD'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.floatControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'float'%2C%20key%3A%20'float'%2C%20tooltip%3A%20'Float'%2C%20label%3A%20'Float'%20%7D)%3B%0A%20%20%20%20this.percentageControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'percentage'%2C%0A%20%20%20%20%20%20key%3A%20'percentage'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Percent'%2C%0A%20%20%20%20%20%20label%3A%20'Percent'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.quickNoteControl%20%3D%20new%20QuickNoteControl(%7B%0A%20%20%20%20%20%20key%3A%20'note'%2C%0A%20%20%20%20%20%20label%3A%20'Note'%2C%0A%20%20%20%20%20%20config%3A%20this.quickNoteConfig%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20tooltip%3A%20'Quicknote'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.aceEditorControl%20%3D%20new%20AceEditorControl(%7B%20key%3A%20'ace'%2C%20label%3A%20'CODE'%2C%20tooltip%3A%20'CODE'%2C%20value%3A%20'var%20i%20%3D%200%3B'%20%7D)%3B%0A%20%20%20%20this.textForm%20%3D%20formUtils.toFormGroup(%5B%0A%20%20%20%20%20%20this.textControl%2C%0A%20%20%20%20%20%20this.emailControl%2C%0A%20%20%20%20%20%20this.textAreaControl%2C%0A%20%20%20%20%20%20this.numberControl%2C%0A%20%20%20%20%20%20this.currencyControl%2C%0A%20%20%20%20%20%20this.floatControl%2C%0A%20%20%20%20%20%20this.percentageControl%2C%0A%20%20%20%20%20%20this.quickNoteControl%2C%0A%20%20%20%20%20%20this.aceEditorControl%2C%0A%20%20%20%20%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3C!--Check%20out%20the%20FormDemo.js%20for%20more%20information!--%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22form.showAllFields()%22%3EShow%20All%20Fields%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22form.showOnlyRequired(false)%22%3EShow%20Required%20Fields%3C%2Fbutton%3E%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%3Cnovo-form%20%5Bform%5D%3D%22textForm%22%20%23form%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22textControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5BautoFocus%5D%3D%22true%22%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22emailControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22numberControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22currencyControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22floatControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22percentageControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22textAreaControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22quickNoteControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22aceEditorControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValue%3A%20%7B%7BtextForm.value%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'updating-form': {\n        title: 'Updating Form Example',\n        component: UpdatingFormExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20CheckboxControl%2C%20FileControl%2C%20PickerControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Updating%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'updating-form-example'%2C%0A%20%20templateUrl%3A%20'updating-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'updating-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20UpdatingFormExample%20%7B%0A%20%20public%20textControl%3A%20any%3B%0A%20%20public%20percentageControl%3A%20any%3B%0A%20%20public%20checkControl%3A%20any%3B%0A%20%20public%20fileControl%3A%20any%3B%0A%20%20public%20singlePickerControl%3A%20any%3B%0A%20%20public%20updatingForm%3A%20any%3B%0A%20%20public%20updatingFormControls%3A%20any%5B%5D%3B%0A%20%20public%20required%3A%20boolean%20%3D%20false%3B%0A%20%20public%20disabled%3A%20boolean%20%3D%20true%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Text-based%20Controls%0A%20%20%20%20this.textControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20key%3A%20'text'%2C%0A%20%20%20%20%20%20label%3A%20'Text%20Box'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Textbox'%2C%0A%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%20%20value%3A%20'HI'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.percentageControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'percentage'%2C%0A%20%20%20%20%20%20key%3A%20'percentage'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Percent'%2C%0A%20%20%20%20%20%20label%3A%20'Percent'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Check%20box%20controls%0A%20%20%20%20this.checkControl%20%3D%20new%20CheckboxControl(%7B%20key%3A%20'check'%2C%20tooltip%3A%20'Checkbox'%2C%20label%3A%20'Checkbox'%2C%20checkboxLabel%3A%20'Checkbox'%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Picker%20controls%0A%20%20%20%20this.singlePickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'singlePicker'%2C%0A%20%20%20%20%20%20tooltip%3A%20'Single'%2C%0A%20%20%20%20%20%20label%3A%20'Single'%2C%0A%20%20%20%20%20%20config%3A%20%7B%20options%3A%20%5B'One'%2C%20'Two'%2C%20'Three'%5D%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20File%20input%20controls%0A%20%20%20%20this.fileControl%20%3D%20new%20FileControl(%7B%20key%3A%20'file'%2C%20name%3A%20'myfile'%2C%20label%3A%20'File'%2C%20tooltip%3A%20'Files%20Control'%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Updating%20form%0A%20%20%20%20this.updatingFormControls%20%3D%20%5Bthis.textControl%2C%20this.percentageControl%2C%20this.checkControl%2C%20this.singlePickerControl%2C%20this.fileControl%5D%3B%0A%20%20%20%20this.updatingForm%20%3D%20formUtils.toFormGroup(this.updatingFormControls)%3B%0A%20%20%7D%0A%0A%20%20toggleEnabled()%20%7B%0A%20%20%20%20this.disabled%20%3D%20!this.disabled%3B%0A%20%20%20%20Object.keys(this.updatingForm.controls).forEach((key)%20%3D%3E%20%7B%0A%20%20%20%20%20%20if%20(this.disabled)%20%7B%0A%20%20%20%20%20%20%20%20this.updatingForm.controls%5Bkey%5D.enable()%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20this.updatingForm.controls%5Bkey%5D.disable()%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20toggleRequired()%20%7B%0A%20%20%20%20this.required%20%3D%20!this.required%3B%0A%20%20%20%20Object.keys(this.updatingForm.controls).forEach((key)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.updatingForm.controls%5Bkey%5D.setRequired(this.required)%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20markAsInvalid()%20%7B%0A%20%20%20%20Object.keys(this.updatingForm.controls).forEach((key)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.updatingForm.controls%5Bkey%5D.markAsInvalid('Custom%20Error!')%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22toggleEnabled()%22%3EToggle%20Enabled%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22toggleRequired()%22%3EToggle%20Required%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22markAsInvalid()%22%3EMark%20As%20Invalid%3C%2Fbutton%3E%0A%3Cbr%2F%3E%3Cbr%2F%3E%0A%3Cnovo-dynamic-form%20layout%3D%22vertical%22%20%5Bcontrols%5D%3D%22updatingFormControls%22%20%5B(form)%5D%3D%22updatingForm%22%20%23updatingFormRef%3E%3C%2Fnovo-dynamic-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValid%3A%20%7B%7BupdatingFormRef.isValid%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValues%3A%20%7B%7BupdatingFormRef.values%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EUpdated%20Values%3A%20%7B%7BupdatingFormRef.updatedValues()%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'vertical-dynamic-form': {\n        title: 'Vertical Dynamic Form Example',\n        component: VerticalDynamicFormExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormUtils%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockMeta%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Vertical%20Dynamic%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'vertical-dynamic-form-example'%2C%0A%20%20templateUrl%3A%20'vertical-dynamic-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'vertical-dynamic-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20VerticalDynamicFormExample%20%7B%0A%20%20public%20dynamicVertical%3A%20any%3B%0A%20%20public%20dynamicVerticalForm%3A%20any%3B%0A%20%20public%20fieldsets%3A%20Array%3Cany%3E%3B%0A%20%20public%20fieldsetsForm%3A%20any%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Dynamic%0A%20%20%20%20this.dynamicVertical%20%3D%20formUtils.toControls(MockMeta%2C%20'%24%20USD'%2C%20%7B%7D%2C%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D)%3B%0A%20%20%20%20formUtils.setInitialValues(this.dynamicVertical%2C%20%7B%20number%3A%200%2C%20firstName%3A%20'Bobby%20Flay'%20%7D)%3B%0A%20%20%20%20this.dynamicVerticalForm%20%3D%20formUtils.toFormGroup(this.dynamicVertical)%3B%0A%20%20%7D%0A%0A%20%20save(form)%20%7B%0A%20%20%20%20if%20(!form.isValid)%20%7B%0A%20%20%20%20%20%20form.showOnlyRequired(true)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20alert('SAVING')%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22nomyform.showAllFields()%22%3EShow%20All%20Fields%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22nomyform.showOnlyRequired(false)%22%3EShow%20Required%20Fields%3C%2Fbutton%3E%0A%3Cnovo-dynamic-form%20layout%3D%22vertical%22%20class%3D%22dynamic%22%20%5Bcontrols%5D%3D%22dynamicVertical%22%20%5B(form)%5D%3D%22dynamicVerticalForm%22%20%23nomyform%3E%0A%20%20%3Cng-template%20novoTemplate%3D%22custom-demo-component%22%20let-control%20let-form%3D%22form%22%3E%0A%20%20%20%20%3Ccustom-demo-control-example%20%5Bcontrol%5D%3D%22control%22%20%5Bform%5D%3D%22form%22%3E%3C%2Fcustom-demo-control-example%3E%0A%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-dynamic-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValid%3A%20%7B%7Bnomyform.isValid%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EValues%3A%20%7B%7Bnomyform.values%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EUpdated%20Values%3A%20%7B%7Bnomyform.updatedValues()%20%7C%20json%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'basic-multi-picker': {\n        title: 'Basic Multi Picker Example',\n        component: BasicMultiPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20ChecklistPickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Multi%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-multi-picker-example'%2C%0A%20%20templateUrl%3A%20'basic-multi-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-multi-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicMultiPickerExample%20%7B%0A%20%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20value%3A%20any%20%3D%20%7B%20states%3A%20%5B'Alabama'%5D%2C%20collaborators%3A%20%5B1%2C%202%2C%203%2C%204%5D%20%7D%3B%0A%20%20types%3A%20any%20%3D%20%5B%7B%20value%3A%20'states'%2C%20singular%3A%20'state'%20%7D%2C%20%7B%20value%3A%20'collaborators'%2C%20singular%3A%20'collaborator'%20%7D%5D%3B%0A%20%20staticDemo%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20states%20%3D%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.staticDemo%20%3D%20%7B%0A%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%20type%3A%20'collaborators'%2C%20data%3A%20collaborators%2C%20format%3A%20'%24firstName%20%24lastName'%2C%20field%3A%20'id'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20type%3A%20'states'%2C%20data%3A%20states%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20ChecklistPickerResults%2C%0A%20%20%20%20%20%20selectAllOption%3A%20true%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(%24event%3F%3A%20Event)%20%7B%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20States%3A%20%3Cspan%20*ngFor%3D%22let%20item%20of%20value.states%22%3E%7B%7Bitem%7D%7D%20%3C%2Fspan%3E%0A%20%20%20%20Selected%20Collaborators%3A%20%3Cspan%20*ngFor%3D%22let%20item%20of%20value.collaborators%22%3E%7B%7Bitem%7D%7D%20%3C%2Fspan%3E%3C%2Fdiv%3E%0A%3Cmulti-picker%0A%20%20%20%20%5Bsource%5D%3D%22staticDemo%22%0A%20%20%20%20%5Bplaceholder%5D%3D%22placeholder%22%0A%20%20%20%20%5Btypes%5D%3D%22types%22%0A%20%20%20%20%5B(ngModel)%5D%3D%22value%22%0A%20%20%20%20(changed)%3D%22onChanged(%24event)%22%3E%0A%3C%2Fmulti-picker%3E%0A`\n    },\n    'nested-multi-picker': {\n        title: 'Nested Multi Picker Example',\n        component: NestedMultiPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20ChecklistPickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Nested%20Multi%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'nested-multi-picker-example'%2C%0A%20%20templateUrl%3A%20'nested-multi-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'nested-multi-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20NestedMultiPickerExample%20%7B%0A%20%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20parentChild%3A%20any%3B%0A%20%20parentChildTypes%3A%20any%3B%0A%20%20formatted%3A%20any%3B%0A%20%20parentChildValue%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20departments%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Sales'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Engineering'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Marketing'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Finance'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%205%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Nobody%20Works%20Here'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20const%20users%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B1%2C%202%2C%204%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Bob%20Sales%2FEngineering%2FFin'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B4%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Beth%20Fin'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B2%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Artemis%20Eng'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B1%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Andy%20Sales'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%205%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B3%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Zoe%20Marketing'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%206%2C%0A%20%20%20%20%20%20%20%20departments%3A%20%5B4%2C%202%5D%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Ziva%20Eng%20Fin'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.parentChild%20%3D%20%7B%0A%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%20type%3A%20'departments'%2C%20data%3A%20departments%2C%20format%3A%20'%24name'%2C%20field%3A%20'id'%2C%20isParentOf%3A%20'users'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20type%3A%20'users'%2C%20data%3A%20users%2C%20format%3A%20'%24name'%2C%20field%3A%20'id'%2C%20isChildOf%3A%20'departments'%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20ChecklistPickerResults%2C%0A%20%20%20%20%20%20selectAllOption%3A%20false%2C%0A%20%20%20%20%20%20strictRelationship%3A%20false%2C%0A%20%20%20%20%20%20chipsCount%3A%206%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.parentChildTypes%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20value%3A%20'departments'%2C%20isParentOf%3A%20true%2C%20singular%3A%20'department'%20%7D%2C%0A%20%20%20%20%20%20%7B%20value%3A%20'users'%2C%20isChildOf%3A%20true%2C%20singular%3A%20'user'%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.parentChildValue%20%3D%20%7B%20departments%3A%20%5B2%2C%203%2C%204%5D%2C%20users%3A%20%5B4%2C%205%5D%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event%3F%3A%20Event)%20%7B%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Departments%3A%20%3Cspan%20*ngFor%3D%22let%20item%20of%20parentChildValue.departments%22%3E%7B%7Bitem%7D%7D%20%3C%2Fspan%3E%0A%20%20%20%20Selected%20Users%3A%20%3Cspan%20*ngFor%3D%22let%20item%20of%20parentChildValue.users%22%3E%7B%7Bitem%7D%7D%20%3C%2Fspan%3E%3C%2Fdiv%3E%0A%3Cmulti-picker%0A%20%20%20%20%5Bsource%5D%3D%22parentChild%22%0A%20%20%20%20%5Bplaceholder%5D%3D%22placeholder%22%0A%20%20%20%20%5Btypes%5D%3D%22parentChildTypes%22%0A%20%20%20%20%5B(ngModel)%5D%3D%22parentChildValue%22%0A%20%20%20%20(changed)%3D%22onChanged(%24event)%22%3E%0A%3C%2Fmulti-picker%3E%0A`\n    },\n    'async-picker': {\n        title: 'Async Picker Example',\n        component: AsyncPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Async%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'async-picker-example'%2C%0A%20%20templateUrl%3A%20'async-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'async-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AsyncPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20value%3A%20string%3B%0A%20%20public%20async%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20this.value%20%3D%20null%3B%0A%20%20%20%20this.async%20%3D%20%7B%0A%20%20%20%20%20%20enableInfiniteScroll%3A%20true%2C%0A%20%20%20%20%20%20options%3A%20(term%2C%20page)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20const%20arr%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%2020%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20arr.push(%7B%20value%3A%20%60Page%3A%20%24%7Bpage%7D%20-%20Item%3A%20%24%7Bi%20%2B%201%7D%60%2C%20label%3A%20%60Page%3A%20%24%7Bpage%7D%20-%20Item%3A%20%24%7Bi%20%2B%201%7D%60%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(arr)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%201000)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22async%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'basic-picker': {\n        title: 'Basic Picker Example',\n        component: BasicPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-picker-example'%2C%0A%20%20templateUrl%3A%20'basic-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20staticDemo%3A%20any%20%3D%20%7B%0A%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%20%20public%20value%3A%20string%3B%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22staticDemo%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'custom-picker-results': {\n        title: 'Custom Picker Results Example',\n        component: CustomPickerResultsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20PickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'custom-picker-results'%2C%0A%20%20host%3A%20%7B%0A%20%20%20%20class%3A%20'active%20picker-results'%2C%0A%20%20%7D%2C%0A%20%20template%3A%20%60%0A%20%20%20%20%3Cnovo-loading%20theme%3D%22line%22%20*ngIf%3D%22isLoading%20%26%26%20!matches.length%22%3E%3C%2Fnovo-loading%3E%0A%20%20%20%20%3Cnovo-list%20*ngIf%3D%22matches.length%20%3E%200%22%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%3Cnovo-list-item%0A%20%20%20%20%20%20%20%20*ngFor%3D%22let%20match%20of%20matches%22%0A%20%20%20%20%20%20%20%20(click)%3D%22selectMatch(%24event)%22%0A%20%20%20%20%20%20%20%20%5Bclass.active%5D%3D%22match%20%3D%3D%3D%20activeMatch%22%0A%20%20%20%20%20%20%20%20(mouseenter)%3D%22selectActive(match)%22%3E%0A%20%20%20%20%20%20%20%20%3Citem-content%3E%0A%20%20%20%20%20%20%20%20%20%20**CUSTOM**%20%3Cb%20%5BinnerHtml%5D%3D%22highlight(match.label%2C%20term)%22%3E%3C%2Fb%3E%0A%20%20%20%20%20%20%20%20%3C%2Fitem-content%3E%0A%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%3C%2Fnovo-list%3E%0A%20%20%20%20%3Cp%20class%3D%22picker-error%22%20*ngIf%3D%22hasError%22%3EOops!%20An%20error%20occured.%3C%2Fp%3E%0A%20%20%20%20%3Cp%20class%3D%22picker-null%22%20*ngIf%3D%22!isLoading%20%26%26%20!matches.length%20%26%26%20!hasError%22%3ENo%20results%20to%20display...%3C%2Fp%3E%0A%20%20%60%2C%0A%7D)%0Aexport%20class%20CustomPickerResults%20extends%20PickerResults%20%7B%7D%0A%0A%2F**%0A%20*%20%40title%20Custom%20Picker%20Results%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-picker-results-example'%2C%0A%20%20templateUrl%3A%20'custom-picker-results-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-picker-results-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomPickerResultsExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20custom%3A%20any%3B%0A%20%20public%20value%3A%20string%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.custom%20%3D%20%7B%0A%20%20%20%20%20%20resultsTemplate%3A%20CustomPickerResults%2C%0A%20%20%20%20%20%20format%3A%20'%24firstName%20%24lastName'%2C%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20this.value%20%3D%20null%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22custom%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-picker%3E%0A`,\n        selectorName: 'CustomPickerResultsExample, CustomPickerResults'\n    },\n    'default-options-picker': {\n        title: 'Default Options Picker Example',\n        component: DefaultOptionsPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Default%20Options%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'default-options-picker-example'%2C%0A%20%20templateUrl%3A%20'default-options-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'default-options-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DefaultOptionsPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20defaultArrayConfig%3A%20any%3B%0A%20%20public%20defaultFunctionConfig%3A%20any%3B%0A%20%20public%20defaultArrayValue%3A%20string%3B%0A%20%20public%20defaultFunctionValue%3A%20string%3B%0A%20%20public%20value%3A%20string%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20states%20%3D%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.defaultArrayConfig%20%3D%20%7B%0A%20%20%20%20%20%20defaultOptions%3A%20%5Bstates%5B0%5D%2C%20states%5B1%5D%5D%2C%0A%20%20%20%20%20%20minSearchLength%3A%202%2C%0A%20%20%20%20%20%20options%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(states)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.defaultFunctionConfig%20%3D%20%7B%0A%20%20%20%20%20%20minSearchLength%3A%202%2C%0A%20%20%20%20%20%20defaultOptions%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20%5Bstates%5B2%5D%2C%20states%5B3%5D%5D%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20options%3A%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(states)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20300)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7BdefaultArrayValue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22defaultArrayConfig%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22defaultArrayValue%22%3E%3C%2Fnovo-picker%3E%0A%3Cbr%2F%3E%3Cbr%2F%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7BdefaultFunctionValue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22defaultFunctionConfig%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22defaultFunctionValue%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'entity-picker': {\n        title: 'Entity Picker Example',\n        component: EntityPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Entity%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'entity-picker-example'%2C%0A%20%20templateUrl%3A%20'entity-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'entity-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20EntityPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20entityDemo%3A%20any%3B%0A%20%20public%20entity%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.entityDemo%20%3D%20%7B%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%20%20format%3A%20'%24firstName%20%24lastName'%2C%0A%20%20%20%20%20%20entityIcon%3A%20'person'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bentity%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22entityDemo%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22entity%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'formatted-picker': {\n        title: 'Formatted Picker Example',\n        component: FormattedPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Formatted%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'formatted-picker-example'%2C%0A%20%20templateUrl%3A%20'formatted-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'formatted-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FormattedPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20formatted%3A%20any%3B%0A%20%20public%20value%3A%20string%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20collaborators%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Brian'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Kimball'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Josh'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Godi'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Alec'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sibilia'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%204%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Kameron'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Sween'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.formatted%20%3D%20%7B%0A%20%20%20%20%20%20field%3A%20'id'%2C%0A%20%20%20%20%20%20format%3A%20%60%24firstName%20%24lastName%60%2C%0A%20%20%20%20%20%20options%3A%20collaborators%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7Bvalue%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22formatted%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'grouped-picker': {\n        title: 'Grouped Picker Example',\n        component: GroupedPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20GroupedMultiPickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Grouped%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'grouped-picker-example'%2C%0A%20%20templateUrl%3A%20'grouped-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'grouped-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20GroupedPickerExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20groupedPicker1%3A%20any%3B%0A%20%20public%20groupedPicker2%3A%20any%3B%0A%20%20public%20groupedPicker3%3A%20any%3B%0A%20%20public%20groupedPicker4%3A%20any%3B%0A%20%20public%20groupedPicker1Value%3A%20any%3B%0A%20%20public%20groupedPicker2Value%3A%20any%3B%0A%20%20public%20groupedPicker3Value%3A%20any%3B%0A%20%20public%20groupedPicker4Value%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20this.setupGroupedPickerDemo()%3B%0A%20%20%7D%0A%0A%20%20setupGroupedPickerDemo()%20%7B%0A%20%20%20%20const%20categoryMap%20%3D%20new%20Map%3Cstring%2C%20%7B%20value%3A%20string%3B%20label%3A%20string%3B%20items%3A%20%7B%20value%3A%20string%3B%20label%3A%20string%20%7D%5B%5D%20%7D%3E()%3B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20items%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%2010%3B%20j%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20items.push(%7B%20value%3A%20%60%24%7Bi%7D-%24%7Bj%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%20-%20Item%20%24%7Bj%7D%60%20%7D)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20categoryMap.set(%60%24%7Bi%7D%60%2C%20%7B%20value%3A%20%60%24%7Bi%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%60%2C%20items%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20const%20filterCategoryMap%20%3D%20new%20Map%3Cstring%2C%20%7B%20value%3A%20string%3B%20label%3A%20string%3B%20items%3A%20%7B%20value%3A%20string%3B%20label%3A%20string%3B%20data%3A%20any%20%7D%5B%5D%20%7D%3E()%3B%0A%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20const%20items%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%2010%3B%20j%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20const%20filter%20%3D%20Math.random()%20%3E%3D%200.5%3B%0A%20%20%20%20%20%20%20%20items.push(%7B%20value%3A%20%60%24%7Bi%7D-%24%7Bj%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%20-%20Item%20%24%7Bj%7D%20-%20Data%20-%20%24%7Bfilter%7D%60%2C%20data%3A%20%7B%20filter%20%7D%20%7D)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20filterCategoryMap.set(%60%24%7Bi%7D%60%2C%20%7B%20value%3A%20%60%24%7Bi%7D%60%2C%20label%3A%20%60Category%20%24%7Bi%7D%60%2C%20items%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.groupedPicker1%20%3D%20%7B%0A%20%20%20%20%20%20categoryMap%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%20%20displayAll%3A%20true%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.groupedPicker2%20%3D%20%7B%0A%20%20%20%20%20%20categoryMap%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.groupedPicker3%20%3D%20%7B%0A%20%20%20%20%20%20categories%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C1'%2C%20label%3A%20'Category%201'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C2'%2C%20label%3A%20'Category%202'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C3'%2C%20label%3A%20'Category%203'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C4'%2C%20label%3A%20'Category%204'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20value%3A%20'C5'%2C%20label%3A%20'Category%205'%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20getItemsForCategoryAsync%3A%20(category%2C%20customFilter)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Promise((resolve)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resolve(%5B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A1'%2C%20label%3A%20'Async%201'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A2'%2C%20label%3A%20'Async%202'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A3'%2C%20label%3A%20'Async%203'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A4'%2C%20label%3A%20'Async%204'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%20value%3A%20'A5'%2C%20label%3A%20'Async%205'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%201000)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%7D%3B%0A%20%20%20%20this.groupedPicker4%20%3D%20%7B%0A%20%20%20%20%20%20entityIcon%3A%20'company'%2C%0A%20%20%20%20%20%20categoryMap%3A%20filterCategoryMap%2C%0A%20%20%20%20%20%20displayAll%3A%20true%2C%0A%20%20%20%20%20%20placeholder%3A%20'Filter%20things...'%2C%0A%20%20%20%20%20%20customFilter%3A%20%7B%0A%20%20%20%20%20%20%20%20matchFunction%3A%20(item%2C%20value)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(value)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20item.data.filter%20%3D%3D%3D%20value%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20return%20true%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20defaultFilterValue%3A%20false%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Custom%20Filter!'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20resultsTemplate%3A%20GroupedMultiPickerResults%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Ch6%3EBasic%20Static%20Example%3C%2Fh6%3E%0A%3Cp%3EFully%20static%20data%2C%20optional%20%22all%22%20category%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedPicker1Value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22groupedPicker1%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedPicker1Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-picker%3E%0A%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%0A%3Ch6%3ECustom%20Static%20Example%3C%2Fh6%3E%0A%3Cp%3EFully%20static%20data%2C%20all%20category%20turned%20off%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedPicker2Value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22groupedPicker2%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedPicker2Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-picker%3E%0A%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%0A%3Ch6%3EBasic%20Async%20Example%3C%2Fh6%3E%0A%3Cp%3ECategory%20list%20is%20static%20(always%20has%20to%20be)%20with%20the%20items%20fetched%20via%20async%20call%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedPicker3Value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22groupedPicker3%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedPicker3Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-picker%3E%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%0A%3Ch6%3EAsync%20Example%20w%2F%20Custom%20Filter%3C%2Fh6%3E%0A%3Cp%3EYou%20can%20also%20have%20a%20custom%20filter%2C%20limited%20to%20just%20a%20switch%3C%2Fp%3E%0A%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20groupedPicker4Value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22groupedPicker4%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22groupedPicker4Value%22%20(changed)%3D%22onChanged(%24event)%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'override-template': {\n        title: 'Override Template Example',\n        component: OverrideTemplateExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Override%20Template%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'override-template-example'%2C%0A%20%20templateUrl%3A%20'override-template-example.html'%2C%0A%20%20styleUrls%3A%20%5B'override-template-example.css'%5D%2C%0A%7D)%0Aexport%20class%20OverrideTemplateExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20overrideValue%3A%20any%3B%0A%20%20public%20overrideDemo%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20states%20%3D%20%5B%0A%20%20%20%20%20%20'Alabama'%2C%0A%20%20%20%20%20%20'Alaska'%2C%0A%20%20%20%20%20%20'Arizona'%2C%0A%20%20%20%20%20%20'Arkansas'%2C%0A%20%20%20%20%20%20'California'%2C%0A%20%20%20%20%20%20'Colorado'%2C%0A%20%20%20%20%20%20'Connecticut'%2C%0A%20%20%20%20%20%20'Delaware'%2C%0A%20%20%20%20%20%20'Florida'%2C%0A%20%20%20%20%20%20'Georgia'%2C%0A%20%20%20%20%20%20'Hawaii'%2C%0A%20%20%20%20%20%20'Idaho'%2C%0A%20%20%20%20%20%20'Illinois'%2C%0A%20%20%20%20%20%20'Indiana'%2C%0A%20%20%20%20%20%20'Iowa'%2C%0A%20%20%20%20%20%20'Kansas'%2C%0A%20%20%20%20%20%20'Kentucky'%2C%0A%20%20%20%20%20%20'Louisiana'%2C%0A%20%20%20%20%20%20'Maine'%2C%0A%20%20%20%20%20%20'Maryland'%2C%0A%20%20%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20%20%20'Michigan'%2C%0A%20%20%20%20%20%20'Minnesota'%2C%0A%20%20%20%20%20%20'Mississippi'%2C%0A%20%20%20%20%20%20'Missouri'%2C%0A%20%20%20%20%20%20'Montana'%2C%0A%20%20%20%20%20%20'Nebraska'%2C%0A%20%20%20%20%20%20'Nevada'%2C%0A%20%20%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20%20%20'New%20York'%2C%0A%20%20%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20%20%20'Ohio'%2C%0A%20%20%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20%20%20'Oregon'%2C%0A%20%20%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20%20%20'Tennessee'%2C%0A%20%20%20%20%20%20'Texas'%2C%0A%20%20%20%20%20%20'Utah'%2C%0A%20%20%20%20%20%20'Vermont'%2C%0A%20%20%20%20%20%20'Virginia'%2C%0A%20%20%20%20%20%20'Washington'%2C%0A%20%20%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20%20%20'Wyoming'%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.overrideDemo%20%3D%20%7B%0A%20%20%20%20%20%20options%3A%20states%2C%0A%20%20%20%20%20%20overrideTemplate%3A%20'%3Ch1%3E%7B%7B%20match%20%7C%20json%20%7D%7D%3C%2Fh1%3E'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20onChanged(event)%20%7B%0A%20%20%20%20console.log('EVENT'%2C%20event)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22selected-value%22%3ESelected%20Value%3A%20%7B%7B%20overrideValue%20%7D%7D%3C%2Fdiv%3E%0A%3Cnovo-picker%20%5Bconfig%5D%3D%22overrideDemo%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22overrideValue%22%3E%3C%2Fnovo-picker%3E%0A`\n    },\n    'basic-radio': {\n        title: 'Basic Radio Button Usage',\n        component: BasicRadioExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Radio%20Button%20Usage%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-radio-example'%2C%0A%20%20templateUrl%3A%20'basic-radio-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-radio-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicRadioExample%20%7B%0A%20%20onChange(change%3A%20Event)%3A%20void%20%7B%0A%20%20%20%20console.log('Radio%20Change%3A'%2C%20change)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-radio%20%5Bchecked%5D%3D%22false%22%20name%3D%22basic%22%20value%3D%22one%22%20(change)%3D%22onChange(%24event)%22%3EMake%20me%20anything!%3C%2Fnovo-radio%3E%0A%3Cnovo-radio%20%5Bchecked%5D%3D%22true%22%20name%3D%22basic%22%20value%3D%22two%22%20(change)%3D%22onChange(%24event)%22%3EI%20get%20transcluded%20in!%3C%2Fnovo-radio%3E%0A%3Cnovo-radio%20%5Bchecked%5D%3D%22false%22%20name%3D%22basic%22%20value%3D%22three%22%20(change)%3D%22onChange(%24event)%22%3EREALLY!%3C%2Fnovo-radio%3E%0A`\n    },\n    'button-radio': {\n        title: 'Radio Button with Buttons',\n        component: ButtonRadioExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Radio%20Button%20with%20Buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'button-radio-example'%2C%0A%20%20templateUrl%3A%20'button-radio-example.html'%2C%0A%20%20styleUrls%3A%20%5B'button-radio-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonRadioExample%20%7B%0A%20%20onChange(change%3A%20Event)%3A%20void%20%7B%0A%20%20%20%20console.log('Radio%20Change%3A'%2C%20change)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-radio-group%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20%5Bchecked%5D%3D%22false%22%20name%3D%22button%22%20value%3D%22one%22%20(change)%3D%22onChange(%24event)%22%20label%3D%22One%22%3E%3C%2Fnovo-radio%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20%5Bchecked%5D%3D%22true%22%20name%3D%22button%22%20value%3D%22two%22%20(change)%3D%22onChange(%24event)%22%20label%3D%22Two%22%3E%3C%2Fnovo-radio%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20%5Bchecked%5D%3D%22false%22%20name%3D%22button%22%20value%3D%22three%22%20(change)%3D%22onChange(%24event)%22%20label%3D%22Three%22%3E%3C%2Fnovo-radio%3E%0A%3C%2Fnovo-radio-group%3E%0A`\n    },\n    'icon-radio': {\n        title: 'Radio Buttons with Icons',\n        component: IconRadioExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Radio%20Buttons%20with%20Icons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'icon-radio-example'%2C%0A%20%20templateUrl%3A%20'icon-radio-example.html'%2C%0A%20%20styleUrls%3A%20%5B'icon-radio-example.css'%5D%2C%0A%7D)%0Aexport%20class%20IconRadioExample%20%7B%0A%20%20onChange(change%3A%20Event)%3A%20void%20%7B%0A%20%20%20%20console.log('Radio%20Change%3A'%2C%20change)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-radio-group%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20theme%3D%22icon%22%20icon%3D%22checkbox-filled%22%20name%3D%22icon%22%20value%3D%22one%22%20(change)%3D%22onChange(%24event)%22%3E%3C%2Fnovo-radio%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20theme%3D%22icon%22%20icon%3D%22checkbox-indeterminate%22%20name%3D%22icon%22%20value%3D%22two%22%20(change)%3D%22onChange(%24event)%22%3E%3C%2Fnovo-radio%3E%0A%20%20%20%20%3Cnovo-radio%20button%3D%22true%22%20theme%3D%22icon%22%20icon%3D%22checkbox-add%22%20name%3D%22icon%22%20value%3D%22three%22%20(change)%3D%22onChange(%24event)%22%3E%3C%2Fnovo-radio%3E%0A%3C%2Fnovo-radio-group%3E%0A`\n    },\n    'vertical-radio': {\n        title: 'Vertical Radio Buttons',\n        component: VerticalRadioExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Vertical%20Radio%20Buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'vertical-radio-example'%2C%0A%20%20templateUrl%3A%20'vertical-radio-example.html'%2C%0A%20%20styleUrls%3A%20%5B'vertical-radio-example.css'%5D%2C%0A%7D)%0Aexport%20class%20VerticalRadioExample%20%7B%0A%20%20onChange(change%3A%20Event)%3A%20void%20%7B%0A%20%20%20%20console.log('Radio%20Change%3A'%2C%20change)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-radio%20vertical%3D%22true%22%20%5Bchecked%5D%3D%22false%22%20name%3D%22vertical%22%20value%3D%22one%22%20(change)%3D%22onChange(%24event)%22%3EMake%20me%20anything!%3C%2Fnovo-radio%3E%0A%3Cnovo-radio%20vertical%3D%22true%22%20%5Bchecked%5D%3D%22true%22%20name%3D%22vertical%22%20value%3D%22two%22%20(change)%3D%22onChange(%24event)%22%3EI%20get%20transcluded%20in!%3C%2Fnovo-radio%3E%0A%3Cnovo-radio%20vertical%3D%22true%22%20%5Bchecked%5D%3D%22false%22%20name%3D%22vertical%22%20value%3D%22three%22%20(change)%3D%22onChange(%24event)%22%3EREALLY!%3C%2Fnovo-radio%3E%0A`\n    },\n    'basic-select': {\n        title: 'Basic Select Example',\n        component: BasicSelectExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Select%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-select-example'%2C%0A%20%20templateUrl%3A%20'basic-select-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-select-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicSelectExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20options%3A%20Array%3Cstring%3E%20%3D%20%5B'Alpha'%2C%20'Bravo'%2C%20'Charlie'%5D%3B%0A%20%20public%20withNumbers%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%20label%3A%20'One'%2C%20value%3A%201%20%7D%2C%0A%20%20%20%20%7B%20label%3A%20'Two'%2C%20value%3A%202%20%7D%2C%0A%20%20%20%20%7B%20label%3A%20'Zero'%2C%20value%3A%200%20%7D%2C%0A%20%20%20%20%7B%20label%3A%20'Four'%2C%20value%3A%204%2C%20readOnly%3A%20true%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20withNumbersValue%3A%20number%20%3D%204%3B%0A%20%20public%20withNumbersObject%3A%20any%20%3D%20%7B%20id%3A%204%2C%20label%3A%20'Four'%20%7D%3B%0A%20%20public%20value%3A%20string%20%3D%20'Bravo'%3B%0A%20%20public%20headerConfig%3A%20any%20%3D%20%7B%0A%20%20%20%20label%3A%20'Add%20New%20Item'%2C%0A%20%20%20%20placeholder%3A%20'Enter%20item%20here'%2C%0A%20%20%20%20onSave%3A%20this.create.bind(this)%2C%0A%20%20%7D%3B%0A%0A%20%20public%20create(opt)%3A%20void%20%7B%0A%20%20%20%20this.options%20%3D%20%5B...this.options%2C%20opt%5D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20border-top-right-radius%3A%203px%3B%0A%20%20border-top-left-radius%3A%203px%3B%0A%20%20display%3A%20flex%3B%0A%20%20flex-direction%3A%20row%3B%0A%20%20flex-shrink%3A%200%3B%0A%20%20flex-grow%3A%200%3B%0A%20%20align-items%3A%20flex-start%3B%0A%20%20flex-wrap%3A%20wrap%3B%0A%20%20transition%3A%20background%20460ms%20ease-in-out%3B%0A%7D%0A%0A%3Ahost%20label%20%7B%0A%20%20margin-bottom%3A%2010px%3B%0A%20%20display%3A%20block%3B%0A%7D%0A%0A%3Ahost%20.caption%20%7B%0A%20%20font-size%3A%200.9em%3B%0A%20%20margin-right%3A%205px%3B%0A%7D%0A`,\n        htmlSource: `%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22caption%22%3ESelected%20Value%3A%3C%2Fspan%3E%20%7B%7Bvalue%7D%7D%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22options%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22caption%22%3ESelected%20Value%3A%3C%2Fspan%3E%20%7B%7BwithNumbersValue%7D%7D%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22withNumbers%22%20%5B(ngModel)%5D%3D%22withNumbersValue%22%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22caption%22%3ESelected%20Value%3A%3C%2Fspan%3E%20%7B%7BwithNumbersObject.label%7D%7D%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22withNumbers%22%20%5B(ngModel)%5D%3D%22withNumbersObject%22%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22caption%22%3EDisabled%20State%3C%2Fspan%3E%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22options%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22value%22%20disabled%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22caption%22%3ENo%20Model%20With%20Header%3C%2Fspan%3E%0A%20%20%20%20%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22options%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5BheaderConfig%5D%3D%22headerConfig%22%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'long-select': {\n        title: 'Long Select Example',\n        component: LongSelectExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Long%20Select%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'long-select-example'%2C%0A%20%20templateUrl%3A%20'long-select-example.html'%2C%0A%20%20styleUrls%3A%20%5B'long-select-example.css'%5D%2C%0A%7D)%0Aexport%20class%20LongSelectExample%20%7B%0A%20%20public%20placeholder%3A%20string%20%3D%20'Select...'%3B%0A%20%20public%20states%3A%20Array%3Cstring%3E%20%3D%20%5B%0A%20%20%20%20'Alabama'%2C%0A%20%20%20%20'Alaska'%2C%0A%20%20%20%20'Arizona'%2C%0A%20%20%20%20'Arkansas'%2C%0A%20%20%20%20'California'%2C%0A%20%20%20%20'Colorado'%2C%0A%20%20%20%20'Connecticut'%2C%0A%20%20%20%20'Delaware'%2C%0A%20%20%20%20'Florida'%2C%0A%20%20%20%20'Georgia'%2C%0A%20%20%20%20'Hawaii'%2C%0A%20%20%20%20'Idaho'%2C%0A%20%20%20%20'Illinois'%2C%0A%20%20%20%20'Indiana'%2C%0A%20%20%20%20'Iowa'%2C%0A%20%20%20%20'Kansas'%2C%0A%20%20%20%20'Kentucky'%2C%0A%20%20%20%20'Louisiana'%2C%0A%20%20%20%20'Maine'%2C%0A%20%20%20%20'Maryland'%2C%0A%20%20%20%20'Massachusetts'%2C%0A%20%20%20%20'Michigan'%2C%0A%20%20%20%20'Minnesota'%2C%0A%20%20%20%20'Mississippi'%2C%0A%20%20%20%20'Missouri'%2C%0A%20%20%20%20'Montana'%2C%0A%20%20%20%20'Nebraska'%2C%0A%20%20%20%20'Nevada'%2C%0A%20%20%20%20'New%20Hampshire'%2C%0A%20%20%20%20'New%20Jersey'%2C%0A%20%20%20%20'New%20Mexico'%2C%0A%20%20%20%20'New%20York'%2C%0A%20%20%20%20'North%20Dakota'%2C%0A%20%20%20%20'North%20Carolina'%2C%0A%20%20%20%20'Ohio'%2C%0A%20%20%20%20'Oklahoma'%2C%0A%20%20%20%20'Oregon'%2C%0A%20%20%20%20'Pennsylvania'%2C%0A%20%20%20%20'Rhode%20Island'%2C%0A%20%20%20%20'South%20Carolina'%2C%0A%20%20%20%20'South%20Dakota'%2C%0A%20%20%20%20'Tennessee'%2C%0A%20%20%20%20'Texas'%2C%0A%20%20%20%20'Utah'%2C%0A%20%20%20%20'Vermont'%2C%0A%20%20%20%20'Virginia'%2C%0A%20%20%20%20'Washington'%2C%0A%20%20%20%20'West%20Virginia'%2C%0A%20%20%20%20'Wisconsin'%2C%0A%20%20%20%20'Wyoming'%2C%0A%20%20%5D%3B%0A%20%20public%20state%3A%20any%20%3D%20'Missouri'%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%3E%0A%20%20%20%20%3Clabel%3E%3Cspan%20class%3D%22caption%22%3ESelected%20Value%3A%3C%2Fspan%3E%7B%7Bstate%7D%7D%3C%2Flabel%3E%0A%20%20%20%20%3Cnovo-select%20%5Boptions%5D%3D%22states%22%20%5Bplaceholder%5D%3D%22placeholder%22%20%5B(ngModel)%5D%3D%22state%22%3E%3C%2Fnovo-select%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'tiles-usage': {\n        title: 'Tiles Usage Example',\n        component: TilesUsageExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tiles%20Usage%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tiles-usage-example'%2C%0A%20%20templateUrl%3A%20'tiles-usage-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tiles-usage-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TilesUsageExample%20%7B%0A%20%20public%20shown%3A%20boolean%20%3D%20false%3B%0A%20%20public%20demoTiles%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Red'%2C%0A%20%20%20%20%20%20value%3A%20'red'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Green'%2C%0A%20%20%20%20%20%20value%3A%20'green'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'Disabled'%2C%0A%20%20%20%20%20%20value%3A%20'disabled'%2C%0A%20%20%20%20%20%20disabled%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20currentColor%3A%20string%3B%0A%20%20public%20value%3A%20string%20%3D%20'red'%3B%0A%0A%20%20colorSelect(newColorValue)%20%7B%0A%20%20%20%20this.currentColor%20%3D%20newColorValue%3B%0A%20%20%7D%0A%0A%20%20disabledClicked(tile)%20%7B%0A%20%20%20%20console.log('Disabled%20tile%20clicked%3A%20'%2C%20tile)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20selectedClicked(tile)%20%7B%0A%20%20%20%20console.log('Selected%20tile%20clicked%3A%20'%2C%20tile)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20toggleShown()%20%7B%0A%20%20%20%20this.shown%20%3D%20!this.shown%3B%0A%20%20%7D%0A%0A%20%20addTile()%20%7B%0A%20%20%20%20this.demoTiles.push(%7B%0A%20%20%20%20%20%20label%3A%20'Blue'%2C%0A%20%20%20%20%20%20value%3A%20'blue'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.demoTiles%20%3D%20%5B...this.demoTiles%5D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-tiles%20%5Boptions%5D%3D%22demoTiles%22%20(onChange)%3D%22colorSelect(%24event)%22%20%5B(ngModel)%5D%3D%22value%22%0A%20%20%20%20%20%20%20%20%20%20%20%20(onDisabledOptionClick)%3D%22disabledClicked(%24event)%22%0A%20%20%20%20%20%20%20%20%20%20%20%20(onSelectedOptionClick)%3D%22selectedClicked(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%3Chr%3E%0A%3Cbutton%20theme%3D%22primary%22%20type%3D%22button%22%20name%3D%22button%22%20(click)%3D%22toggleShown()%22%3EShow%20Tiles%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22primary%22%20type%3D%22button%22%20name%3D%22button%22%20(click)%3D%22addTile()%22%3EAdd%20Tile%3C%2Fbutton%3E%0A%3Cbr%2F%3E%0A%3Cbr%2F%3E%0A%3Cnovo-tiles%20*ngIf%3D%22shown%22%20%5Boptions%5D%3D%22demoTiles%22%20(onChange)%3D%22colorSelect(%24event)%22%20%5B(ngModel)%5D%3D%22value%22%3E%3C%2Fnovo-tiles%3E%0A%0AYou%20have%20picked%20(output)%3A%20%3Cstrong%3E%7B%7B%20currentColor%20%7C%7C%20'No%20selection'%20%7D%7D%3C%2Fstrong%3E%0AYou%20have%20picked%20(ngModel)%3A%20%3Cstrong%3E%7B%7B%20value%20%7C%7C%20'No%20selection'%20%7D%7D%3C%2Fstrong%3E%0A`\n    },\n    'address-value': {\n        title: 'Address Value Example',\n        component: AddressValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Address%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'address-value-example'%2C%0A%20%20templateUrl%3A%20'address-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'address-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AddressValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20address1%3A%20'100%20Summer%20Street'%2C%0A%20%20%20%20city%3A%20'Boston'%2C%0A%20%20%20%20state%3A%20'MA'%2C%0A%20%20%20%20zip%3A%20'02143'%2C%0A%20%20%20%20country%3A%20%7B%0A%20%20%20%20%20%20name%3A%20'United%20States'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20dataType%3A%20'Address'%2C%0A%20%20%20%20type%3A%20'Address'%2C%0A%20%20%20%20label%3A%20'Address'%2C%0A%20%20%20%20name%3A%20'address'%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'associated-value': {\n        title: 'Associated Value Example',\n        component: AssociatedValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Associated%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'associated-value-example'%2C%0A%20%20templateUrl%3A%20'associated-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'associated-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AssociatedValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20id%3A%201%2C%0A%20%20%20%20firstName%3A%20'Alice'%2C%0A%20%20%20%20lastName%3A%20'Wonderland'%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'TO_ONE'%2C%0A%20%20%20%20name%3A%20'owner'%2C%0A%20%20%20%20label%3A%20'Owner'%2C%0A%20%20%20%20associatedEntity%3A%20%7B%0A%20%20%20%20%20%20entity%3A%20'CorporateUser'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'basic-value': {\n        title: 'Basic Value Example',\n        component: BasicValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-value-example'%2C%0A%20%20templateUrl%3A%20'basic-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.MOBILE%3B%0A%20%20public%20data%3A%20any%20%3D%201234567890%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'SCALAR'%2C%0A%20%20%20%20name%3A%20'phone1'%2C%0A%20%20%20%20label%3A%20'PH%20%23'%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'category-value': {\n        title: 'Category Value Example',\n        component: CategoryValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Category%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'category-value-example'%2C%0A%20%20templateUrl%3A%20'category-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'category-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CategoryValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20value%3A%20'stuff'%2C%0A%20%20%20%20label%3A%20'Stuff%20Category'%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'TO_ONE'%2C%0A%20%20%20%20name%3A%20'category'%2C%0A%20%20%20%20label%3A%20'Category'%2C%0A%20%20%20%20associatedEntity%3A%20%7B%0A%20%20%20%20%20%20entity%3A%20'Category'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'corporate-user-value': {\n        title: 'Corporate User Value Example',\n        component: CorporateUserValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Corporate%20User%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'corporate-user-value-example'%2C%0A%20%20templateUrl%3A%20'corporate-user-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'corporate-user-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CorporateUserValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20id%3A%20123%2C%0A%20%20%20%20firstName%3A%20'Jack'%2C%0A%20%20%20%20lastName%3A%20'White'%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'TO_ONE'%2C%0A%20%20%20%20name%3A%20'user'%2C%0A%20%20%20%20label%3A%20'Internal%20User'%2C%0A%20%20%20%20associatedEntity%3A%20%7B%0A%20%20%20%20%20%20entity%3A%20'CorporateUser'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'date-time-value': {\n        title: 'Date Time Value Example',\n        component: DateTimeValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Date%20Time%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-time-value-example'%2C%0A%20%20templateUrl%3A%20'date-time-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-time-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DateTimeValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20new%20Date().getTime()%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'SCALAR'%2C%0A%20%20%20%20dataSpecialization%3A%20'DATETIME'%2C%0A%20%20%20%20label%3A%20'Date'%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'entity-list-value': {\n        title: 'Entity List Value Example',\n        component: EntityListValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Entity%20List%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'entity-list-value-example'%2C%0A%20%20templateUrl%3A%20'entity-list-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'entity-list-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20EntityListValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20data%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%201%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'George'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Washington'%2C%0A%20%20%20%20%20%20%20%20personSubtype%3A%20'Candidate'%2C%0A%20%20%20%20%20%20%20%20openLink%3A%20(data)%20%3D%3E%20%7B%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%202%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'John'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Adams'%2C%0A%20%20%20%20%20%20%20%20personSubtype%3A%20'ClientContact'%2C%0A%20%20%20%20%20%20%20%20openLink%3A%20(data)%20%3D%3E%20%7B%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20id%3A%203%2C%0A%20%20%20%20%20%20%20%20firstName%3A%20'Abraham'%2C%0A%20%20%20%20%20%20%20%20lastName%3A%20'Lincoln'%2C%0A%20%20%20%20%20%20%20%20personSubtype%3A%20'Lead'%2C%0A%20%20%20%20%20%20%20%20openLink%3A%20(data)%20%3D%3E%20%7B%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'TO_MANY'%2C%0A%20%20%20%20name%3A%20'guests'%2C%0A%20%20%20%20label%3A%20'Attendees'%2C%0A%20%20%20%20associatedEntity%3A%20%7B%0A%20%20%20%20%20%20entity%3A%20'CorporateUser'%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'external-link-value': {\n        title: 'Value with Extenal Links Example',\n        component: ExternalLinkValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Value%20with%20Extenal%20Links%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'external-link-value-example'%2C%0A%20%20templateUrl%3A%20'external-link-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'external-link-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ExternalLinkValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.MOBILE%3B%0A%20%20public%20data%3A%20any%20%3D%20'www.bullhorn.com'%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'SCALAR'%2C%0A%20%20%20%20name%3A%20'companyUrl'%2C%0A%20%20%20%20label%3A%20'Company%20URL'%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'formatter-value': {\n        title: 'Formatter Value Example',\n        component: FormatterValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Formatter%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'formatter-value-example'%2C%0A%20%20templateUrl%3A%20'formatter-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'formatter-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FormatterValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%7B%0A%20%20%20%20id%3A%20123%2C%0A%20%20%7D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'SCALAR'%2C%0A%20%20%20%20name%3A%20'Placement'%2C%0A%20%20%20%20label%3A%20'Placement'%2C%0A%20%20%20%20associatedEntity%3A%20%7B%0A%20%20%20%20%20%20entity%3A%20'Placement'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20showEntityIcon%3A%20true%2C%0A%20%20%20%20entityIconClass%3A%20'candidate'%2C%0A%20%20%20%20formatter%3A%20(value%2C%20args)%20%3D%3E%20%7B%0A%20%20%20%20%20%20return%20%60%24%7Bargs.label%7D%20%23%24%7B(value%20%26%26%20value.id)%20%7C%7C%20''%7D%60%3B%0A%20%20%20%20%7D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'icon-value': {\n        title: 'Icon Value Example',\n        component: IconValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Icon%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'icon-value-example'%2C%0A%20%20templateUrl%3A%20'icon-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'icon-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20IconValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20'Approved'%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20type%3A%20'SCALAR'%2C%0A%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20value%3A%20'Approved'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Approved'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%20%20name%3A%20'status'%2C%0A%20%20%20%20label%3A%20'Status'%2C%0A%20%20%20%20icons%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20iconCls%3A%20'next'%2C%0A%20%20%20%20%20%20%20%20onIconClick%3A%20(data%2C%20meta)%20%3D%3E%20window.alert('hey%20there')%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20iconCls%3A%20'close'%2C%0A%20%20%20%20%20%20%20%20onIconClick%3A%20(data%2C%20meta)%20%3D%3E%20window.alert('hey%20there')%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'multi-option-value': {\n        title: 'Multi Option Value Example',\n        component: MultiOptionValueExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NOVO_VALUE_THEME%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Multi%20Option%20Value%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'multi-option-value-example'%2C%0A%20%20templateUrl%3A%20'multi-option-value-example.html'%2C%0A%20%20styleUrls%3A%20%5B'multi-option-value-example.css'%5D%2C%0A%7D)%0Aexport%20class%20MultiOptionValueExample%20%7B%0A%20%20public%20theme%20%3D%20NOVO_VALUE_THEME.DEFAULT%3B%0A%20%20public%20data%3A%20any%20%3D%20%5B'1'%2C%20'3'%5D%3B%0A%20%20public%20meta%3A%20any%20%3D%20%7B%0A%20%20%20%20name%3A%20'status'%2C%0A%20%20%20%20label%3A%20'Status'%2C%0A%20%20%20%20inputType%3A%20'SELECT'%2C%0A%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%7B%20label%3A%20'New%20Lead'%2C%20value%3A%20'1'%20%7D%2C%0A%20%20%20%20%20%20%7B%20label%3A%20'Old%20Lead'%2C%20value%3A%20'2'%20%7D%2C%0A%20%20%20%20%20%20%7B%20label%3A%20'Active'%2C%20value%3A%20'3'%20%7D%2C%0A%20%20%20%20%20%20%7B%20label%3A%20'Archived'%2C%20value%3A%20'4'%20%7D%2C%0A%20%20%20%20%5D%2C%0A%20%20%7D%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-value%20%5Bdata%5D%3D%22data%22%20%5Bmeta%5D%3D%22meta%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-value%3E%0A`\n    },\n    'basic-card': {\n        title: 'Basic Cards',\n        component: BasicCardExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Cards%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-card-example'%2C%0A%20%20templateUrl%3A%20'basic-card-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-card-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicCardExample%20%7B%0A%20%20%2F%2F%20Config%20for%20demos%0A%20%20refresh%3A%20boolean%20%3D%20true%3B%0A%20%20close%3A%20boolean%20%3D%20true%3B%0A%20%20move%3A%20boolean%20%3D%20true%3B%0A%20%20padding%3A%20boolean%20%3D%20true%3B%0A%20%20loading%3A%20boolean%20%3D%20true%3B%0A%0A%20%20start%3A%20number%20%3D%202000%3B%0A%20%20end%3A%20number%20%3D%202005%3B%0A%20%20created%3A%20number%20%3D%201995%3B%0A%0A%20%20bestLabel%3A%20string%20%3D%20'BEST%20TIME%20TO%20CONTACT'%3B%0A%20%20bestTime%3A%20string%20%3D%20'1-PM'%3B%0A%20%20bestDay%3A%20string%20%3D%20'Friday'%3B%0A%20%20message%3A%20string%3B%0A%20%20messageIcon%3A%20string%3B%0A%0A%20%20donutValue%3A%20number%20%3D%200.5%3B%0A%20%20donutColor%3A%20string%20%3D%20'%23662255'%3B%0A%20%20donutLabel%3A%20string%20%3D%20'Probability%20of%20Win%20%25'%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20onClose()%20%7B%0A%20%20%20%20this.toaster.alert(%7B%0A%20%20%20%20%20%20theme%3A%20'info'%2C%0A%20%20%20%20%20%20title%3A%20'Cards'%2C%0A%20%20%20%20%20%20message%3A%20'Close%20Clicked!'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20onRefresh()%20%7B%0A%20%20%20%20this.toaster.alert(%7B%0A%20%20%20%20%20%20theme%3A%20'success'%2C%0A%20%20%20%20%20%20title%3A%20'Cards'%2C%0A%20%20%20%20%20%20message%3A%20'Refresh%20Clicked!'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20toggleLoading()%20%7B%0A%20%20%20%20this.loading%20%3D%20!this.loading%3B%0A%20%20%7D%0A%0A%20%20toggleMessage()%20%7B%0A%20%20%20%20if%20(!this.message)%20%7B%0A%20%20%20%20%20%20this.message%20%3D%20'NO%20DATA!'%3B%0A%20%20%20%20%20%20this.messageIcon%20%3D%20'email'%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.message%20%3D%20undefined%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20singleAction()%20%7B%0A%20%20%20%20window.alert('HELLO!')%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-card%20%5Btitle%5D%3D%22'All%20Attributes'%22%0A%20%20%20%20%20%20%20%20%20%20%20icon%3D%22activity%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Bloading%5D%3D%22loading%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Bmessage%5D%3D%22message%22%0A%20%20%20%20%20%20%20%20%20%20%20%5BmessageIcon%5D%3D%22messageIcon%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Brefresh%5D%3D%22refresh%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Bmove%5D%3D%22move%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Bclose%5D%3D%22close%22%0A%20%20%20%20%20%20%20%20%20%20%20(onRefresh)%3D%22onRefresh()%22%0A%20%20%20%20%20%20%20%20%20%20%20(onClose)%3D%22onClose()%22%0A%20%20%20%20%20%20%20%20%20%20%20%5Bpadding%5D%3D%22padding%22%3E%0A%20%20%20%20This%20is%20the%20ALL%20attribute%20card%20content!%0A%3C%2Fnovo-card%3E%0A`\n    },\n    'card-config': {\n        title: 'Full Configuration Cards',\n        component: CardConfigExample,\n        tsSource: `%2F%2F%20NG2%0Aimport%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Full%20Configuration%20Cards%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'card-config-example'%2C%0A%20%20templateUrl%3A%20'card-config-example.html'%2C%0A%20%20styleUrls%3A%20%5B'card-config-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CardConfigExample%20%7B%0A%20%20%2F%2F%20Config%20for%20demos%0A%20%20refresh%3A%20boolean%20%3D%20true%3B%0A%20%20close%3A%20boolean%20%3D%20true%3B%0A%20%20move%3A%20boolean%20%3D%20true%3B%0A%20%20padding%3A%20boolean%20%3D%20true%3B%0A%20%20loading%3A%20boolean%20%3D%20true%3B%0A%0A%20%20fullConfig%3A%20any%20%3D%20%7B%0A%20%20%20%20refresh%3A%20false%2C%0A%20%20%20%20icon%3A%20'email'%2C%0A%20%20%20%20messageIcon%3A%20'email'%2C%0A%20%20%20%20close%3A%20false%2C%0A%20%20%20%20move%3A%20true%2C%0A%20%20%20%20onClose%3A%20this.onClose.bind(this)%2C%0A%20%20%20%20onRefresh%3A%20this.onRefresh.bind(this)%2C%0A%20%20%20%20title%3A%20'Test'%2C%0A%20%20%20%20loading%3A%20false%2C%0A%20%20%20%20padding%3A%20true%2C%0A%20%20%7D%3B%0A%0A%20%20start%3A%20number%20%3D%202000%3B%0A%20%20end%3A%20number%20%3D%202005%3B%0A%20%20created%3A%20number%20%3D%201995%3B%0A%0A%20%20bestLabel%3A%20string%20%3D%20'BEST%20TIME%20TO%20CONTACT'%3B%0A%20%20bestTime%3A%20string%20%3D%20'1-PM'%3B%0A%20%20bestDay%3A%20string%20%3D%20'Friday'%3B%0A%20%20message%3A%20string%3B%0A%20%20messageIcon%3A%20string%3B%0A%0A%20%20donutValue%3A%20number%20%3D%200.5%3B%0A%20%20donutColor%3A%20string%20%3D%20'%23662255'%3B%0A%20%20donutLabel%3A%20string%20%3D%20'Probability%20of%20Win%20%25'%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20onClose()%20%7B%0A%20%20%20%20this.toaster.alert(%7B%0A%20%20%20%20%20%20theme%3A%20'info'%2C%0A%20%20%20%20%20%20title%3A%20'Cards'%2C%0A%20%20%20%20%20%20message%3A%20'Close%20Clicked!'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20onRefresh()%20%7B%0A%20%20%20%20this.toaster.alert(%7B%0A%20%20%20%20%20%20theme%3A%20'success'%2C%0A%20%20%20%20%20%20title%3A%20'Cards'%2C%0A%20%20%20%20%20%20message%3A%20'Refresh%20Clicked!'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20toggleLoading()%20%7B%0A%20%20%20%20this.loading%20%3D%20!this.loading%3B%0A%20%20%7D%0A%0A%20%20toggleMessage()%20%7B%0A%20%20%20%20if%20(!this.message)%20%7B%0A%20%20%20%20%20%20this.message%20%3D%20'NO%20DATA!'%3B%0A%20%20%20%20%20%20this.messageIcon%20%3D%20'email'%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.message%20%3D%20undefined%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20toggleLoadingConfig()%20%7B%0A%20%20%20%20this.fullConfig.loading%20%3D%20!this.fullConfig.loading%3B%0A%20%20%7D%0A%0A%20%20toggleMessageConfig()%20%7B%0A%20%20%20%20if%20(!this.fullConfig.message)%20%7B%0A%20%20%20%20%20%20this.fullConfig.message%20%3D%20'NO%20DATA!'%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.fullConfig.message%20%3D%20undefined%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20singleAction()%20%7B%0A%20%20%20%20window.alert('HELLO!')%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-card%20%5Bconfig%5D%3D%22fullConfig%22%3E%0A%20%20%3Cnovo-card-actions%3E%0A%20%20%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20icon%3D%22info%22%20(click)%3D%22singleAction()%22%3E%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-card-actions%3E%0A%20%20DEMO%20%3A)%0A%3C%2Fnovo-card%3E%0A`\n    },\n    'accordion': {\n        title: 'Accordion Example',\n        component: AccordionExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Accordion%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'accordion-example'%2C%0A%20%20templateUrl%3A%20'accordion-example.html'%2C%0A%20%20styleUrls%3A%20%5B'accordion-example.css'%5D%2C%0A%7D)%0Aexport%20class%20AccordionExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-accordion%3E%0A%20%20%3Cnovo-expansion-panel%3E%0A%20%20%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%20%20This%20is%20the%20expansion%201%20title%0A%20%20%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%20%20%20%20%3Cp%3EThis%20the%20expansion%201%20content%3C%2Fp%3E%0A%20%20%3C%2Fnovo-expansion-panel%3E%0A%0A%20%20%3Cnovo-expansion-panel%3E%0A%20%20%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%20%20This%20is%20the%20expansion%202%20title%0A%20%20%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%20%20%20%20%3Cp%3EThis%20the%20expansion%202%20content%3C%2Fp%3E%0A%20%20%3C%2Fnovo-expansion-panel%3E%0A%3C%2Fnovo-accordion%3E%0A`\n    },\n    'basic-expansion': {\n        title: 'Dialogue buttons',\n        component: BasicExpansionExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Dialogue%20buttons%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-expansion-example'%2C%0A%20%20templateUrl%3A%20'basic-expansion-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-expansion-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicExpansionExample%20%7B%0A%20%20public%20isDisabled%3A%20boolean%20%3D%20false%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-expansion-panel%20%5Bdisabled%5D%3D%22isDisabled%22%3E%0A%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%3Cnovo-panel-title%3E%0A%20%20%20%20%20%20This%20is%20the%20expansion%20title%0A%20%20%20%20%3C%2Fnovo-panel-title%3E%0A%20%20%20%20%3Cnovo-panel-description%3E%0A%20%20%20%20%20%20This%20is%20a%20summary%20of%20the%20content%0A%20%20%20%20%3C%2Fnovo-panel-description%3E%0A%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%20%20%3Cp%3EThis%20is%20the%20primary%20content%20of%20the%20panel.%3C%2Fp%3E%0A%3C%2Fnovo-expansion-panel%3E%0A%3Cdiv%3E%0A%20%20%3Cspan%3EIs%20Disabled%3F%3C%2Fspan%3E%0A%20%20%3Cnovo-switch%20theme%3D%22grapefruit%22%20%5B(ngModel)%5D%3D%22isDisabled%22%3E%3C%2Fnovo-switch%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'lazy-expansion': {\n        title: 'Lazy Instaniated Content with Expansion',\n        component: LazyExpansionExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Lazy%20Instaniated%20Content%20with%20Expansion%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'lazy-expansion-example'%2C%0A%20%20templateUrl%3A%20'lazy-expansion-example.html'%2C%0A%20%20styleUrls%3A%20%5B'lazy-expansion-example.css'%5D%2C%0A%7D)%0Aexport%20class%20LazyExpansionExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-expansion-panel%3E%0A%20%20%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%20%20This%20is%20the%20expansion%20title%0A%20%20%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%0A%20%20%20%20%3Cng-template%20matExpansionPanelContent%3E%0A%20%20%20%20%20%20Some%20deferred%20content%0A%20%20%20%20%3C%2Fng-template%3E%0A%3C%2Fnovo-expansion-panel%3E%0A`\n    },\n    'basic-header': {\n        title: 'Basic Header Example',\n        component: BasicHeaderExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20HEADER_THEMES%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'contact'%2C%20'opportunity'%2C%20'lead'%2C%20'light'%2C%20'white'%5D%3B%0Aconst%20HEADER_ICONS%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'person'%2C%20'opportunity'%2C%20'lead'%2C%20'bolt'%2C%20'shield'%5D%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Header%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-header-example'%2C%0A%20%20templateUrl%3A%20'basic-header-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-header-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicHeaderExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20'company'%3B%0A%20%20public%20icon%3A%20string%20%3D%20'company'%3B%0A%20%20private%20options%3A%20any%3B%0A%20%20private%20themeIndex%3A%20number%20%3D%200%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%0A%20%20%20%20this.toaster%20%3D%20toaster%3B%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20this.themeIndex%20%3D%20this.themeIndex%20%3D%3D%3D%20HEADER_THEMES.length%20-%201%20%3F%200%20%3A%20this.themeIndex%20%2B%201%3B%0A%20%20%20%20this.theme%20%3D%20HEADER_THEMES%5Bthis.themeIndex%5D%3B%0A%20%20%20%20this.icon%20%3D%20HEADER_ICONS%5Bthis.themeIndex%5D%3B%0A%20%20%7D%0A%0A%20%20catchEv(type%2C%20ev)%20%7B%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20message%3A%20%60%24%7Bev%7D%20fired...%60%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%20title%3D%22John%20Deere%22%20%5Bicon%5D%3D%22icon%22%20%5Btheme%5D%3D%22theme%22%3E%0A%20%20%3Cutils%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22convert%22%20tooltip%3D%22Change%20Theme%22%20(click)%3D%22changeTheme()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22refresh%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('refresh'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('close'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%3C%2Futils%3E%0A%20%20%3Csection%3E%0A%20%20%20%20Extra%20Info%0A%20%20%3C%2Fsection%3E%0A%20%20%3Cnovo-nav%20theme%3D%22color%22%20direction%3D%22horizontal%22%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EOverview%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EActivity%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EEmail%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%3C%2Fnovo-nav%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'condensed-header': {\n        title: 'Condensed Header Example',\n        component: CondensedHeaderExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20HEADER_THEMES%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'contact'%2C%20'opportunity'%2C%20'lead'%2C%20'light'%2C%20'white'%5D%3B%0Aconst%20HEADER_ICONS%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'person'%2C%20'opportunity'%2C%20'lead'%2C%20'bolt'%2C%20'shield'%5D%3B%0A%0A%2F**%0A%20*%20%40title%20Condensed%20Header%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'condensed-header-example'%2C%0A%20%20templateUrl%3A%20'condensed-header-example.html'%2C%0A%20%20styleUrls%3A%20%5B'condensed-header-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CondensedHeaderExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20'company'%3B%0A%20%20public%20icon%3A%20string%20%3D%20'company'%3B%0A%20%20public%20options%3A%20any%3B%0A%20%20public%20themeIndex%3A%20number%20%3D%200%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%0A%20%20%20%20this.toaster%20%3D%20toaster%3B%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20this.themeIndex%20%3D%20this.themeIndex%20%3D%3D%3D%20HEADER_THEMES.length%20-%201%20%3F%200%20%3A%20this.themeIndex%20%2B%201%3B%0A%20%20%20%20this.theme%20%3D%20HEADER_THEMES%5Bthis.themeIndex%5D%3B%0A%20%20%20%20this.icon%20%3D%20HEADER_ICONS%5Bthis.themeIndex%5D%3B%0A%20%20%7D%0A%0A%20%20catchEv(type%2C%20ev)%20%7B%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20message%3A%20%60%24%7Bev%7D%20fired...%60%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%20%5Btheme%5D%3D%22theme%22%20%5Bcondensed%5D%3D%22true%22%3E%0A%20%20%3Cutils%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22convert%22%20tooltip%3D%22Change%20Theme%22%20(click)%3D%22changeTheme()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22refresh%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('refresh'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('close'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%3C%2Futils%3E%0A%20%20%3Cnovo-icon%20%5Btheme%5D%3D%22theme%22%20%5Bname%5D%3D%22icon%22%20%5Braised%5D%3D%22true%22%3E%7B%7Bicon%7D%7D%3C%2Fnovo-icon%3E%0A%20%20%3Cdiv%20class%3D%22entity-header%22%20novo-title%3E%0A%20%20%20%20%3Cspan%20class%3D%22id%22%3E123456%3C%2Fspan%3E%0A%20%20%20%20%3Cheader-spacer%3E%3C%2Fheader-spacer%3E%0A%20%20%20%20%3Cspan%20class%3D%22name%22%3ESteve%20Jobs%3C%2Fspan%3E%0A%20%20%20%20%3Cheader-spacer%3E%3C%2Fheader-spacer%3E%0A%20%20%20%20%3Cspan%20class%3D%22links%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20%5Bicon%5D%3D%22'google'%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20%5Bicon%5D%3D%22'linkedin-f'%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20%5Bicon%5D%3D%22'location'%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fspan%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cnovo-nav%20theme%3D%22white%22%20direction%3D%22horizontal%22%20%5Bcondensed%5D%3D%22true%22%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EOverview%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EActivity%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3EEmail%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%3C%2Fnovo-nav%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'header-searchbar': {\n        title: 'Header with SearchBar Example',\n        component: HeaderSearchbarExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20HEADER_THEMES%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'contact'%2C%20'opportunity'%2C%20'lead'%2C%20'light'%2C%20'white'%5D%3B%0Aconst%20HEADER_ICONS%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'person'%2C%20'opportunity'%2C%20'lead'%2C%20'bolt'%2C%20'shield'%5D%3B%0A%0A%2F**%0A%20*%20%40title%20Header%20with%20SearchBar%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'header-searchbar-example'%2C%0A%20%20templateUrl%3A%20'header-searchbar-example.html'%2C%0A%20%20styleUrls%3A%20%5B'header-searchbar-example.css'%5D%2C%0A%7D)%0Aexport%20class%20HeaderSearchbarExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20'company'%3B%0A%20%20public%20icon%3A%20string%20%3D%20'company'%3B%0A%20%20private%20options%3A%20any%3B%0A%20%20public%20isChecked%3A%20boolean%3B%0A%20%20private%20themeIndex%3A%20number%20%3D%200%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%0A%20%20%20%20this.toaster%20%3D%20toaster%3B%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20this.themeIndex%20%3D%20this.themeIndex%20%3D%3D%3D%20HEADER_THEMES.length%20-%201%20%3F%200%20%3A%20this.themeIndex%20%2B%201%3B%0A%20%20%20%20this.theme%20%3D%20HEADER_THEMES%5Bthis.themeIndex%5D%3B%0A%20%20%20%20this.icon%20%3D%20HEADER_ICONS%5Bthis.themeIndex%5D%3B%0A%20%20%7D%0A%0A%20%20catchEv(type%2C%20ev)%20%7B%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20message%3A%20%60%24%7Bev%7D%20fired...%60%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%20title%3D%22Header%22%20%5Bicon%5D%3D%22icon%22%20%5Btheme%5D%3D%22theme%22%3E%0A%20%20%3Csection%20class%3D%22header-content%22%3E%0A%20%20%20%20%3Cnovo-search%20%5BalwaysOpen%5D%3D%22isChecked%22%20%5Btheme%5D%3D%22theme%22%3E%3C%2Fnovo-search%3E%0A%20%20%3C%2Fsection%3E%0A%20%20%3Cutils%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22convert%22%20tooltip%3D%22Change%20Theme%22%20(click)%3D%22changeTheme()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22refresh%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('refresh'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('close'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%3C%2Futils%3E%0A%3C%2Fheader%3E%0A%3Cbr%2F%3E%0A%3Cnovo-checkbox%20label%3D%22Always%20Open%3F%22%20%5B(ngModel)%5D%3D%22isChecked%22%3E%3C%2Fnovo-checkbox%3E%0A`\n    },\n    'header-subtitle': {\n        title: 'Header with Subtitle Example',\n        component: HeaderSubtitleExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20HEADER_THEMES%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'contact'%2C%20'opportunity'%2C%20'lead'%2C%20'light'%2C%20'white'%5D%3B%0Aconst%20HEADER_ICONS%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'person'%2C%20'opportunity'%2C%20'lead'%2C%20'bolt'%2C%20'shield'%5D%3B%0A%0A%2F**%0A%20*%20%40title%20Header%20with%20Subtitle%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'header-subtitle-example'%2C%0A%20%20templateUrl%3A%20'header-subtitle-example.html'%2C%0A%20%20styleUrls%3A%20%5B'header-subtitle-example.css'%5D%2C%0A%7D)%0Aexport%20class%20HeaderSubtitleExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20'company'%3B%0A%20%20public%20icon%3A%20string%20%3D%20'company'%3B%0A%20%20private%20options%3A%20any%3B%0A%20%20private%20themeIndex%3A%20number%20%3D%200%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%0A%20%20%20%20this.toaster%20%3D%20toaster%3B%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20this.themeIndex%20%3D%20this.themeIndex%20%3D%3D%3D%20HEADER_THEMES.length%20-%201%20%3F%200%20%3A%20this.themeIndex%20%2B%201%3B%0A%20%20%20%20this.theme%20%3D%20HEADER_THEMES%5Bthis.themeIndex%5D%3B%0A%20%20%20%20this.icon%20%3D%20HEADER_ICONS%5Bthis.themeIndex%5D%3B%0A%20%20%7D%0A%0A%20%20catchEv(type%2C%20ev)%20%7B%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20message%3A%20%60%24%7Bev%7D%20fired...%60%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%20title%3D%22Header%22%20subTitle%3D%22with%20subtitle%22%20%5Bicon%5D%3D%22icon%22%20%5Btheme%5D%3D%22theme%22%3E%0A%20%20%3Cutils%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22convert%22%20tooltip%3D%22Change%20Theme%22%20(click)%3D%22changeTheme()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22refresh%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('refresh'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('close'%2C%20%24event)%22%3E%3C%2Futil-action%3E%0A%20%20%3C%2Futils%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'basic-list': {\n        title: 'Basic List Layout',\n        component: BasicListExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20List%20Layout%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-list-example'%2C%0A%20%20templateUrl%3A%20'basic-list-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-list-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicListExample%20%7B%0A%20%20public%20pulseItems%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20ONE_HOUR%20%3D%2060%20*%2060%20*%201000%3B%0A%20%20%20%20%2F*%20ms%20*%2F%0A%20%20%20%20const%20TWO_HOURS%20%3D%20ONE_HOUR%20*%202%3B%0A%20%20%20%20const%20THREE_HOURS%20%3D%20ONE_HOUR%20*%203%3B%0A%20%20%20%20const%20currentDate%20%3D%20new%20Date()%3B%0A%0A%20%20%20%20const%20oneHourAgo%20%3D%20currentDate.getTime()%20-%20ONE_HOUR%3B%0A%20%20%20%20const%20twoHoursAgo%20%3D%20currentDate.getTime()%20-%20TWO_HOURS%3B%0A%20%20%20%20const%20threeHoursAgo%20%3D%20currentDate.getTime()%20-%20THREE_HOURS%3B%0A%0A%20%20%20%20%2F*%20%22mockResponse%5B%5D%22%20should%20represent%20a%20REST%20response%20with%20improperly%20formatted%20data.%0A%20%20%20%20%2F%20%20The%20%22buildItems()%22%20function%20is%20taking%20this%20data%20object%20and%20massaging%20it%0A%20%20%20%20%2F%20%20to%20build%20the%20list%20items%20appropriately%20via%20a%20new%20data%20object%20%22pulseItems%5B%5D%22.%0A%20%20%20%20%2F%20%20In%20page1.html%20you%20can%20see%20how%20the%20new%20object%20builds%20a%20list%20of%20items.%0A%20%20%20%20%2F%20%20-%20%40asibilia%0A%20%20%20%20*%2F%0A%0A%20%20%20%20const%20mockResponse%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'opportunity'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20oneHourAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'negative'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'engagement'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'No%20emails%20in%20last%2010%20days'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Steph'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Curry'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Wells%20Fargo'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Golden%20State%2C%20CA'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'opportunity'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20twoHoursAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'negative'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'probability'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'Now%20has%20low%20probability%20to%20close'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Lebron'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'James'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Amazon'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Cleveland%2C%20OH'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'company'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20threeHoursAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'positive'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'connection'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'New%20connection'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Derrick'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Rose'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Walmart'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Chicago%2C%20IL'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.pulseItems%20%3D%20%5B%5D%3B%0A%0A%20%20%20%20this.buildItems(mockResponse)%3B%0A%20%20%7D%0A%0A%20%20buildItems(resp)%20%7B%0A%20%20%20%20for%20(const%20obj%20of%20resp)%20%7B%0A%20%20%20%20%20%20const%20item%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20%20%20%20%20%2F*%0A%20%20%20%20%20%20%7C%7C%7C%20This%20is%20the%20item%20structure%20to%20be%20pushed%20to%20pulseItems%5B%5D%20and%20used%0A%20%20%20%20%20%20%7C%7C%7C%20to%20build%20the%20list%20%26%20items.%0A%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%7C%20%20%20item%20%3D%20%7B%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22name%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22type%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22icon%22%3A%20%7B%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%22sentiment%22%3A%20''%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22comment%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22timeAgo%22%3A%20''%0A%20%20%20%20%20%20%7C%20%20%20%20%7D%0A%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20*%2F%0A%0A%20%20%20%20%20%20item.name%20%3D%20obj.user.company%3B%0A%20%20%20%20%20%20item.type%20%3D%20obj.type%3B%0A%20%20%20%20%20%20item.icon%20%3D%20%7B%7D%3B%0A%0A%20%20%20%20%20%20if%20(obj.sentiment.type%20%3D%3D%3D%20'connection')%20%7B%0A%20%20%20%20%20%20%20%20item.icon.name%20%3D%20'bhi-add-o'%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20if%20(obj.sentiment.type%20%3D%3D%3D%20'engagement')%20%7B%0A%20%20%20%20%20%20%20%20item.icon.name%20%3D%20obj.sentiment.rating%20%3D%3D%3D%20'positive'%20%3F%20'bhi-trending-up'%20%3A%20'bhi-trending-down'%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20item.icon.sentiment%20%3D%20obj.sentiment.rating%3B%0A%20%20%20%20%20%20item.comment%20%3D%20obj.sentiment.comment%3B%0A%20%20%20%20%20%20item.timeAgo%20%3D%20obj.dateCreated%3B%0A%0A%20%20%20%20%20%20this.pulseItems.push(item)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%3E%0A%20%20%20%20%3Cnovo-list%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-list-item%20*ngFor%3D%22let%20item%20of%20pulseItems%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-avatar%20%5Bicon%5D%3D%22item.type%22%3E%3C%2Fitem-avatar%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-title%3E%7B%7Bitem.name%7D%7D%3C%2Fitem-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header-end%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-clock%22%3E%3C%2Fi%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%7Bitem.timeAgo%20%7C%20date%3A%20'shortTime'%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header-end%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-content%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20*ngIf%3D%22item.icon.name%22%20class%3D%22%7B%7Bitem.icon.name%7D%7D%20%7B%7Bitem.icon.sentiment%7D%7D%22%3E%3C%2Fi%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%7Bitem.comment%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-content%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%3C%2Fnovo-list%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'themed-list': {\n        title: 'Themed List Example',\n        component: ThemedListExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Themed%20List%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'themed-list-example'%2C%0A%20%20templateUrl%3A%20'themed-list-example.html'%2C%0A%20%20styleUrls%3A%20%5B'themed-list-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ThemedListExample%20%7B%0A%20%20public%20pulseItems%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20ONE_HOUR%20%3D%2060%20*%2060%20*%201000%3B%0A%20%20%20%20%2F*%20ms%20*%2F%0A%20%20%20%20const%20TWO_HOURS%20%3D%20ONE_HOUR%20*%202%3B%0A%20%20%20%20const%20THREE_HOURS%20%3D%20ONE_HOUR%20*%203%3B%0A%20%20%20%20const%20currentDate%20%3D%20new%20Date()%3B%0A%0A%20%20%20%20const%20oneHourAgo%20%3D%20currentDate.getTime()%20-%20ONE_HOUR%3B%0A%20%20%20%20const%20twoHoursAgo%20%3D%20currentDate.getTime()%20-%20TWO_HOURS%3B%0A%20%20%20%20const%20threeHoursAgo%20%3D%20currentDate.getTime()%20-%20THREE_HOURS%3B%0A%0A%20%20%20%20%2F*%20%22mockResponse%5B%5D%22%20should%20represent%20a%20REST%20response%20with%20improperly%20formatted%20data.%0A%20%20%20%20%2F%20%20The%20%22buildItems()%22%20function%20is%20taking%20this%20data%20object%20and%20massaging%20it%0A%20%20%20%20%2F%20%20to%20build%20the%20list%20items%20appropriately%20via%20a%20new%20data%20object%20%22pulseItems%5B%5D%22.%0A%20%20%20%20%2F%20%20In%20page1.html%20you%20can%20see%20how%20the%20new%20object%20builds%20a%20list%20of%20items.%0A%20%20%20%20%2F%20%20-%20%40asibilia%0A%20%20%20%20*%2F%0A%0A%20%20%20%20const%20mockResponse%20%3D%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'opportunity'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20oneHourAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'negative'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'engagement'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'No%20emails%20in%20last%2010%20days'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Steph'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Curry'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Wells%20Fargo'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Golden%20State%2C%20CA'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'opportunity'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20twoHoursAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'negative'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'probability'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'Now%20has%20low%20probability%20to%20close'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Lebron'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'James'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Amazon'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Cleveland%2C%20OH'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20'company'%2C%0A%20%20%20%20%20%20%20%20dateCreated%3A%20threeHoursAgo%2C%0A%20%20%20%20%20%20%20%20sentiment%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rating%3A%20'positive'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'connection'%2C%0A%20%20%20%20%20%20%20%20%20%20comment%3A%20'New%20connection'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20user%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20firstName%3A%20'Derrick'%2C%0A%20%20%20%20%20%20%20%20%20%20lastName%3A%20'Rose'%2C%0A%20%20%20%20%20%20%20%20%20%20company%3A%20'Walmart'%2C%0A%20%20%20%20%20%20%20%20%20%20location%3A%20'Chicago%2C%20IL'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%0A%20%20%20%20this.pulseItems%20%3D%20%5B%5D%3B%0A%0A%20%20%20%20this.buildItems(mockResponse)%3B%0A%20%20%7D%0A%0A%20%20buildItems(resp)%20%7B%0A%20%20%20%20for%20(const%20obj%20of%20resp)%20%7B%0A%20%20%20%20%20%20const%20item%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20%20%20%20%20%2F*%0A%20%20%20%20%20%20%7C%7C%7C%20This%20is%20the%20item%20structure%20to%20be%20pushed%20to%20pulseItems%5B%5D%20and%20used%0A%20%20%20%20%20%20%7C%7C%7C%20to%20build%20the%20list%20%26%20items.%0A%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20%7C%20%20%20item%20%3D%20%7B%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22name%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22type%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22icon%22%3A%20%7B%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%22name%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%22sentiment%22%3A%20''%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22comment%22%3A%20''%2C%0A%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%22timeAgo%22%3A%20''%0A%20%20%20%20%20%20%7C%20%20%20%20%7D%0A%20%20%20%20%20%20%7C%0A%20%20%20%20%20%20*%2F%0A%0A%20%20%20%20%20%20item.name%20%3D%20obj.user.company%3B%0A%20%20%20%20%20%20item.type%20%3D%20obj.type%3B%0A%20%20%20%20%20%20item.icon%20%3D%20%7B%7D%3B%0A%0A%20%20%20%20%20%20if%20(obj.sentiment.type%20%3D%3D%3D%20'connection')%20%7B%0A%20%20%20%20%20%20%20%20item.icon.name%20%3D%20'bhi-add-o'%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20if%20(obj.sentiment.type%20%3D%3D%3D%20'engagement')%20%7B%0A%20%20%20%20%20%20%20%20item.icon.name%20%3D%20obj.sentiment.rating%20%3D%3D%3D%20'positive'%20%3F%20'bhi-trending-up'%20%3A%20'bhi-trending-down'%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20item.icon.sentiment%20%3D%20obj.sentiment.rating%3B%0A%20%20%20%20%20%20item.comment%20%3D%20obj.sentiment.comment%3B%0A%20%20%20%20%20%20item.timeAgo%20%3D%20obj.dateCreated%3B%0A%0A%20%20%20%20%20%20this.pulseItems.push(item)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%3E%0A%20%20%20%20%3Cnovo-list%20theme%3D%22navigation%22%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-list-item%20*ngFor%3D%22let%20item%20of%20pulseItems%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-avatar%20%5Bicon%5D%3D%22item.type%22%3E%3C%2Fitem-avatar%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-title%3E%7B%7Bitem.name%7D%7D%3C%2Fitem-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-header%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-content%20direction%3D%22vertical%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20*ngIf%3D%22item.icon.name%22%20class%3D%22%7B%7Bitem.icon.name%7D%7D%20%7B%7Bitem.icon.sentiment%7D%7D%22%3E%3C%2Fi%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%7Bitem.comment%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-clock%22%3E%3C%2Fi%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%7Bitem.timeAgo%20%7C%20date%3A%20'shortTime'%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-content%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Citem-end%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-next%22%3E%3C%2Fi%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fitem-end%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-list-item%3E%0A%20%20%20%20%3C%2Fnovo-list%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'stepper-horizontal': {\n        title: 'Basic Stepper Component',\n        component: StepperHorizontalExample,\n        tsSource: `import%20%7B%20Component%2C%20OnInit%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormBuilder%2C%20FormGroup%2C%20Validators%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%20NovoHorizontalStepper%2C%20NovoStep%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Stepper%20Component%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'stepper-horizontal-example'%2C%0A%20%20templateUrl%3A%20'stepper-horizontal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'stepper-horizontal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20StepperHorizontalExample%20implements%20OnInit%20%7B%0A%20%20isLinear%20%3D%20true%3B%0A%20%20firstFormGroup%3A%20FormGroup%3B%0A%20%20secondFormGroup%3A%20FormGroup%3B%0A%0A%20%20constructor(private%20_formBuilder%3A%20FormBuilder)%20%7B%7D%0A%0A%20%20ngOnInit()%20%7B%0A%20%20%20%20this.firstFormGroup%20%3D%20this._formBuilder.group(%7B%0A%20%20%20%20%20%20firstCtrl%3A%20%5B''%2C%20Validators.required%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.secondFormGroup%20%3D%20this._formBuilder.group(%7B%0A%20%20%20%20%20%20secondCtrl%3A%20%5B''%2C%20Validators.required%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20next(stepper%3A%20NovoHorizontalStepper%2C%20step%3A%20NovoStep)%20%7B%0A%20%20%20%20step.editable%20%3D%20false%3B%0A%20%20%20%20stepper.next()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-horizontal-stepper%20%5Blinear%5D%3D%22isLinear%22%20%23stepper%3E%0A%20%20%3Cnovo-step%20%5BstepControl%5D%3D%22firstFormGroup%22%20label%3D%22Fill%20out%20your%20name%22%20theme%3D%22candidate%22%20icon%3D%22candidate%22%20%23step1%3E%0A%20%20%20%20%3Cform%20%5BformGroup%5D%3D%22firstFormGroup%22%3E%0A%20%20%20%20%20%20%3Cinput%20placeholder%3D%22Last%20name%2C%20First%20name%22%20formControlName%3D%22firstCtrl%22%20required%3E%0A%20%20%20%20%20%20%3Cdiv%3EForm%20Valid%3F%20%7B%7BfirstFormGroup%3F.valid%7D%7D%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22next(stepper%2C%20step1)%22%3ENext%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fform%3E%0A%20%20%3C%2Fnovo-step%3E%0A%20%20%3Cnovo-step%20%5BstepControl%5D%3D%22secondFormGroup%22%20theme%3D%22contact%22%3E%0A%20%20%20%20%3Cform%20%5BformGroup%5D%3D%22secondFormGroup%22%3E%0A%20%20%20%20%20%20%3Cng-template%20novoStepLabel%3EFill%20out%20your%20address%3C%2Fng-template%3E%0A%20%20%20%20%20%20%3Cinput%20placeholder%3D%22Address%22%20formControlName%3D%22secondCtrl%22%20required%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22stepper.previous()%22%3EBack%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22stepper.next()%22%3ENext%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fform%3E%0A%20%20%3C%2Fnovo-step%3E%0A%20%20%3Cnovo-step%3E%0A%20%20%20%20%3Cng-template%20novoStepLabel%3EDone%3C%2Fng-template%3E%0A%20%20%20%20You%20are%20now%20done.%0A%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%3Cbutton%20novo-button%20(click)%3D%22stepper.previous()%22%3EBack%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3Cbutton%20novo-button%20(click)%3D%22stepper.complete()%22%3EDone%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%3C%2Fnovo-step%3E%0A%3C%2Fnovo-horizontal-stepper%3E%0A`\n    },\n    'stepper-vertical': {\n        title: 'Stepper w/ Vertical Layout',\n        component: StepperVerticalExample,\n        tsSource: `import%20%7B%20Component%2C%20OnInit%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormBuilder%2C%20FormGroup%2C%20Validators%20%7D%20from%20'%40angular%2Fforms'%3B%0Aimport%20%7B%20NovoVerticalStepper%2C%20NovoStep%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Stepper%20w%2F%20Vertical%20Layout%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'stepper-vertical-example'%2C%0A%20%20templateUrl%3A%20'stepper-vertical-example.html'%2C%0A%20%20styleUrls%3A%20%5B'stepper-vertical-example.css'%5D%2C%0A%7D)%0Aexport%20class%20StepperVerticalExample%20implements%20OnInit%20%7B%0A%20%20isLinear%20%3D%20true%3B%0A%20%20firstFormGroup%3A%20FormGroup%3B%0A%20%20secondFormGroup%3A%20FormGroup%3B%0A%0A%20%20constructor(private%20_formBuilder%3A%20FormBuilder)%20%7B%7D%0A%0A%20%20ngOnInit()%20%7B%0A%20%20%20%20this.firstFormGroup%20%3D%20this._formBuilder.group(%7B%0A%20%20%20%20%20%20firstCtrl%3A%20%5B''%2C%20Validators.required%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.secondFormGroup%20%3D%20this._formBuilder.group(%7B%0A%20%20%20%20%20%20secondCtrl%3A%20%5B''%2C%20Validators.required%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%7D%0A%0A%20%20next(stepper%3A%20NovoVerticalStepper%2C%20step%3A%20NovoStep)%20%7B%0A%20%20%20%20step.editable%20%3D%20false%3B%0A%20%20%20%20stepper.next()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-vertical-stepper%20%5Blinear%5D%3D%22isLinear%22%20%23stepper%3E%0A%20%20%3Cnovo-step%20%5BstepControl%5D%3D%22firstFormGroup%22%20theme%3D%22candidate%22%20icon%3D%22candidate%22%20%23step1%3E%0A%20%20%20%20%3Cform%20%5BformGroup%5D%3D%22firstFormGroup%22%3E%0A%20%20%20%20%20%20%3Cng-template%20novoStepLabel%3EFill%20out%20your%20name%3C%2Fng-template%3E%0A%20%20%20%20%20%20%3Cinput%20placeholder%3D%22Last%20name%2C%20First%20name%22%20formControlName%3D%22firstCtrl%22%20required%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3C!--%20%3Cbutton%20novo-button%20novoStepperNext%3ENext%3C%2Fbutton%3E%20--%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22next(stepper%2C%20step1)%22%20%5Bdisabled%5D%3D%22!firstFormGroup%3F.valid%22%3ENext%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fform%3E%0A%20%20%3C%2Fnovo-step%3E%0A%20%20%3Cnovo-step%20%5BstepControl%5D%3D%22secondFormGroup%22%20theme%3D%22contact%22%20icon%3D%22person%22%3E%0A%20%20%20%20%3Cform%20%5BformGroup%5D%3D%22secondFormGroup%22%3E%0A%20%20%20%20%20%20%3Cng-template%20novoStepLabel%3EFill%20out%20your%20address%3C%2Fng-template%3E%0A%20%20%20%20%20%20%3Cinput%20placeholder%3D%22Address%22%20formControlName%3D%22secondCtrl%22%20required%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3C!--%20%3Cbutton%20novo-button%20novoStepperPrevious%3EBack%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20novo-button%20novoStepperNext%3ENext%3C%2Fbutton%3E%20--%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22stepper.previous()%22%3EBack%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22stepper.next()%22%3ENext%3C%2Fbutton%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fform%3E%0A%20%20%3C%2Fnovo-step%3E%0A%20%20%3Cnovo-step%3E%0A%20%20%20%20%3Cng-template%20novoStepLabel%3EDone%3C%2Fng-template%3E%0A%20%20%20%20You%20are%20now%20done.%0A%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%3Cbutton%20novo-button%20(click)%3D%22stepper.reset()%22%3EReset%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%3C%2Fnovo-step%3E%0A%3C%2Fnovo-vertical-stepper%3E%0A`\n    },\n    'tabs-basic': {\n        title: 'Basic Tabs',\n        component: TabsBasicExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Tabs%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabs-basic-example'%2C%0A%20%20templateUrl%3A%20'tabs-basic-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tabs-basic-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TabsBasicExample%20%7B%0A%20%20tabSelected()%20%7B%0A%20%20%20%20console.log('TAB%20SELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20tabDeselected()%20%7B%0A%20%20%20%20console.log('TAB%20DESELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: ``\n    },\n    'tabs-color': {\n        title: 'Colorful Tabs',\n        component: TabsColorExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Colorful%20Tabs%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabs-color-example'%2C%0A%20%20templateUrl%3A%20'tabs-color-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tabs-color-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TabsColorExample%20%7B%0A%20%20tabSelected()%20%7B%0A%20%20%20%20console.log('TAB%20SELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20tabDeselected()%20%7B%0A%20%20%20%20console.log('TAB%20DESELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%3E%0A%20%20%3Cnovo-nav%20theme%3D%22color%22%20%5Boutlet%5D%3D%22colornav%22%20direction%3D%22horizontal%22%3E%0A%20%20%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%201%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%202%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%20%20%20%20%20%3Cnovo-tab%20%5Bdisabled%5D%3D%22true%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%203%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%3C%2Fnovo-nav%3E%0A%3C%2Fheader%3E%0A%0A%3Cnovo-nav-outlet%20%23colornav%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%201%20Content%3C%2Fh1%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%202%20Content%3C%2Fh1%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%3C%2Fnovo-nav-outlet%3E%0A`\n    },\n    'tabs-condensed': {\n        title: 'Condensed Tabs',\n        component: TabsCondensedExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Condensed%20Tabs%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabs-condensed-example'%2C%0A%20%20templateUrl%3A%20'tabs-condensed-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tabs-condensed-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TabsCondensedExample%20%7B%0A%20%20tabSelected()%20%7B%0A%20%20%20%20console.log('TAB%20SELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20tabDeselected()%20%7B%0A%20%20%20%20console.log('TAB%20DESELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-nav%20theme%3D%22white%22%20%5Boutlet%5D%3D%22condensed%22%20condensed%3D%22true%22%3E%0A%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3E%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%201%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3E%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%202%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%20%20%3Cnovo-tab%20%5Bdisabled%5D%3D%22true%22%3E%0A%20%20%20%20%20%20%3Cspan%3E%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%203%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%3C%2Fnovo-nav%3E%0A%0A%0A%3Cnovo-nav-outlet%20%23condensed%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%201%20Content%3C%2Fh1%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%202%20Content%3C%2Fh1%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%3C%2Fnovo-nav-outlet%3E%0A`\n    },\n    'tabs-router': {\n        title: 'Tabs for Navigation',\n        component: TabsRouterExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tabs%20for%20Navigation%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabs-router-example'%2C%0A%20%20templateUrl%3A%20'tabs-router-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tabs-router-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TabsRouterExample%20%7B%0A%20%20tabSelected()%20%7B%0A%20%20%20%20console.log('TAB%20SELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20tabDeselected()%20%7B%0A%20%20%20%20console.log('TAB%20DESELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%3E%0A%20%20%3Cnovo-nav%20theme%3D%22white%22%20router%3E%0A%20%20%20%20%20%20%3Cnovo-tab-link%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%201%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab-link%3E%0A%20%20%20%20%20%20%3Cnovo-tab-link%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%202%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab-link%3E%0A%20%20%20%20%20%20%20%3Cnovo-tab-link%20%5Bdisabled%5D%3D%22true%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%203%3C%2Fspan%3E%0A%20%20%20%20%20%20%3C%2Fnovo-tab-link%3E%0A%20%20%3C%2Fnovo-nav%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'tabs-vertical': {\n        title: 'Vertical Tabs',\n        component: TabsVerticalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Vertical%20Tabs%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tabs-vertical-example'%2C%0A%20%20templateUrl%3A%20'tabs-vertical-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tabs-vertical-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TabsVerticalExample%20%7B%0A%20%20tabSelected()%20%7B%0A%20%20%20%20console.log('TAB%20SELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%0A%20%20tabDeselected()%20%7B%0A%20%20%20%20console.log('TAB%20DESELECTED')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-nav%20theme%3D%22white%22%20%5Boutlet%5D%3D%22colorVert%22%20direction%3D%22vertical%22%3E%0A%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%201%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%20%20%3Cnovo-tab%3E%0A%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%202%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%20%20%3Cnovo-tab%20%5Bdisabled%5D%3D%22true%22%3E%0A%20%20%20%20%20%20%3Cspan%3E%0A%20%20%20%20%20%20%20%20%20%20%3Ci%20class%3D%22bhi-person%22%3E%3C%2Fi%3ETab%203%3C%2Fspan%3E%0A%20%20%3C%2Fnovo-tab%3E%0A%3C%2Fnovo-nav%3E%0A%0A%3Cnovo-nav-outlet%20%23colorVert%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%201%20Content%3C%2Fh1%3E%0A%0A%20%20%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%20%20Synth%20polaroid%20bitters%20chillwave%20pickled.%20Vegan%20disrupt%20tousled%2C%0A%20%20%20%20%20%20%20%20%20%20Portland%20keffiyeh%20aesthetic%20food%20truck%20sriracha%20cornhole%0A%20%20%20%20%20%20%20%20%20%20single-origin%20coffee%20church-key%20roof%20party.%20Leggings%0A%20%20%20%20%20%20%20%20%20%20ethical%20McSweeney's%2C%20normcore%20you%20probably%20haven't%0A%20%20%20%20%20%20%20%20%20%20heard%20of%20them%20Marfa%20organic%20squid.%20Slow-carb%2090's%0A%20%20%20%20%20%20%20%20%20%20ennui%20Godard%20pug%20asymmetrical%2C%20narwhal%20VHS%20Tonx%20High%0A%20%20%20%20%20%20%20%20%20%20Life.%20Retro%20dreamcatcher%20synth%20Godard%20pickled%20Etsy%0A%20%20%20%20%20%20%20%20%20%20jean%20shorts%20beard%2C%20pour-over%20fanny%20pack%20mumblecore.%0A%20%20%20%20%20%20%20%20%20%20Quinoa%20retro%20aesthetic%20polaroid%2C%20Williamsburg%20American%0A%20%20%20%20%20%20%20%20%20%20Apparel%20plaid%20small%20batch.%20Blue%20Bottle%20Vice%20fanny%0A%20%20%20%20%20%20%20%20%20%20pack%2C%20Williamsburg%20roof%20party%20Wes%20Anderson%20mlkshk%0A%20%20%20%20%20%20%20%20%20%20seitan%20brunch%20before%20they%20sold%20out%20lo-fi%20XOXO%20tofu%0A%20%20%20%20%20%20%20%20%20%20scenester%20small%20batch.%0A%20%20%20%20%20%20%3C%2Fp%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%20%20%3Cnovo-nav-content%3E%0A%20%20%20%20%20%20%3Ch1%3ETab%202%20Content%3C%2Fh1%3E%0A%0A%20%20%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%20%20Synth%20polaroid%20bitters%20chillwave%20pickled.%0A%20%20%20%20%20%20%3C%2Fp%3E%0A%20%20%3C%2Fnovo-nav-content%3E%0A%3C%2Fnovo-nav-outlet%3E%0A`\n    },\n    'activity-section': {\n        title: 'Activity Section',\n        component: ActivitySectionExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20DateCell%2C%20PercentageCell%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Activity%20Section%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'activity-section-example'%2C%0A%20%20templateUrl%3A%20'activity-section-example.html'%2C%0A%20%20styleUrls%3A%20%5B'activity-section-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ActivitySectionExample%20%7B%0A%20%20public%20isDisabled%3A%20boolean%20%3D%20true%3B%0A%20%20public%20details%3A%20any%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20const%20columns%20%3D%20%5B%0A%20%20%20%20%20%20%7B%20title%3A%20'Name'%2C%20name%3A%20'name'%2C%20ordering%3A%20true%2C%20type%3A%20'link'%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%20title%3A%20'Position'%2C%20name%3A%20'position'%2C%20ordering%3A%20true%2C%20filtering%3A%20true%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Extn.'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'ext'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20renderer%3A%20(object)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20object.ext.obj%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20compare%3A%20(sort%2C%20previous%2C%20current)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20const%20first%20%3D%20previous.obj%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20second%20%3D%20current.obj%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20(first%20%3E%20second)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20sort%20%3D%3D%3D%20'desc'%20%3F%20-1%20%3A%201%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20if%20(first%20%3C%20second)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20sort%20%3D%3D%3D%20'asc'%20%3F%20-1%20%3A%201%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20return%200%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Start%20date'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'date'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'startDate'%2C%0A%20%20%20%20%20%20%20%20renderer%3A%20DateCell%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20%20%20range%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'%25'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'percent'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20renderer%3A%20PercentageCell%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Salary'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'salary'%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20renderer%3A%20(object)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60%24%20%24%7BNumber(object.salary).toFixed(2)%7D%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Status'%2C%0A%20%20%20%20%20%20%20%20name%3A%20'status'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%5D%3B%0A%20%20%20%20this.details%20%3D%20%7B%0A%20%20%20%20%20%20columns%3A%20columns.slice()%2C%0A%20%20%20%20%20%20rows%3A%20TableData.slice()%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20paging%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20current%3A%201%2C%0A%20%20%20%20%20%20%20%20%20%20itemsPerPage%3A%2010%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20sorting%3A%20true%2C%0A%20%20%20%20%20%20%20%20filtering%3A%20true%2C%0A%20%20%20%20%20%20%20%20ordering%3A%20true%2C%0A%20%20%20%20%20%20%20%20resizing%3A%20true%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%7D%0A%0Aexport%20const%20TableData%20%3D%20%5B%0A%20%20%7B%0A%20%20%20%20name%3A%20'Victoria%20Cantrell'%2C%0A%20%20%20%20position%3A%20'Integer%20Corporation'%2C%0A%20%20%20%20office%3A%20'Croatia'%2C%0A%20%20%20%20ext%3A%20%7B%20obj%3A%20'8262'%20%7D%2C%0A%20%20%20%20startDate%3A%20new%20Date('2017%2F08%2F19')%2C%0A%20%20%20%20salary%3A%20208178%2C%0A%20%20%20%20percent%3A%200.5%2C%0A%20%20%20%20status%3A%20'New%20Lead'%2C%0A%20%20%20%20description%3A%0A%20%20%20%20%20%20'When%20there%20was%20despair%20in%20the%20dust%20bowl%20and%20depression%20across%20the%20land%2C%20she%20saw%20a%20nation%20conquer%20fear%20itself%20with%20a%20New%20Deal%2C%20new%20jobs%20and%20a%20new%20sense%20of%20common%20purpose.%20Yes%20we%20can.'%2C%0A%20%20%20%20categories%3A%20%5B'Temporary'%2C%20'Developer'%5D%2C%0A%20%20%7D%2C%0A%20%20%7B%0A%20%20%20%20name%3A%20'Pearl%20Crosby'%2C%0A%20%20%20%20position%3A%20'In%20PC'%2C%0A%20%20%20%20office%3A%20'Cambodia'%2C%0A%20%20%20%20ext%3A%20%7B%20obj%3A%20'8262'%20%7D%2C%0A%20%20%20%20startDate%3A%20new%20Date('2017%2F10%2F08')%2C%0A%20%20%20%20salary%3A%20114367%2C%0A%20%20%20%20percent%3A%200.5%2C%0A%20%20%20%20status%3A%20'New%20Lead'%2C%0A%20%20%20%20description%3A%0A%20%20%20%20%20%20'When%20there%20was%20despair%20in%20the%20dust%20bowl%20and%20depression%20across%20the%20land%2C%20she%20saw%20a%20nation%20conquer%20fear%20itself%20with%20a%20New%20Deal%2C%20new%20jobs%20and%20a%20new%20sense%20of%20common%20purpose.%20Yes%20we%20can.'%2C%0A%20%20%20%20categories%3A%20%5B'Temporary'%2C%20'Developer'%5D%2C%0A%20%20%7D%2C%0A%20%20%7B%0A%20%20%20%20name%3A%20'Colette%20Foley'%2C%0A%20%20%20%20position%3A%20'Lorem%20Inc.'%2C%0A%20%20%20%20office%3A%20'Korea%2C%20North'%2C%0A%20%20%20%20ext%3A%20%7B%20obj%3A%20'8262'%20%7D%2C%0A%20%20%20%20startDate%3A%20new%20Date('2017%2F07%2F19')%2C%0A%20%20%20%20salary%3A%20721473%2C%0A%20%20%20%20status%3A%20'New%20Lead'%2C%0A%20%20%20%20percent%3A%201%2C%0A%20%20%20%20description%3A%0A%20%20%20%20%20%20'To%20my%20campaign%20manager%20David%20Plouffe%2C%20my%20chief%20strategist%20David%20Axelrod%2C%20and%20the%20best%20campaign%20team%20ever%20assembled%20in%20the%20history%20of%20politics%20%E2%80%93%20you%20made%20this%20happen%2C%20and%20I%20am%20forever%20grateful%20for%20what%20you%E2%80%99ve%20sacrificed%20to%20get%20it%20done.'%2C%0A%20%20%20%20categories%3A%20%5B'Temporary'%2C%20'Developer'%5D%2C%0A%20%20%7D%2C%0A%5D%3B%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-expansion-panel%20theme%3D%22contact%22%20padding%3D%22false%22%3E%0A%20%20%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-panel-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-icon%3Eperson%3C%2Fnovo-icon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Clabel%3EContacts%3C%2Flabel%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-panel-title%3E%0A%20%20%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%0A%20%20%20%20%3Cnovo-table%20class%3D%22table-condensed%22%0A%20%20%20%20%20%20%20%20%5Brows%5D%3D%22details.rows%22%0A%20%20%20%20%20%20%20%20%5Bcolumns%5D%3D%22details.columns%22%0A%20%20%20%20%20%20%20%20%5Bconfig%5D%3D%22details.config%22%0A%20%20%20%20%20%20%20%20rowIdentifier%3D%22name%22%3E%3C%2Fnovo-table%3E%0A%0A%0A%3C%2Fnovo-expansion-panel%3E%0A%3Cnovo-expansion-panel%20theme%3D%22job%22%20%5BhideToggle%5D%3D%22jp.expanded%22%20%23jp%3E%0A%20%20%20%20%3Cnovo-expansion-panel-header%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-panel-title%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-icon%3Ejob%3C%2Fnovo-icon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Clabel%3EJob%20Orders%3C%2Flabel%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-panel-title%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20icon%3D%22add-thin%22%20%5Bhidden%5D%3D%22!jp.expanded%22%3EAdd%20Job%20Order%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fnovo-expansion-panel-header%3E%0A%0A%20%20%20%20%3Cp%3EThis%20is%20the%20primary%20content%20of%20the%20panel.%3C%2Fp%3E%0A%0A%3C%2Fnovo-expansion-panel%3E%0A`\n    },\n    'record-header': {\n        title: 'Basic Header Example',\n        component: RecordHeaderExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0Aconst%20HEADER_THEMES%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'contact'%2C%20'opportunity'%2C%20'lead'%2C%20'light'%2C%20'white'%5D%3B%0Aconst%20HEADER_ICONS%20%3D%20%5B'company'%2C%20'job'%2C%20'candidate'%2C%20'person'%2C%20'opportunity'%2C%20'lead'%2C%20'bolt'%2C%20'shield'%5D%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Header%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'record-header-example'%2C%0A%20%20templateUrl%3A%20'record-header-example.html'%2C%0A%20%20styleUrls%3A%20%5B'record-header-example.css'%5D%2C%0A%7D)%0Aexport%20class%20RecordHeaderExample%20%7B%0A%20%20public%20theme%3A%20string%20%3D%20'company'%3B%0A%20%20public%20icon%3A%20string%20%3D%20'company'%3B%0A%20%20public%20record%3A%20any%3B%0A%20%20public%20values%3A%20any%5B%5D%3B%0A%20%20public%20tabs%3A%20string%5B%5D%3B%0A%20%20private%20options%3A%20any%20%3D%20%7B%0A%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20icon%3A%20'clipboard'%2C%0A%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%7D%3B%0A%20%20private%20themeIndex%3A%20number%20%3D%200%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%0A%20%20%20%20this.refresh()%3B%0A%20%20%7D%0A%0A%20%20refresh()%20%7B%0A%20%20%20%20this.values%20%3D%20undefined%3B%0A%20%20%20%20this.tabs%20%3D%20undefined%3B%0A%20%20%20%20this.record%20%3D%20undefined%3B%0A%0A%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.values%20%3D%20%5B%7B%20label%3A%20'Status'%2C%20data%3A%20'Open'%20%7D%2C%20%7B%20label%3A%20'Phone'%2C%20data%3A%20'555-555-5555'%20%7D%2C%20%7B%20label%3A%20'Address'%2C%20data%3A%20'Boston%2C%20MA'%20%7D%5D%3B%0A%20%20%20%20%20%20this.tabs%20%3D%20%5B'Overview'%2C%20'Edit'%2C%20'Activity'%5D%3B%0A%20%20%20%20%20%20this.record%20%3D%20%7B%0A%20%20%20%20%20%20%20%20id%3A%20101%2C%0A%20%20%20%20%20%20%20%20name%3A%20'Acme%20Corporation%2C%20LLC'%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%2C%205000)%3B%0A%20%20%7D%0A%0A%20%20changeTheme()%20%7B%0A%20%20%20%20this.themeIndex%20%3D%20this.themeIndex%20%3D%3D%3D%20HEADER_THEMES.length%20-%201%20%3F%200%20%3A%20this.themeIndex%20%2B%201%3B%0A%20%20%20%20this.theme%20%3D%20HEADER_THEMES%5Bthis.themeIndex%5D%3B%0A%20%20%20%20this.icon%20%3D%20HEADER_ICONS%5Bthis.themeIndex%5D%3B%0A%20%20%7D%0A%0A%20%20catchEv(type%2C%20ev)%20%7B%0A%20%20%20%20%2F%2F%20Set%20toast%20options%0A%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20title%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20message%3A%20%60%24%7Bev%7D%20fired...%60%2C%0A%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20icon%3A%20%60%24%7Btype%7D%60%2C%0A%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Fire%20toast%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cheader%20theme%3D%22company%22%3E%0A%20%20%3Cnovo-icon%3Ecompany%3C%2Fnovo-icon%3E%0A%20%20%3Ch1%20novo-title%20%5BisLoading%5D%3D%22record%22%3E%0A%20%20%20%20%3Cspan%20*skeleton%3E%3C%2Fspan%3E%0A%20%20%20%20%3Cspan%20*loaded%3E%7B%7Brecord.id%7D%7D%20%7C%20%7B%7Brecord.name%7D%7D%3C%2Fspan%3E%0A%20%20%3C%2Fh1%3E%0A%20%20%3Cnovo-action%20icon%3D%22convert%22%20tooltip%3D%22Change%20Theme%22%20(click)%3D%22changeTheme()%22%3E%3C%2Fnovo-action%3E%0A%20%20%3Cnovo-action%20icon%3D%22refresh%22%20tooltip%3D%22Refresh%22%20(click)%3D%22refresh()%22%3E%3C%2Fnovo-action%3E%0A%20%20%3Cnovo-action%20icon%3D%22times%22%20tooltip%3D%22Show%20Popup%22%20(click)%3D%22catchEv('close'%2C%20%24event)%22%3E%3C%2Fnovo-action%3E%0A%20%20%3Csection%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20icon%3D%22google%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20icon%3D%22linkedin-f%22%3E%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22icon%22%20icon%3D%22location%22%3E%3C%2Fbutton%3E%0A%20%20%3C%2Fsection%3E%0A%20%20%3Cnovo-list%20class%3D%22bgc-off-white%22%20direction%3D%22horizontal%22%20%5BisLoading%5D%3D%22values%22%3E%0A%20%20%20%20%3Cnovo-value%20*skeleton%3E%3C%2Fnovo-value%3E%0A%20%20%20%20%3Cnovo-value%20*skeleton%3E%3C%2Fnovo-value%3E%0A%20%20%20%20%3Cnovo-value%20*ngFor%3D%22let%20value%20of%20values%22%20%5Blabel%5D%3D%22value.label%22%20%5Bdata%5D%3D%22value.data%22%3E%3C%2Fnovo-value%3E%0A%20%20%3C%2Fnovo-list%3E%0A%20%20%3Cnovo-nav%20theme%3D%22white%22%20direction%3D%22horizontal%22%20condensed%3D%22true%22%20%5BisLoading%5D%3D%22tabs%22%3E%0A%20%20%20%20%3Cnovo-tab%20*skeleton%3E%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%20*skeleton%3E%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%20*skeleton%3E%3C%2Fnovo-tab%3E%0A%20%20%20%20%3Cnovo-tab%20*ngFor%3D%22let%20tab%20of%20tabs%22%3E%0A%20%20%20%20%20%20%3Cspan%3E%7B%7Btab%7D%7D%3C%2Fspan%3E%0A%20%20%20%20%3C%2Fnovo-tab%3E%0A%20%20%3C%2Fnovo-nav%3E%0A%3C%2Fheader%3E%0A`\n    },\n    'date-translations': {\n        title: 'Date Translations Example',\n        component: DateTranslationsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TranslateService%20%7D%20from%20'chomsky'%3B%0A%0A%2F**%0A%20*%20%40title%20Date%20Translations%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'date-translations-example'%2C%0A%20%20templateUrl%3A%20'date-translations-example.html'%2C%0A%20%20styleUrls%3A%20%5B'date-translations-example.css'%5D%2C%0A%7D)%0Aexport%20class%20DateTranslationsExample%20%7B%0A%20%20public%20currentLocale%3A%20string%20%3D%20'en-US'%3B%0A%20%20public%20useMilitaryTime%3A%20boolean%20%3D%20false%3B%0A%20%20public%20locales%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'en-US'%2C%0A%20%20%20%20%20%20value%3A%20'en-US'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'fr-FR'%2C%0A%20%20%20%20%20%20value%3A%20'fr-FR'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'ru-RU'%2C%0A%20%20%20%20%20%20value%3A%20'ru-RU'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20militaryTime%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'12%20Hour'%2C%0A%20%20%20%20%20%20value%3A%20false%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'24%20Hour'%2C%0A%20%20%20%20%20%20value%3A%20true%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20greeting%3A%20string%20%3D%20'greeting'%3B%0A%20%20public%20demoVariables%3A%20any%20%3D%20%7B%0A%20%20%20%20today%3A%20new%20Date()%2C%0A%20%20%20%20name%3A%20'Jane'%2C%0A%20%20%20%20balance%3A%209874.34%2C%0A%20%20%20%20count%3A%201%2C%0A%20%20%20%20timestamp%3A%201506470400000%2C%0A%20%20%7D%3B%0A%0A%20%20public%20translateService%3A%20any%20%3D%20TranslateService%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20TranslateService.setLocation('assets%2Fi18n%2F')%3B%0A%20%20%20%20TranslateService.onLocaleChange.subscribe((locale)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20Use%20en-US%0A%20%20%20%20this.changeLanguage('en-US')%3B%0A%20%20%7D%0A%0A%20%20changeLanguage(locale)%20%7B%0A%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20TranslateService.use(locale)%3B%0A%20%20%7D%0A%0A%20%20changeMilitaryTime(useMilitaryTime)%20%7B%0A%20%20%20%20this.useMilitaryTime%20%3D%20useMilitaryTime%3B%0A%20%20%20%20TranslateService.forceDisplayTo24HourTime(useMilitaryTime)%3B%0A%20%20%20%20this.changeLanguage(this.currentLocale)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `.spacer%20%7B%0A%20%20width%3A%208em%3B%0A%20%20display%3A%20inline-block%3B%0A%7D%0A`,\n        htmlSource: `%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22locales%22%20%5B(ngModel)%5D%3D%22currentLocale%22%20(onChange)%3D%22changeLanguage(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%3Cspan%20class%3D%22spacer%22%3E%3C%2Fspan%3E%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22militaryTime%22%20%5B(ngModel)%5D%3D%22useMilitaryTime%22%20(onChange)%3D%22changeMilitaryTime(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%0A%3Ch4%3EPipe%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'today'%20%7C%20translate%3A%20%7B%20today%3A%20demoVariables.today%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'formatToday'%20%7C%20translate%3A%20%7B%20today%3A%20demoVariables.today%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'long'%20%7C%20translate%3A%20%7B%20today%3A%20demoVariables.today%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'timeLong'%20%7C%20translate%3A%20%7B%20today%3A%20demoVariables.today%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'militaryFormat'%20%7C%20translate%3A%20%7B%20today%3A%20demoVariables.timestamp%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A%3Ch4%3EDirective%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'today'%22%20%5BdynamicValues%5D%3D%22%7B%20today%3A%20demoVariables.today%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'formatToday'%22%20%5BdynamicValues%5D%3D%22%7B%20today%3A%20demoVariables.today%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'long'%22%20%5BdynamicValues%5D%3D%22%7B%20today%3A%20demoVariables.today%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'timeLong'%22%20%5BdynamicValues%5D%3D%22%7B%20today%3A%20demoVariables.today%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'militaryFormat'%22%20%5BdynamicValues%5D%3D%22%7B%20today%3A%20demoVariables.timestamp%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'number-translations': {\n        title: 'Number & Currency Translations Example',\n        component: NumberTranslationsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TranslateService%20%7D%20from%20'chomsky'%3B%0A%0A%2F**%0A%20*%20%40title%20Number%20%26%20Currency%20Translations%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'number-translations-example'%2C%0A%20%20templateUrl%3A%20'number-translations-example.html'%2C%0A%20%20styleUrls%3A%20%5B'number-translations-example.css'%5D%2C%0A%7D)%0Aexport%20class%20NumberTranslationsExample%20%7B%0A%20%20public%20currentLocale%3A%20string%20%3D%20'en-US'%3B%0A%20%20public%20locales%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'en-US'%2C%0A%20%20%20%20%20%20value%3A%20'en-US'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'fr-FR'%2C%0A%20%20%20%20%20%20value%3A%20'fr-FR'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'ru-RU'%2C%0A%20%20%20%20%20%20value%3A%20'ru-RU'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20greeting%3A%20string%20%3D%20'greeting'%3B%0A%20%20public%20demoVariables%3A%20any%20%3D%20%7B%0A%20%20%20%20today%3A%20new%20Date()%2C%0A%20%20%20%20name%3A%20'Jane'%2C%0A%20%20%20%20balance%3A%209874.34%2C%0A%20%20%20%20count%3A%201%2C%0A%20%20%7D%3B%0A%0A%20%20public%20translateService%3A%20any%20%3D%20TranslateService%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20TranslateService.setLocation('assets%2Fi18n%2F')%3B%0A%20%20%20%20TranslateService.onLocaleChange.subscribe((locale)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20Use%20en-US%0A%20%20%20%20this.changeLanguage('en-US')%3B%0A%20%20%7D%0A%0A%20%20changeLanguage(locale)%20%7B%0A%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20TranslateService.use(locale)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22locales%22%20%5B(ngModel)%5D%3D%22currentLocale%22%20(onChange)%3D%22changeLanguage(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%0A%3Ch4%3EPipe%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'alert'%20%7C%20translate%3A%20%7B%20count%3A%20demoVariables.count%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'debt'%20%7C%20translate%3A%20%7B%20balance%3A%20demoVariables.balance%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A%3Ch4%3EDirective%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'alert'%22%20%5BdynamicValues%5D%3D%22%7B%20count%3A%20demoVariables.count%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'debt'%22%20%5BdynamicValues%5D%3D%22%7B%20balance%3A%20demoVariables.balance%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'plural-translations': {\n        title: 'Plural Translations Example',\n        component: PluralTranslationsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TranslateService%20%7D%20from%20'chomsky'%3B%0A%0A%2F**%0A%20*%20%40title%20Plural%20Translations%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'plural-translations-example'%2C%0A%20%20templateUrl%3A%20'plural-translations-example.html'%2C%0A%20%20styleUrls%3A%20%5B'plural-translations-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PluralTranslationsExample%20%7B%0A%20%20public%20currentLocale%3A%20string%20%3D%20'en-US'%3B%0A%20%20public%20locales%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'en-US'%2C%0A%20%20%20%20%20%20value%3A%20'en-US'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'fr-FR'%2C%0A%20%20%20%20%20%20value%3A%20'fr-FR'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'ru-RU'%2C%0A%20%20%20%20%20%20value%3A%20'ru-RU'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20greeting%3A%20string%20%3D%20'greeting'%3B%0A%20%20public%20demoVariables%3A%20any%20%3D%20%7B%0A%20%20%20%20today%3A%20new%20Date()%2C%0A%20%20%20%20name%3A%20'Jane'%2C%0A%20%20%20%20balance%3A%209874.34%2C%0A%20%20%20%20count%3A%201%2C%0A%20%20%7D%3B%0A%0A%20%20public%20translateService%3A%20any%20%3D%20TranslateService%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20TranslateService.setLocation('assets%2Fi18n%2F')%3B%0A%20%20%20%20TranslateService.onLocaleChange.subscribe((locale)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20Use%20en-US%0A%20%20%20%20this.changeLanguage('en-US')%3B%0A%20%20%7D%0A%0A%20%20changeLanguage(locale)%20%7B%0A%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20TranslateService.use(locale)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22locales%22%20%5B(ngModel)%5D%3D%22currentLocale%22%20(onChange)%3D%22changeLanguage(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%0A%3Ch4%3EPipe%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'messages'%20%7C%20translate%3A%20%7B%20quantity%3A%200%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'messages'%20%7C%20translate%3A%20%7B%20quantity%3A%201%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'messages'%20%7C%20translate%3A%20%7B%20quantity%3A%2020%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'messages'%20%7C%20translate%3A%20%7B%20quantity%3A%2050%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'candidate'%20%7C%20translate%3A%7B%20gender%3A%20'female'%2C%20quantity%3A%201%2C%20host%3A%20'Jane'%2C%20candidate%3A%20'candidates'%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'candidate'%20%7C%20translate%3A%7B%20gender%3A%20'male'%2C%20quantity%3A%200%2C%20host%3A%20'John'%2C%20candidate%3A%20'candidates'%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'candidate'%20%7C%20translate%3A%7B%20gender%3A%20'other'%2C%20quantity%3A%200%2C%20host%3A%20'Les%20gens'%2C%20candidate%3A%20'candidates'%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A%3Ch4%3EDirective%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'messages'%22%20%5BdynamicValues%5D%3D%22%7B%20quantity%3A%200%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'messages'%22%20%5BdynamicValues%5D%3D%22%7B%20quantity%3A%201%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'messages'%22%20%5BdynamicValues%5D%3D%22%7B%20quantity%3A%2020%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'messages'%22%20%5BdynamicValues%5D%3D%22%7B%20quantity%3A%2050%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'candidate'%22%20%5BdynamicValues%5D%3D%22%7B%20gender%3A%20'female'%2C%20quantity%3A%201%2C%20host%3A%20'Jane'%2C%20candidate%3A%20'candidates'%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'candidate'%22%20%5BdynamicValues%5D%3D%22%7B%20gender%3A%20'male'%2C%20quantity%3A%200%2C%20host%3A%20'John'%2C%20candidate%3A%20'candidates'%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'candidate'%22%20%5BdynamicValues%5D%3D%22%7B%20gender%3A%20'other'%2C%20quantity%3A%200%2C%20host%3A%20'Les%20gens'%2C%20candidate%3A%20'candidates'%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A`\n    },\n    'simple-translations': {\n        title: 'Simple Translations Example',\n        component: SimpleTranslationsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TranslateService%20%7D%20from%20'chomsky'%3B%0A%0A%2F**%0A%20*%20%40title%20Simple%20Translations%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'simple-translations-example'%2C%0A%20%20templateUrl%3A%20'simple-translations-example.html'%2C%0A%20%20styleUrls%3A%20%5B'simple-translations-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SimpleTranslationsExample%20%7B%0A%20%20public%20currentLocale%3A%20string%20%3D%20'en-US'%3B%0A%20%20public%20locales%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'en-US'%2C%0A%20%20%20%20%20%20value%3A%20'en-US'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'fr-FR'%2C%0A%20%20%20%20%20%20value%3A%20'fr-FR'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'ru-RU'%2C%0A%20%20%20%20%20%20value%3A%20'ru-RU'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20greeting%3A%20string%20%3D%20'greeting'%3B%0A%20%20public%20demoVariables%3A%20any%20%3D%20%7B%0A%20%20%20%20today%3A%20new%20Date()%2C%0A%20%20%20%20name%3A%20'Jane'%2C%0A%20%20%20%20balance%3A%209874.34%2C%0A%20%20%20%20count%3A%201%2C%0A%20%20%7D%3B%0A%0A%20%20public%20translateService%3A%20any%20%3D%20TranslateService%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20TranslateService.onLocaleChange.subscribe((locale)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20Use%20en-US%0A%20%20%20%20this.changeLanguage('en-US')%3B%0A%20%20%7D%0A%0A%20%20changeLanguage(locale)%20%7B%0A%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20TranslateService.use(locale)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22locales%22%20%5B(ngModel)%5D%3D%22currentLocale%22%20(onChange)%3D%22changeLanguage(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%0A%3Ch4%3EPipe%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'greeting'%20%7C%20translate%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A%3Ch4%3EDirective%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'greeting'%22%3E%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'translations-variables': {\n        title: 'Translations with Variables Example',\n        component: TranslationsVariablesExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20TranslateService%20%7D%20from%20'chomsky'%3B%0A%0A%2F**%0A%20*%20%40title%20Translations%20with%20Variables%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'translations-variables-example'%2C%0A%20%20templateUrl%3A%20'translations-variables-example.html'%2C%0A%20%20styleUrls%3A%20%5B'translations-variables-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TranslationsVariablesExample%20%7B%0A%20%20public%20currentLocale%3A%20string%20%3D%20'en-US'%3B%0A%20%20public%20locales%3A%20Array%3Cany%3E%20%3D%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'en-US'%2C%0A%20%20%20%20%20%20value%3A%20'en-US'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'fr-FR'%2C%0A%20%20%20%20%20%20value%3A%20'fr-FR'%2C%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20label%3A%20'ru-RU'%2C%0A%20%20%20%20%20%20value%3A%20'ru-RU'%2C%0A%20%20%20%20%7D%2C%0A%20%20%5D%3B%0A%20%20public%20greeting%3A%20string%20%3D%20'greeting'%3B%0A%20%20public%20demoVariables%3A%20any%20%3D%20%7B%0A%20%20%20%20today%3A%20new%20Date()%2C%0A%20%20%20%20name%3A%20'Jane'%2C%0A%20%20%20%20balance%3A%209874.34%2C%0A%20%20%20%20count%3A%201%2C%0A%20%20%7D%3B%0A%0A%20%20public%20translateService%3A%20any%20%3D%20TranslateService%3B%0A%0A%20%20constructor()%20%7B%0A%20%20%20%20%2F%2F%20Listen%20for%20changes%0A%20%20%20%20TranslateService.onLocaleChange.subscribe((locale)%20%3D%3E%20%7B%0A%20%20%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%2F%2F%20Use%20en-US%0A%20%20%20%20this.changeLanguage('en-US')%3B%0A%20%20%7D%0A%0A%20%20changeLanguage(locale)%20%7B%0A%20%20%20%20this.currentLocale%20%3D%20locale%3B%0A%20%20%20%20TranslateService.use(locale)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%0A%3Cnovo-tiles%20%5Boptions%5D%3D%22locales%22%20%5B(ngModel)%5D%3D%22currentLocale%22%20(onChange)%3D%22changeLanguage(%24event)%22%3E%3C%2Fnovo-tiles%3E%0A%0A%3Ch4%3EPipe%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%7B%7B%20'farewell'%20%7C%20translate%3A%20%7B%20name%3A%20'Jane'%20%7D%20%7D%7D%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A%3Ch4%3EDirective%3C%2Fh4%3E%0A%3Cdiv%20class%3D%22panel%20panel-default%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22panel-body%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%20%5Btranslate%5D%3D%22'farewell'%22%20%5BdynamicValues%5D%3D%22%7B%20name%3A%20'Jane'%20%7D%22%3E%3C%2Fp%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%0A`\n    },\n    'fi-adding-removing': {\n        title: 'Fi Adding Removing Example',\n        component: FiAddingRemovingExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20MockMetaHeaders%20%7D%20from%20'..%2FMockMeta'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Adding%20Removing%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-adding-removing-example'%2C%0A%20%20templateUrl%3A%20'fi-adding-removing-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-adding-removing-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiAddingRemovingExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%5B%5D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20addingRemovingFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20addingRemovingFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20%2F%2F%20Control%20above%20field%0A%20%20%20%20%20%20API.addControl(%0A%20%20%20%20%20%20%20%20'cat'%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'fieldAbove'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Added%20Above%20Cat'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD%2C%0A%20%20%20%20%20%20%20%20'DEFAULT'%2C%0A%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%2F%2F%20Control%20below%20field%0A%20%20%20%20%20%20API.addControl(%0A%20%20%20%20%20%20%20%20'name'%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'fieldBelow'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Added%20Below%20Name'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD%2C%0A%20%20%20%20%20%20%20%20'%3A)'%2C%0A%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%2F%2F%20Control%20at%20the%20top%20of%20the%20form%0A%20%20%20%20%20%20API.addControl(%0A%20%20%20%20%20%20%20%20'name'%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'top'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Added%20To%20The%20Very%20Top'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20FieldInteractionApi.FIELD_POSITIONS.TOP_OF_FORM%2C%0A%20%20%20%20%20%20%20%20'HIGHEST'%2C%0A%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%2F%2F%20Control%20at%20the%20bottom%20of%20the%20form%0A%20%20%20%20%20%20API.addControl(%0A%20%20%20%20%20%20%20%20'name'%2C%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20key%3A%20'bottom'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20'Added%20To%20The%20Very%20Bottom'%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20FieldInteractionApi.FIELD_POSITIONS.BOTTOM_OF_FORM%2C%0A%20%20%20%20%20%20%20%20'LOWEST'%2C%0A%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%2F%2F%20Remove%20the%20jersey%20color%20field%0A%20%20%20%20%20%20API.removeControl('jersey-color')%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20removeAddOnChangeFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20removeAddOnChangeFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20%2F%2F%20Select%20control%20with%20a%20field%20interaction%20on%20change%20event%0A%20%20%20%20%20%20const%20currentValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(currentValue%20%3D%3D%3D%20'Yes')%20%7B%0A%20%20%20%20%20%20%20%20API.removeControl('to-be-removed')%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.addControl(%0A%20%20%20%20%20%20%20%20%20%20'remove-select'%2C%0A%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20key%3A%20'to-be-removed'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'to-be-removed'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20label%3A%20'This%20field%20will%20be%20removed'%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD%2C%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Adding%20%2F%20Removing%20Interactions%0A%20%20%20%20this.controls%20%3D%20formUtils.toFieldSets(MockMetaHeaders%2C%20'%24%20USD'%2C%20%7B%7D%2C%20%7B%20token%3A%20'TOKEN'%2C%20military%3A%20true%20%7D)%3B%0A%20%20%20%20this.controls%5B2%5D.controls%5B0%5D.interactions%20%3D%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20removeAddOnChangeFunction%20%7D%5D%3B%0A%20%20%20%20this.controls%5B0%5D.controls%5B0%5D.interactions%20%3D%20%5B%7B%20event%3A%20'init'%2C%20script%3A%20addingRemovingFunction%20%7D%5D%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroupFromFieldset(this.controls)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-dynamic-form%20%5Bfieldsets%5D%3D%22controls%22%20%5B(form)%5D%3D%22form%22%20layout%3D%22vertical%22%3E%3C%2Fnovo-dynamic-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-async': {\n        title: 'Fi Async Example',\n        component: FiAsyncExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Async%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-async-example'%2C%0A%20%20templateUrl%3A%20'fi-async-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-async-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiAsyncExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20asyncFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20asyncFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20if%20(API.getActiveKey()%20%3D%3D%3D%20'async1')%20%7B%0A%20%20%20%20%20%20%20%20API.setLoading(API.getActiveKey()%2C%20true)%3B%0A%20%20%20%20%20%20%20%20setTimeout(function()%20%7B%0A%20%20%20%20%20%20%20%20%20%20API.setLoading(API.getActiveKey()%2C%20false)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%203000)%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.setLoading(API.getActiveKey()%2C%20true)%3B%0A%20%20%20%20%20%20%20%20setTimeout(function()%20%7B%0A%20%20%20%20%20%20%20%20%20%20API.setLoading(API.getActiveKey()%2C%20false)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%2015000)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Async%20Interactions%0A%20%20%20%20this.controls.async1Control%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'async1'%2C%0A%20%20%20%20%20%20value%3A%205%2C%0A%20%20%20%20%20%20label%3A%20'Async%20Validation'%2C%0A%20%20%20%20%20%20description%3A%20'As%20you%20finish%20typing%2C%20the%20async%20check%20will%20mark%20the%20form%20as%20invalid'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20asyncFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.async2Control%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'async2'%2C%0A%20%20%20%20%20%20value%3A%205%2C%0A%20%20%20%20%20%20label%3A%20'Async%20Validation%20(takes%20too%20long)'%2C%0A%20%20%20%20%20%20description%3A%20'This%20one%20will%20take%20too%20long%20and%20trigger%20the%20default%20timeout%20(10s)'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20asyncFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.async1Control%2C%20this.controls.async2Control%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.async1Control%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.async2Control%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-calculation': {\n        title: 'Fi Calculation Example',\n        component: FiCalculationExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%2C%20DateTimeControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Calculation%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-calculation-example'%2C%0A%20%20templateUrl%3A%20'fi-calculation-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-calculation-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiCalculationExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20snippet%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20calculationFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20calculationFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20a%20%3D%20Number(API.getValue('a'))%3B%0A%20%20%20%20%20%20const%20b%20%3D%20Number(API.getValue('b'))%3B%0A%20%20%20%20%20%20API.setValue('sum'%2C%20a%20%2B%20b)%3B%0A%20%20%20%20%20%20API.setValue('date'%2C%20new%20Date())%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Calculation%20Field%20Interactions%0A%20%20%20%20this.controls.aControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20key%3A%20'a'%2C%0A%20%20%20%20%20%20label%3A%20'A'%2C%0A%20%20%20%20%20%20value%3A%201%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20invokeOnInit%3A%20false%2C%20script%3A%20calculationFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.bControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20key%3A%20'b'%2C%0A%20%20%20%20%20%20label%3A%20'B'%2C%0A%20%20%20%20%20%20value%3A%201%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20invokeOnInit%3A%20false%2C%20script%3A%20calculationFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.sumControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20key%3A%20'sum'%2C%0A%20%20%20%20%20%20label%3A%20'Sum'%2C%0A%20%20%20%20%20%20description%3A%20'I%20am%20automatically%20set%20when%20you%20type%20in%20the%20boxes%20above%20me!'%2C%0A%20%20%20%20%20%20readOnly%3A%20true%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.dateModifiedControl%20%3D%20new%20DateTimeControl(%7B%0A%20%20%20%20%20%20key%3A%20'date'%2C%0A%20%20%20%20%20%20label%3A%20'Date%20Last%20Modified'%2C%0A%20%20%20%20%20%20value%3A%20new%20Date()%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5B%0A%20%20%20%20%20%20this.controls.aControl%2C%0A%20%20%20%20%20%20this.controls.bControl%2C%0A%20%20%20%20%20%20this.controls.sumControl%2C%0A%20%20%20%20%20%20this.controls.dateModifiedControl%2C%0A%20%20%20%20%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.aControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.bControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.sumControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.dateModifiedControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3E%0A%20%20%20%20Form%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-confirm': {\n        title: 'Fi Confirm Example',\n        component: FiConfirmExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Confirm%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-confirm-example'%2C%0A%20%20templateUrl%3A%20'fi-confirm-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-confirm-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiConfirmExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20confirmFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20confirmFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20if%20(API.getActiveKey()%20%3D%3D%3D%20'confirm1')%20%7B%0A%20%20%20%20%20%20%20%20API.confirmChanges(API.getActiveKey())%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.confirmChanges(API.getActiveKey()%2C%20'This%20is%20VERY%20serious!')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Confirm%20Interactions%0A%20%20%20%20this.controls.confirm1Control%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'confirm1'%2C%0A%20%20%20%20%20%20value%3A%20'Hello!'%2C%0A%20%20%20%20%20%20label%3A%20'Prompt!'%2C%0A%20%20%20%20%20%20description%3A%20'As%20you%20take%20focus%20out%20of%20this%20field%20you%20will%20be%20prompted%20for%20changes!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20confirmFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.confirm2Control%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'confirm2'%2C%0A%20%20%20%20%20%20value%3A%20'Another!'%2C%0A%20%20%20%20%20%20label%3A%20'Custom%20Promp!'%2C%0A%20%20%20%20%20%20description%3A%20'You%20can%20provide%20a%20custom%20message!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20confirmFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.confirm1Control%2C%20this.controls.confirm2Control%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.confirm1Control%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.confirm2Control%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-enable-disable': {\n        title: 'Fi Enable Disable Example',\n        component: FiEnableDisableExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20CheckboxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Enable%20Disable%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-enable-disable-example'%2C%0A%20%20templateUrl%3A%20'fi-enable-disable-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-enable-disable-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiEnableDisableExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20enableDisableFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20enableDisableFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20currentValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(!currentValue)%20%7B%0A%20%20%20%20%20%20%20%20API.enable('text')%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.disable('text')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Enable%2FDisable%20Field%20Interactions%0A%20%20%20%20this.controls.textControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'text'%2C%0A%20%20%20%20%20%20label%3A%20'MyField'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.toggleControl%20%3D%20new%20CheckboxControl(%7B%0A%20%20%20%20%20%20key%3A%20'toggle'%2C%0A%20%20%20%20%20%20label%3A%20'Disable%3F'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20disable%20the%20above%20field!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20enableDisableFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.textControl%2C%20this.controls.toggleControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.textControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.toggleControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-globals': {\n        title: 'Fi Globals Example',\n        component: FiGlobalsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Globals%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-globals-example'%2C%0A%20%20templateUrl%3A%20'fi-globals-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-globals-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiGlobalsExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20globalsFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20globalsFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20API.setProperty(API.getActiveKey()%2C%20'label'%2C%20%60%24%7BAPI.getProperty(API.getActiveKey()%2C%20'label')%7D%20--%20%24%7BAPI.globals.TEST%7D%60)%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Global%20Field%20Interactions%0A%20%20%20%20this.controls.globalControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20key%3A%20'global'%2C%0A%20%20%20%20%20%20value%3A%205%2C%0A%20%20%20%20%20%20label%3A%20'Form%20Input'%2C%0A%20%20%20%20%20%20description%3A%20'The%20label%20gets%20updated%20on%20load%20to%20use%20a%20global!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'init'%2C%20script%3A%20globalsFunction%2C%20invokeOnInit%3A%20true%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.globalControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.globalControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-hide-show': {\n        title: 'Fi Hide Show Example',\n        component: FiHideShowExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20CheckboxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Hide%20Show%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-hide-show-example'%2C%0A%20%20templateUrl%3A%20'fi-hide-show-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-hide-show-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiHideShowExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20hideShowFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20hideShowFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20activeValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(!activeValue)%20%7B%0A%20%20%20%20%20%20%20%20API.show('text')%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.hide('text')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Hide%2FShow%20Field%20Interactions%0A%20%20%20%20this.controls.textControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'text'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20label%3A%20'MyField'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.text2Control%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'text2'%2C%0A%20%20%20%20%20%20label%3A%20'MyField'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.toggleControl%20%3D%20new%20CheckboxControl(%7B%0A%20%20%20%20%20%20key%3A%20'toggle'%2C%0A%20%20%20%20%20%20label%3A%20'Hidden%3F'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20toggle%20the%20above%20field%20to%20display%20or%20not!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20hideShowFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.textControl%2C%20this.controls.text2Control%2C%20this.controls.toggleControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.textControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.text2Control%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.toggleControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-messaging': {\n        title: 'Fi Messaging Example',\n        component: FiMessagingExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%0A%20%20FormUtils%2C%0A%20%20TextBoxControl%2C%0A%20%20CheckboxControl%2C%0A%20%20FieldInteractionApi%2C%0A%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Messaging%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-messaging-example'%2C%0A%20%20templateUrl%3A%20'fi-messaging-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-messaging-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiMessagingExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20messagingFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20messagingFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20if%20(API.getActiveKey()%20%3D%3D%3D%20'toast')%20%7B%0A%20%20%20%20%20%20%20%20API.displayToast(%7B%0A%20%20%20%20%20%20%20%20%20%20title%3A%20'New%20Value'%2C%0A%20%20%20%20%20%20%20%20%20%20message%3A%20API.getActiveValue()%2C%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%20else%20if%20(API.getActiveKey()%20%3D%3D%3D%20'tip'%20%7C%7C%20API.getActiveKey()%20%3D%3D%3D%20'tipHtml')%20%7B%0A%20%20%20%20%20%20%20%20const%20sanitize%20%3D%20!API.getValue('tipHtml')%3B%0A%20%20%20%20%20%20%20%20API.displayTip('tip'%2C%20API.getValue('tip')%2C%20'info'%2C%20true%2C%20sanitize)%3B%0A%20%20%20%20%20%20%7D%20else%20if%20(API.getActiveKey()%20%3D%3D%3D%20'prompt')%20%7B%0A%20%20%20%20%20%20%20%20API.promptUser(API.getActiveKey()%2C%20%5B'Update%20Fee%20Arrangement%20from%20Selected%20Company'%2C%20'Update%20DateLastModified%20to%20right%20now!'%5D).then(%0A%20%20%20%20%20%20%20%20%20%20function(result)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(result)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20console.log('PERFORM')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20console.log(%22DON'T%20PERFORM%22)%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Messaging%20Field%20Interactions%0A%20%20%20%20this.controls.toastControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'toast'%2C%0A%20%20%20%20%20%20label%3A%20'Toast'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20trigger%20a%20toast%20as%20you%20change%20the%20value!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20messagingFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.tipControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'tip'%2C%0A%20%20%20%20%20%20label%3A%20'Tip'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20trigger%20a%20tip%20well%20as%20you%20change%20the%20value!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20messagingFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.tipHtmlControl%20%3D%20new%20CheckboxControl(%7B%0A%20%20%20%20%20%20key%3A%20'tipHtml'%2C%0A%20%20%20%20%20%20label%3A%20'Display%20Tip%20as%20HTML'%2C%0A%20%20%20%20%20%20description%3A%20'Sets%20the%20API.displayTip()%20sanitize%20parameter%20to%20false.'%2C%0A%20%20%20%20%20%20value%3A%20false%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20messagingFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.promptControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'prompt'%2C%0A%20%20%20%20%20%20label%3A%20'Prompt%20User%20of%20Downstream%20Changes'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20messagingFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5B%0A%20%20%20%20%20%20this.controls.toastControl%2C%0A%20%20%20%20%20%20this.controls.tipControl%2C%0A%20%20%20%20%20%20this.controls.tipHtmlControl%2C%0A%20%20%20%20%20%20this.controls.promptControl%2C%0A%20%20%20%20%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.tipControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.tipHtmlControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.toastControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.promptControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-modify-added-picker': {\n        title: 'Fi Modify Added Picker Example',\n        component: FiModifyAddedPickerExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20FieldInteractionApi%2C%20PickerControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Modify%20Added%20Picker%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-modify-added-picker-example'%2C%0A%20%20templateUrl%3A%20'fi-modify-added-picker-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-modify-added-picker-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiModifyAddedPickerExample%20%7B%0A%20%20public%20form%3A%20any%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20%2F%2F%20Adding%20%2F%20Removing%20Interactions%0A%20%20%20%20let%20entityPickerFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20entityPickerFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20API.modifyPickerConfig('custom-entity-picker'%2C%20%7B%0A%20%20%20%20%20%20%20%20optionsPromise%3A%20(query%2C%20http)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20new%20Promise(function(resolve%2C%20reject)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(query%20%26%26%20query.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20http%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.get('http%3A%2F%2Fnovo-elements-mock.getsandbox.com%2Fusers')%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(function(results%3A%20any%5B%5D)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20results.map((result)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Setting%20the%20searchEntity%20on%20the%20item%20is%20important.%20We%20use%20it%20to%20format%20your%20display%20properly.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Valid%20options%20are%3A%20Candidate%2C%20ClientContact%2C%20ClientCorporation%2C%20CorporateUser%2C%20JobOrder%2C%20Lead%2C%20Opportunity%2C%20and%20Placement%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.searchEntity%20%3D%20'Candidate'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.subscribe(resolve%2C%20reject)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(%5B'DEFAULT'%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20format%3A%20'%24name'%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20how%20we%20set%20the%20picker%20to%20be%20of%20an%20entity%20type%0A%20%20%20%20%20%20%20%20resultsTemplateType%3A%20'entity-picker'%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20this.controls.pickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'custom-entity-picker'%2C%0A%20%20%20%20%20%20name%3A%20'custom-entity-picker'%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20label%3A%20'Custom%20Entity%20Picker'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'init'%2C%20script%3A%20entityPickerFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20this.formUtils.toFormGroup(%5Bthis.controls.pickerControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.pickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A`\n    },\n    'fi-modify-options': {\n        title: 'Fi Modify Options Example',\n        component: FiModifyOptionsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20CheckboxControl%2C%20FieldInteractionApi%2C%20SelectControl%2C%20PickerControl%20%7D%20from%20'novo-elements'%3B%0Aimport%20%7B%20map%20%7D%20from%20'rxjs%2Foperators'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Modify%20Options%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-modify-options-example'%2C%0A%20%20templateUrl%3A%20'fi-modify-options-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-modify-options-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiModifyOptionsExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20modifyOptionsAddFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20modifyOptionsAddFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20currentValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(!currentValue)%20%7B%0A%20%20%20%20%20%20%20%20API.removeStaticOption('select'%2C%20'NEW')%3B%0A%20%20%20%20%20%20%20%20API.removeStaticOption('picker'%2C%20'NEW')%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.addStaticOption('select'%2C%20'NEW')%3B%0A%20%20%20%20%20%20%20%20API.addStaticOption('select'%2C%20'NEW')%3B%20%2F%2F%20Duplicate%20options%20will%20be%20ignored%0A%20%20%20%20%20%20%20%20API.addStaticOption('picker'%2C%20'NEW')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%20%20%20%20const%20modifyOptionsAsyncFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20modifyOptionsAsyncFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20currentValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20switch%20(currentValue)%20%7B%0A%20%20%20%20%20%20%20%20case%201%3A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Static%0A%20%20%20%20%20%20%20%20%20%20API.setProperty('picker'%2C%20'label'%2C%20'Static%20Picker')%3B%0A%20%20%20%20%20%20%20%20%20%20API.modifyPickerConfig('picker'%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20options%3A%20%5B'A'%2C%20'B'%2C%20'C'%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20case%202%3A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Async%20with%20Options%20URL%0A%20%20%20%20%20%20%20%20%20%20API.setProperty('picker'%2C%20'label'%2C%20'Async%20Picker%20(with%20options%20url)')%3B%0A%20%20%20%20%20%20%20%20%20%20API.modifyPickerConfig(%0A%20%20%20%20%20%20%20%20%20%20%20%20'picker'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'%24name%20%24test'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20optionsUrl%3A%20'http%3A%2F%2Fnovo-elements-mock.getsandbox.com%2Fusers'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20function(result)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.test%20%3D%20'Built%20with%20Options%20URL!'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20case%203%3A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Async%20with%20Options%20URL%20Builder%0A%20%20%20%20%20%20%20%20%20%20API.setProperty('picker'%2C%20'label'%2C%20'Async%20Picker%20(with%20options%20url%20builder)')%3B%0A%20%20%20%20%20%20%20%20%20%20API.modifyPickerConfig(%0A%20%20%20%20%20%20%20%20%20%20%20%20'picker'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'%24name%20%24test'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20optionsUrlBuilder%3A%20(query)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20'http%3A%2F%2Fnovo-elements-mock.getsandbox.com%2Fusers'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20function(result)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.test%20%3D%20'Built%20with%20Options%20URL%20Builder!'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20case%204%3A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Async%20with%20Options%20Promise%0A%20%20%20%20%20%20%20%20%20%20API.setProperty('picker'%2C%20'label'%2C%20'Async%20Picker%20(with%20options%20promise)')%3B%0A%20%20%20%20%20%20%20%20%20%20API.modifyPickerConfig('picker'%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'%24name%20%24test'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20optionsPromise(query%2C%20http)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20new%20Promise(function(resolve%2C%20reject)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(query%20%26%26%20query.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20http%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.get('http%3A%2F%2Fnovo-elements-mock.getsandbox.com%2Fusers')%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(function(results%3A%20any%5B%5D)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20results.map((result)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.test%20%3D%20'Built%20with%20Options%20Promise'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.subscribe(resolve%2C%20reject)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(%5B'DEFAULT'%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Modify%20Options%20Field%20Interactions%0A%20%20%20%20this.controls.selectControl%20%3D%20new%20SelectControl(%7B%0A%20%20%20%20%20%20key%3A%20'select'%2C%0A%20%20%20%20%20%20label%3A%20'Select'%2C%0A%20%20%20%20%20%20options%3A%20%5B'A'%2C%20'B'%2C%20'C'%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.pickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'picker'%2C%0A%20%20%20%20%20%20label%3A%20'Static%20Picker'%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20options%3A%20%5B'A'%2C%20'B'%2C%20'C'%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.toggleControl%20%3D%20new%20CheckboxControl(%7B%0A%20%20%20%20%20%20key%3A%20'toggle'%2C%0A%20%20%20%20%20%20label%3A%20'Add%20Option%3F'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20add%20options%20to%20the%20above%20field!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20modifyOptionsAddFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.makePickerAsyncControl%20%3D%20new%20SelectControl(%7B%0A%20%20%20%20%20%20key%3A%20'async'%2C%0A%20%20%20%20%20%20label%3A%20'Async%20Picker%3F'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20make%20the%20picker%20now%20hit%20a%20service!'%2C%0A%20%20%20%20%20%20value%3A%201%2C%0A%20%20%20%20%20%20options%3A%20%5B%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20'Not%20Async'%2C%20value%3A%201%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20'Async%20With%20Options%20URL'%2C%20value%3A%202%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20'Async%20With%20Options%20URL%20Builder'%2C%20value%3A%203%20%7D%2C%0A%20%20%20%20%20%20%20%20%7B%20label%3A%20'Async%20With%20Options%20Promise'%2C%20value%3A%204%20%7D%2C%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20modifyOptionsAsyncFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5B%0A%20%20%20%20%20%20this.controls.selectControl%2C%0A%20%20%20%20%20%20this.controls.pickerControl%2C%0A%20%20%20%20%20%20this.controls.toggleControl%2C%0A%20%20%20%20%20%20this.controls.makePickerAsyncControl%2C%0A%20%20%20%20%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.selectControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.pickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.toggleControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.makePickerAsyncControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-nested': {\n        title: 'Fi Nested Form Example',\n        component: FiNestedExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FieldInteractionApi%2C%20FormUtils%2C%20NovoControlConfig%2C%20NovoFormGroup%2C%20RadioControl%2C%20TextBoxControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Nested%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-nested-example'%2C%0A%20%20templateUrl%3A%20'fi-nested-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-nested-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiNestedExample%20%7B%0A%20%20public%20form%3A%20NovoFormGroup%3B%0A%20%20public%20minPayRateControl%3A%20TextBoxControl%3B%0A%20%20public%20maxPayRateControl%3A%20TextBoxControl%3B%0A%20%20public%20controls%3A%20NovoControlConfig%5B%5D%3B%0A%20%20public%20initialValue%20%3D%20%5B%0A%20%20%20%20%7B%20selected%3A%20true%2C%20label%3A%20%60First%20Shift%60%2C%20multiplier%3A%201%2C%20payRate%3A%2040%20%7D%2C%0A%20%20%20%20%7B%20selected%3A%20false%2C%20label%3A%20%60%60%2C%20multiplier%3A%201.5%2C%20payRate%3A%2060%20%7D%2C%0A%20%20%20%20%7B%20selected%3A%20false%2C%20label%3A%20%60%60%2C%20multiplier%3A%202.0%2C%20payRate%3A%2080%20%7D%2C%0A%20%20%5D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20onMinMaxPayRateChanged%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20Validate%20the%20min%2Fmax%20range%0A%20%20%20%20%20%20const%20minPayRate%20%3D%20Number(API.getValue('minPayRate'))%3B%0A%20%20%20%20%20%20const%20maxPayRate%20%3D%20Number(API.getValue('maxPayRate'))%3B%0A%20%20%20%20%20%20if%20(minPayRate%20%3E%20maxPayRate)%20%7B%0A%20%20%20%20%20%20%20%20API.markAsInvalid(API.getActiveKey()%2C%20'Range%20is%20invalid.%20Please%20ensure%20that%20the%20minimum%20does%20not%20exceed%20the%20maximum.')%3B%0A%20%20%20%20%20%20%20%20API.displayTip('minPayRate'%2C%20'Range%20is%20invalid.%20Please%20ensure%20that%20the%20minimum%20does%20not%20exceed%20the%20maximum.'%2C%20'caution')%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20API.form%20is%20equal%20the%20top%20level%20form%20since%20the%20min%2Fmax%20fields%20are%20directly%20on%20the%20form%2C%20not%20part%20of%20a%20nested%20form%0A%20%20%20%20%20%20%20%20this.calculatePayRates(API%2C%20API.form)%3B%0A%20%20%20%20%20%20%20%20API.clearTip('minPayRate')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20onSelectedChanged%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20If%20my%20row%20is%20selected%2C%20deselect%20other%20rows%20without%20causing%20cascading%20changes%0A%20%20%20%20%20%20if%20(API.getActiveValue()%20%3D%3D%3D%20true)%20%7B%0A%20%20%20%20%20%20%20%20API.getParent().controls.forEach(form%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(API.getIndex()%20!%3D%3D%20API.getIndex(form))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20API.setValue(API.getActiveKey()%2C%20false%2C%20%7B%20emitEvent%3A%20false%20%7D%2C%20form)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20onLabelChanged%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20Update%20the%20labels%20for%20the%20Overtime%2FDouble%20Time%20earn%20codes%0A%20%20%20%20%20%20if%20(API.getIndex()%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20const%20overtimeForm%20%3D%20API.getParent().controls%5B1%5D%3B%0A%20%20%20%20%20%20%20%20const%20doubleTimeForm%20%3D%20API.getParent().controls%5B2%5D%3B%0A%20%20%20%20%20%20%20%20if%20(overtimeForm)%20%7B%0A%20%20%20%20%20%20%20%20%20%20API.setValue(API.getActiveKey()%2C%20API.getActiveValue()%20%2B%20'%20-%20OT'%2C%20%7B%20emitEvent%3A%20false%20%7D%2C%20overtimeForm)%3B%0A%20%20%20%20%20%20%20%20%20%20API.setReadOnly(API.getActiveKey()%2C%20true%2C%20overtimeForm)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(doubleTimeForm)%20%7B%0A%20%20%20%20%20%20%20%20%20%20API.setValue(API.getActiveKey()%2C%20API.getActiveValue()%20%2B%20'%20-%20DT'%2C%20%7B%20emitEvent%3A%20false%20%7D%2C%20doubleTimeForm)%3B%0A%20%20%20%20%20%20%20%20%20%20API.setReadOnly(API.getActiveKey()%2C%20true%2C%20doubleTimeForm)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20onMultiplierChanged%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20Disable%20the%20base%20rate%20multiplier%20since%20it%20is%20fixed%20at%20one%0A%20%20%20%20%20%20API.setReadOnly(API.getActiveKey()%2C%20API.getIndex()%20%3D%3D%3D%200)%3B%0A%0A%20%20%20%20%20%20%2F%2F%20The%20parent%20of%20this%20nested%20row%20form%20is%20the%20rows%20form%20array%2C%20and%20the%20grandparent%20is%20the%20main%20form%20object%0A%20%20%20%20%20%20const%20rowsFormArray%20%3D%20API.getParent()%3B%0A%20%20%20%20%20%20const%20topLevelForm%20%3D%20API.getParent(rowsFormArray)%3B%0A%20%20%20%20%20%20this.calculatePayRates(API%2C%20topLevelForm)%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20onPayRateChanged%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20Disable%20the%20non-base%20rate%20payRates%20since%20they%20are%20auto%20calculated%0A%20%20%20%20%20%20API.setReadOnly(API.getActiveKey()%2C%20API.getIndex()%20%3E%200)%3B%0A%0A%20%20%20%20%20%20%2F%2F%20The%20parent%20of%20this%20nested%20row%20form%20is%20the%20rows%20form%20array%2C%20and%20the%20grandparent%20is%20the%20main%20form%20object%0A%20%20%20%20%20%20const%20rowsFormArray%20%3D%20API.getParent()%3B%0A%20%20%20%20%20%20const%20topLevelForm%20%3D%20API.getParent(rowsFormArray)%3B%0A%20%20%20%20%20%20this.calculatePayRates(API%2C%20topLevelForm)%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20this.minPayRateControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20key%3A%20'minPayRate'%2C%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20label%3A%20'Minimum%20Pay%20Rate'%2C%0A%20%20%20%20%20%20value%3A%2020%2C%0A%20%20%20%20%20%20currencyFormat%3A%20'%24%20USD'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20onMinMaxPayRateChanged%20%7D%5D%2C%0A%20%20%20%20%20%20tooltip%3A%20'If%20the%20value%20of%20any%20pay%20rates%20are%20below%20this%20value%20then%20the%20form%20will%20be%20marked%20invalid.'%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.maxPayRateControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20key%3A%20'maxPayRate'%2C%0A%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20label%3A%20'Maximum%20Pay%20Rate'%2C%0A%20%20%20%20%20%20value%3A%2080%2C%0A%20%20%20%20%20%20tooltip%3A%20'If%20the%20value%20of%20any%20pay%20rates%20are%20above%20this%20value%20then%20the%20form%20will%20be%20marked%20invalid.'%2C%0A%20%20%20%20%20%20currencyFormat%3A%20'%24%20USD'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20onMinMaxPayRateChanged%20%7D%5D%2C%0A%20%20%20%20%20%20tipWell%3A%20%7B%0A%20%20%20%20%20%20%20%20tip%3A%20'This%20form%20is%20interactive!%20Try%20adjusting%20the%20min%2Fmax%20and%20pay%20rates%20to%20see%20the%20custom%20form%20validation%20logic%20that%20is%20enabled%20by%20field%20interactions%20across%20nested%20forms.'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'info'%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.minPayRateControl%2C%20this.maxPayRateControl%5D)%3B%0A%0A%20%20%20%20this.controls%20%3D%20%5B%0A%20%20%20%20%20%20new%20RadioControl(%7B%0A%20%20%20%20%20%20%20%20key%3A%20'selected'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Selected'%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B%7B%20label%3A%20''%2C%20value%3A%20true%20%7D%5D%2C%0A%20%20%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20onSelectedChanged%20%7D%5D%2C%0A%20%20%20%20%20%20%20%20tooltip%3A%20'Selecting%20a%20radio%20button%20will%20de-select%20buttons%20on%20the%20other%20forms%2C%20making%20multiple%20nested%20forms%20appear%20as%20a%20single%20form.'%2C%0A%20%20%20%20%20%20%7D)%2C%0A%20%20%20%20%20%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20%20%20key%3A%20'label'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Earn%20Code'%2C%0A%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20interactions%3A%20%5B%7B%20invokeOnInit%3A%20true%2C%20event%3A%20'change'%2C%20script%3A%20onLabelChanged%20%7D%5D%2C%0A%20%20%20%20%20%20%20%20tooltip%3A%20'Labels%20on%20other%20nested%20forms%20will%20be%20updated%20based%20on%20this%20label.'%2C%0A%20%20%20%20%20%20%7D)%2C%0A%20%20%20%20%20%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20%20%20key%3A%20'multiplier'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Multiplier'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'bigdecimal'%2C%0A%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20interactions%3A%20%5B%7B%20invokeOnInit%3A%20true%2C%20event%3A%20'change'%2C%20script%3A%20onMultiplierChanged%20%7D%5D%2C%0A%20%20%20%20%20%20%20%20tooltip%3A%20'Updating%20the%20multiplier%20will%20auto%20calculate%20the%20resulting%20pay%20rate.'%2C%0A%20%20%20%20%20%20%7D)%2C%0A%20%20%20%20%20%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20%20%20key%3A%20'payRate'%2C%0A%20%20%20%20%20%20%20%20label%3A%20'Pay%20Rate'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'currency'%2C%0A%20%20%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20%20%20interactions%3A%20%5B%7B%20invokeOnInit%3A%20true%2C%20event%3A%20'change'%2C%20script%3A%20onPayRateChanged%20%7D%5D%2C%0A%20%20%20%20%20%20%20%20currencyFormat%3A%20'%24%20USD'%2C%0A%20%20%20%20%20%20%7D)%2C%0A%20%20%20%20%5D%3B%0A%20%20%7D%0A%0A%20%20private%20calculatePayRates(API%3A%20FieldInteractionApi%2C%20topLevelForm%3A%20NovoFormGroup%20%7C%20any)%20%7B%0A%20%20%20%20%2F%2F%20Get%20values%20from%20the%20top%20level%20form%20controls%0A%20%20%20%20const%20minPayRate%20%3D%20Number(API.getValue('minPayRate'%2C%20topLevelForm))%3B%0A%20%20%20%20const%20maxPayRate%20%3D%20Number(API.getValue('maxPayRate'%2C%20topLevelForm))%3B%0A%0A%20%20%20%20%2F%2F%20Walk%20down%20to%20the%20nested%20forms%3A%20'rows'%20is%20the%20key%20input%20value%20passed%20to%20the%20NovoControlGroup%20for%20constructing%20the%20formArray%0A%20%20%20%20const%20rowForms%3A%20NovoFormGroup%5B%5D%20%7C%20any%5B%5D%20%3D%20API.getFormGroupArray('rows'%2C%20topLevelForm)%3B%0A%20%20%20%20const%20baseRowForm%20%3D%20rowForms%5B0%5D%3B%0A%20%20%20%20const%20basePayRate%20%3D%20Number(API.getValue('payRate'%2C%20baseRowForm))%3B%0A%0A%20%20%20%20let%20isPayRateValid%20%3D%20true%3B%0A%20%20%20%20rowForms.forEach(form%20%3D%3E%20%7B%0A%20%20%20%20%20%20%2F%2F%20Calculate%20the%20payRate%20for%20read%20only%20Overtime%20%2F%20Double%20time%20fields%0A%20%20%20%20%20%20if%20(API.getIndex(form)%20%3E%200)%20%7B%0A%20%20%20%20%20%20%20%20const%20multiplier%20%3D%20Number(API.getValue('multiplier'%2C%20form))%3B%0A%20%20%20%20%20%20%20%20API.setValue('payRate'%2C%20basePayRate%20*%20multiplier%2C%20%7B%20emitEvent%3A%20false%20%7D%2C%20form)%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F%2F%20Determine%20if%20each%20pay%20rate%20is%20valid.%20Put%20a%20tipWell%20on%20the%20invalid%20rows.%0A%20%20%20%20%20%20const%20payRate%20%3D%20Number(API.getValue('payRate'%2C%20form))%3B%0A%20%20%20%20%20%20if%20(payRate%20%3C%20minPayRate)%20%7B%0A%20%20%20%20%20%20%20%20isPayRateValid%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20API.displayTip('payRate'%2C%20'rate%20is%20below%20the%20minimum'%2C%20'caution'%2C%20false%2C%20false%2C%20form)%3B%0A%20%20%20%20%20%20%7D%20else%20if%20(payRate%20%3E%20maxPayRate)%20%7B%0A%20%20%20%20%20%20%20%20isPayRateValid%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20API.displayTip('payRate'%2C%20'rate%20exceeds%20the%20maximum'%2C%20'caution'%2C%20false%2C%20false%2C%20form)%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.clearTip('payRate'%2C%20form)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%2F%2F%20Mark%20the%20editable%20row%20as%20invalid%20if%20any%20nested%20payRate%20form%20has%20a%20value%20outside%20of%20the%20min%2Fmax%20bounds%0A%20%20%20%20if%20(isPayRateValid)%20%7B%0A%20%20%20%20%20%20API.markAsValid('payRate'%2C%20baseRowForm)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20API.markAsInvalid('payRate'%2C%20'pay%20rate%20is%20less%20than%20the%20minimum%20pay%20rate'%2C%20baseRowForm)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22minPayRateControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22maxPayRateControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cnovo-control-group%20%5Bform%5D%3D%22form%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Bcontrols%5D%3D%22controls%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5BinitialValue%5D%3D%22initialValue%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20remove%3D%22false%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20edit%3D%22false%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20key%3D%22rows%22%3E%3C%2Fnovo-control-group%3E%0A%3C%2Fnovo-form%3E%0A%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%3Cpre%3E%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fpre%3E%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-required': {\n        title: 'Fi Required Example',\n        component: FiRequiredExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20CheckboxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Required%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-required-example'%2C%0A%20%20templateUrl%3A%20'fi-required-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-required-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiRequiredExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20requiredFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20requiredFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20activeValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(activeValue)%20%7B%0A%20%20%20%20%20%20%20%20API.setRequired('required'%2C%20true)%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20API.setRequired('required'%2C%20false)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Required%20Field%20Interactions%0A%20%20%20%20this.controls.requiredControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'required'%2C%0A%20%20%20%20%20%20label%3A%20'Test'%2C%0A%20%20%20%20%20%20description%3A%20'I%20may%20or%20may%20not%20be%20required%2C%20play%20with%20the%20checkbox%20below!'%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.controls.toggleControl%20%3D%20new%20CheckboxControl(%7B%0A%20%20%20%20%20%20key%3A%20'toggle'%2C%0A%20%20%20%20%20%20label%3A%20'Required%3F'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20requiredFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.requiredControl%2C%20this.controls.toggleControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.requiredControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.toggleControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-tooltip': {\n        title: 'Fi Tooltip Example',\n        component: FiTooltipExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%2C%20TilesControl%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Tooltip%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-tooltip-example'%2C%0A%20%20templateUrl%3A%20'fi-tooltip-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-tooltip-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiTooltipExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20tooltipFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20tooltipFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20API.setTooltip(API.getActiveKey()%2C%20API.getActiveValue())%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20const%20tooltipUpdateFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20tooltipUpdateFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20API.getControl(this.controls.tooltipControl.key).tooltipSize%20%3D%20API.getValue(this.controls.tooltipSizeControl.key)%3B%0A%20%20%20%20%20%20API.getControl(this.controls.tooltipControl.key).tooltipPreline%20%3D%20API.getValue(this.controls.tooltipPrelineControl.key)%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Tooltip%20Field%20Interactions%0A%20%20%20%20this.controls.tooltipControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'text'%2C%0A%20%20%20%20%20%20key%3A%20'toolTipValue'%2C%0A%20%20%20%20%20%20label%3A%20'Tooltip'%2C%0A%20%20%20%20%20%20description%3A%20'I%20will%20add%20a%20tooltip%20to%20this%20control%20as%20a%20value%20is%20typed'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20tooltipFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.controls.tooltipSizeControl%20%3D%20new%20TilesControl(%7B%0A%20%20%20%20%20%20key%3A%20'tooltipSize'%2C%0A%20%20%20%20%20%20label%3A%20'Tooltip%20Size'%2C%0A%20%20%20%20%20%20description%3A%20'Changing%20me%20will%20set%20a%20fixed%20width%20on%20the%20tooltip'%2C%0A%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20'small'%2C%20label%3A%20'Small'%20%7D%2C%20%7B%20value%3A%20'medium'%2C%20label%3A%20'Medium'%20%7D%2C%20%7B%20value%3A%20'large'%2C%20label%3A%20'Large'%20%7D%5D%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20tooltipUpdateFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.controls.tooltipPrelineControl%20%3D%20new%20TilesControl(%7B%0A%20%20%20%20%20%20key%3A%20'tooltipPreline'%2C%0A%20%20%20%20%20%20label%3A%20'Tooltip%20Multiline'%2C%0A%20%20%20%20%20%20description%3A%20'Should%20the%20tooltip%20be%20multiple%20lines%20tall%20or%20all%20on%20one%20line%3F'%2C%0A%20%20%20%20%20%20options%3A%20%5B%7B%20value%3A%20true%2C%20label%3A%20'Yes'%20%7D%2C%20%7B%20value%3A%20false%2C%20label%3A%20'No'%20%7D%5D%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20tooltipUpdateFunction%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5B%0A%20%20%20%20%20%20this.controls.tooltipControl%2C%0A%20%20%20%20%20%20this.controls.tooltipSizeControl%2C%0A%20%20%20%20%20%20this.controls.tooltipPrelineControl%2C%0A%20%20%20%20%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.tooltipControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.tooltipSizeControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.tooltipPrelineControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'fi-validation': {\n        title: 'Fi Validation Example',\n        component: FiValidationExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%2F%2F%20Vendor%0Aimport%20%7B%20FormUtils%2C%20TextBoxControl%2C%20FieldInteractionApi%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Fi%20Validation%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'fi-validation-example'%2C%0A%20%20templateUrl%3A%20'fi-validation-example.html'%2C%0A%20%20styleUrls%3A%20%5B'fi-validation-example.css'%5D%2C%0A%7D)%0Aexport%20class%20FiValidationExample%20%7B%0A%20%20public%20form%3A%20any%20%3D%20%7B%7D%3B%0A%20%20public%20controls%3A%20any%20%3D%20%7B%7D%3B%0A%0A%20%20constructor(private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20const%20validationFunction%20%3D%20(API%3A%20FieldInteractionApi)%20%3D%3E%20%7B%0A%20%20%20%20%20%20console.log('%5BFieldInteractionDemo%5D%20-%20validationFunction')%3B%20%2F%2F%20tslint%3Adisable-line%0A%20%20%20%20%20%20const%20activeValue%20%3D%20API.getActiveValue()%3B%0A%20%20%20%20%20%20if%20(activeValue%20%3E%2010)%20%7B%0A%20%20%20%20%20%20%20%20API.markAsInvalid(API.getActiveKey()%2C%20'Too%20high!%20Make%20it%20a%20lot%20lower!!')%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Validation%20Field%20Interactions%0A%20%20%20%20this.controls.validationControl%20%3D%20new%20TextBoxControl(%7B%0A%20%20%20%20%20%20type%3A%20'number'%2C%0A%20%20%20%20%20%20key%3A%20'validation'%2C%0A%20%20%20%20%20%20value%3A%205%2C%0A%20%20%20%20%20%20label%3A%20'Validation%20Test'%2C%0A%20%20%20%20%20%20description%3A%20'Try%20to%20input%20a%20number%20larger%20then%2010!'%2C%0A%20%20%20%20%20%20interactions%3A%20%5B%7B%20event%3A%20'change'%2C%20script%3A%20validationFunction%2C%20invokeOnInit%3A%20true%20%7D%5D%2C%0A%20%20%20%20%7D)%3B%0A%20%20%20%20this.form%20%3D%20formUtils.toFormGroup(%5Bthis.controls.validationControl%5D)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-form%20%5Bform%5D%3D%22form%22%20layout%3D%22vertical%22%3E%0A%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22form%22%20%5Bcontrol%5D%3D%22controls.validationControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fnovo-form%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Value%20-%20%7B%7B%20form.value%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EForm%20Dirty%20-%20%7B%7B%20form.dirty%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A%3Cdiv%20class%3D%22final-value%22%3EIs%20Form%20Valid%3F%20-%20%7B%7B%20form.valid%20%7C%20json%20%7D%7D%3C%2Fdiv%3E%0A`\n    },\n    'custom-modal': {\n        title: 'Custom Modal Example',\n        component: CustomModalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-custom-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-notification%20type%3D%22custom%22%20icon%3D%22trending-up%22%3E%0A%20%20%20%20%3Ch1%3EI%20have%20a%20trending%20icon!%3C%2Fh1%3E%0A%20%20%20%20%3Ch2%3EThis%20notification%20type%20allows%20for%20any%20Bullhorn%20Icon%3C%2Fh2%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20icon%3D%22check%22%20(click)%3D%22close()%22%3ESweet.%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-notification%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalCustomDemo%20%7B%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef)%20%7B%7D%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Custom%20Modal%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'custom-modal-example'%2C%0A%20%20templateUrl%3A%20'custom-modal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'custom-modal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20CustomModalExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalCustomDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'CustomModalExample, ModalCustomDemo'\n    },\n    'error-modal': {\n        title: 'Error Modal Example',\n        component: ErrorModalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-error-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-notification%20type%3D%22error%22%3E%0A%20%20%20%20%3Ch1%3ESorry%2C%20something%20went%20wrong.%3C%2Fh1%3E%0A%20%20%20%20%3Ch2%3EYou%20did%20not%20have%201.21%20gigawatts%20of%20power.%3C%2Fh2%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20icon%3D%22refresh-o%22%20(click)%3D%22close()%22%3ERefresh%20this%20page%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-notification%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalErrorDemo%20%7B%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef)%20%7B%7D%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Error%20Modal%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'error-modal-example'%2C%0A%20%20templateUrl%3A%20'error-modal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'error-modal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ErrorModalExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalErrorDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'ErrorModalExample, ModalErrorDemo'\n    },\n    'modal-add-form': {\n        title: 'Modal Add Form Example',\n        component: ModalAddFormExample,\n        tsSource: `import%20%7B%20Component%2C%20OnInit%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%2C%20FormUtils%2C%20TextBoxControl%2C%20PickerControl%2C%20PickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-edit-form-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-modal%3E%0A%20%20%20%20%3Cheader%20title%3D%22Add%20Contact%22%20icon%3D%22person%22%20theme%3D%22contact%22%3E%0A%20%20%20%20%20%20%20%20%3Cutils%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20(click)%3D%22close()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%3C%2Futils%3E%0A%20%20%20%20%3C%2Fheader%3E%0A%20%20%20%20%3Csection%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-form%20%5Bform%5D%3D%22textForm%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22textControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22emailControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22numberControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22pickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-form%3E%0A%20%20%20%20%3C%2Fsection%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22standard%22%20(click)%3D%22close()%22%3ECancel%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20color%3D%22success%22%20icon%3D%22check%22%20(click)%3D%22close()%22%3ESave%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-modal%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalAddFormDemo%20implements%20OnInit%20%7B%0A%20%20public%20textControl%3A%20any%3B%0A%20%20public%20emailControl%3A%20any%3B%0A%20%20public%20numberControl%3A%20any%3B%0A%20%20public%20pickerControl%3A%20any%3B%0A%20%20public%20textForm%3A%20any%3B%0A%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef%2C%20private%20formUtils%3A%20FormUtils)%20%7B%7D%0A%0A%20%20ngOnInit()%20%7B%0A%20%20%20%20this.textControl%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%20%7D)%3B%0A%20%20%20%20this.emailControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'email'%2C%20key%3A%20'email'%2C%20label%3A%20'Email'%20%7D)%3B%0A%20%20%20%20this.numberControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'number'%2C%20key%3A%20'number'%2C%20label%3A%20'Number'%20%7D)%3B%0A%20%20%20%20this.pickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'picker'%2C%0A%20%20%20%20%20%20multiple%3A%20false%2C%0A%20%20%20%20%20%20label%3A%20'Picker'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20resultsTemplate%3A%20PickerResults%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B'Apple'%2C%20'Banana'%2C%20'Grapes'%2C%20'Orange'%2C%20'Pear'%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.textForm%20%3D%20this.formUtils.toFormGroup(%5Bthis.textControl%2C%20this.emailControl%2C%20this.numberControl%2C%20this.pickerControl%5D)%3B%0A%20%20%7D%0A%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Modal%20Add%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'modal-add-form-example'%2C%0A%20%20templateUrl%3A%20'modal-add-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'modal-add-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ModalAddFormExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalAddFormDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'ModalAddFormExample, ModalAddFormDemo'\n    },\n    'modal-edit-form': {\n        title: 'Modal Edit Form Example',\n        component: ModalEditFormExample,\n        tsSource: `import%20%7B%20Component%2C%20OnInit%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%2C%20FormUtils%2C%20TextBoxControl%2C%20PickerControl%2C%20PickerResults%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-edit-form-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-modal%3E%0A%20%20%20%20%3Cheader%20title%3D%22John%20Deere%22%20icon%3D%22candidate%22%20theme%3D%22candidate%22%3E%0A%20%20%20%20%20%20%20%20%3Cutils%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22times%22%20(click)%3D%22close()%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%3C%2Futils%3E%0A%20%20%20%20%3C%2Fheader%3E%0A%20%20%20%20%3Csection%3E%0A%20%20%20%20%20%20%20%20%3Cnovo-form%20%5Bform%5D%3D%22textForm%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22textControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22emailControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22numberControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22novo-form-row%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cnovo-control%20%5Bform%5D%3D%22textForm%22%20%5Bcontrol%5D%3D%22pickerControl%22%3E%3C%2Fnovo-control%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%3C%2Fnovo-form%3E%0A%20%20%20%20%3C%2Fsection%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22standard%22%20(click)%3D%22close()%22%3ECancel%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20color%3D%22success%22%20icon%3D%22check%22%20(click)%3D%22close()%22%3ESave%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-modal%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalEditFormDemo%20implements%20OnInit%20%7B%0A%20%20public%20textControl%3A%20any%3B%0A%20%20public%20emailControl%3A%20any%3B%0A%20%20public%20numberControl%3A%20any%3B%0A%20%20public%20pickerControl%3A%20any%3B%0A%20%20public%20textForm%3A%20any%3B%0A%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef%2C%20private%20formUtils%3A%20FormUtils)%20%7B%0A%20%20%20%20this.formUtils%20%3D%20formUtils%3B%0A%20%20%20%20this.modalRef%20%3D%20modalRef%3B%0A%20%20%7D%0A%0A%20%20ngOnInit()%20%7B%0A%20%20%20%20this.textControl%20%3D%20new%20TextBoxControl(%7B%20key%3A%20'text'%2C%20label%3A%20'Text%20Box'%20%7D)%3B%0A%20%20%20%20this.emailControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'email'%2C%20key%3A%20'email'%2C%20label%3A%20'Email'%20%7D)%3B%0A%20%20%20%20this.numberControl%20%3D%20new%20TextBoxControl(%7B%20type%3A%20'number'%2C%20key%3A%20'number'%2C%20label%3A%20'Number'%20%7D)%3B%0A%20%20%20%20this.pickerControl%20%3D%20new%20PickerControl(%7B%0A%20%20%20%20%20%20key%3A%20'picker'%2C%0A%20%20%20%20%20%20multiple%3A%20true%2C%0A%20%20%20%20%20%20label%3A%20'Picker'%2C%0A%20%20%20%20%20%20required%3A%20true%2C%0A%20%20%20%20%20%20config%3A%20%7B%0A%20%20%20%20%20%20%20%20resultsTemplate%3A%20PickerResults%2C%0A%20%20%20%20%20%20%20%20options%3A%20%5B'Apple'%2C%20'Banana'%2C%20'Grapes'%2C%20'Orange'%2C%20'Pear'%5D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%3B%0A%0A%20%20%20%20this.textForm%20%3D%20this.formUtils.toFormGroup(%5Bthis.textControl%2C%20this.emailControl%2C%20this.numberControl%2C%20this.pickerControl%5D)%3B%0A%20%20%7D%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Modal%20Edit%20Form%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'modal-edit-form-example'%2C%0A%20%20templateUrl%3A%20'modal-edit-form-example.html'%2C%0A%20%20styleUrls%3A%20%5B'modal-edit-form-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ModalEditFormExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalEditFormDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'ModalEditFormExample, ModalEditFormDemo'\n    },\n    'success-modal': {\n        title: 'Success Modal Example',\n        component: SuccessModalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-success-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-notification%20type%3D%22success%22%3E%0A%20%20%20%20%3Ch1%3EWoooo!%3C%2Fh1%3E%0A%20%20%20%20%3Ch2%3EYou%20did%20something%20awesome!%3C%2Fh2%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20icon%3D%22check%22%20(click)%3D%22close()%22%3EI'm%20awesome%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-notification%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalSuccessDemo%20%7B%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef)%20%7B%7D%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Success%20Modal%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'success-modal-example'%2C%0A%20%20templateUrl%3A%20'success-modal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'success-modal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SuccessModalExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalSuccessDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'SuccessModalExample, ModalSuccessDemo'\n    },\n    'warning-modal': {\n        title: 'Warning Modal Example',\n        component: WarningModalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoModalService%2C%20NovoModalRef%20%7D%20from%20'novo-elements'%3B%0A%0A%40Component(%7B%0A%20%20selector%3A%20'modal-warning-demo'%2C%0A%20%20template%3A%20%60%0A%20%20%3Cnovo-notification%20type%3D%22warning%22%3E%0A%20%20%20%20%3Ch1%3EThis%20action%20will%20delete%2025%20records.%3C%2Fh1%3E%0A%20%20%20%20%3Ch2%3EAre%20you%20sure%20you%20wish%20to%20continue%3F%3C%2Fh2%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22standard%22%20(click)%3D%22close()%22%3ECancel%3C%2Fbutton%3E%0A%20%20%20%20%3Cbutton%20theme%3D%22primary%22%20color%3D%22negative%22%20icon%3D%22delete%22%20(click)%3D%22close()%22%3EDelete%3C%2Fbutton%3E%0A%20%20%3C%2Fnovo-notification%3E%0A%60%2C%0A%7D)%0Aexport%20class%20ModalWarningDemo%20%7B%0A%20%20constructor(private%20modalRef%3A%20NovoModalRef)%20%7B%7D%0A%20%20close()%20%7B%0A%20%20%20%20this.modalRef.close()%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%40title%20Warning%20Modal%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'warning-modal-example'%2C%0A%20%20templateUrl%3A%20'warning-modal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'warning-modal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20WarningModalExample%20%7B%0A%20%20constructor(private%20modalService%3A%20NovoModalService)%20%7B%7D%0A%20%20showModal()%20%7B%0A%20%20%20%20this.modalService.open(ModalWarningDemo)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20display%3A%20block%3B%0A%20%20background%3A%20rgba(0%2C%200%2C%200%2C%200.55)%3B%0A%20%20padding%3A%2035px%200%3B%0A%20%20position%3A%20relative%3B%0A%20%20text-align%3A%20center%3B%0A%7D%0A`,\n        htmlSource: `%3Cbutton%20data-automation-id%3D%22modal-trigger%22%20theme%3D%22secondary%22%20(click)%3D%22showModal()%22%3EShow%20Me%20%3A)%3C%2Fbutton%3E%0A`,\n        selectorName: 'WarningModalExample, ModalWarningDemo'\n    },\n    'pluralize': {\n        title: 'Pluralize Example',\n        component: PluralizeExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Pluralize%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pluralize-example'%2C%0A%20%20templateUrl%3A%20'pluralize-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pluralize-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PluralizeExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cp%3E%7B%7B'Kitty'%20%7C%20plural%7D%7D%3C%2Fp%3E%0A%3Cp%3E%7B%7B'Cat'%20%7C%20plural%7D%7D%3C%2Fp%3E%0A`\n    },\n    'pop-over-auto-placement': {\n        title: 'PopOver with Automatic Positioning Example',\n        component: PopOverAutoPlacementExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOver%20with%20Automatic%20Positioning%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-auto-placement-example'%2C%0A%20%20templateUrl%3A%20'pop-over-auto-placement-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-auto-placement-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverAutoPlacementExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cspan%20popover%3D%22If%20the%20placement%20of%20the%20PopOver%20will%20make%20it%20appear%20off-screen%2C%20then%20it%20will%20be%20automatically%20adjusted%20to%20appear%20on%20the%20opposite%20side.%20For%20example%3A%20this%20PopOver%20should%20appear%20below%20the%20element.%26%2313%3B%26%2310%3B%20%26%2313%3B%26%2310%3B%20%26%2313%3B%26%2310%3BNeed%20to%20make%20extra%20space%20so%20this%20PopOver%20would%20actually%20appear%20below%20the%20screen.%22%0A%20%20%20%20popoverTitle%3D%22PopOver%20Moves%20to%20Top%20if%20near%20Bottom%20of%20Screen%22%0A%20%20%20%20popoverPlacement%3D%22bottom%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20Hover%20Me%0A%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Too%20small%20to%20drop%20below%20screen.%22%0A%20%20%20%20popoverTitle%3D%22PopOver%20Won't%20Change%22%0A%20%20%20%20popoverPlacement%3D%22bottom%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20Hover%20Me%20Next%0A%3C%2Fspan%3E%0A`\n    },\n    'pop-over-behaviors': {\n        title: 'PopOver Behaviors Example',\n        component: PopOverBehaviorsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOver%20Behaviors%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-behaviors-example'%2C%0A%20%20templateUrl%3A%20'pop-over-behaviors-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-behaviors-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverBehaviorsExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cspan%20class%3D%22popover-element%22%0A%20%20%20%20popover%3D%22PopOver%20appears%20when%20hovering%20over%20the%20element.%20When%20the%20mouse%20is%20no%20longer%20over%20the%20element%20or%20the%20PopOver%2C%20then%20it%20will%20be%20dismissed.%22%0A%20%20%20%20popoverTitle%3D%22ON%20HOVER%22%0A%20%20%20%20popoverPlacement%3D%22right%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0AON%20HOVER%0A%3C%2Fspan%3E%0A%0A%3Cspan%20class%3D%22popover-element%22%0A%20%20%20%20popover%3D%22PopOver%20appears%20when%20clicking%20on%20the%20element.%20Dismiss%20it%20by%20clicking%20the%20element%20again.%22%0A%20%20%20%20popoverTitle%3D%22ON%20CLICK%22%0A%20%20%20%20popoverPlacement%3D%22right%22%3E%0AON%20CLICK%0A%3C%2Fspan%3E%0A%0A%3Cspan%20class%3D%22popover-element%22%0A%20%20%20%20popover%3D%22This%20PopOver%20has%20a%202000%20ms%20or%202%20second%20timeout%20on%20it.%20Dismiss%20it%20by%20clicking%20on%20the%20element%20or%20waiting%20for%20the%20timeout.%22%0A%20%20%20%20popoverTitle%3D%22ON%20CLICK%20WITH%20TIMEOUT%22%0A%20%20%20%20popoverPlacement%3D%22right%22%0A%20%20%20%20%5BpopoverDismissTimeout%5D%3D%222000%22%3E%0AON%20CLICK%20WITH%20TIMEOUT%0A%3C%2Fspan%3E%0A%0A%3Cspan%20class%3D%22popover-element%22%0A%20%20%20%20popover%3D%22This%20PopOver%20will%20never%20appear%20when%20clicking%20on%20the%20element%20or%20when%20hovering%20over%20the%20element.%22%0A%20%20%20%20popoverTitle%3D%22popoverDisabled%22%0A%20%20%20%20popoverPlacement%3D%22right%22%0A%20%20%20%20%5BpopoverDisabled%5D%3D%22true%22%3E%0ADISABLED%20POPOVER%0A%3C%2Fspan%3E%0A`\n    },\n    'pop-over-dynamic': {\n        title: 'PopOver with Dynamic HTML Template Example',\n        component: PopOverDynamicExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOver%20with%20Dynamic%20HTML%20Template%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-dynamic-example'%2C%0A%20%20templateUrl%3A%20'pop-over-dynamic-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-dynamic-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverDynamicExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cpopover-content%0A%20%20%20%20%23dynamicHtmlPopOver%0A%20%20%20%20title%3D%22this%20header%20can%20be%20omitted%22%0A%20%20%20%20placement%3D%22right%22%3E%0A%0A%20%20%20%20%3Cb%3EVery%3C%2Fb%3E%20%3Cspan%20style%3D%22color%3A%20%23C21F39%22%3EDynamic%3C%2Fspan%3E%20%3Cspan%20style%3D%22color%3A%20%2300b3ee%22%3EReusable%3C%2Fspan%3E%0A%20%20%20%20%3Cb%3E%3Ci%3E%3Cspan%20style%3D%22color%3A%20%23ffc520%22%3EPopover%20With%3C%2Fspan%3E%3C%2Fi%3E%3C%2Fb%3E%20%3Csmall%3EHtml%20support%3C%2Fsmall%3E.%20Click%20outside%20of%20this%20popover%20and%20it%20will%20be%20dismissed%20automatically.%0A%20%20%20%20%3Cu%20(click)%3D%22dynamicHtmlPopOver.hide()%22%20style%3D%22cursor%3A%20pointer%22%3EOr%20click%20here%20to%20close%20it%3C%2Fu%3E%20and%20can%20listen%20to%20the%20onHidden%20or%20onShown%20events%20to%20perform%20additional%20tasks.%0A%3C%2Fpopover-content%3E%0A%0A%3Cspan%20%5Bpopover%5D%3D%22dynamicHtmlPopOver%22%3EClick%20to%20see%20a%20popover%20with%20dynamic%20html%3C%2Fspan%3E%0A`\n    },\n    'pop-over-horizontal': {\n        title: 'PopOvers with Horizontal Positioning',\n        component: PopOverHorizontalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOvers%20with%20Horizontal%20Positioning%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-horizontal-example'%2C%0A%20%20templateUrl%3A%20'pop-over-horizontal-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-horizontal-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverHorizontalExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cspan%20popover%3D%22Popover%20is%20on%20the%20top%20side%20and%20to%20the%20right%20of%20the%20element.%20Can%20also%20apply%20'left'%20to%20'top'%20placement%20PopOvers.%22%0A%20%20%20%20popoverTitle%3D%22Top-Right%20PopOver%22%0A%20%20%20%20popoverPlacement%3D%22top-right%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20TOP-RIGHT%0A%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Popover%20is%20on%20the%20bottom%20side%20and%20to%20the%20left%20of%20the%20element.%20Can%20also%20apply%20'right'%20to%20'bottom'%20placement%20PopOvers.%22%0A%20%20%20%20popoverTitle%3D%22Bottom-Left%20PopOver%22%0A%20%20%20%20popoverPlacement%3D%22bottom-left%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20BOTTOM-LEFT%0A%3C%2Fspan%3E%0A`\n    },\n    'pop-over-placement': {\n        title: 'PopOver Placement Example',\n        component: PopOverPlacementExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOver%20Placement%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-placement-example'%2C%0A%20%20templateUrl%3A%20'pop-over-placement-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-placement-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverPlacementExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cspan%20popover%3D%22Popover%20is%20to%20left%20of%20element%22%20popoverTitle%3D%22Left%20PopOver%22%20popoverPlacement%3D%22left%22%20%5BpopoverOnHover%5D%3D%22true%22%3ELEFT%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Popover%20is%20to%20right%20of%20element%22%20popoverTitle%3D%22Right%20PopOver%22%20popoverPlacement%3D%22right%22%20%5BpopoverOnHover%5D%3D%22true%22%3ERIGHT%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Popover%20is%20above%20the%20element%22%20popoverTitle%3D%22Top%20PopOver%22%20popoverPlacement%3D%22top%22%20%5BpopoverOnHover%5D%3D%22true%22%3ETOP%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Popover%20is%20below%20the%20element%22%20popoverTitle%3D%22Bottom%20PopOver%22%20popoverPlacement%3D%22bottom%22%20%5BpopoverOnHover%5D%3D%22true%22%3EBOTTOM%3C%2Fspan%3E%0A`\n    },\n    'pop-over-vertical': {\n        title: 'PopOvers with Vertical Positioning',\n        component: PopOverVerticalExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20PopOvers%20with%20Vertical%20Positioning%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'pop-over-vertical-example'%2C%0A%20%20templateUrl%3A%20'pop-over-vertical-example.html'%2C%0A%20%20styleUrls%3A%20%5B'pop-over-vertical-example.css'%5D%2C%0A%7D)%0Aexport%20class%20PopOverVerticalExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20CSS%20for%20this%20example%20*%2F%0A%3Ahost%20%7B%0A%20%20margin%3A%20auto%3B%0A%20%20padding%3A%2020px%2030px%3B%0A%20%20position%3A%20relative%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%3Ahost%20%3E%20span%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20margin%3A%20auto%3B%0A%7D%0A`,\n        htmlSource: `%3Cspan%20popover%3D%22Popover%20is%20on%20the%20right%20side%20and%20below%20the%20element.%20Can%20also%20apply%20'top'%20to%20'right'%20placement%20PopOvers.%22%0A%20%20%20%20popoverTitle%3D%22Right-Bottom%20PopOver%22%0A%20%20%20%20popoverPlacement%3D%22right-bottom%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20RIGHT-BOTTOM%0A%3C%2Fspan%3E%0A%3Cspan%20popover%3D%22Popover%20is%20on%20the%20left%20side%20and%20above%20the%20element.%20Can%20also%20apply%20'bottom'%20to%20'left'%20placement%20PopOvers.%22%0A%20%20%20%20popoverTitle%3D%22Left-Top%20PopOver%22%0A%20%20%20%20popoverPlacement%3D%22left-top%22%0A%20%20%20%20%5BpopoverOnHover%5D%3D%22true%22%3E%0A%20%20%20%20LEFT-TOP%0A%3C%2Fspan%3E%0A`\n    },\n    'security': {\n        title: 'Security Example',\n        component: SecurityExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20Security%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Security%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'security-example'%2C%0A%20%20templateUrl%3A%20'security-example.html'%2C%0A%20%20styleUrls%3A%20%5B'security-example.css'%5D%2C%0A%7D)%0Aexport%20class%20SecurityExample%20%7B%0A%20%20perms%20%3D%20%5B%5D%3B%0A%0A%20%20constructor(private%20security%3A%20Security)%20%7B%7D%0A%0A%20%20shufflePermissions()%3A%20void%20%7B%0A%20%20%20%20const%20numOfPerms%3A%20number%20%3D%20Math.floor(Math.random()%20*%202)%20%2B%201%3B%0A%20%20%20%20this.perms%20%3D%20this.shuffle(%5B'A'%2C%20'B'%2C%20'C'%5D).slice(0%2C%20numOfPerms)%3B%0A%20%20%20%20this.security.clear()%3B%0A%20%20%20%20this.security.grant(this.perms)%3B%0A%20%20%7D%0A%0A%20%20shuffle(array%3A%20string%5B%5D)%20%7B%0A%20%20%20%20let%20currentIndex%3A%20number%20%3D%20array.length%3B%0A%20%20%20%20let%20temporaryValue%3A%20string%3B%0A%20%20%20%20let%20randomIndex%3A%20number%3B%0A%0A%20%20%20%20%2F%2F%20While%20there%20remain%20elements%20to%20shuffle...%0A%20%20%20%20while%20(currentIndex%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%2F%2F%20Pick%20a%20remaining%20element...%0A%20%20%20%20%20%20randomIndex%20%3D%20Math.floor(Math.random()%20*%20currentIndex)%3B%0A%20%20%20%20%20%20currentIndex%20-%3D%201%3B%0A%20%20%20%20%20%20%2F%2F%20And%20swap%20it%20with%20the%20current%20element.%0A%20%20%20%20%20%20temporaryValue%20%3D%20array%5BcurrentIndex%5D%3B%0A%20%20%20%20%20%20array%5BcurrentIndex%5D%20%3D%20array%5BrandomIndex%5D%3B%0A%20%20%20%20%20%20array%5BrandomIndex%5D%20%3D%20temporaryValue%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20array%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'A'%22%3EShown%20if%20has%20permission%20%3Cstrong%3EA%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'B'%22%3EShown%20if%20has%20permission%20%3Cstrong%3EB%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'C'%22%3EShown%20if%20has%20permission%20%3Cstrong%3EC%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'A%20%26%26%20B'%22%3EShown%20if%20has%20permissions%20%3Cstrong%3EA%20%26%26%20B%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'A%20%26%26%20C'%22%3EShown%20if%20has%20permissions%20%3Cstrong%3EA%20%26%26%20C%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'A%20%26%26%20B%20%26%26%20C'%22%3EShown%20if%20has%20permissions%20%3Cstrong%3EA%20%26%26%20B%20%26%26%20C%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%20*bhUnless%3D%22'A%20%7C%7C%20B'%22%3EShown%20if%20has%20permissions%20%3Cstrong%3EA%20%7C%7C%20B%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cp%3E%20Permissions%20are%20%3A%20%3Cstrong%3E%7B%7B%20perms%20%7C%20json%20%7D%7D%3C%2Fstrong%3E%3C%2Fp%3E%0A%20%20%20%20%3Cbutton%20(click)%3D%22shufflePermissions()%22%3EShuffle%3C%2Fbutton%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'basic-tip-well': {\n        title: 'Basic Tip Well Example',\n        component: BasicTipWellExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Basic%20Tip%20Well%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'basic-tip-well-example'%2C%0A%20%20templateUrl%3A%20'basic-tip-well-example.html'%2C%0A%20%20styleUrls%3A%20%5B'basic-tip-well-example.css'%5D%2C%0A%7D)%0Aexport%20class%20BasicTipWellExample%20%7B%0A%20%20public%20demoTip%3A%20string%20%3D%0A%20%20%20%20'Sed%20sodales%20ligula%20et%20fermentum%20bibendum.%20Aliquam%20tincidunt%20sagittis%20leo%20eget%20auctor.%20Fusce%20eu%20sagittis%20metus%2C%20ut%20viverra%20magna.%20Mauris%20mollis%20nisl%20nec%20libero%20tincidunt%20posuere.'%3B%0A%0A%20%20public%20clearLocalStorage()%20%7B%0A%20%20%20%20localStorage.removeItem('novo-tw_Demo')%3B%0A%20%20%20%20location.reload()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-tip-well%20name%3D%22Demo%22%20%5Btip%5D%3D%22demoTip%22%3E%3C%2Fnovo-tip-well%3E%0A%0A%3Cp%3EDid%20you%20hide%20the%20TipWell%3F%3C%2Fp%3E%0A%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22clearLocalStorage()%22%3EReset%3C%2Fbutton%3E%20localStorage%20and%20Reload%0A`\n    },\n    'buttonless-tip-well': {\n        title: 'Tip Well with No Button Example',\n        component: ButtonlessTipWellExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tip%20Well%20with%20No%20Button%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'buttonless-tip-well-example'%2C%0A%20%20templateUrl%3A%20'buttonless-tip-well-example.html'%2C%0A%20%20styleUrls%3A%20%5B'buttonless-tip-well-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ButtonlessTipWellExample%20%7B%0A%20%20public%20demoTip%3A%20string%20%3D%0A%20%20%20%20'Sed%20sodales%20ligula%20et%20fermentum%20bibendum.%20Aliquam%20tincidunt%20sagittis%20leo%20eget%20auctor.%20Fusce%20eu%20sagittis%20metus%2C%20ut%20viverra%20magna.%20Mauris%20mollis%20nisl%20nec%20libero%20tincidunt%20posuere.'%3B%0A%0A%20%20clearLocalStorage()%20%7B%0A%20%20%20%20localStorage.removeItem('novo-tw_Demo')%3B%0A%20%20%20%20location.reload()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-tip-well%20name%3D%22Demo%22%20%5Btip%5D%3D%22demoTip%22%20%5Bbutton%5D%3D%22false%22%3E%3C%2Fnovo-tip-well%3E%0A%0A%3Cp%3EDid%20you%20hide%20the%20TipWell%3F%3C%2Fp%3E%0A%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22clearLocalStorage()%22%3EReset%3C%2Fbutton%3E%20localStorage%20and%20Reload%0A`\n    },\n    'html-tip-well': {\n        title: 'Tip Well with HTML Example',\n        component: HtmlTipWellExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tip%20Well%20with%20HTML%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'html-tip-well-example'%2C%0A%20%20templateUrl%3A%20'html-tip-well-example.html'%2C%0A%20%20styleUrls%3A%20%5B'html-tip-well-example.css'%5D%2C%0A%7D)%0Aexport%20class%20HtmlTipWellExample%20%7B%0A%20%20public%20demoHtmlTip%3A%20string%20%3D%20%60%0A%20%20%20%20%3Ch2%3ETitle%3C%2Fh2%3E%0A%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%3Cdiv%20style%3D%22color%3Ared%22%3EThis%20text%20is%20RED%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%3E%3Cb%3EThis%20text%20is%20BOLD%3C%2Fb%3E%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3Cdiv%3E%3Ci%3EThis%20text%20is%20ITALIC%3C%2Fi%3E%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%3Ctable%3E%0A%20%20%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cth%20width%3D%22305px%22%3EFirstname%3C%2Fth%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cth%20width%3D%22305px%22%3ELastname%3C%2Fth%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cth%3EAge%3C%2Fth%3E%0A%20%20%20%20%20%20%20%20%3C%2Ftr%3E%0A%20%20%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3EJeff%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3ESmith%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3E20%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%3C%2Ftr%3E%0A%20%20%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3ESteve%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3EWhite%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Ctd%3E25%3C%2Ftd%3E%0A%20%20%20%20%20%20%20%20%3C%2Ftr%3E%0A%20%20%20%20%3C%2Ftable%3E%60%3B%0A%0A%20%20clearLocalStorage()%20%7B%0A%20%20%20%20localStorage.removeItem('novo-tw_Demo')%3B%0A%20%20%20%20location.reload()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-tip-well%20name%3D%22Demo%22%20%5Bsanitize%5D%3D%22false%22%20%5Btip%5D%3D%22demoHtmlTip%22%3E%3C%2Fnovo-tip-well%3E%0A%0A%3Cp%3EDid%20you%20hide%20the%20TipWell%3F%3C%2Fp%3E%0A%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22clearLocalStorage()%22%3EReset%3C%2Fbutton%3E%20localStorage%20and%20Reload%0A`\n    },\n    'icon-tip-well': {\n        title: 'Tip Well with Icon Example',\n        component: IconTipWellExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tip%20Well%20with%20Icon%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'icon-tip-well-example'%2C%0A%20%20templateUrl%3A%20'icon-tip-well-example.html'%2C%0A%20%20styleUrls%3A%20%5B'icon-tip-well-example.css'%5D%2C%0A%7D)%0Aexport%20class%20IconTipWellExample%20%7B%0A%20%20public%20demoTip%3A%20string%20%3D%0A%20%20%20%20'Sed%20sodales%20ligula%20et%20fermentum%20bibendum.%20Aliquam%20tincidunt%20sagittis%20leo%20eget%20auctor.%20Fusce%20eu%20sagittis%20metus%2C%20ut%20viverra%20magna.%20Mauris%20mollis%20nisl%20nec%20libero%20tincidunt%20posuere.'%3B%0A%0A%20%20clearLocalStorage()%20%7B%0A%20%20%20%20localStorage.removeItem('novo-tw_Demo')%3B%0A%20%20%20%20location.reload()%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cnovo-tip-well%20name%3D%22Demo%22%20%5Btip%5D%3D%22demoTip%22%20icon%3D%22info%22%20button%3D%22false%22%3E%3C%2Fnovo-tip-well%3E%0A%0A%3Cp%3EDid%20you%20hide%20the%20TipWell%3F%3C%2Fp%3E%0A%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22clearLocalStorage()%22%3EReset%3C%2Fbutton%3E%20localStorage%20and%20Reload%0A`\n    },\n    'toast-service': {\n        title: 'Toaster Service Usage',\n        component: ToastServiceExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0Aimport%20%7B%20NovoToastService%20%7D%20from%20'novo-elements'%3B%0A%0A%2F**%0A%20*%20%40title%20Toaster%20Service%20Usage%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'toast-service-example'%2C%0A%20%20templateUrl%3A%20'toast-service-example.html'%2C%0A%20%20styleUrls%3A%20%5B'toast-service-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ToastServiceExample%20%7B%0A%20%20public%20options%3A%20any%20%3D%20%7B%0A%20%20%20%20title%3A%20'Title'%2C%0A%20%20%20%20message%3A%20'Some%20Message...'%2C%0A%20%20%7D%3B%0A%0A%20%20constructor(private%20toaster%3A%20NovoToastService)%20%7B%7D%0A%0A%20%20toastToggled(arg)%20%7B%0A%20%20%20%20if%20(arg%20%3D%3D%3D%20'top')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Top'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20fixedTop'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'coffee'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'success'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'fixedTop'%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%20else%20if%20(arg%20%3D%3D%3D%20'bottom')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Bottom'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20fixedBottom'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'check'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'warning-outline'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'fixedBottom'%2C%0A%20%20%20%20%20%20%20%20hideDelay%3A%201000000%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%20else%20if%20(arg%20%3D%3D%3D%20'growlTopRight')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Growl'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20growlTopRight'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'times'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'danger'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'growlTopRight'%2C%0A%20%20%20%20%20%20%20%20hideDelay%3A%20100000000%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%20else%20if%20(arg%20%3D%3D%3D%20'growlTopLeft')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Growl'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20growlTopLeft'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'coffee'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'growlTopLeft'%2C%0A%20%20%20%20%20%20%20%20hideDelay%3A%20100000000%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%20else%20if%20(arg%20%3D%3D%3D%20'growlBottomRight')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Growl'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20growlTopRight'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'times'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'danger'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'growlBottomRight'%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%20else%20if%20(arg%20%3D%3D%3D%20'growlBottomLeft')%20%7B%0A%20%20%20%20%20%20this.options%20%3D%20%7B%0A%20%20%20%20%20%20%20%20title%3A%20'Growl'%2C%0A%20%20%20%20%20%20%20%20message%3A%20'This%20positioning%20is%20growlTopLeft'%2C%0A%20%20%20%20%20%20%20%20icon%3A%20'coffee'%2C%0A%20%20%20%20%20%20%20%20theme%3A%20'ocean'%2C%0A%20%20%20%20%20%20%20%20position%3A%20'growlBottomLeft'%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.toaster.alert(this.options)%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22success%22%20icon%3D%22coffee%22%20(click)%3D%22toastToggled('top')%22%20data-automation-id%3D%22toast-trigger%22%3EFixed%20Top%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22primary%22%20icon%3D%22check%22%20(click)%3D%22toastToggled('bottom')%22%3EFixed%20Bottom%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22negative%22%20icon%3D%22times%22%20(click)%3D%22toastToggled('growlTopRight')%22%3EGrowl%3A%20Top%20Right%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22primary%22%20icon%3D%22coffee%22%20(click)%3D%22toastToggled('growlTopLeft')%22%3EGrowl%3A%20Top%20Left%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22negative%22%20icon%3D%22times%22%20(click)%3D%22toastToggled('growlBottomRight')%22%3EGrowl%3A%20Bottom%20Right%3C%2Fbutton%3E%0A%3Cbutton%20theme%3D%22dialogue%22%20color%3D%22primary%22%20icon%3D%22coffee%22%20(click)%3D%22toastToggled('growlBottomLeft')%22%3EGrowl%3A%20Bottom%20Left%3C%2Fbutton%3E%0A`\n    },\n    'toast-usage': {\n        title: 'Static Toast Usage',\n        component: ToastUsageExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Static%20Toast%20Usage%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'toast-usage-example'%2C%0A%20%20templateUrl%3A%20'toast-usage-example.html'%2C%0A%20%20styleUrls%3A%20%5B'toast-usage-example.css'%5D%2C%0A%7D)%0Aexport%20class%20ToastUsageExample%20%7B%0A%20%20public%20themes%3A%20Array%3Cstring%3E%20%3D%20%5B'default'%2C%20'success'%2C%20'info'%2C%20'warning'%2C%20'danger'%5D%3B%0A%20%20public%20icons%3A%20Array%3Cstring%3E%20%3D%20%5B'add'%2C%20'check'%2C%20'clock'%2C%20'lock'%2C%20'caution'%5D%3B%0A%20%20public%20toast%3A%20any%20%3D%20%7B%0A%20%20%20%20theme%3A%20'danger'%2C%0A%20%20%20%20icon%3A%20'caution'%2C%0A%20%20%7D%3B%0A%0A%20%20changeToast()%20%7B%0A%20%20%20%20this.toast%20%3D%20%7B%0A%20%20%20%20%20%20theme%3A%20this.themes%5B(this.themes.indexOf(this.toast.theme)%20%2B%201)%20%25%20this.themes.length%5D%2C%0A%20%20%20%20%20%20icon%3A%20this.icons%5B(this.icons.indexOf(this.toast.icon)%20%2B%201)%20%25%20this.icons.length%5D%2C%0A%20%20%20%20%7D%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cdiv%20class%3D%22fake-card%22%3E%0A%20%20%20%20%3Cheader%20title%3D%22John%20Deere%22%20icon%3D%22person%22%20theme%3D%22contact%22%3E%0A%20%20%20%20%20%20%20%20%3Cutils%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22flag%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22refresh%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cutil-action%20icon%3D%22times%22%3E%3C%2Futil-action%3E%0A%20%20%20%20%20%20%20%20%3C%2Futils%3E%0A%20%20%20%20%3C%2Fheader%3E%0A%20%20%20%20%3Cnovo-toast%20%5Btheme%5D%3D%22toast.theme%22%20%5Bicon%5D%3D%22toast.icon%22%20title%3D%22Save%20Failed%22%20message%3D%22Oops!%20Looks%20like%20you're%20missing%20some%20required%20fields%22%3E%3C%2Fnovo-toast%3E%0A%20%20%20%20%3Cdiv%20class%3D%22content%22%3E%0A%20%20%20%20%20%20%20%20%3Cp%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20Lorem%20ipsum%20dolor%20sit%20amet%2C%20consectetur%20adipiscing%20elit%2C%20sed%0A%20%20%20%20%20%20%20%20%20%20%20%20do%20eiusmod%20tempor%20incididunt%20ut%20labore%20et%20dolore%0A%20%20%20%20%20%20%20%20%20%20%20%20magna%20aliqua.%20Ut%20enim%20ad%20minim%20veniam%2C%20quis%20nostrud%0A%20%20%20%20%20%20%20%20%20%20%20%20exercitation%20ullamco%20laboris%20nisi%20ut%20aliquip%20ex%20ea%0A%20%20%20%20%20%20%20%20%20%20%20%20commodo%20consequat.%20Duis%20aute%20irure%20dolor%20in%20reprehenderit%0A%20%20%20%20%20%20%20%20%20%20%20%20in%20voluptate%20velit%20esse%20cillum%20dolore%20eu%20fugiat%20nulla%0A%20%20%20%20%20%20%20%20%20%20%20%20pariatur.%20Excepteur%20sint%20occaecat%20cupidatat%20non%20proident%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sunt%20in%20culpa%20qui%20officia%20deserunt%20mollit%20anim%20id%0A%20%20%20%20%20%20%20%20%20%20%20%20est%20laborum.%0A%20%20%20%20%20%20%20%20%3C%2Fp%3E%0A%20%20%20%20%20%20%20%20%3Cbutton%20(click)%3D%22changeToast()%22%3EChange%20toast!%3C%2Fbutton%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A`\n    },\n    'tooltip-align': {\n        title: 'Tooltip Align Example',\n        component: TooltipAlignExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Align%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-align-example'%2C%0A%20%20templateUrl%3A%20'tooltip-align-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-align-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipAlignExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22bottom-left%22%20tooltipPosition%3D%22bottom-left%22%3EBottom%20Left%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22bottom-right%22%20tooltipPosition%3D%22bottom-right%22%3EBottom%20Right%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22top-left%22%20tooltipPosition%3D%22top-left%22%3ETop%20Left%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22top-right%22%20tooltipPosition%3D%22top-right%22%3ETop%20Right%3C%2Fspan%3E%0A`\n    },\n    'tooltip-options': {\n        title: 'Tooltip Options Example',\n        component: TooltipOptionsExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Options%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-options-example'%2C%0A%20%20templateUrl%3A%20'tooltip-options-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-options-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipOptionsExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22ALWAYS%22%20tooltipAlways%3D%22true%22%3EAlways%20Shown%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22ROUNDED%22%20tooltipRounded%3D%22true%22%3ERounded%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22NO%20ANIMATE%22%20tooltipNoAnimate%3D%22true%22%3ENo%20Animation%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22BOUNCE%22%20tooltipBounce%3D%22true%22%3EBounce%3C%2Fspan%3E%0A`\n    },\n    'tooltip-placement': {\n        title: 'Tooltip Placement Example',\n        component: TooltipPlacementExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Placement%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-placement-example'%2C%0A%20%20templateUrl%3A%20'tooltip-placement-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-placement-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipPlacementExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22left%22%20tooltipPosition%3D%22left%22%3ELeft%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22right%22%20tooltipPosition%3D%22right%22%3ERight%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22top%22%20tooltipPosition%3D%22top%22%3ETop%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22bottom%22%20tooltipPosition%3D%22bottom%22%3EBottom%3C%2Fspan%3E%0A`\n    },\n    'tooltip-sizes': {\n        title: 'Tooltip Sizes Example',\n        component: TooltipSizesExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Sizes%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-sizes-example'%2C%0A%20%20templateUrl%3A%20'tooltip-sizes-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-sizes-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipSizesExample%20%7B%0A%20%20public%20mediumTooltip%3A%20string%20%3D%20%60Lorem%20Ipsum%5Cn%5Cn%20is%20simply%20dummy%20text%20of%20the%20printing%20and%20typesetting%20industry.%60%3B%0A%20%20public%20largeTooltip%3A%20string%20%3D%20%60Lorem%20Ipsum%5Cn%5Cn%20is%20simply%20dummy%20text%20of%20the%20printing%20and%20typesetting%20industry.%20Lorem%20Ipsum%20has%20been%20the%20industry's%20standard%20dummy%20text%20ever%20since%20the%201500s%2C%20when%20an%20unknown%20printer%20took%20a%20galley%20of%20type%20and%20scrambled%20it%20to%20make%20a%20type%20specimen%20book.%20It%20has%20survived%20not%20only%20five%20centuries%2C%20but%20also%20the%20leap%20into%20electronic%20typesetting%2C%20remaining%20essentially%20unchanged.%20It%20was%20popularised%20in%20the%201960s%20with%20the%20release%20of%20Letraset%20sheets%20containing%20Lorem%20Ipsum%20passages%2C%20and%20more%20recently%20with%20desktop%20publishing%20software%20like%20Aldus%20PageMaker%20including%20versions%20of%20Lorem%20Ipsum.%60%3B%0A%20%20public%20extraLargeTooltip%3A%20string%20%3D%20%60Lorem%20ipsum%20dolor%20sit%20amet%2C%20consectetur%20adipiscing%20elit.%20Duis%20placerat%20nisi%20at%20elit%20molestie%2C%20eget%20dapibus%20erat%20mattis.%20Sed%20nec%20est%20sit%20amet%20dolor%20hendrerit%20placerat%20quis%20vitae%20sapien.%20Nulla%20non%20consectetur%20lorem%2C%20nec%20ultricies%20lacus.%20Ut%20maximus%20eget%20tortor%20a%20bibendum.%20Vivamus%20vel%20mollis%20magna.%20Nullam%20sit%20amet%20urna%20a%20elit%20sollicitudin%20ultrices.%20Donec%20scelerisque%20dolor%20vel%20lacus%20blandit%20aliquam.%20Morbi%20tellus%20nunc%2C%20interdum%20eget%20laoreet%20vitae%2C%20tristique%20a%20odio.%20Maecenas%20ligula%20nisl%2C%20volutpat%20id%20augue%20vel%2C%20sollicitudin%20bibendum%20massa.%20Aenean%20dapibus%20quam%20nec%20ante%20volutpat%2C%20id%20tincidunt%20mauris%20malesuada.%20Aliquam%20vitae%20consectetur%20justo.%0A%0A%20%20%20%20Nunc%20vel%20felis%20in%20quam%20iaculis%20vulputate%20eu%20non%20erat.%20Phasellus%20vel%20purus%20eget%20est%20elementum%20tempus%20a%20non%20mauris.%20Mauris%20cursus%20convallis%20enim%2C%20non%20malesuada%20felis%20suscipit%20vel.%20Maecenas%20nec%20hendrerit%20erat.%20Morbi%20vehicula%20condimentum%20mi%20non%20gravida.%20Aenean%20varius%20risus%20arcu.%20Sed%20blandit%20ipsum%20sit%20amet%20tincidunt%20convallis.%20Praesent%20consectetur%20elementum%20nisi%2C%20sit%20amet%20placerat%20diam%20commodo%20at.%20Vivamus%20aliquet%20sagittis%20libero%2C%20id%20efficitur%20nisl%20varius%20eget.%20Aenean%20tempor%20augue%20a%20erat%20tincidunt%20hendrerit.%20Cras%20et%20dictum%20nisl.%20Sed%20pulvinar%20leo%20quis%20urna%20malesuada%20tincidunt.%20Sed%20enim%20tortor%2C%20semper%20egestas%20orci%20pellentesque%2C%20scelerisque%20egestas%20eros.%20Aliquam%20in%20ex%20sit%20amet%20tortor%20fringilla%20convallis.%0A%0A%20%20%20%20Nam%20ac%20nulla%20accumsan%2C%20tristique%20orci%20tincidunt%2C%20condimentum%20nunc.%20Fusce%20eget%20neque%20dolor.%20Vestibulum%20volutpat%2C%20libero%20non%20maximus%20maximus%2C%20libero%20ante%20semper%20tellus%2C%20et%20commodo%20lectus%20mi%20nec%20orci.%20Donec%20pretium%20pharetra%20cursus.%20Nam%20a%20egestas%20augue.%20Sed%20et%20condimentum%20lectus.%20Sed%20vel%20justo%20semper%2C%20convallis%20ante%20id%2C%20tincidunt%20nisi.%20Aliquam%20non%20lorem%20commodo%2C%20laoreet%20diam%20nec%2C%20feugiat%20dolor.%0A%0A%20%20%20%20Aliquam%20orci%20diam%2C%20vestibulum%20et%20odio%20id%2C%20molestie%20interdum%20diam.%20Donec%20et%20molestie%20mi.%20Suspendisse%20potenti.%20Nam%20sit%20amet%20faucibus%20nulla.%20In%20tincidunt%20pharetra%20turpis%2C%20fringilla%20convallis%20dui%20scelerisque%20vel.%20Orci%20varius%20natoque%20penatibus%20et%20magnis%20dis%20parturient%20montes%2C%20nascetur%20ridiculus%20mus.%20Fusce%20eget%20tellus%20sem.%20Donec%20ac%20maximus%20massa.%0A%0A%20%20%20%20Aliquam%20vehicula%20ligula%20justo%2C%20faucibus%20semper%20lorem%20sodales%20eu.%20Fusce%20nec%20augue%20quis%20diam%20iaculis%20dapibus.%20Cras%20consectetur%20eros%20ut%20nunc%20cursus%2C%20non%20laoreet%20dolor%20rhoncus.%20In%20luctus%20risus%20sed%20nunc%20feugiat%2C%20in%20imperdiet%20velit%20euismod.%20Curabitur%20sed%20nunc%20dapibus%2C%20convallis%20tortor%20sit%20amet%2C%20interdum%20sapien.%20Donec%20auctor%20mauris%20est%2C%20ac%20molestie%20diam%20sagittis%20id.%20Curabitur%20pretium%20metus%20et%20ante%20tincidunt%20convallis.%20Aenean%20quis%20mollis%20nulla.%60%3B%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22Small%20Tooltip%22%20tooltipSize%3D%22small%22%20tooltipPosition%3D%22bottom%22%20tooltipPreline%3D%22true%22%3ESmall%20Tooltip%3C%2Fspan%3E%0A%3Cspan%20%5Btooltip%5D%3D%22mediumTooltip%22%20tooltipSize%3D%22medium%22%20tooltipPosition%3D%22left%22%20tooltipPreline%3D%22true%22%3EMedium%20Tooltip%3C%2Fspan%3E%0A%3Cspan%20%5Btooltip%5D%3D%22largeTooltip%22%20tooltipSize%3D%22large%22%20tooltipPosition%3D%22top%22%20tooltipPreline%3D%22true%22%3ELarge%20Tooltip%3C%2Fspan%3E%0A%3Cspan%20%5Btooltip%5D%3D%22extraLargeTooltip%22%20tooltipSize%3D%22extra-large%22%20tooltipPosition%3D%22top%22%20tooltipPreline%3D%22true%22%3EExtra-Large%20Tooltip%3C%2Fspan%3E%0A`\n    },\n    'tooltip-toggle': {\n        title: 'Tooltip Toggle Example',\n        component: TooltipToggleExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Toggle%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-toggle-example'%2C%0A%20%20templateUrl%3A%20'tooltip-toggle-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-toggle-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipToggleExample%20%7B%0A%20%20public%20tooltipActive%3A%20boolean%3B%0A%20%20public%20toggleTooltip()%20%7B%0A%20%20%20%20this.tooltipActive%20%3D%20!this.tooltipActive%3B%0A%20%20%7D%0A%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22I%20HAVE%20A%20TOOLTIP!%22%20%5BtooltipActive%5D%3D%22tooltipActive%22%3E%0A%20%20%20%20%3Cspan%20*ngIf%3D%22tooltipActive%22%3EMy%20tooltip%20can%20display!%3C%2Fspan%3E%0A%20%20%20%20%3Cspan%20*ngIf%3D%22!tooltipActive%22%3EMy%20tooltip%20is%20disabled!%3C%2Fspan%3E%0A%3C%2Fspan%3E%0A%3Cbutton%20theme%3D%22secondary%22%20(click)%3D%22toggleTooltip()%22%3EToggle%3C%2Fbutton%3E%0A`\n    },\n    'tooltip-types': {\n        title: 'Tooltip Types Example',\n        component: TooltipTypesExample,\n        tsSource: `import%20%7B%20Component%20%7D%20from%20'%40angular%2Fcore'%3B%0A%0A%2F**%0A%20*%20%40title%20Tooltip%20Types%20Example%0A%20*%2F%0A%40Component(%7B%0A%20%20selector%3A%20'tooltip-types-example'%2C%0A%20%20templateUrl%3A%20'tooltip-types-example.html'%2C%0A%20%20styleUrls%3A%20%5B'tooltip-types-example.css'%5D%2C%0A%7D)%0Aexport%20class%20TooltipTypesExample%20%7B%7D%0A`,\n        cssSource: `%2F**%20No%20CSS%20for%20this%20example%20*%2F%0A`,\n        htmlSource: `%3Cspan%20tooltip%3D%22ERROR%22%20tooltipType%3D%22error%22%3EError%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22INFO%22%20tooltipType%3D%22info%22%3EInfo%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22WARNING%22%20tooltipType%3D%22warning%22%3EWarning%3C%2Fspan%3E%0A%3Cspan%20tooltip%3D%22SUCCESS%22%20tooltipType%3D%22success%22%3ESuccess%3C%2Fspan%3E%0A`\n    },\n};\n/** @type {?} */\nconst EXAMPLE_LIST = [\n    BasicAceExample,\n    ButtonDialogueExample,\n    ButtonDynamicExample,\n    ButtonFabExample,\n    ButtonIconExample,\n    ButtonInverseExample,\n    ButtonLoadingExample,\n    ButtonOverviewExample,\n    ButtonPrimaryExample,\n    ButtonSecondaryExample,\n    ButtonStandardExample,\n    BigCalendarExample,\n    CalendarExample,\n    RangeExample,\n    TimeExample,\n    DataTableRemoteExample,\n    DataTableRowsExample,\n    DataTableServiceExample,\n    ConfigureColumnsModal,\n    BasicDropDownExample,\n    CustomDropDownExample,\n    LargeDropDownExample,\n    MultiDropDownExample,\n    PositionDropDownExample,\n    ScrollableDropDownExample,\n    BasicIconsExample,\n    RaisedIconsExample,\n    ThemedIconsExample,\n    LoadingCircleExample,\n    LoadingLineExample,\n    BasicQuickNoteExample,\n    CustomQuickNoteResults, CustomQuickNoteResultsExample,\n    CustomQuickNoteExample,\n    SearchUsageExample,\n    BasicSlideExample,\n    SwitchUsageExample,\n    TabbedGroupPickerBasicExample,\n    TabbedGroupPickerBigGroupsExample,\n    TabbedGroupPickerGroupsExample,\n    TabbedGroupPickerQuickSelectExample,\n    ActionsCellExample,\n    ExtraDetails, DetailsTableExample,\n    EditableTableExample,\n    SelectAllTableExample,\n    TableExample,\n    TotalFooterTableExample,\n    AnalyticsColorsExample,\n    EntityColorsExample,\n    PrimaryColorsExample,\n    AsyncChipsExample,\n    BasicChipsExample,\n    CloseOnSelectChipsExample,\n    FormattedChipsExample,\n    GroupedMultiPickerExample,\n    RowChipsExample,\n    DatePickerExample,\n    DateRangeExample,\n    DateTimeInputExample,\n    DateTimeExample,\n    TimePickerExample,\n    WeekStartExample,\n    BasicEditorExample,\n    MinimalEditorExample,\n    CustomTemplateExample,\n    HorizontalOptionsExample,\n    HorizontalExample,\n    VerticalOptionsExample,\n    VerticalExample,\n    AddressControlExample,\n    CalendarInputControlsExample,\n    CheckBoxControlsExample,\n    CustomDemoControlExample,\n    DisabledFormExample,\n    DynamicFormFieldSetsExample,\n    DynamicFormExample,\n    EnableDisableAllFieldsInFormExample,\n    FileInputControlsExample,\n    PickerControlsExample,\n    TextBasedControlsExample,\n    UpdatingFormExample,\n    VerticalDynamicFormExample,\n    BasicMultiPickerExample,\n    NestedMultiPickerExample,\n    AsyncPickerExample,\n    BasicPickerExample,\n    CustomPickerResults, CustomPickerResultsExample,\n    DefaultOptionsPickerExample,\n    EntityPickerExample,\n    FormattedPickerExample,\n    GroupedPickerExample,\n    OverrideTemplateExample,\n    BasicRadioExample,\n    ButtonRadioExample,\n    IconRadioExample,\n    VerticalRadioExample,\n    BasicSelectExample,\n    LongSelectExample,\n    TilesUsageExample,\n    AddressValueExample,\n    AssociatedValueExample,\n    BasicValueExample,\n    CategoryValueExample,\n    CorporateUserValueExample,\n    DateTimeValueExample,\n    EntityListValueExample,\n    ExternalLinkValueExample,\n    FormatterValueExample,\n    IconValueExample,\n    MultiOptionValueExample,\n    BasicCardExample,\n    CardConfigExample,\n    AccordionExample,\n    BasicExpansionExample,\n    LazyExpansionExample,\n    BasicHeaderExample,\n    CondensedHeaderExample,\n    HeaderSearchbarExample,\n    HeaderSubtitleExample,\n    BasicListExample,\n    ThemedListExample,\n    StepperHorizontalExample,\n    StepperVerticalExample,\n    TabsBasicExample,\n    TabsColorExample,\n    TabsCondensedExample,\n    TabsRouterExample,\n    TabsVerticalExample,\n    ActivitySectionExample,\n    RecordHeaderExample,\n    DateTranslationsExample,\n    NumberTranslationsExample,\n    PluralTranslationsExample,\n    SimpleTranslationsExample,\n    TranslationsVariablesExample,\n    FiAddingRemovingExample,\n    FiAsyncExample,\n    FiCalculationExample,\n    FiConfirmExample,\n    FiEnableDisableExample,\n    FiGlobalsExample,\n    FiHideShowExample,\n    FiMessagingExample,\n    FiModifyAddedPickerExample,\n    FiModifyOptionsExample,\n    FiNestedExample,\n    FiRequiredExample,\n    FiTooltipExample,\n    FiValidationExample,\n    ModalCustomDemo, CustomModalExample,\n    ModalErrorDemo, ErrorModalExample,\n    ModalAddFormDemo, ModalAddFormExample,\n    ModalEditFormDemo, ModalEditFormExample,\n    ModalSuccessDemo, SuccessModalExample,\n    ModalWarningDemo, WarningModalExample,\n    PluralizeExample,\n    PopOverAutoPlacementExample,\n    PopOverBehaviorsExample,\n    PopOverDynamicExample,\n    PopOverHorizontalExample,\n    PopOverPlacementExample,\n    PopOverVerticalExample,\n    SecurityExample,\n    BasicTipWellExample,\n    ButtonlessTipWellExample,\n    HtmlTipWellExample,\n    IconTipWellExample,\n    ToastServiceExample,\n    ToastUsageExample,\n    TooltipAlignExample,\n    TooltipOptionsExample,\n    TooltipPlacementExample,\n    TooltipSizesExample,\n    TooltipToggleExample,\n    TooltipTypesExample,\n];\nclass NovoExamplesModule {\n}\nNovoExamplesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: EXAMPLE_LIST,\n                entryComponents: EXAMPLE_LIST,\n                exports: EXAMPLE_LIST,\n                imports: [\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CommonModule,\n                    NovoElementsModule,\n                    ChomskyModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: examples.data.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nclass ExampleData {\n    /**\n     * @param {?} example\n     */\n    constructor(example) {\n        if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {\n            return;\n        }\n        /** @type {?} */\n        const exampleConfig = EXAMPLE_COMPONENTS[example];\n        this.source = exampleConfig;\n        // TODO(tinayuangao): Do not hard-code extensions\n        this.exampleFiles = ['html', 'ts', 'css'].map((/**\n         * @param {?} extension\n         * @return {?}\n         */\n        (extension) => `${example}-example.${extension}`));\n        this.examplePath = `/assets/stackblitz/examples/${example}/`;\n        this.selectorName = this.indexFilename = `${example}-example`;\n        if (exampleConfig.additionalFiles) {\n            this.exampleFiles.push(...exampleConfig.additionalFiles);\n        }\n        /** @type {?} */\n        const exampleName = example.replace(/(?:^\\w|\\b\\w)/g, (/**\n         * @param {?} letter\n         * @return {?}\n         */\n        (letter) => letter.toUpperCase()));\n        this.description = exampleConfig.title || exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n        this.componentName = exampleConfig.selectorName || exampleName.replace(/[\\-]+/g, '') + 'Example';\n    }\n}\nif (false) {\n    /**\n     * Description of the example.\n     * @type {?}\n     */\n    ExampleData.prototype.description;\n    /**\n     * Path to the example. This is based on the structure of the material.angular.io repo.\n     * @type {?}\n     */\n    ExampleData.prototype.examplePath;\n    /**\n     * List of files that are part of this example.\n     * @type {?}\n     */\n    ExampleData.prototype.exampleFiles;\n    /**\n     * Selector name of the example component.\n     * @type {?}\n     */\n    ExampleData.prototype.selectorName;\n    /**\n     * Name of the file that contains the example component.\n     * @type {?}\n     */\n    ExampleData.prototype.indexFilename;\n    /**\n     * Name of the example component. For examples with multiple components, this property will\n     * include multiple components that are comma separated (e.g. dialog-overview)\n     * @type {?}\n     */\n    ExampleData.prototype.componentName;\n    /** @type {?} */\n    ExampleData.prototype.source;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/highlight.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction HighlightOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HighlightOptions.prototype.theme;\n    /** @type {?|undefined} */\n    HighlightOptions.prototype.path;\n    /** @type {?|undefined} */\n    HighlightOptions.prototype.auto;\n    /** @type {?|undefined} */\n    HighlightOptions.prototype.config;\n}\n/**\n * @record\n */\nfunction HighlightConfig() { }\nif (false) {\n    /**\n     * tabReplace: a string used to replace TAB characters in indentation.\n     * @type {?|undefined}\n     */\n    HighlightConfig.prototype.tabReplace;\n    /**\n     * useBR: a flag to generate <br> tags instead of new-line characters in the output, useful when code is marked up using a non-<pre> container.\n     * @type {?|undefined}\n     */\n    HighlightConfig.prototype.useBR;\n    /**\n     * classPrefix: a string prefix added before class names in the generated markup, used for backwards compatibility with stylesheets.\n     * @type {?|undefined}\n     */\n    HighlightConfig.prototype.classPrefix;\n    /**\n     * languages: an array of language names and aliases restricting auto detection to only these languages.\n     * @type {?|undefined}\n     */\n    HighlightConfig.prototype.languages;\n}\n/**\n * @record\n */\nfunction HighlightResult() { }\nif (false) {\n    /** @type {?|undefined} */\n    HighlightResult.prototype.language;\n    /** @type {?|undefined} */\n    HighlightResult.prototype.r;\n    /** @type {?|undefined} */\n    HighlightResult.prototype.second_best;\n    /** @type {?|undefined} */\n    HighlightResult.prototype.top;\n    /** @type {?|undefined} */\n    HighlightResult.prototype.value;\n}\nclass HighlightJS {\n    constructor() {\n        this.options = {\n            theme: 'github',\n            path: 'assets/lib/hljs',\n            auto: true,\n        };\n        this._isReady$ = new BehaviorSubject(false);\n        this.options = Object.assign({}, this.options);\n        if (typeof hljs !== 'undefined') {\n            /** hljs is loaded by the user */\n            hljs.configure(this.options.config);\n            this._isReady$.next(true);\n        }\n        else {\n            /** Load hljs script and style locally */\n            this._loadScript();\n            this._loadTheme();\n        }\n    }\n    // Stream that emits when highlightjs is loaded\n    /**\n     * @return {?}\n     */\n    get isReady() {\n        return this._isReady$.pipe(filter((/**\n         * @param {?} isReady\n         * @return {?}\n         */\n        (isReady) => isReady)), take(1));\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} ignore_illegals\n     * @param {?=} continuation\n     * @return {?}\n     */\n    highlight(name, value, ignore_illegals, continuation) {\n        if (typeof hljs !== 'undefined') {\n            return hljs.highlight(name, value, ignore_illegals, continuation);\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} languageSubset\n     * @return {?}\n     */\n    highlightAuto(value, languageSubset) {\n        if (typeof hljs !== 'undefined') {\n            return hljs.highlightAuto(value, languageSubset);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    fixMarkup(value) {\n        if (typeof hljs !== 'undefined') {\n            return hljs.fixMarkup(value);\n        }\n    }\n    /**\n     * @param {?} block\n     * @return {?}\n     */\n    highlightBlock(block) {\n        if (typeof hljs !== 'undefined') {\n            hljs.highlightBlock(block);\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    configure(options) {\n        if (typeof hljs !== 'undefined') {\n            hljs.configure(this.options.config);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initHighlighting() {\n        if (typeof hljs !== 'undefined') {\n            hljs.initHighlighting();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initHighlightingOnLoad() {\n        if (typeof hljs !== 'undefined') {\n            hljs.initHighlightingOnLoad();\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} language\n     * @return {?}\n     */\n    registerLanguage(name, language) {\n        if (typeof hljs !== 'undefined') {\n            hljs.registerLanguage(name, language);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    listLanguages() {\n        if (typeof hljs !== 'undefined') {\n            return hljs.listLanguages();\n        }\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLanguage(name) {\n        if (typeof hljs !== 'undefined') {\n            return hljs.getLanguage(name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _loadScript() {\n        /** @type {?} */\n        const script = document.createElement('script');\n        script.async = true;\n        script.type = 'text/javascript';\n        script.onload = (/**\n         * @return {?}\n         */\n        () => {\n            hljs.configure(this.options.config);\n            this._isReady$.next(true);\n        });\n        script.src = `${this.options.path}/highlight.pack.js`;\n        document.head.appendChild(script);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _loadTheme() {\n        /** @type {?} */\n        const style = document.createElement('link');\n        style.rel = 'stylesheet';\n        style.type = 'text/css';\n        style.href = `${this.options.path}/styles/${this.options.theme}.css`;\n        document.head.appendChild(style);\n    }\n}\nHighlightJS.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHighlightJS.ctorParameters = () => [];\nif (false) {\n    /** @type {?} */\n    HighlightJS.prototype.options;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighlightJS.prototype._isReady$;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/code-snippet.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CodeSnippetComponent {\n    /**\n     * @param {?} sanitizer\n     * @param {?} hljs\n     * @param {?} cdr\n     */\n    constructor(sanitizer, hljs, cdr) {\n        this.sanitizer = sanitizer;\n        this.hljs = hljs;\n        this.cdr = cdr;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.hljs.isReady.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const code = decodeURIComponent(EXAMPLE_COMPONENTS[this.example].tsSource);\n            /** @type {?} */\n            const markup = decodeURIComponent(EXAMPLE_COMPONENTS[this.example].htmlSource);\n            /** @type {?} */\n            const style = decodeURIComponent(EXAMPLE_COMPONENTS[this.example].cssSource);\n            this.highlightTS = this.sanitizer.bypassSecurityTrustHtml(this.hljs.highlightAuto(code, ['typescript']).value.trim());\n            this.highlightHTML = this.sanitizer.bypassSecurityTrustHtml(this.hljs.highlightAuto(markup, ['html']).value.trim());\n            this.highlightCSS = this.sanitizer.bypassSecurityTrustHtml(this.hljs.highlightAuto(style, ['css']).value.trim());\n            this.cdr.markForCheck();\n        }));\n    }\n}\nCodeSnippetComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'code-snippet',\n                template: `\n\n    <novo-nav theme=\"white\" [outlet]=\"snippets\">\n      <novo-tab><span>HTML</span></novo-tab>\n      <novo-tab><span>TS</span></novo-tab>\n      <novo-tab><span>CSS</span></novo-tab>\n    </novo-nav>\n    <novo-nav-outlet #snippets>\n      <novo-nav-content>\n          <pre><code [innerHtml]=\"highlightHTML\"></code></pre>\n      </novo-nav-content>\n      <novo-nav-content>\n          <pre><code [innerHtml]=\"highlightTS\"></code></pre>\n      </novo-nav-content>\n      <novo-nav-content>\n          <pre><code [innerHtml]=\"highlightCSS\"></code></pre>\n      </novo-nav-content>\n    </novo-nav-outlet>\n    `\n            }] }\n];\n/** @nocollapse */\nCodeSnippetComponent.ctorParameters = () => [\n    { type: DomSanitizer },\n    { type: HighlightJS },\n    { type: ChangeDetectorRef }\n];\nCodeSnippetComponent.propDecorators = {\n    example: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CodeSnippetComponent.prototype.example;\n    /** @type {?} */\n    CodeSnippetComponent.prototype.highlightHTML;\n    /** @type {?} */\n    CodeSnippetComponent.prototype.highlightTS;\n    /** @type {?} */\n    CodeSnippetComponent.prototype.highlightCSS;\n    /**\n     * @type {?}\n     * @private\n     */\n    CodeSnippetComponent.prototype.sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CodeSnippetComponent.prototype.hljs;\n    /**\n     * @type {?}\n     * @private\n     */\n    CodeSnippetComponent.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/code-example.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CodeExampleComponent {\n    constructor() {\n        /**\n         * Whether the source for the example is being displayed.\n         */\n        this.showSource = false;\n    }\n    /**\n     * @return {?}\n     */\n    get example() {\n        return this._example;\n    }\n    /**\n     * @param {?} example\n     * @return {?}\n     */\n    set example(example) {\n        if (example && EXAMPLE_COMPONENTS[example]) {\n            this._example = example;\n            this.exampleData = EXAMPLE_COMPONENTS[example];\n            this.selectedPortal = new ComponentPortal(this.exampleData.component);\n        }\n        else {\n            console.log('MISSING EXAMPLE: ', example);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toggleSourceView() {\n        this.showSource = !this.showSource;\n    }\n}\nCodeExampleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'code-example',\n                template: `\n      <div class=\"example\">\n        <header theme=\"white\" [condensed]=\"true\">\n          <h4 novo-title>{{exampleData.title}}</h4>\n          <utils>\n            <button theme=\"icon\" icon=\"book\" (click)=\"toggleSourceView()\"></button>\n            <stackblitz-button [example]=\"example\"></stackblitz-button>\n          </utils>\n        </header>\n        <div class=\"example-container\">\n          <ng-template [cdkPortalOutlet]=\"selectedPortal\"></ng-template>\n        </div>\n        <code-snippet [example]=\"example\" *ngIf=\"showSource\"></code-snippet>\n      </div>\n    `\n            }] }\n];\n/** @nocollapse */\nCodeExampleComponent.ctorParameters = () => [];\nCodeExampleComponent.propDecorators = {\n    example: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Component portal for the currently displayed example.\n     * @type {?}\n     */\n    CodeExampleComponent.prototype.selectedPortal;\n    /**\n     * String key of the currently displayed example.\n     * @type {?}\n     */\n    CodeExampleComponent.prototype._example;\n    /** @type {?} */\n    CodeExampleComponent.prototype.exampleData;\n    /**\n     * Whether the source for the example is being displayed.\n     * @type {?}\n     */\n    CodeExampleComponent.prototype.showSource;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/stackblitz/stackblitz-writer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst STACKBLITZ_URL = 'https://run.stackblitz.com/api/angular/v1';\n/** @type {?} */\nconst COPYRIGHT = `Copyright 2018 Bullhorn Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license`;\n/** @type {?} */\nconst TEMPLATE_PATH = './assets/stackblitz/';\n/** @type {?} */\nconst TEMPLATE_FILES = ['index.html', 'styles.scss', 'polyfills.ts', 'main.ts'];\n/** @type {?} */\nconst TAGS = ['angular', 'bullhon', 'novo-elements', 'example'];\n/** @type {?} */\nconst angularVersion = '^7.2.0';\n/** @type {?} */\nconst dependencies = {\n    '@angular/cdk': angularVersion,\n    '@angular/animations': angularVersion,\n    '@angular/common': angularVersion,\n    '@angular/compiler': angularVersion,\n    '@angular/core': angularVersion,\n    '@angular/forms': angularVersion,\n    '@angular/http': angularVersion,\n    '@angular/platform-browser': angularVersion,\n    '@angular/platform-browser-dynamic': angularVersion,\n    '@angular/router': angularVersion,\n    'novo-elements': '3.6.0',\n    'angular-in-memory-web-api': '~0.5.0',\n    'core-js': '^2.6.2',\n    rxjs: '^6.3.3',\n    'rxjs-compat': '^6.3.3',\n    '@bullhorn/dragula': '1.0.1',\n    'ace-builds': '1.4.2',\n    'angular2-text-mask': '9.0.0',\n    brace: '0.11.1',\n    'classlist.js': '^1.1.20150312',\n    'date-fns': '1.30.1',\n    'post-robot': '9.0.30',\n    'web-animations-js': '^2.3.1',\n    'text-mask-addons': '^3.8.0',\n    'zone.js': '^0.8.14',\n    hammerjs: '^2.0.8',\n    moment: '^2.18.1',\n};\n/**\n * Stackblitz writer, write example files to stackblitz\n *\n * StackBlitz API\n * URL: https://run.stackblitz.com/api/aio/v1/\n * data: {\n *   // File name, directory and content of files\n *   files[file-name1]: file-content1,\n *   files[directory-name/file-name2]: file-content2,\n *   // Can add multiple tags\n *   tags[0]: tag-0,\n *   // Description of stackblitz\n *   description: description,\n *   // Private or not\n *   private: true\n *  // Dependencies\n *  dependencies: dependencies\n * }\n */\nclass StackblitzWriter {\n    /**\n     * @param {?} _http\n     */\n    constructor(_http) {\n        this._http = _http;\n    }\n    /**\n     * Returns an HTMLFormElement that will open a new stackblitz template with the example data when\n     * called with submit().\n     * @param {?} data\n     * @return {?}\n     */\n    constructStackblitzForm(data) {\n        /** @type {?} */\n        const indexFile = `app%2F${data.indexFilename}.ts`;\n        /** @type {?} */\n        const form = this._createFormElement(indexFile);\n        TAGS.forEach((/**\n         * @param {?} tag\n         * @param {?} i\n         * @return {?}\n         */\n        (tag, i) => this._appendFormInput(form, `tags[${i}]`, tag)));\n        this._appendFormInput(form, 'private', 'true');\n        this._appendFormInput(form, 'description', data.description);\n        this._appendFormInput(form, 'dependencies', JSON.stringify(dependencies));\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        (resolve) => {\n            /** @type {?} */\n            const templateContents = TEMPLATE_FILES.map((/**\n             * @param {?} file\n             * @return {?}\n             */\n            (file) => this._readFile(form, data, file, TEMPLATE_PATH)));\n            /** @type {?} */\n            const exampleContents = [];\n            exampleContents.push(Promise.resolve(this._addFileToForm(form, data, decodeURIComponent(data.source.tsSource), `app/${data.selectorName}.ts`, TEMPLATE_PATH)));\n            exampleContents.push(Promise.resolve(this._addFileToForm(form, data, decodeURIComponent(data.source.htmlSource), `app/${data.selectorName}.html`, TEMPLATE_PATH)));\n            exampleContents.push(Promise.resolve(this._addFileToForm(form, data, decodeURIComponent(data.source.cssSource), `app/${data.selectorName}.css`, TEMPLATE_PATH)));\n            exampleContents.push(Promise.resolve(this._addFileToForm(form, data, JSON.stringify({ apps: [{ styles: ['styles.scss'] }] }), `.angular-cli.json`, TEMPLATE_PATH)));\n            // // TODO(josephperrott): Prevent including assets to be manually checked.\n            // if (data.selectorName === 'icon-svg-example') {\n            //   this._readFile(form, data, 'assets/img/examples/thumbup-icon.svg', '', false);\n            // }\n            Promise.all(templateContents.concat(exampleContents)).then((/**\n             * @return {?}\n             */\n            () => {\n                resolve(form);\n            }));\n        }));\n    }\n    /**\n     * Constructs a new form element that will navigate to the stackblitz url.\n     * @param {?} indexFile\n     * @return {?}\n     */\n    _createFormElement(indexFile) {\n        /** @type {?} */\n        const form = document.createElement('form');\n        form.action = `${STACKBLITZ_URL}?file=${indexFile}`;\n        form.method = 'post';\n        form.target = '_blank';\n        return form;\n    }\n    /**\n     * Appends the name and value as an input to the form.\n     * @param {?} form\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    _appendFormInput(form, name, value) {\n        /** @type {?} */\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = name;\n        input.value = value;\n        form.appendChild(input);\n    }\n    /**\n     * Reads the file and adds its text to the form\n     * @param {?} form the html form you are appending to\n     * @param {?} data example metadata about the example\n     * @param {?} filename file name of the example\n     * @param {?} path path to the src\n     * @param {?=} prependApp whether to prepend the 'app' prefix to the path\n     * @return {?}\n     */\n    _readFile(form, data, filename, path, prependApp = true) {\n        this._http\n            .get(path + filename, { responseType: 'text' })\n            .subscribe((/**\n         * @param {?} response\n         * @return {?}\n         */\n        (response) => this._addFileToForm(form, data, response, filename, path, prependApp)), (/**\n         * @param {?} error\n         * @return {?}\n         */\n        (error) => console.log(error)));\n    }\n    /**\n     * Adds the file text to the form.\n     * @param {?} form the html form you are appending to\n     * @param {?} data example metadata about the example\n     * @param {?} content file contents\n     * @param {?} filename file name of the example\n     * @param {?} path path to the src\n     * @param {?=} prependApp whether to prepend the 'app' prefix to the path\n     * @return {?}\n     */\n    _addFileToForm(form, data, content, filename, path, prependApp = true) {\n        if (path === TEMPLATE_PATH) {\n            content = this._replaceExamplePlaceholderNames(data, filename, content);\n        }\n        else if (prependApp) {\n            filename = 'app/' + filename;\n        }\n        this._appendFormInput(form, `files[${filename}]`, this._appendCopyright(filename, content));\n    }\n    /**\n     * The stackblitz template assets contain placeholder names for the examples:\n     * \"<novo-docs-example>\" and \"NovoDocsExample\".\n     * This will replace those placeholders with the names from the example metadata,\n     * e.g. \"<basic-button-example>\" and \"BasicButtonExample\"\n     * @param {?} data\n     * @param {?} fileName\n     * @param {?} fileContent\n     * @return {?}\n     */\n    _replaceExamplePlaceholderNames(data, fileName, fileContent) {\n        if (fileName === 'index.html') {\n            // Replace the component selector in `index,html`.\n            // For example, <novo-docs-example></novo-docs-example> will be replaced as\n            // <button-demo></button-demo>\n            fileContent = fileContent.replace(/novo-docs-example/g, data.selectorName);\n            fileContent = fileContent.replace(/{{version}}/g, 'latest');\n        }\n        else if (fileName === 'main.ts') {\n            // Replace the component name in `main.ts`.\n            // Replace `import {NovoDocsExample} from 'novo-docs-example'`\n            // will be replaced as `import {ButtonDemo} from './button-demo'`\n            fileContent = fileContent.replace(/{ NovoDocsExample }/g, `{ ${data.componentName} }`);\n            // Replace `declarations: [NovoDocsExample]`\n            // will be replaced as `declarations: [ButtonDemo]`\n            fileContent = fileContent.replace(/declarations: \\[NovoDocsExample\\]/g, `declarations: [${data.componentName}]`);\n            // Replace `entryComponents: [NovoDocsExample]`\n            // will be replaced as `entryComponents: [DialogContent]`\n            fileContent = fileContent.replace(/entryComponents: \\[NovoDocsExample\\]/g, `entryComponents: [${data.componentName}]`);\n            // Replace `bootstrap: [NovoDocsExample]`\n            // will be replaced as `bootstrap: [ButtonDemo]`\n            // This assumes the first component listed in the main component\n            /** @type {?} */\n            const componentList = (data.componentName || '').split(',')[0];\n            fileContent = fileContent.replace(/bootstrap: \\[NovoDocsExample\\]/g, `bootstrap: [${componentList}]`);\n            fileContent = fileContent.replace(/novo-docs-example/g, data.indexFilename);\n        }\n        return fileContent;\n    }\n    /**\n     * @param {?} filename\n     * @param {?} content\n     * @return {?}\n     */\n    _appendCopyright(filename, content) {\n        if (filename.indexOf('.ts') > -1 || filename.indexOf('.scss') > -1) {\n            content = `${content}\\n\\n/**  ${COPYRIGHT} */`;\n        }\n        else if (filename.indexOf('.html') > -1) {\n            content = `${content}\\n\\n<!-- ${COPYRIGHT} -->`;\n        }\n        return content;\n    }\n}\nStackblitzWriter.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nStackblitzWriter.ctorParameters = () => [\n    { type: HttpClient }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StackblitzWriter.prototype._http;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/stackblitz/stackblitz-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StackblitzButton {\n    /**\n     * @param {?} stackblitzWriter\n     */\n    constructor(stackblitzWriter) {\n        this.stackblitzWriter = stackblitzWriter;\n        /**\n         * The button becomes disabled if the user hovers over the button before the stackblitz form\n         * is created. After the form is created, the button becomes enabled again.\n         * The form creation usually happens extremely quickly, but we handle the case of the\n         * stackblitz not yet being ready for people will poor network connections or slow devices.\n         */\n        this.isDisabled = false;\n    }\n    /**\n     * @param {?} example\n     * @return {?}\n     */\n    set example(example) {\n        /** @type {?} */\n        const exampleData = new ExampleData(example);\n        if (example) {\n            this.stackblitzWriter.constructStackblitzForm(exampleData).then((/**\n             * @param {?} stackblitzForm\n             * @return {?}\n             */\n            (stackblitzForm) => {\n                this.stackblitzForm = stackblitzForm;\n                this.isDisabled = false;\n            }));\n        }\n        else {\n            this.isDisabled = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    openStackblitz() {\n        // When the form is submitted, it must be in the document body. The standard of forms is not\n        // to submit if it is detached from the document. See the following chromium commit for\n        // more details:\n        // https://chromium.googlesource.com/chromium/src/+/962c2a22ddc474255c776aefc7abeba00edc7470%5E!\n        document.body.appendChild(this.stackblitzForm);\n        this.stackblitzForm.submit();\n        document.body.removeChild(this.stackblitzForm);\n    }\n}\nStackblitzButton.decorators = [\n    { type: Component, args: [{\n                selector: 'stackblitz-button',\n                template: \"<!-- TODO: change the template to be stackblitz icon -->\\n<div>\\n  <button theme=\\\"icon\\\" icon=\\\"sendout\\\" (click)=\\\"openStackblitz()\\\" [disabled]=\\\"isDisabled\\\"></button>\\n</div>\\n\",\n                providers: [StackblitzWriter],\n                host: {\n                    '(mouseover)': 'isDisabled = !stackblitzForm',\n                }\n            }] }\n];\n/** @nocollapse */\nStackblitzButton.ctorParameters = () => [\n    { type: StackblitzWriter }\n];\nStackblitzButton.propDecorators = {\n    example: [{ type: Input }]\n};\nif (false) {\n    /**\n     * The button becomes disabled if the user hovers over the button before the stackblitz form\n     * is created. After the form is created, the button becomes enabled again.\n     * The form creation usually happens extremely quickly, but we handle the case of the\n     * stackblitz not yet being ready for people will poor network connections or slow devices.\n     * @type {?}\n     */\n    StackblitzButton.prototype.isDisabled;\n    /** @type {?} */\n    StackblitzButton.prototype.stackblitzForm;\n    /**\n     * @type {?}\n     * @private\n     */\n    StackblitzButton.prototype.stackblitzWriter;\n}\nclass StackblitzButtonModule {\n}\nStackblitzButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NovoElementsModule],\n                exports: [StackblitzButton],\n                declarations: [StackblitzButton],\n                providers: [StackblitzWriter],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/stackblitz/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: _shared/shared.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NovoExamplesSharedModule {\n}\nNovoExamplesSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [CodeSnippetComponent, CodeExampleComponent],\n                exports: [CodeSnippetComponent, CodeExampleComponent],\n                imports: [FormsModule, ReactiveFormsModule, CommonModule, NovoElementsModule, StackblitzButtonModule, PortalModule],\n                providers: [HighlightJS],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: examples.routes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AceEditorPage {\n}\nAceEditorPage.decorators = [\n    { type: Component, args: [{\n                selector: 'ace-editor-page',\n                template: `<h1>Ace Editor <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/ace-editor\">(source)</a></h1><p>Basic code editor using Ace Editor.</p><h5>Basic Example</h5><p><code-example example=\"basic-ace\"></code-example></p>`\n            }] }\n];\nclass ButtonsPage {\n}\nButtonsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'buttons-page',\n                template: `<h1>Button <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/button\">(source)</a></h1><p>A button clearly indicates a point of action for the user. Bullhorn buttons come in a variety of themes, custom tailored to fit your use-case.</p><h2>Themes</h2><p>Bullhorn button themes were hand crafted to make your life easier. Most buttons used in the Bullhorn platform should utilize a <code>theme</code> attribute. Theme attributes provide access to every variation of Bullhorn UX approved buttons. Depending on the theme, some buttons may also utilize <code>icon</code>, <code>side</code>, and <code>inverse</code> attributes. Button are divided by function into four main categories: Primary, Secondary, Neutralizing, Subtractive. There are also three other button types that are independent of function: Dialogue, Icon, and Header.</p><h2>Colors</h2><p>Acceptable colors include <code>Primary</code>, <code>Success</code>, <code>Warning</code>, <code>Negative</code>, and <strong>all analytics colors</strong> which can be found in the color section of the style guide.</p><p><code-example example=\"button-overview\"></code-example></p><h2>Primary</h2><p>Primary buttons are used to as primary calls-to-action. They should <strong>always</strong> get an <code>icon</code> attribute. Primary buttons with a &quot;success&quot; color <code>color=&quot;success&quot;</code> are used for saving and will almost always contain a &quot;check&quot; icon. Negative color primary buttons <code>color=&quot;negative&quot;</code> are used to delete, clear, or otherwise remove an extant element. Primary buttons should never have a <code>side</code> attribute.</p><!-- Example: ButtonOverviewExample --><p><code-example example=\"button-primary\"></code-example></p><h2>Secondary</h2><p>Secondary buttons are used as an alternative Primary button or when there is a second major action on a page. They usually appears only in Overview and Slideout headers. This theme with an <code>inverse</code> attribute is often used as the action button in dropdown menus.</p><p><code-example example=\"button-secondary\"></code-example></p><p>Secondary buttons can also get an <code>inverse</code> attribute for use on a colored background.</p><p><code-example example=\"button-inverse\"></code-example></p><h2>Dialogue</h2><p>Similar to icon buttons, dialogue buttons require less visual dominance but often need additional helper text. Dialogue buttons <em>may</em> contain <strong>any</strong> icon and a <code>side</code> may be specified eg:<code>side=&quot;right&quot;</code> to place the icon on the right or left side of the text. Dialogue buttons may also use an <code>inverse</code> attribute to change its text color to white.</p><p><code-example example=\"button-dialogue\"></code-example></p><h2>Standard</h2><p>Standard buttons are the most generic button style. Standard buttons by default are styled identically to standard buttons with a <code>color=&quot;light&quot;</code> attribute. Typically, a standard button is used to cancel an action, or to cease any additional progress. Although standard buttons <em>can</em> get an <code>icon</code> attribute, they should almost never be used with an icon. If your proposed design calls for a standard button with an icon, consider using a different button theme, like dialogue.</p><p><code-example example=\"button-standard\"></code-example></p><h2>Icon</h2><p>The <code>icon</code> theme is used to create <strong>icon-only</strong> buttons, which contain no text. They can occupy any of the four main functions but require far less visual dominance than normal buttons. Icon buttons <strong>always</strong> have an <code>icon</code> attribute and can use <strong>any</strong> icon. Icon buttons may also use an <code>inverse</code> attribute to change its icon color to white.</p><p><code-example example=\"button-icon\"></code-example></p><h2>Fab</h2><p>Fab buttons are used to as primary calls-to-action. They should <strong>always</strong> get an <code>icon</code> attribute. Fab buttons with a &quot;success&quot; color <code>color=&quot;success&quot;</code> are used for saving and will almost always contain a &quot;check&quot; icon. Negative color primary buttons <code>color=&quot;negative&quot;</code> are used to delete, clear, or otherwise remove an extant element. Fab buttons should never have a <code>side</code> attribute.</p><p><code-example example=\"button-fab\"></code-example></p><h2>Dynamic</h2><p>Button parameters can be dynamically set and change at runtime. The styles should change and be applied when the values change.</p><p><code-example example=\"button-dynamic\"></code-example></p><h2>Loading</h2><p>Buttons can display a loading state when given the &quot;loading&quot; parameter. When loading is true the button will be disabled and get a loading spinner.</p><p><code-example example=\"button-loading\"></code-example></p>`\n            }] }\n];\nclass CalendarPage {\n}\nCalendarPage.decorators = [\n    { type: Component, args: [{\n                selector: 'calendar-page',\n                template: `<h1>Calendars &amp; Schedules</h1><p>These allow users to easily select a time and date. It comes in a handful of varieties based on the content of the field.</p><h2>Calendar Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/date-picker\">(source)</a></h2><p>The calendar picker is used to select a date. It appears in all date picker fields.</p><h5>Full Calendar Picker</h5><p><code-example example=\"calendar\"></code-example></p><h2>Time Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/time-picker\">(source)</a></h2><p>Time pickers come in 12 hour or 24 hour style.</p><h5>Standalone Time Picker</h5><p><code-example example=\"time\"></code-example></p><h5>Range Picker</h5><p><code-example example=\"range\"></code-example></p><h5>Big Calendar Picker</h5><p><code-example example=\"big-calendar\"></code-example></p>`\n            }] }\n];\nclass ComponentsPage {\n}\nComponentsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'components-page',\n                template: `<h1>Components</h1><p>This is a landing page</p>`\n            }] }\n];\nclass DataTablePage {\n}\nDataTablePage.decorators = [\n    { type: Component, args: [{\n                selector: 'data-table-page',\n                template: `<h1>Data Table <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/data-table\">(source)</a></h1><h5>Working with static data</h5><h6>Change Dataset</h6><h6>Change Pagination Style</h6><h6>Toggle Global Search</h6><h6>Configure Columns</h6><p>Configure Columns</p><h6>Configure Columns</h6><p>Show Row Details (first table) Hide Row Details (first table)</p><h5>Passing an array of rows</h5><p><code-example example=\"data-table-rows\"></code-example></p><h5>Using the static data service</h5><p><code-example example=\"data-table-service\"></code-example></p><h5>Working with remote data</h5><h5>Using the remote data service</h5><p>Data won't actually change, the URL will update with the proper request it will make!</p><h6>URL</h6><p><code-example example=\"data-table-remote\"></code-example></p>`\n            }] }\n];\nclass DropdownPage {\n}\nDropdownPage.decorators = [\n    { type: Component, args: [{\n                selector: 'dropdown-page',\n                template: `<h1>Dropdown <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/dropdown\">(source)</a></h1><p>Dropdown allow users to take an action by selecting from a list of choices revealed upon opening a temporary menu.</p><h2>Types</h2><h5>Dropdown Menu</h5><p>This is a simple dropdown menu.</p><p><code-example example=\"basic-drop-down\"></code-example></p><h5>Dropdown Position Options</h5><p>This is an example of how dropdowns can be positioned. Use the [side] input to specify how the popup positions or re-positions itself on the page using a preferred location and one or more fallback locations:</p><p><code-example example=\"position-drop-down\"></code-example></p><h5>Lots of data!</h5><p>Crazy large dropdown to demonstrate how the smart positioning works.</p><p><code-example example=\"large-drop-down\"></code-example></p><h5>Scrollable Container Class</h5><p>This is an example of using a dropdown within a scrollable container. Simply place the directive cdkScrollable on the ancestor element that does the scrolling.</p><p><code-example example=\"scrollable-drop-down\"></code-example></p><h5>Custom Class</h5><p>You can have custom classes on the dropdown container that opens up by using the &quot;containerClass&quot; property. Use scrollStrategy to close, block or reposition the dropdown when the parent scrolls. The default scrollStrategy is reposition.</p><p><code-example example=\"custom-drop-down\"></code-example></p><h5>Keep Open</h5><p>You can set the &quot;keepOpen&quot; property on the &quot;item&quot; in order to keep it from closing the dropdown automatically.</p><p><code-example example=\"multi-drop-down\"></code-example></p>`\n            }] }\n];\nclass IconPage {\n}\nIconPage.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-page',\n                template: `<h1>Icons <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/icon\">(source)</a></h1><p>If you want to use bullhorn icons, it is easier to use the <code>novo-icon</code> element to style them.  You can always style them within the <code>i</code> tag too.</p><h5>Basic Usage</h5><p><code-example example=\"basic-icons\"></code-example></p><h5>Themes &amp; Colors</h5><p><code-example example=\"themed-icons\"></code-example></p><h5>Raised Icons</h5><p><code-example example=\"raised-icons\"></code-example></p>`\n            }] }\n];\nclass LoadingPage {\n}\nLoadingPage.decorators = [\n    { type: Component, args: [{\n                selector: 'loading-page',\n                template: `<h1>Loading Animations <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/loading\">(source)</a></h1><p>Loading animations are used to help indicate to the user that some sort of progress is taking place. These are especially helpful for intensive operations that might take extra time.</p><h2>Themes</h2><h5>Line</h5><p>The Dot Line animation is indeterminate.</p><p><code-example example=\"loading-line\"></code-example></p><h5>Spinner</h5><p>The Dot Spinner animation is used as an alternate to the loading line animation.</p><p><code-example example=\"loading-circle\"></code-example></p>`\n            }] }\n];\nclass QuickNotePage {\n}\nQuickNotePage.decorators = [\n    { type: Component, args: [{\n                selector: 'quick-note-page',\n                template: `<h1>Quick Note <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/quick-note\">(source)</a></h1><p>Tag Autocomplete</p><h5>Basic Examples</h5><p><code-example example=\"basic-quick-note\"></code-example></p><h5>Custom Triggers</h5><p><code-example example=\"custom-quick-note\"></code-example></p><h5>Custom Results Template</h5><p><code-example example=\"custom-quick-note-results\"></code-example></p>`\n            }] }\n];\nclass SearchPage {\n}\nSearchPage.decorators = [\n    { type: Component, args: [{\n                selector: 'search-page',\n                template: `<h1>Search Input <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/switch\">(source)</a></h1><p>Loading animations are used to help indicate to the user that some sort of progress is taking place. These are especially helpful for intensive operations that might take extra time.</p><h2>Types</h2><h5>Searches</h5><p>Searches are a binary toggle that allow the user to select one of two options. They are most frequently used for an on-off model.</p><p><code-example example=\"search-usage\"></code-example></p>`\n            }] }\n];\nclass SlidesPage {\n}\nSlidesPage.decorators = [\n    { type: Component, args: [{\n                selector: 'slides-page',\n                template: `<h1>slides</h1><h1>Slides <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/slides\">(source)</a></h1><p>Slide element to toggle some information</p><h5>Basic</h5><p><code-example example=\"basic-slide\"></code-example></p>`\n            }] }\n];\nclass SwitchPage {\n}\nSwitchPage.decorators = [\n    { type: Component, args: [{\n                selector: 'switch-page',\n                template: `<h1>Switches &amp; Toggles <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/switch\">(source)</a></h1><p>Loading animations are used to help indicate to the user that some sort of progress is taking place. These are especially helpful for intensive operations that might take extra time.</p><h2>Types</h2><h5>Tiles</h5><p>Similar to radio buttons, tiles are used to select a single item. Tiles have a higher visibility than radio buttons, and are used more frequently in data visualizations. Tiles stretch horizontally, so the list they pull from must be small.</p><h5>Switches</h5><p>Switches are a binary toggle that allow the user to select one of two options. They are most frequently used for an on-off model.</p><p><code-example example=\"switch-usage\"></code-example></p>`\n            }] }\n];\nclass TabbedGroupPickerPage {\n}\nTabbedGroupPickerPage.decorators = [\n    { type: Component, args: [{\n                selector: 'tabbed-group-picker-page',\n                template: `<h1>Tabbed Group Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/tabbed-group-picker\">(source)</a></h1><p>Tabbed Group Picker allows for nested selection of groups and members via a tabbed interface.</p><h2>Basic</h2><p>In its most basic usage, Tabbed Group Picker allows for selection of arbitrary sets of data that have no group/member relationship. Each data set appears on its own tab. The values returned must be javascript primitives (typically string or number).</p><p><code-example example=\"tabbed-group-picker-basic\"></code-example></p><h2>Quick Select</h2><p>Tabbed Group Picker provides a configurable quick select interface. For each quick select item, the developer provides the data type, values (or the 'all' flag), and a label. Tabbed Group Picker builds the quick select menu and synchronizes the quick select checkboxes with the data checkboxes (in both directions).</p><p><code-example example=\"tabbed-group-picker-quick-select\"></code-example></p><h2>Groups</h2><p><code-example example=\"tabbed-group-picker-groups\"></code-example></p><h2>Big Groups</h2><p><code-example example=\"tabbed-group-picker-big-groups\"></code-example></p>`\n            }] }\n];\nclass TablePage {\n}\nTablePage.decorators = [\n    { type: Component, args: [{\n                selector: 'table-page',\n                template: `<h1>Table <a href=\"https://bullhorn.github.io/novo-elements/tree/master/projects/novo-examples/src/elements/table\">(source)</a></h1><p>Tables allow users to view date in a tabular format and perform actions such as Sorting and Filtering. Different configuration are possible for pagination or infinite scroll. Feature to be added include: Custom Item Renderers, etc...</p><h2>Types</h2><h5>Basic Table</h5><p>This is the most basic table.</p><p><code-example example=\"table\"></code-example></p><h5>Details Table</h5><p>This has a row renderer to show a new details row that is expanded when you click on the action column.</p><p><code-example example=\"details-table\"></code-example></p><h5>Select All Table w/ Custom Actions</h5><p>This has checkboxes for selection with custom actions.</p><p><code-example example=\"select-all-table\"></code-example></p><h5>Editable Table</h5><p>Can be put into edit mode and use editors that are set on the column to modify the data.</p><p><code-example example=\"editable-table\"></code-example></p><h5>Total/Average Footer</h5><p>Easily configure a footer to sum or average up columns.</p><p><code-example example=\"total-footer-table\"></code-example></p>`\n            }] }\n];\nclass ColorsPage {\n}\nColorsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'colors-page',\n                template: `<h1>Color</h1><h2>Efficient and expressive</h2><p>Our colors are bold, fresh, and approachable. They are expressive and delightful, but selected with usability and accessibility in mind.</p><h2>Primary Colors</h2><p>These are the base colors of the application.</p><p><primary-colors-example></primary-colors-example></p><h2>Entity Colors</h2><p>This bold palette uses carefully balanced colors to distinguish entities from one another.</p><p><entity-colors-example></entity-colors-example></p><h2>Analyltics Colors</h2><p>This palette features vibrant, bold colors for use in data visualization.</p><p><analytics-colors-example></analytics-colors-example></p>`\n            }] }\n];\nclass CompositionPage {\n}\nCompositionPage.decorators = [\n    { type: Component, args: [{\n                selector: 'composition-page',\n                template: `<h1>Composition</h1><h2>A universal language</h2><p>Comprehensive design principles and language helps maintain usability and a sense of harmony across a large family of products. Consistency and common elements greatly reduce the user effort requred to learn a new interface.</p><p><img src=\"assets/images/CompositionPageIcon.svg\" alt=\"\"></p><h2>Mainframe</h2><p>The Mainframe refers to the permanently fixed portions of the application that never change. It contains the primary navigation and core functions.</p><h6>Design Principles: Hierarchy &amp; Unity</h6><p>Unity implies relation through proximity, size, and color. Making elements clearly distinct or unified helps create a strong visual hierarchy. This is important because it helps to easily differentiate the level of importance between different elements, and controls a user's cognitive flow.</p><h5>Top Frame</h5><p>The top frame contains key functions (Find, Add) and navigation to the Resource Center and to User Profile options.</p><p><img src=\"assets/images/LayoutMainframeTopFrame.svg\" alt=\"mainframe\"></p><h5>Bowling Alley</h5><p>The bowling alley is where all active items are displayed, allowing users to easily shift between them.</p><img src=\"assets/images/LayoutMainframeBowlingAlley.svg\" alt=\"bowling alley\" width=\"300\"/><h5>Menu</h5><p>The menu functions as the primary navigation for the application. It contains links to every list, the dashboard, admin functions, tools, and third-party applications. The items on the menu can be toggled, grouped, and organized however the user wishes.</p><p><img src=\"assets/images/LayoutMainframeMenu.svg\" alt=\"menu\"></p><h2>Headers</h2><p>Headers hold key information and controls for a page. They serve as a wayfinding marker to help the user understand context and easily access important actions.</p><h5>Overviews &amp; Slideouts</h5><p>Overview and Slideout headers are dominant features which focus the user's attention to the context of a particular record and contains key information on the left, and actions on the right. These headers inherit the color of the entity type.</p><p><img src=\"assets/images/LayoutMainframeHeaderOverview.svg\" alt=\"overview header\"></p><h5>List Headers</h5><p>List headers contain the filter and column controls for the list and the primary actions. They are fixed so that results can eaily be modified and actioned regardless of scrolling position.</p><p><img src=\"assets/images/LayoutMainframeHeaderList.svg\" alt=\"list header\"></p><h6>Design Principles: Navigation &amp; Consistency</h6><p>A consistent navigation structure allows users to master an interface much more quickly, as they know that certain functions are always in the same place. We use headers to provide quick access to key functions and aid findability of data in a complex system.</p><h5>Add &amp; Edit Pages</h5><p>The headers of Add and Edit pages generally serve as a simple visual element to help provide context.</p><p><img src=\"assets/images/LayoutMainframeHeaderEditPage.svg\" alt=\"add page header\"></p><h2>Cards</h2><p>Essential to our design paradigm, cards are independent blocks of information. They can contain text, tables, and data visualizations. They offer a curated view of data. Bringing the most pertinent information to the forefont, they allow users to scan large amounts of data quickly.</p><h5>Basic Structure</h5><p>Cards have a header which contains the card title and the card controls. The controls can vary depending on card type, gut generally include move, refresh, configure, and remove. The content area has padding by default but can also run edge-to-edge. Pulse cards have a special icon next to the title.</p><p><img src=\"assets/images/LayoutMainframeCardsNPSCard.svg\" alt=\"card\"></p><h6>Design Principle: Cards</h6><p>The card system scales easily, both in individual size and in groups. Because of this, cards are essential to our design language. Cards balance and align very easily, promoting findability. These handy little containers also provide a contextually relevant home for all content.</p><p><strong>Hint:</strong> This is a great place for third-party developers to fit into the Bullhorn system. <strong>Are you a developer?</strong> Check out card markup and documentation here</p><h5>Dashboard &amp; Overviews</h5><p>Dashboards and Records Overviews are the primary home for our cards. They offer a customizable workspace to arrange and configure to most appropriately fit the user's needs. Cards have a fixed height, but mildly flexible width. They can also be expanded to full-screen. The &quot;add card&quot; control is always located in the top right, to be consistent with the placement of action buttons on tables and lists.</p><p><img src=\"assets/images/LayoutMainframeCardsDashboard.svg\" alt=\"dashboard cards\"></p><h5>Slideouts and Mobile</h5><p>Cards are so flexible, they also work well in a mobile setting. They help users to easily scan chunks of information and find what they need.</p><p><img src=\"assets/images/LayoutMobileCard.svg\" alt=\"mobile cards\"></p>`\n            }] }\n];\nclass DesignPage {\n}\nDesignPage.decorators = [\n    { type: Component, args: [{\n                selector: 'design-page',\n                template: `<h1>Design</h1><p>This is a landing page</p>`\n            }] }\n];\nclass IconographyPage {\n}\nIconographyPage.decorators = [\n    { type: Component, args: [{\n                selector: 'iconography-page',\n                template: `<h1>Iconography</h1><h2>Certified Pixel-Perfect</h2><p>Icons are used to represent an action or concept through the most simplistic imagery possible. Icons give additional context to written material, allowing the user to quickly comprehend any given concept. The icons are designed on a highly specific grid to ensure maximum clarity even at a small size. Their design is friendly, human, and bold.</p><p><a href=\"http://bullhorn.github.io/bullhorn-icons/\">Bullhorn's Icon Set</a></p><p><img src=\"assets/images/IconographyPageIcon.svg\" alt=\"\"></p><h2>Icons with Typography</h2><p>An icon will always have slightly larger dimensions than text when they are paired together. This ensures that the icon is visually the same size as the text and that it scales proportionally.</p><h5>Base sizing</h5><p>Icons placed next to typography should alays follow this convention.</p><p>Bullhorn Glyphicons <strong>Size:</strong> 1.29em <strong>Padding:</strong> .25em <strong>Border Radius:</strong> .625em</p><h1>Company Name</h1><h5>Padding</h5><p>Icons should have sufficient padding when followed by text.</p><div class=\"padding\">    <div>        <h4><i class=\"bhi-circle\"></i>Alice Hughes</h4>        <h6><i class=\"bhi-location\"></i>Boston, MA</h6>        <span class=\"not-accepted\"><i class=\"bhi-close-o\"></i>I feel squished</span>    </div>    <div>        <h4><i class=\"bhi-circle\"></i>Alice Hughes</h4>        <h6><i class=\"bhi-location\"></i>Boston, MA</h6>        <span class=\"accepted\"><i class=\"bhi-check\"></i>Much better</span>    </div></div><h4>Alice Hughes</h4><h6>Boston, MA</h6><p>I feel squished</p><h4>Alice Hughes</h4><h6>Boston, MA</h6><p>Much better</p><h2>Entity Icons</h2><h5>Standard Entity Icons</h5><p>Used with corresponding entity color.</p><p>Lead</p><p>Contact</p><p>Company</p><p>Candidate</p><p>Opportunity</p><p>Job</p><p>Placement</p><pre><code>            &lt;i theme=&quot;entity&quot; class=&quot;bhi-lead lead&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Lead&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-person contact&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Contact&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-company company&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Company&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-candidate candidate&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Candidate&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-opportunity opportunity&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Opportunity&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-job job&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Job&lt;/h6&gt;            &lt;i theme=&quot;entity&quot; class=&quot;bhi-star placement&quot;&gt;&lt;/i&gt;            &lt;h6&gt;Placement&lt;/h6&gt;</code></pre><h2>Contained Icons</h2><h5>Scaling</h5><p>Make sure to scale the corner radius appropriately when enlarging or decreasing the size of the icon.</p><p><img src=\"assets/images/IconographyScalingDont.svg\" alt=\"\"></p><p>That doesn't look like a rectangle</p><p><img src=\"assets/images/IconographyScalingDo.svg\" alt=\"\"></p><p>Always maintain the proportions</p><h5>Padding</h5><p>To preserve readability, icons should have sufficient padding from the edges of their containers. Additionally, the icons should be visually centered in their containers.</p><p><img src=\"assets/images/IconographyPaddingDont.svg\" alt=\"\"></p><p>It's getting crowded in here</p><p><img src=\"assets/images/IconographyPaddingDo.svg\" alt=\"\"></p><p>It's good to have some breathing room</p><h5>Examples</h5><h1>Heading One</h1><h2>Heading Two</h2><h3>Heading Three</h3><h4>Heading Four</h4><h5>Heading Five</h5><h6>Heading Six</h6><pre><code>            &lt;h1&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-lead lead&quot;&gt;&lt;/i&gt;Heading One&lt;/h1&gt;            &lt;h2&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-person contact&quot;&gt;&lt;/i&gt;Heading Two&lt;/h2&gt;            &lt;h3&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-company company&quot;&gt;&lt;/i&gt;Heading Three&lt;/h3&gt;            &lt;h4&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-candidate candidate&quot;&gt;&lt;/i&gt;Heading Four&lt;/h4&gt;            &lt;h5&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-opportunity opportunity&quot;&gt;&lt;/i&gt;Heading Five&lt;/h5&gt;            &lt;h6&gt;&lt;i theme=&quot;contained&quot; class=&quot;bhi-job job&quot;&gt;&lt;/i&gt;Heading Six&lt;/h6&gt;</code></pre>`\n            }] }\n];\nclass TypographyPage {\n}\nTypographyPage.decorators = [\n    { type: Component, args: [{\n                selector: 'typography-page',\n                template: `<h1>Typography</h1><h2>Roboto, not robotic.</h2><p>Roboto's refined letterforms combine geometry with open, rounded features to create a structured, yet friendly typeface. It maintains a human-like quality while expressing a clean and modern aesthetic.</p><p><a href=\"https://www.google.com/fonts/specimen/Roboto\">Roboto Typeface on Google Fonts</a></p><p><img src=\"assets/images/TypographyPageIcon.svg\" alt=\"\"></p><h6>Design Principle: Clarity</h6><p>Proper line length, adequate white space, and appropriate line breaks are necessary to preserve readability, rhythm, and overall clarity.</p><h5>Line Height</h5><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><p>These lines are too close for comfort</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><p>Thumbs up for great readability</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><p>I'm losing focus with all this space</p><h6>Design Principle: Balance</h6><p>Typographic balance is critical to readability and understanding information hierarchy. The weight and size of the font helps determine which element on a page receives a user’s attention first.</p><h5>Line Length</h5><hr><p>30</p><p>Short lines interrupt the reader's rhythm</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><hr><p>55-75</p><p>Optimal line length for readability</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><hr><p>100</p><p>Difficult to jump to the next line</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labor.</p><h6>How does this work with responsive design?</h6><p>Line length is always relative to its font-size. This means that if a font scales up or down in sizing (relative to its device's screen size) the line length will automatically scale with it. Line length is about maintaining a comfortable reading flow and rhythm from line to line.</p><p><strong>When implementing</strong>, native line length will always be secondary to the width of the text's container. This means that if a screen's width is smaller than the text's native line length, the text will wrap early.</p><h2>Styles</h2><p>There a number of general styles that are present throughout the application. To maintain consistency, these styles should be adhered to as much as possible.</p><h1>Header 1</h1><p>Roboto <strong>Size:</strong> 2.5em (35px) <strong>Weight:</strong> 400 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.45em 0 0.35em</p><h2>Header 2</h2><p>Roboto <strong>Size:</strong> 2em (28px) <strong>Weight:</strong> 500 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.75em 0 0.3em</p><h3>Header 3</h3><p>Roboto <strong>Size:</strong> 1.75em (24px) <strong>Weight:</strong> 300 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.6em 0 0.4em</p><h4>Header 4</h4><p>Roboto <strong>Size:</strong> 1.375em (19.25px) <strong>Weight:</strong> 400 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.75em 0 0.5em</p><h5>Header 5</h5><p>Roboto <strong>Size:</strong> 1.125em (15.75px) <strong>Weight:</strong> 700 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.75em 0 0.25em <strong>Transform:</strong> UPPERCASE</p><h6>Header 6</h6><p>Roboto <strong>Size:</strong> 1.125em (15.75px) <strong>Weight:</strong> 500 <strong>Margin:</strong> 0 <strong>Padding:</strong> 0.75em 0 0.25em</p><p>Caption</p><h4>Section Header</h4><h2>Large Section Header with Icon</h2><h6>Small Section Header with Icon</h6><pre><code>        &lt;h1&gt;Heading 1&lt;/h1&gt;        &lt;h2&gt;Heading 2&lt;/h2&gt;        &lt;h3&gt;Heading 3&lt;/h3&gt;        &lt;h4&gt;Heading 4&lt;/h4&gt;        &lt;h5&gt;Heading 5&lt;/h5&gt;        &lt;h6&gt;Heading 6&lt;/h6&gt;        &lt;p&gt;        Body        &lt;/p&gt;        &lt;hr&gt;        &lt;span class=&quot;caption&quot;&gt;Caption&lt;/span&gt;        &lt;h4 class=&quot;novo-section-header&quot;&gt;Section Header&lt;/h4&gt;        &lt;h2 class=&quot;novo-section-header&quot;&gt;          &lt;i class=&quot;bhi-section&quot;&gt;          Large Section Header with Icon        &lt;/h2&gt;        &lt;h6 class=&quot;novo-section-header&quot;&gt;          &lt;i class=&quot;bhi-idea&quot;&gt;          Small Section Header with Icon        &lt;/h6&gt;</code></pre>`\n            }] }\n];\nclass ChipsPage {\n}\nChipsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-page',\n                template: `<h1>Chips <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/chips\">(source)</a></h1><p>The chips element (<code>chips</code>) represents a control that presents a menu of options. The options within are set by the <code>source</code> attribute. Options can be pre-selected for the user using the <code>ngModel</code> attribute. Chips are the multi-select version of <code>pickers</code></p><h5>Basic Examples</h5><p>By clicking on the <code>chips</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be added to the list of selected values.</p><p><code-example example=\"basic-chips\"></code-example></p><h5>Async Examples</h5><p>By clicking on the <code>chips</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be added to the list of selected values.</p><p><code-example example=\"async-chips\"></code-example></p><h5>Formatted Examples</h5><p>By clicking on the <code>chips</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be added to the list of selected values.</p><p><code-example example=\"formatted-chips\"></code-example></p><h5>Options Closing Example</h5><p>By clicking on the <code>chips</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be added to the list of selected values and the options list will be removed.</p><p><code-example example=\"close-on-select-chips\"></code-example></p><h5>Grouped Multi Picker (categories) with Chips</h5><p>Having custom templates makes it easy to customize the functionality of the picker, here is an example of a category selector</p><p><code-example example=\"grouped-multi-picker\"></code-example></p><h5>Row Chips Example</h5><p>By clicking on the <code>row-chips</code> element, the options list will be displayed.  Select any of the options by clicking on the item in the list.  The value selected will be added to the list of selected values as a new row. By clicking the delete icon at the end of the row, the row will be removed from the list of selected values.</p><p><code-example example=\"row-chips\"></code-example></p>`\n            }] }\n];\nclass DatePickerPage {\n}\nDatePickerPage.decorators = [\n    { type: Component, args: [{\n                selector: 'date-picker-page',\n                template: `<h1>Date and Time Pickers</h1><p>These allow users to easily select a time and date. It comes in a handful of varieties based on the content of the field.</p><h2>Date Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/date-picker\">(source)</a></h2><p>The calendar picker is used to select a date. It appears in all date picker fields.</p><h5>Full Date Picker</h5><p><code-example example=\"date-picker\"></code-example></p><h2>Time Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/time-picker\">(source)</a></h2><p>Time pickers come in 12 hour or 24 hour style.</p><h5>Standalone Time Picker</h5><p><code-example example=\"time-picker\"></code-example></p><h5>Range Picker</h5><p><code-example example=\"date-range\"></code-example></p><h5>Date Time Picker</h5><p><code-example example=\"date-time\"></code-example></p><h5>Date Time Input Picker</h5><p><code-example example=\"date-time-input\"></code-example></p><h5>Customizing Week Start</h5><p><code-example example=\"week-start\"></code-example></p><h5>Different Locale</h5><p>TBD</p>`\n            }] }\n];\nclass EditorPage {\n}\nEditorPage.decorators = [\n    { type: Component, args: [{\n                selector: 'editor-page',\n                template: `<h1>CK Editor <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/ckeditor\">(source)</a></h1><p>Basic HTML editor using CK Editor.</p><h5>Basic Example</h5><p><code-example example=\"basic-editor\"></code-example></p><h5>Minimal Example</h5><p><code-example example=\"minimal-editor\"></code-example></p>`\n            }] }\n];\nclass FormControlsPage {\n}\nFormControlsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'form-controls-page',\n                template: `<h1>Form Controls</h1><p>This is a landing page</p>`\n            }] }\n];\nclass FormGroupsPage {\n}\nFormGroupsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'form-groups-page',\n                template: `<h1>Grouped Forms / Form Controls <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/form\">(source)</a></h1><p>Useful when needing to group smaller sections of forms, can be used in the larger form. Static or Dynamic too!</p><h5>Horizontal</h5><p><code-example example=\"horizontal\"></code-example></p><h5>Horizontal (options)</h5><p><code-example example=\"horizontal-options\"></code-example></p><h5>Vertical</h5><p><code-example example=\"vertical\"></code-example></p><h5>Horizontal (options)</h5><p><code-example example=\"vertical-options\"></code-example></p><h5>Custom Template (you control everything!)</h5><p><code-example example=\"custom-template\"></code-example></p>`\n            }] }\n];\nclass FormPage {\n}\nFormPage.decorators = [\n    { type: Component, args: [{\n                selector: 'form-page',\n                template: `<h1>Forms <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/form\">(source)</a></h1><p>Forms use inputs and labels to submit user content. But you already knew that. What you may not know is that our forms come in two styles 'Static' and 'Dynamic'</p><h2>Static Form</h2><p>Static forms <code>&lt;novo-form /&gt;</code>.</p><h5>Textbox Based Controls</h5><p><code-example example=\"text-based-controls\"></code-example></p><h5>Checkbox Controls</h5><p><code-example example=\"check-box-controls\"></code-example></p><h5>File Input Controls</h5><p><code-example example=\"file-input-controls\"></code-example></p><h5>Calendar Controls</h5><p><code-example example=\"calendar-input-controls\"></code-example></p><h5>Picker Controls</h5><p><code-example example=\"picker-controls\"></code-example></p><h5>Address Controls</h5><p><code-example example=\"address-control\"></code-example></p><h2>Dynamic Form</h2><p>Dynamic forms are composed of one element, <code>&lt;novo-dynamic-form [controls]=&quot;controls&quot;/&gt;</code> and allow you to pass in the controls and form and it will create the form for you.</p><h5>Basic</h5><p><code-example example=\"dynamic-form\"></code-example></p><h5>Vertical</h5><p><code-example example=\"vertical-dynamic-form\"></code-example></p><h5>Fieldsets</h5><p><code-example example=\"dynamic-form-field-sets\"></code-example></p><h5>Updating Fields/Status</h5><p><code-example example=\"updating-form\"></code-example></p><h5>Disabled Field States</h5><p><code-example example=\"disabled-form\"></code-example></p><h5>Enable/Disable All Fields in Form</h5><p><code-example example=\"enable-disable-all-fields-in-form\"></code-example></p>`\n            }] }\n];\nclass MultiPickerPage {\n}\nMultiPickerPage.decorators = [\n    { type: Component, args: [{\n                selector: 'multi-picker-page',\n                template: `<h1>MultiPicker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/multi-picker\">(source)</a></h1><p>The multipicker element (<code>multipicker</code>) represents a control that presents a menu of options of multiple types. The options within are set by the <code>source</code> attribute. Options can be pre-selected for the user using the <code>ngModel</code> attribute. Multipicker is the multi-category version of <code>chips</code></p><p>.</p><h5>Basic Example</h5><p>By clicking on the <code>multi-picker</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be added to the list of selected values.</p><p><code-example example=\"basic-multi-picker\"></code-example></p><h5>Nested Example</h5><p>The multipicker can also support a parent-child relationship between the types, such as the relationship between a state with many cities or a department with users.</p><p><code-example example=\"nested-multi-picker\"></code-example></p>`\n            }] }\n];\nclass PickerPage {\n}\nPickerPage.decorators = [\n    { type: Component, args: [{\n                selector: 'picker-page',\n                template: `<h1>Picker <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/picker\">(source)</a></h1><p>The picker element (<code>input[picker]</code>) represents a control that presents a menu of options. The options within are set by the <code>items</code> attribute. Options can be pre-pickered for the user using the <code>value</code> attribute.</p><h5>Basic Examples</h5><p>By clicking on the <code>input</code> element, the options list will be displayed. picker any of the options by clicking on the item in the list. The value pickered will be displayed and the options list will be removed.</p><p><code-example example=\"basic-picker\"></code-example></p><h5>Async Examples (With Infinite Scroll)</h5><p>By clicking on the <code>input</code> element, the options list will be displayed. picker any of the options by clicking on the item in the list. The value pickered will be displayed and the options list will be removed.</p><p><code-example example=\"async-picker\"></code-example></p><h5>Formatted Picker Examples</h5><p>By clicking on the <code>input</code> element, the options list will be displayed. picker any of the options by clicking on the item in the list. The value pickered will be displayed and the options list will be removed.</p><p><code-example example=\"formatted-picker\"></code-example></p><h5>Custom Picker Examples</h5><p>By clicking on the <code>input</code> element, the options list will be displayed. picker any of the options by clicking on the item in the list. The value pickered will be displayed and the options list will be removed.</p><p><code-example example=\"custom-picker-results\"></code-example></p><h5>Overriding the Result Template</h5><p>You can provide a string to override the base result template. You have access to <code>match</code> which is the data to be displayed.</p><p><code-example example=\"override-template\"></code-example></p><h5>Default Options</h5><p>You can set a function or array for the default options on the config, for these options to appear when the user clicks in and doesn't have enough keys entered to perform a search</p><p><code-example example=\"default-options-picker\"></code-example></p><h5>Entity Single Picker</h5><p>You can provide custom config to style the picker to select entities too!</p><p><code-example example=\"entity-picker\"></code-example></p><h5>Grouped Multi Picker (categories) with Picker</h5><p>Having custom templates makes it easy to customize the functionality of the picker, here is an example of a category selector</p><p><code-example example=\"grouped-picker\"></code-example></p>`\n            }] }\n];\nclass RadioButtonsPage {\n}\nRadioButtonsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'radio-buttons-page',\n                template: `<h1>Radio <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/radio\">(source)</a></h1><p>A radio group</p><h5>Basic</h5><p><code-example example=\"basic-radio\"></code-example></p><h5>Vertical</h5><p><code-example example=\"vertical-radio\"></code-example></p><h5>Button Radio</h5><p><code-example example=\"button-radio\"></code-example></p><h5>Icon Radio</h5><p><code-example example=\"icon-radio\"></code-example></p>`\n            }] }\n];\nclass SelectPage {\n}\nSelectPage.decorators = [\n    { type: Component, args: [{\n                selector: 'select-page',\n                template: `<h1>Select <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/select\">(source)</a></h1><p>The select element (<code>novo-select</code>) represents a control that presents a menu of options. The options within are set by the <code>items</code> attribute. Options can be pre-selected for the user using the <code>value</code> attribute.</p><h5>Basic Examples</h5><p>By clicking on the <code>novo-select</code> element, the options list will be displayed. Select any of the options by clicking on the item in the list. The value selected will be displayed and the options list will be removed.</p><p><code-example example=\"basic-select\"></code-example></p><h5>Lots of Options</h5><p>The most common need for the <code>select</code> component is when there are too many options that would fit on on the screen. The options list will display appropriately and scroll as needed.</p><p><code-example example=\"long-select\"></code-example></p>`\n            }] }\n];\nclass TilesPage {\n}\nTilesPage.decorators = [\n    { type: Component, args: [{\n                selector: 'tiles-page',\n                template: `<h1>Tiles <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/tiles\">(source)</a></h1><p>This component is intended to behave akin to the radio button component.</p><h4>Demo</h4><p><code-example example=\"tiles-usage\"></code-example></p><h4>Code</h4>`\n            }] }\n];\nclass ValuePage {\n}\nValuePage.decorators = [\n    { type: Component, args: [{\n                selector: 'value-page',\n                template: `<h1>Value/Details/Summary <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/value\">(source)</a></h1><p>Used to render data based on its field type provided in meta. It has two themes, DEFAULT - horizontal view and MOBILE - vertical view</p><h2>Mobile Theme</h2><h5>Value/Details/Summary</h5><p>Render SCALAR fields</p><p><code-example example=\"basic-value\"></code-example></p><h5>Category Value</h5><p>Render TO_ONE fields</p><p><code-example example=\"category-value\"></code-example></p><h5>Using Icons w/Values</h5><p>Render fields with one or multiple icons on the right with an onclick event that calls a function on the meta object</p><p><code-example example=\"icon-value\"></code-example></p><h5>CorporateUser</h5><p>Render TO_ONE fields with CorporateUser as an Associated Entity</p><p><code-example example=\"corporate-user-value\"></code-example></p><h5>Custom Formatter</h5><p>Render Entity TO_ONE fields as links</p><p><code-example example=\"formatter-value\"></code-example></p><h5>External Links</h5><p>Render external links</p><p><code-example example=\"external-link-value\"></code-example></p><h5>DateTime</h5><p>Render DateTime and Timestamp fields in the localized Date format</p><p><code-example example=\"date-time-value\"></code-example></p><h5>Address</h5><p>Render Address fields</p><p><code-example example=\"address-value\"></code-example></p><h5>Associated Entities</h5><p>Render associated fields</p><p><code-example example=\"associated-value\"></code-example></p><h5>Entity Lists</h5><p>Render entity lists</p><p><code-example example=\"entity-list-value\"></code-example></p><h5>Multi Options</h5><p>Render multi option fields (Checkbox, radio, etc.)</p><p><code-example example=\"multi-option-value\"></code-example></p>`\n            }] }\n];\nclass HomePage {\n}\nHomePage.decorators = [\n    { type: Component, args: [{\n                selector: 'home-page',\n                template: `<h1>Introduction</h1><h2>Crafted amid Complexity</h2><p>Enterprise software is highly complex and demands a high level of flexibility. Design offers clarity and enables us to make deep, powerful connections.</p><img src=\"assets/images/IntroPageHeaderImage.svg\" width=\"300\"/><h5>A NEW STANDARD</h5><p>Elegance in utility helps to create a system for humans, not robots. We strive not just to empower users but to delight them in the process.</p><h5>INSIGHTS AT SCALE</h5><p>Vast data reservoirs need a finely tuned system to surface the critical information right when it is needed, no matter the scale or setting.</p><h5>POWER IN FLEXIBILITY</h5><p>Users have vastly differing needs and goals. By identifying key commonalities and themes, we provide a strong experience for all.</p><p>Are you a developer and what to skip right to the code?<br><a href=\"#\">View Components here</a></p><p>Looking for the Bullhorn corporate brand guidelines?<br><a href=\"https://brandfolder.com/bullhorn\">Bullhorn Brand Folder</a></p>`\n            }] }\n];\nclass CardsPage {\n}\nCardsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'cards-page',\n                template: `<h1>Cards <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/card\">(source)</a></h1><p>Components and elements for cards to make sure the loading/empty/layout views are all consistent.</p><h5>Examples</h5><h2>Basic Card (using attributes)</h2><p><code-example example=\"basic-card\"></code-example></p><h2>Card (using config object and card-actions)</h2><p><code-example example=\"card-config\"></code-example></p>`\n            }] }\n];\nclass ExpansionPage {\n}\nExpansionPage.decorators = [\n    { type: Component, args: [{\n                selector: 'expansion-page',\n                template: `<h1>Expandable Containers<a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/expansion\">(source)</a></h1><p>Expansion Panel provides an expandable details-summary view. Each expansion-panel must include a header and may optionally include an action bar.</p><p>By default, the expansion-panel header includes a toggle icon at the end of the header to indicate the expansion state. This icon can be hidden via the hideToggle property.</p><h2>Basic Usage</h2><h5>Standard Expansion Panel</h5><p>This is an example of a standard list.</p><p><code-example example=\"basic-expansion\"></code-example></p><h5>Accordion Expansion Panel</h5><p>This is an example of a Accordion.</p><p><code-example example=\"accordion\"></code-example></p><h5>Lazy Expansion Panel</h5><p>This is an example of a Lazy loaded list.</p><p><code-example example=\"lazy-expansion\"></code-example></p><h5>Patterns</h5><p>Check out the <a routerLink=\"/patterns\">Activity Section</a> pattern</p>`\n            }] }\n];\nclass HeaderPage {\n}\nHeaderPage.decorators = [\n    { type: Component, args: [{\n                selector: 'header-page',\n                template: `<h1>Headers <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/header\">(source)</a></h1><p>Headers are used in Mainframe Record pages and some modals.</p><h2>Types</h2><h5>Record Header</h5><p>Record headers have details about the entity record and tabbed navigation.</p><p><code-example example=\"basic-header\"></code-example></p><h5>Condensed</h5><p><code-example example=\"condensed-header\"></code-example></p><h2>Options</h2><h5>SubTitle</h5><p><code-example example=\"header-subtitle\"></code-example></p><h5>With Search</h5><p><code-example example=\"header-searchbar\"></code-example></p>`\n            }] }\n];\nclass LayoutsPage {\n}\nLayoutsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'layouts-page',\n                template: `<h1>Layouts</h1><p>This is a landing page</p>`\n            }] }\n];\nclass ListPage {\n}\nListPage.decorators = [\n    { type: Component, args: [{\n                selector: 'list-page',\n                template: `<h1>List / Item <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/list\">(source)</a></h1><p>Lists are used to display rows of information like entities or entity data and appear on cards, our mobile app, and several other places across the Bullhorn platform.</p><h2>Basic Usage</h2><h5>Standard List</h5><p>This is an example of a standard list.</p><p><code-example example=\"basic-list\"></code-example></p><h5>Themed List</h5><p>This is an example of a themed list.</p><p><code-example example=\"themed-list\"></code-example></p>`\n            }] }\n];\nclass StepperPage {\n}\nStepperPage.decorators = [\n    { type: Component, args: [{\n                selector: 'stepper-page',\n                template: `<h1>Steppers <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/stepper\">(source)</a></h1><p>Stepper component provides a wizard-like workflow by dividing content into logical steps.</p><p>Material stepper builds on the foundation of the CDK stepper that is responsible for the logic that drives a stepped workflow. Material stepper extends the CDK stepper and has Material Design styling.</p><h2>Stepper variants</h2><p>There are two stepper components: novo-horizontal-stepper and novo-vertical-stepper. They can be used the same way. The only difference is the orientation of stepper.</p><h5>Horizontal Stepper</h5><p>This is the default stepper great for many reasons.</p><p><code-example example=\"stepper-horizontal\"></code-example></p><h5>Linear stepper</h5><p>The linear attribute can be set on novo-horizontal-stepper and novo-vertical-stepper to create a linear stepper that requires the user to complete previous steps before proceeding to following steps. For each novo-step, the stepControl attribute can be set to the top level AbstractControl that is used to check the validity of the step.</p><p>There are two possible approaches. One is using a single form for stepper, and the other is using a different form for each step.</p><p>Alternatively, if you don't want to use the Angular forms, you can pass in the completed property to each of the steps which won't allow the user to continue until it becomes true. Note that if both completed and stepControl are set, the stepControl will take precedence.</p><h5>Vertical Stepper</h5><p>This is an alternative stepper great for many other reasons.</p><p><code-example example=\"stepper-vertical\"></code-example></p>`\n            }] }\n];\nclass TabsPage {\n}\nTabsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-page',\n                template: `<h1>Tabs <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/tabs\">(source)</a></h1><p>Tabs make it easy to explore and switch between different views or functional aspects of an app or to browse categorized data sets. Tabs in Bullhorn have two different themes; A 'color' theme for tabbed navigation on a colored background, and a 'white' theme for tabs on a white background.</p><h2>Themes</h2><h5>Color</h5><p>Colored background tab navigation gets the theme <code>theme=&quot;color&quot;</code></p><p><code-example example=\"tabs-color\"></code-example></p><h5>White</h5><p>White background tab navigation gets the theme <code>theme=&quot;white&quot;</code></p><p><code-example example=\"tabs-color\"></code-example></p><h2>Styles</h2><p>Condensed tabs to help utilize more space with <code>condensed=&quot;true&quot;</code></p><p><code-example example=\"tabs-condensed\"></code-example></p><h2>Types</h2><h5>Vertical</h5><p>Vertical tabs get a direction attribute <code>direction=&quot;vertical&quot;</code></p><p><code-example example=\"tabs-vertical\"></code-example></p><h5>Button Tab Bars</h5><p>Tabbed Button Bars get a similar style treatment to the <code>&quot;header&quot;</code> theme button.</p><!-- <code-example example=\"tabs-condensed\"></code-example> --><h2>As Application Routing Mechanism</h2><p>Follows the same color/white theme as above, but doesn't use the &quot;novo-tabs&quot; tag and you have to add the classes and html accordingly. The header will now control and route your application and put the content in the &quot;router-outlet&quot; and look/feel like our tabs component.</p><p><code-example example=\"tabs-router\"></code-example></p>`\n            }] }\n];\nclass PatternsPage {\n}\nPatternsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'patterns-page',\n                template: `<h1>Design Patterns</h1><p>The following are examples of know composition patterns to create a common user experience.  The component library is design to be used in these patterns.</p><h2>Activity Sections</h2><p>Displaying a series of lists in expandable sections, like in the activity tab.</p><p><code-example example=\"activity-section\"></code-example></p><h2>Record Headers</h2><p>Entity Record Headers Patterns.</p><p><code-example example=\"record-header\"></code-example></p>`\n            }] }\n];\nclass TemplatesPage {\n}\nTemplatesPage.decorators = [\n    { type: Component, args: [{\n                selector: 'templates-page',\n                template: `<h2>Bullhorn Application Templates</h2><p>Bullhorn provides customization of the user experience with custom tabs, custom cards, custom actions and more.</p><p>The <a href=\"https://github.com/bullhorn/extension-samples\">Bullhorn Extension Samples</a> repoprovides several examples for getting started building custom apps using Novo Elements.</p>`\n            }] }\n];\nclass ChomskyPage {\n}\nChomskyPage.decorators = [\n    { type: Component, args: [{\n                selector: 'chomsky-page',\n                template: `<h1>Chomsky-NG2 Documentation</h1><p>A lightweight Angular 2 i18n wrapper.</p><ul><li>English</li><li>Russian</li><li>French</li></ul><h5>Simple Translation</h5><p><code-example example=\"simple-translations\"></code-example></p><h5>Translation with Variables</h5><p><code-example example=\"translations-variables\"></code-example></p><h5>Translation with Date Variables</h5><p>Other short formats include (bold is default):<br><em>short - 02/14/2017, 1:17 PM</em><br><em>medium - Feb 14, 2017, 1:17 PM</em><br><em>long - Febuary 14, 2017, 1:17 PM CST</em><br><strong><em>dateShort - 02/14/2017</em></strong><br><em>dateMedium - Feb 14, 2017</em><br><em>dateLong - Febuary 14, 2017</em><br><em>timeShort - 1:17 PM</em><br><em>timeLong - 1:17 PM CST</em></p><p><code-example example=\"date-translations\"></code-example></p><h5>Translation with Number &amp; Currency Variables</h5><p>Can be used with syntax from <a href=\"//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a>.</p><p><code-example example=\"number-translations\"></code-example></p><h5>Translation with Pluralization and Gender</h5><p><code-example example=\"plural-translations\"></code-example></p>`\n            }] }\n];\nclass FieldInteractionsPage {\n}\nFieldInteractionsPage.decorators = [\n    { type: Component, args: [{\n                selector: 'field-interactions-page',\n                template: `<h1>Field Interactions</h1><p>Field Interactions is a simple API that allows you to modify NovoForms based on field changes.</p><p>The Field Interaction API gives you a simple to use API object when writing your field interaction functions.</p><p>Look below for samples of what you can do with this API...</p><h2>Configuration</h2><p>Inspect Form Configuration on Field Getting Current Context Write Field Interaction</p><h5>Inspect Form</h5><p>There is a special <code>data-control-key</code> property added to the <code>novo-control</code> element.</p><p>You can inspec the DOM at the input and see the property to know what 'key' to use in the API</p><p>By default, if you are writing a Field Interaction for the active field you can use <code>API.getActiveKey()</code></p><h5>Configuration on Field</h5><pre><code>event: 'change|focus|blur|init', script: Function, invokeOnInit?: boolean</code></pre><p>The Field Interactions are configured on a per control basis. There are three scenarios in which they will be fired: 'change', 'focus' and 'blur'.</p><p>init -- gets fired only when the form is initialized</p><p>change -- gets fired when the value of the form control changes</p><p>focus -- gets fired when the field gets focused</p><p>blur -- gets fired when the field loses focus</p><p>The script function represents the function that will be fired for the event, you can see examples of these below.</p><p>Lastly, 'invokeOnInit' will also trigger the Field Interaction when the form is created as well.</p><h5>Getting Current Context</h5><p>If you need to write Field Interaction based on if you are on an add or edit page, or you need to know the current entity type and ID then you can get those via:</p><p>edit: 'API.isEdit'</p><p>entity: 'API.currentEntity'</p><p>id: 'API.currentEntityId'</p><h5>Write Field Interaction</h5><p>Writing Field Interactions is very simple. You can refer to all the examples below. If you ever get stuck, you can always open a <a href=\"https://github.com/bullhorn/novo-elements/issues\">Github Issue</a> as well!</p><p><strong>IMPORTANT</strong></p><p>When writing field interactions, you will be writing everything only the contents of the function. <strong>You do not</strong> write the surrounding function.</p><p><strong>All field interactions must be written in vanilla ES5 as well!</strong></p><h2>Basic API</h2><p>Validation Mark Fields as Required Field Calculations &amp; Modification Hide / Show Fields Enable / Disable Fields Messaging / Notifications Modifying Config on Static Pickers / Selects Using Globals Async Interactions Confirm Changes Adding / Removing Fields Add Tooltip</p><h5>Validation</h5><p>If you need to perform some custom validation on a field, you can use the API to quickly mark a field as invalid</p><p><code-example example=\"fi-validation\"></code-example></p><h5>Mark Fields as Required</h5><p>If you need to mark fields as required or not based on some changes in the form, you can use the API to do that!</p><p><code-example example=\"fi-required\"></code-example></p><h5>Field Calculations &amp; Modification</h5><p>If you need to do some custom calculations based off other form data, you can do that easily with the API</p><p><code-example example=\"fi-calculation\"></code-example></p><h5>Hide / Show Fields</h5><p>You can also hide or show certain fields based on interaction with the form. Note that the value is still present in the form's value</p><p><code-example example=\"fi-hide-show\"></code-example></p><h5>Enable / Disable Fields</h5><p>You can also enable or disable certain fields based on interaction with the form. Note that the value is still present in the form's value but does not respond to any interactions</p><p><code-example example=\"fi-enable-disable\"></code-example></p><h5>Messaging / Notifications</h5><p>You can trigger messages to users in a few different ways using the API</p><p><code-example example=\"fi-messaging\"></code-example></p><h5>Modifying Config on Static Pickers / Selects</h5><p>You have full control over the control, you can modify the options array of static pickers and select controls!</p><p><code-example example=\"fi-modify-options\"></code-example></p><h5>Modifying Config on Static Pickers / Selects to mimic an Entity Picker</h5><p>You can modify a picker added to a form via field interactions to look like an entity picker!</p><p><code-example example=\"fi-modify-added-picker\"></code-example></p><h5>Using Globals</h5><p>Using the config from above, you can figure the API to have a set of global variables that you can key off of inside your field interactions</p><p><code-example example=\"fi-globals\"></code-example></p><h5>Async Interactions</h5><p>You can perform async interactions and keep the form from saving by setting a loading state</p><p><code-example example=\"fi-async\"></code-example></p><h5>Confirm Changes</h5><p>You can prompt the user if they want to update the field or not too!</p><p><code-example example=\"fi-confirm\"></code-example></p><h5>Adding / Removing Fields</h5><p>With the API you can quickly add and remove fields on the form.</p><p><strong>ONLY WORKS WITH DYNAMIC FORMS</strong></p><p><code-example example=\"fi-adding-removing\"></code-example></p><h5>Add Tooltip</h5><p>You are able to dynamically change a field's tooltip.</p><p><code-example example=\"fi-tooltip\"></code-example></p><h5>Interacting with Nested Forms</h5><p>Field Interactions can navigate nested forms to interact with parent and child forms. This example uses the Form Group component which contains an array of nested forms that are kept in sync by field interactions.</p><p><code-example example=\"fi-nested\"></code-example></p>`\n            }] }\n];\nclass ModalPage {\n}\nModalPage.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-page',\n                template: `<h1>Modals <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/modal\">(source)</a></h1><p>Modals are pop-up dialogues designed to grab attention and inform the user of something critical, force a decision, or extend a workflow. There are two categories of modals: notification and workflow. Regardless of type, a modal should have a maximum of two main buttons.</p><h2>Notification Modals</h2><h5>Success</h5><p>This modal uses only a primary action button. It is a confirmation that an action has been completed when the result is not immediately apparent. A workflow modal often transitions into a success modal.</p><p><code-example example=\"success-modal\"></code-example></p><h5>Warning</h5><p>Warning modals ask for additional confirmation to complete an action because the action is either irreversible or there is an exception. The first line should always clarify the action or eventual result.</p><p><code-example example=\"warning-modal\"></code-example></p><h5>Error</h5><p>Error modals indicate that an attempted action has failed. The first line should apologize and state the what happened. The second line should quickly attempt to explain to the user why this has happened, and instruct the user on the best course of action.</p><p><code-example example=\"error-modal\"></code-example></p><h5>Custom</h5><p>In the case where &quot;Success&quot;, &quot;Warning&quot;, and &quot;Error&quot; notfications aren't enough, use the custom notification. Custom notifcations allow any of the Bullhorn Icons to be used in the notification.</p><p><code-example example=\"custom-modal\"></code-example></p><h2>Workflow Modals</h2><h5>Add</h5><p>Add modals have a colored title bar based on the record type being created. Additionally, due to a greater than average amount of content, they have fixed footers.</p><p><code-example example=\"modal-add-form\"></code-example></p><h5>Edit &amp; Send</h5><p>Edit, Send, and non-Add workflow modals possess a plain header to remind the user of the action they are taking. They generally have a neutralizing button, and a primary button.</p><p><code-example example=\"modal-edit-form\"></code-example></p>`\n            }] }\n];\nclass PipesPage {\n}\nPipesPage.decorators = [\n    { type: Component, args: [{\n                selector: 'pipes-page',\n                template: `<h1>Pipes</h1><p>Utility and helpful pipes.</p><h5>Pluralize <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/pipes/plural\">(source)</a></h5><p>Makes works plural or vice-versa</p><p><code-example example=\"pluralize\"></code-example></p>`\n            }] }\n];\nclass PopOverPage {\n}\nPopOverPage.decorators = [\n    { type: Component, args: [{\n                selector: 'pop-over-page',\n                template: `<h1>PopOvers <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/popover\">(source)</a></h1><p>PopOvers are tooltips with dynamic html content. This component is used when you need help text that requires the user to perform an action before closing.</p><h5>Placement</h5><p><code-example example=\"pop-over-placement\"></code-example></p><h5>Horizontal Alignment</h5><p><code-example example=\"pop-over-horizontal\"></code-example></p><h5>Vertical Alignment</h5><p><code-example example=\"pop-over-vertical\"></code-example></p><h5>Behavior</h5><p><code-example example=\"pop-over-behaviors\"></code-example></p><h5>Dynamic HTML in PopOver</h5><p><code-example example=\"pop-over-dynamic\"></code-example></p><h5>Automatic Placement of PopOver</h5><p><code-example example=\"pop-over-auto-placement\"></code-example></p>`\n            }] }\n];\nclass SecurityPage {\n}\nSecurityPage.decorators = [\n    { type: Component, args: [{\n                selector: 'security-page',\n                template: `<h1>Security</h1><p>The security component for this library a simple wrapper to implement ngIf functionality with a Security service.</p><h4>Configuration</h4><p>blah blah blah</p><p><code-example example=\"security\"></code-example></p>`\n            }] }\n];\nclass TipWellPage {\n}\nTipWellPage.decorators = [\n    { type: Component, args: [{\n                selector: 'tip-well-page',\n                template: `<h1>TipWell <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/tip-well\">(source)</a></h1><p>This component is meant to be akin to Bootstrap's 'well'. It's a small container for help text.</p><h4>Demo</h4><p><code-example example=\"basic-tip-well\"></code-example></p><h4>No Button Demo</h4><p><code-example example=\"buttonless-tip-well\"></code-example></p><h4>Icon Demo</h4><p><code-example example=\"icon-tip-well\"></code-example></p><h4>HTML Demo</h4><p><code-example example=\"html-tip-well\"></code-example></p>`\n            }] }\n];\nclass ToasterPage {\n}\nToasterPage.decorators = [\n    { type: Component, args: [{\n                selector: 'toaster-page',\n                template: `<h1>Toast Notifications <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/toast\">(source)</a></h1><p>Toasts are used as system notifications. They can contain custom text titles and messages, as well as any icons from bh-icons and any color from our color palletes.</p><h2>Types</h2><h5>Alert</h5><p>This type of toast notification takes a template, a style, and a location.</p><h2>Embedded Toast</h2><p><code-example example=\"toast-usage\"></code-example></p><h2>Toaster Service</h2><p><code-example example=\"toast-service\"></code-example></p>`\n            }] }\n];\nclass TooltipPage {\n}\nTooltipPage.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-page',\n                template: `<h1>Tooltips <a href=\"https://github.com/bullhorn/novo-elements/blob/master/projects/novo-elements/src/elements/tooltip\">(source)</a></h1><h2>Helper</h2><p>Helper tooltips contain basic text that provides some additional information about an element.</p><h5>Placement</h5><p><code-example example=\"tooltip-placement\"></code-example></p><h5>Alignment</h5><p><code-example example=\"tooltip-align\"></code-example></p><h5>Types</h5><p><code-example example=\"tooltip-types\"></code-example></p><h5>Sizes</h5><p><code-example example=\"tooltip-sizes\"></code-example></p><h5>Options</h5><p><code-example example=\"tooltip-options\"></code-example></p><h5>Toggle Trigger</h5><p><code-example example=\"tooltip-toggle\"></code-example></p>`\n            }] }\n];\nconst ɵ0$1 = { title: 'Ace Editor', section: 'components' }, ɵ1$1 = { title: 'Buttons', section: 'components' }, ɵ2$1 = { title: 'Calendar', section: 'components' }, ɵ3$1 = { title: 'Components', section: 'src' }, ɵ4$1 = { title: 'Data Table', section: 'components' }, ɵ5$1 = { title: 'Dropdown', section: 'components' }, ɵ6 = { title: 'Icon', section: 'components' }, ɵ7 = { title: 'Loading', section: 'components' }, ɵ8 = { title: 'Quick Note', section: 'components' }, ɵ9 = { title: 'Search', section: 'components' }, ɵ10 = { title: 'Slides', section: 'components' }, ɵ11 = { title: 'Switch', section: 'components' }, ɵ12 = { title: 'Tabbed Group Picker', section: 'components' }, ɵ13 = { title: 'Table', section: 'components' }, ɵ14 = { title: 'Colors', section: 'design' }, ɵ15 = { title: 'Composition', section: 'design' }, ɵ16 = { title: 'Design', section: 'src' }, ɵ17 = { title: 'Iconography', section: 'design' }, ɵ18 = { title: 'Typography', section: 'design' }, ɵ19 = { title: 'Chips', section: 'form-controls' }, ɵ20 = { title: 'Date Picker', section: 'form-controls' }, ɵ21 = { title: 'Editor', section: 'form-controls' }, ɵ22 = { title: 'Form Controls', section: 'src' }, ɵ23 = { title: 'Form Groups', section: 'form-controls' }, ɵ24 = { title: 'Form', section: 'form-controls' }, ɵ25 = { title: 'Multi Picker', section: 'form-controls' }, ɵ26 = { title: 'Picker', section: 'form-controls' }, ɵ27 = { title: 'Radio Buttons', section: 'form-controls' }, ɵ28 = { title: 'Select', section: 'form-controls' }, ɵ29 = { title: 'Tiles', section: 'form-controls' }, ɵ30 = { title: 'Value', section: 'form-controls' }, ɵ31 = { title: 'Home', section: 'src' }, ɵ32 = { title: 'Cards', section: 'layouts' }, ɵ33 = { title: 'Expansion', section: 'layouts' }, ɵ34 = { title: 'Header', section: 'layouts' }, ɵ35 = { title: 'Layouts', section: 'src' }, ɵ36 = { title: 'List', section: 'layouts' }, ɵ37 = { title: 'Stepper', section: 'layouts' }, ɵ38 = { title: 'Tabs', section: 'layouts' }, ɵ39 = { title: 'Patterns', section: 'src' }, ɵ40 = { title: 'Templates', section: 'src' }, ɵ41 = { title: 'Chomsky', section: 'utils' }, ɵ42 = { title: 'Field Interactions', section: 'utils' }, ɵ43 = { title: 'Modal', section: 'utils' }, ɵ44 = { title: 'Pipes', section: 'utils' }, ɵ45 = { title: 'Pop Over', section: 'utils' }, ɵ46 = { title: 'Security', section: 'utils' }, ɵ47 = { title: 'Tip Well', section: 'utils' }, ɵ48 = { title: 'Toaster', section: 'utils' }, ɵ49 = { title: 'Tooltip', section: 'utils' }, ɵ50 = {};\n/** @type {?} */\nconst routes = [\n    //{ path: '', component: Home, data: {} },\n    { path: 'components/ace-editor', component: AceEditorPage, data: ɵ0$1 },\n    { path: 'components/buttons', component: ButtonsPage, data: ɵ1$1 },\n    { path: 'components/calendar', component: CalendarPage, data: ɵ2$1 },\n    { path: 'components', component: ComponentsPage, data: ɵ3$1 },\n    { path: 'components/data-table', component: DataTablePage, data: ɵ4$1 },\n    { path: 'components/dropdown', component: DropdownPage, data: ɵ5$1 },\n    { path: 'components/icon', component: IconPage, data: ɵ6 },\n    { path: 'components/loading', component: LoadingPage, data: ɵ7 },\n    { path: 'components/quick-note', component: QuickNotePage, data: ɵ8 },\n    { path: 'components/search', component: SearchPage, data: ɵ9 },\n    { path: 'components/slides', component: SlidesPage, data: ɵ10 },\n    { path: 'components/switch', component: SwitchPage, data: ɵ11 },\n    { path: 'components/tabbed-group-picker', component: TabbedGroupPickerPage, data: ɵ12 },\n    { path: 'components/table', component: TablePage, data: ɵ13 },\n    { path: 'design/colors', component: ColorsPage, data: ɵ14 },\n    { path: 'design/composition', component: CompositionPage, data: ɵ15 },\n    { path: 'design', component: DesignPage, data: ɵ16 },\n    { path: 'design/iconography', component: IconographyPage, data: ɵ17 },\n    { path: 'design/typography', component: TypographyPage, data: ɵ18 },\n    { path: 'form-controls/chips', component: ChipsPage, data: ɵ19 },\n    { path: 'form-controls/date-picker', component: DatePickerPage, data: ɵ20 },\n    { path: 'form-controls/editor', component: EditorPage, data: ɵ21 },\n    { path: 'form-controls', component: FormControlsPage, data: ɵ22 },\n    { path: 'form-controls/form-groups', component: FormGroupsPage, data: ɵ23 },\n    { path: 'form-controls/form', component: FormPage, data: ɵ24 },\n    { path: 'form-controls/multi-picker', component: MultiPickerPage, data: ɵ25 },\n    { path: 'form-controls/picker', component: PickerPage, data: ɵ26 },\n    { path: 'form-controls/radio-buttons', component: RadioButtonsPage, data: ɵ27 },\n    { path: 'form-controls/select', component: SelectPage, data: ɵ28 },\n    { path: 'form-controls/tiles', component: TilesPage, data: ɵ29 },\n    { path: 'form-controls/value', component: ValuePage, data: ɵ30 },\n    { path: 'home', component: HomePage, data: ɵ31 },\n    { path: 'layouts/cards', component: CardsPage, data: ɵ32 },\n    { path: 'layouts/expansion', component: ExpansionPage, data: ɵ33 },\n    { path: 'layouts/header', component: HeaderPage, data: ɵ34 },\n    { path: 'layouts', component: LayoutsPage, data: ɵ35 },\n    { path: 'layouts/list', component: ListPage, data: ɵ36 },\n    { path: 'layouts/stepper', component: StepperPage, data: ɵ37 },\n    { path: 'layouts/tabs', component: TabsPage, data: ɵ38 },\n    { path: 'patterns', component: PatternsPage, data: ɵ39 },\n    { path: 'templates', component: TemplatesPage, data: ɵ40 },\n    { path: 'utils/chomsky', component: ChomskyPage, data: ɵ41 },\n    { path: 'utils/field-interactions', component: FieldInteractionsPage, data: ɵ42 },\n    { path: 'utils/modal', component: ModalPage, data: ɵ43 },\n    { path: 'utils/pipes', component: PipesPage, data: ɵ44 },\n    { path: 'utils/pop-over', component: PopOverPage, data: ɵ45 },\n    { path: 'utils/security', component: SecurityPage, data: ɵ46 },\n    { path: 'utils/tip-well', component: TipWellPage, data: ɵ47 },\n    { path: 'utils/toaster', component: ToasterPage, data: ɵ48 },\n    { path: 'utils/tooltip', component: TooltipPage, data: ɵ49 },\n    // Catch All\n    { path: '**', redirectTo: '/home', data: ɵ50 },\n];\n/** @type {?} */\nconst PAGE_LIST = [\n    AceEditorPage, ButtonsPage, CalendarPage, ComponentsPage, DataTablePage, DropdownPage, IconPage, LoadingPage, QuickNotePage, SearchPage, SlidesPage, SwitchPage, TabbedGroupPickerPage, TablePage, ColorsPage, CompositionPage, DesignPage, IconographyPage, TypographyPage, ChipsPage, DatePickerPage, EditorPage, FormControlsPage, FormGroupsPage, FormPage, MultiPickerPage, PickerPage, RadioButtonsPage, SelectPage, TilesPage, ValuePage, HomePage, CardsPage, ExpansionPage, HeaderPage, LayoutsPage, ListPage, StepperPage, TabsPage, PatternsPage, TemplatesPage, ChomskyPage, FieldInteractionsPage, ModalPage, PipesPage, PopOverPage, SecurityPage, TipWellPage, ToasterPage, TooltipPage\n];\nclass NovoExamplesRoutesModule {\n}\nNovoExamplesRoutesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: PAGE_LIST,\n                entryComponents: PAGE_LIST,\n                imports: [RouterModule.forRoot(routes, { useHash: true }), NovoExamplesModule, NovoExamplesSharedModule],\n                exports: [RouterModule],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: novo-examples.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AccordionExample, AceEditorPage, ActionsCellExample, ActivitySectionExample, AddressControlExample, AddressValueExample, AnalyticsColorsExample, AssociatedValueExample, AsyncChipsExample, AsyncPickerExample, BasicAceExample, BasicCardExample, BasicChipsExample, BasicDropDownExample, BasicEditorExample, BasicExpansionExample, BasicHeaderExample, BasicIconsExample, BasicListExample, BasicMultiPickerExample, BasicPickerExample, BasicQuickNoteExample, BasicRadioExample, BasicSelectExample, BasicSlideExample, BasicTipWellExample, BasicValueExample, BigCalendarExample, ButtonDialogueExample, ButtonDynamicExample, ButtonFabExample, ButtonIconExample, ButtonInverseExample, ButtonLoadingExample, ButtonOverviewExample, ButtonPrimaryExample, ButtonRadioExample, ButtonSecondaryExample, ButtonStandardExample, ButtonlessTipWellExample, ButtonsPage, CalendarExample, CalendarInputControlsExample, CalendarPage, CardConfigExample, CardsPage, CategoryValueExample, CheckBoxControlsExample, ChipsPage, ChomskyPage, CloseOnSelectChipsExample, ColorsPage, ComponentsPage, CompositionPage, CondensedHeaderExample, ConfigureColumnsModal, CorporateUserValueExample, CustomDemoControlExample, CustomDropDownExample, CustomModalExample, CustomPickerResults, CustomPickerResultsExample, CustomQuickNoteExample, CustomQuickNoteResults, CustomQuickNoteResultsExample, CustomTemplateExample, DataTablePage, DataTableRemoteExample, DataTableRowsExample, DataTableServiceExample, DatePickerExample, DatePickerPage, DateRangeExample, DateTimeExample, DateTimeInputExample, DateTimeValueExample, DateTranslationsExample, DefaultOptionsPickerExample, DesignPage, DetailsTableExample, DisabledFormExample, DropdownPage, DynamicFormExample, DynamicFormFieldSetsExample, EXAMPLE_COMPONENTS, EXAMPLE_LIST, EditableTableExample, EditorPage, EnableDisableAllFieldsInFormExample, EntityColorsExample, EntityListValueExample, EntityPickerExample, ErrorModalExample, ExampleData, ExpansionPage, ExternalLinkValueExample, ExtraDetails, FiAddingRemovingExample, FiAsyncExample, FiCalculationExample, FiConfirmExample, FiEnableDisableExample, FiGlobalsExample, FiHideShowExample, FiMessagingExample, FiModifyAddedPickerExample, FiModifyOptionsExample, FiNestedExample, FiRequiredExample, FiTooltipExample, FiValidationExample, FieldInteractionsPage, FileInputControlsExample, FormControlsPage, FormGroupsPage, FormPage, FormattedChipsExample, FormattedPickerExample, FormatterValueExample, GroupedMultiPickerExample, GroupedPickerExample, HeaderPage, HeaderSearchbarExample, HeaderSubtitleExample, HomePage, HorizontalExample, HorizontalOptionsExample, HtmlTipWellExample, IconPage, IconRadioExample, IconTipWellExample, IconValueExample, IconographyPage, LargeDropDownExample, LayoutsPage, LazyExpansionExample, ListPage, LoadingCircleExample, LoadingLineExample, LoadingPage, LongSelectExample, MinimalEditorExample, ModalAddFormDemo, ModalAddFormExample, ModalCustomDemo, ModalEditFormDemo, ModalEditFormExample, ModalErrorDemo, ModalPage, ModalSuccessDemo, ModalWarningDemo, MultiDropDownExample, MultiOptionValueExample, MultiPickerPage, NestedMultiPickerExample, NovoExamplesModule, NovoExamplesRoutesModule, NumberTranslationsExample, OverrideTemplateExample, PAGE_LIST, PatternsPage, PickerControlsExample, PickerPage, PipesPage, PluralTranslationsExample, PluralizeExample, PopOverAutoPlacementExample, PopOverBehaviorsExample, PopOverDynamicExample, PopOverHorizontalExample, PopOverPage, PopOverPlacementExample, PopOverVerticalExample, PositionDropDownExample, PrimaryColorsExample, QuickNotePage, RadioButtonsPage, RaisedIconsExample, RangeExample, RecordHeaderExample, RowChipsExample, ScrollableDropDownExample, SearchPage, SearchUsageExample, SecurityExample, SecurityPage, SelectAllTableExample, SelectPage, SimpleTranslationsExample, SlidesPage, StepperHorizontalExample, StepperPage, StepperVerticalExample, SuccessModalExample, SwitchPage, SwitchUsageExample, TabbedGroupPickerBasicExample, TabbedGroupPickerBigGroupsExample, TabbedGroupPickerGroupsExample, TabbedGroupPickerPage, TabbedGroupPickerQuickSelectExample, TableExample, TablePage, TabsBasicExample, TabsColorExample, TabsCondensedExample, TabsPage, TabsRouterExample, TabsVerticalExample, TemplatesPage, TextBasedControlsExample, ThemedIconsExample, ThemedListExample, TilesPage, TilesUsageExample, TimeExample, TimePickerExample, TipWellPage, ToastServiceExample, ToastUsageExample, ToasterPage, TooltipAlignExample, TooltipOptionsExample, TooltipPage, TooltipPlacementExample, TooltipSizesExample, TooltipToggleExample, TooltipTypesExample, TotalFooterTableExample, TranslationsVariablesExample, TypographyPage, UpdatingFormExample, ValuePage, VerticalDynamicFormExample, VerticalExample, VerticalOptionsExample, VerticalRadioExample, WarningModalExample, WeekStartExample, NovoExamplesSharedModule as ɵa, CodeSnippetComponent as ɵb, HighlightJS as ɵc, CodeExampleComponent as ɵd, StackblitzButtonModule as ɵe };\n//# sourceMappingURL=novo-examples.js.map\n","export default \"<nav class=\\\"main-nav\\\"\\n     [ngClass]=\\\"{open: menuOpen}\\\">\\n    <span class=\\\"logo\\\">\\n        <div class=\\\"title\\\">\\n            <svg routerLink=\\\"Home\\\"\\n                 data-name=\\\"bullhorn-text\\\"\\n                 version=\\\"1.1\\\"\\n                 xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 xmlns:a=\\\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\\\"\\n                 x=\\\"0px\\\"\\n                 y=\\\"0px\\\"\\n                 xml:space=\\\"preserve\\\"\\n                 id=\\\"Layer_1\\\"\\n                 data-name=\\\"Layer 1\\\"\\n                 xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n                 viewBox=\\\"0 0 989.95 383.98\\\">\\n                <defs>\\n                    <style>\\n                        .cls-1 {\\n                            fill: #fff;\\n                        }\\n\\n                        .cls-2 {\\n                            fill: #ff6b00;\\n                        }\\n                    </style>\\n                </defs>\\n                <title>Artboard 1</title>\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M5.63,226.16A3.16,3.16,0,0,1,8.79,223H65.17q22.93,0,34.7,11.76a29.9,29.9,0,0,1,8.91,22v.38a32.88,32.88,0,0,1-1.61,10.61A30.12,30.12,0,0,1,103,276a30.64,30.64,0,0,1-6,6.17c-.61.47-1.23.92-1.85,1.36A3.16,3.16,0,0,0,95.6,289a44.53,44.53,0,0,1,13.28,9.08q7.29,7.41,7.3,20.86v.38a33.92,33.92,0,0,1-3.51,15.74,31.25,31.25,0,0,1-10,11.38,47.63,47.63,0,0,1-15.45,6.92,79.48,79.48,0,0,1-20.2,2.37H8.79a3.15,3.15,0,0,1-3.16-3.16Zm54.8,52.78q11.37,0,18.2-4.43T85.46,261v-.38a14.53,14.53,0,0,0-6-12.36q-6-4.42-17.36-4.43H31.73A3.17,3.17,0,0,0,28.57,247v28.77a3.16,3.16,0,0,0,3.16,3.15Zm6.82,55.94q12,0,18.78-4.53t6.82-13.58v-.37a15,15,0,0,0-6.73-13.11q-6.74-4.64-20.57-4.63H31.73a3.17,3.17,0,0,0-3.16,3.16v29.9a3.16,3.16,0,0,0,3.16,3.16Z\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M235.05,221.82h16.64a3.53,3.53,0,0,1,3.53,3.53V352.21a3.53,3.53,0,0,1-3.53,3.53H235.05a3.53,3.53,0,0,1-3.53-3.53V225.35a3.53,3.53,0,0,1,3.53-3.53\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M276.5,221.82h16.64a3.54,3.54,0,0,1,3.53,3.53V352.21a3.54,3.54,0,0,1-3.53,3.53H276.5a3.53,3.53,0,0,1-3.53-3.53V225.35a3.53,3.53,0,0,1,3.53-3.53\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M314.42,221.82h11.43a11.87,11.87,0,0,1,11.86,11.87v37.53a40.38,40.38,0,0,1,10.55-7.84q6.92-3.81,17.76-3.81a40.35,40.35,0,0,1,15.46,2.81,30.3,30.3,0,0,1,11.35,7.93,35.23,35.23,0,0,1,6.92,12.35,49.82,49.82,0,0,1,2.41,15.86v54a3.24,3.24,0,0,1-3.25,3.25H381.72a3.25,3.25,0,0,1-3.25-3.25V298.72q0-9-4.92-14a17.25,17.25,0,0,0-12.75-4.92,21.67,21.67,0,0,0-9,1.91,21.1,21.1,0,0,0-7.23,5.32,25.41,25.41,0,0,0-4.72,7.93,27.27,27.27,0,0,0-1.7,9.73v47.75a3.25,3.25,0,0,1-3.26,3.25H317.68a3.25,3.25,0,0,1-3.26-3.25V221.82Z\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M599.28,261.58h14.94a4,4,0,0,1,4,3.76l.39,6.88a51.56,51.56,0,0,1,4.32-4.22,32.65,32.65,0,0,1,6-4.11,37.24,37.24,0,0,1,7.93-3.12,38.33,38.33,0,0,1,10-1.2q17.65,0,26.9,10.54T683,298.52v53a4.21,4.21,0,0,1-4.22,4.21H663.56a4.2,4.2,0,0,1-4.21-4.21V298.72q0-9-4.92-14a17.25,17.25,0,0,0-12.75-4.92,21.72,21.72,0,0,0-9,1.91,21.1,21.1,0,0,0-7.23,5.32A25.39,25.39,0,0,0,620.7,295a27.27,27.27,0,0,0-1.71,9.73v46.79a4.21,4.21,0,0,1-4.21,4.21H599.51a4.2,4.2,0,0,1-4.21-4.21v-86a4,4,0,0,1,4-4\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M709.07,270.13a8.17,8.17,0,0,1-16.33,0,8.1,8.1,0,0,1,1.1-4.09,7.9,7.9,0,0,1,3-3,8.13,8.13,0,0,1,8.15,0,8.22,8.22,0,0,1,4.09,7.06m-1.12,0a6.87,6.87,0,0,0-1-3.52,7,7,0,0,0-2.57-2.58,6.84,6.84,0,0,0-3.5-.95,7,7,0,0,0-3.54.95,6.9,6.9,0,0,0-2.59,2.58,7,7,0,0,0-.94,3.54,6.89,6.89,0,0,0,.94,3.51,7.12,7.12,0,0,0,6.13,3.51,6.8,6.8,0,0,0,3.5-.95,7,7,0,0,0,2.58-2.57,6.88,6.88,0,0,0,.94-3.52m-10.46-4.75h3.93a5,5,0,0,1,2,.28,2.18,2.18,0,0,1,1,.89,2.93,2.93,0,0,1,.12,2.69,2.74,2.74,0,0,1-.9.84,1.81,1.81,0,0,1,.86.72,3.32,3.32,0,0,1,.21,1.4v1.06a2.18,2.18,0,0,0,.33,1.24l.16.25h-1.66a6.19,6.19,0,0,1-.23-1.37l-.08-1.15a2,2,0,0,0-.2-.89,1,1,0,0,0-.46-.37,3.85,3.85,0,0,0-1.2-.12H699v3.9h-1.48Zm1.48,1.36v2.78h2.33a3,3,0,0,0,1.44-.24,1.24,1.24,0,0,0,.56-1.16,1.26,1.26,0,0,0-.41-1,2.37,2.37,0,0,0-1.5-.34Z\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M526,261.29h14.81a4,4,0,0,1,4,3.84l.41,8a46.21,46.21,0,0,1,4.12-4.42,31.78,31.78,0,0,1,5.92-4.41,37.69,37.69,0,0,1,7.93-3.42,35.05,35.05,0,0,1,10.34-1.4,41.71,41.71,0,0,1,6.12.4c.78.11,1.55.27,2.34.45a3.38,3.38,0,0,1,2.53,4L581.18,280a3.37,3.37,0,0,1-4.1,2.54c-.53-.13-1.07-.24-1.6-.32a37.76,37.76,0,0,0-5.93-.41,26.8,26.8,0,0,0-9.23,1.61,21.9,21.9,0,0,0-7.63,4.62,22.36,22.36,0,0,0-7,16.66v46.83a4,4,0,0,1-4,4H525.94a4,4,0,0,1-4-4V265.33a4,4,0,0,1,4-4\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M195.61,263A3.66,3.66,0,0,0,192,266.7v45.76c0,12.53-8.95,21-19.88,21h-4.35c-10.93,0-19.88-8.42-19.88-21V266.7a3.66,3.66,0,0,0-3.66-3.66H129.65A3.65,3.65,0,0,0,126,266.7v50.77c0,22.07,20.19,37.4,41.53,37.6h5.09c21.21-.36,41.18-15.65,41.18-37.59V266.7a3.66,3.66,0,0,0-3.66-3.66Z\\\" />\\n                <path class=\\\"cls-1\\\"\\n                      d=\\\"M411.79,309a50.92,50.92,0,0,1,3.71-19.38,49.52,49.52,0,0,1,10.34-16,49,49,0,0,1,16-10.84,54.69,54.69,0,0,1,41.16,0,48.21,48.21,0,0,1,26.3,26.8,51.55,51.55,0,0,1-10.33,54.81,48,48,0,0,1-16,10.94,54.69,54.69,0,0,1-41.16,0,48,48,0,0,1-16-10.94,51,51,0,0,1-14-35.43m50.59,29.91a24.57,24.57,0,0,0,11.85-2.71,25.22,25.22,0,0,0,8.33-7.13,31.15,31.15,0,0,0,4.92-9.63A35.37,35.37,0,0,0,489.09,309a35.73,35.73,0,0,0-1.61-10.34,29.83,29.83,0,0,0-4.92-9.64,25.89,25.89,0,0,0-8.33-7,27.24,27.24,0,0,0-23.69,0,25.68,25.68,0,0,0-8.33,7,29.83,29.83,0,0,0-4.92,9.64,34.33,34.33,0,0,0,0,20.78,31.15,31.15,0,0,0,4.92,9.63,25,25,0,0,0,8.33,7.13,24.5,24.5,0,0,0,11.84,2.71\\\" />\\n                <path class=\\\"cls-2\\\"\\n                      d=\\\"M848.14,328.09c3.53,4.27,8.27,7.41,11.82,11.8,4.72,5.85,12.28,22.93,12.33,24.5,0,3.9-3.14,3.68-6.21,5.45-1.46.54-2.32,2.07-3.74-.31a2.42,2.42,0,0,0-2.54-.32c-.88.38-.8,1.72-.7,3a1.8,1.8,0,0,1-1.18,1.87,13.5,13.5,0,0,1-8.12.13c-2.27-.68-3.9-.76-4.58-4.31,0-.1-.05-.21-.08-.31-4.09-11,4.29-4.62-11.86-33.39-.2-.49-.4-1-.59-1.47a20.21,20.21,0,0,0-8.8-12.37,15.25,15.25,0,0,1-6.27-7.38,24.78,24.78,0,0,0-14.44-14.12c-4.25-1.7-8.6-3.21-12.85-5a65.24,65.24,0,0,1-29.48-24.06,16.27,16.27,0,0,1-1.12-1.74c-.7-1.38-6.74-8.63-5.36-8.13,12.69,5.29,42.08,10.48,58.86,12.3a6.85,6.85,0,0,1,5.68,4.17c.13.34,1.39,2.48,1.63,2.84,5.12,8.05,5.42,9.3,7.51,12.17,3.34,4.56,7.9,8.78,8.68,14.53,1.21,9,6.67,14.39,11.41,20.11M978.2,219.43c-.27-.36-1.07-.82-1-1.73.22-3.06-1.32-2.12-2.47-1.36-4,2.63-9.1,3.58-10.36,10.15-.27,1.46-1.65,2-2.74,2.63-10.25,6.09-21.55-1.15-24.31-15.92a101.4,101.4,0,0,0-6.38-22.12c-1.64-3.77-6.46-8.78-8.82-12.71a4.45,4.45,0,0,1-.64-2.15c-.12-4.06-1.84-13.38-12.87-19.8l-.25-.16c-13.52-9.83-42.61-20-58.22-24.7-6-1.64-7.56,2.19-7.7,4.61a3.91,3.91,0,0,0,.16,1.36c.3,1.09.95,3.32,1,3.38,3.7,14.11,8.45,33.66,5.73,32.9-2.92-.81-10.14-41.63-27.2-53.37l-.32-.27c-11.13-10.29-34.24-15.12-42-16.75a4.36,4.36,0,0,1-2.55-1.6c-4.58-6.1-11.74-8-22.87-9.77-4.62-.75-8.58-1.32-12-1.74a4.45,4.45,0,0,1-3.7-5.79l0,0c.35-1.11.36-3.36-.37-3.65s-3.43.83-5.63,1.08a6.46,6.46,0,0,1-3.24-.83c-.54-.32.76.79.19.26-6.42-6.09,9.6-11.71,6.07-12-1.24-.09-2.44-.12-3.63-.14a81,81,0,0,0-13.15.78,1.44,1.44,0,0,1-1.55-1.65,1.27,1.27,0,0,1,.67-1c21.07-11.45,29-24.53,29-24.53s6.41-10.41-8.47-17.3a52.65,52.65,0,0,0-11-3.48A176.71,176.71,0,0,1,694.13,11.2c-3.14-1.37-6-2.7-8.37-3.89a7.32,7.32,0,0,0-1.18-.49c-1.39-.53-2.61-.11-3.33,1.63-1.18,2.88,2.79,4.35,4.86,6,8.85,6.86,18.88,11.24,28,17.17,5.77,3.75,5.94,5.4.65,9-7.68,5.28-16.37,8.57-25.11,11.86a4.27,4.27,0,0,1-1.37.27,17.88,17.88,0,0,0-13.51-2.86,22.32,22.32,0,0,0-18.73,11.78,4.33,4.33,0,0,1-4.15,2.23c-.32,0-.63,0-.95,0a7.12,7.12,0,0,0-1.7-.07c-18.85,1.45-22.6,9.19-23.34,12.5a3,3,0,0,1-1.72,2.17c-40.56,17.11-69.12,4.29-78.69-1.35l-.21-.12a1.46,1.46,0,0,0-2.15,1.76c9,22.93,55.5,24.72,68.48,24.76h1.49a1.5,1.5,0,0,1,1.43,1.92,73.65,73.65,0,0,1-9.82,19.29,19.59,19.59,0,0,0-2.84,5.6l-.27.83a17.18,17.18,0,0,0,.13,10.84,4.52,4.52,0,0,1,.07,2.65,6.93,6.93,0,0,0-.24,1.19,7.16,7.16,0,0,0,0,1.91c2.43,14.84,10.53,18,10.53,18s1.36.83,6.69.57c12.66-.6,33.94-3.62,39.22-4a5.21,5.21,0,0,1,1.67.16l.34.09a5.38,5.38,0,0,1,1.12.42c18.3,9.49,45.57,39.06,55.34,56.15.55,1,1.12,2.06,1.69,3.07,4.59,8.74,9.43,15.27,17.27,21.07a71.52,71.52,0,0,0,7.38,4.79A98,98,0,0,0,755.34,254a158.11,158.11,0,0,0,21.58,6.79c2.31.59,3.82.92,4.78,1.13,4.13.87,7.88,1.38,12.58,2,17.71,2.32,25.92,1.39,29.15,7a21.87,21.87,0,0,1,1.05,3.18,2.41,2.41,0,0,1,.08.25c4.35,12.69,7.1,14.17,9.07,20,.93,2.73,2.37,4.26,4.86,5,3.92,1.17,7.41,3.34,9,7.58,3.66,9.79,10.73,17.36,19.87,19.9,10.08,2.81,14.7,1.92,20.75-6.47,2.26-3.14,2.4-6.06.55-9.33a19.53,19.53,0,0,0-15.56-10.26c-3.14-.39-6.14-2-6.57-5.21-.72-5.39-3.51-8.54-6.74-11.86a6.21,6.21,0,0,1,1.16-10c.94-.55,11.7-9.09,16.07-11.28,1.56-.81,10.85-4.06,11.15-10.58-1.35-15.58,1.19-26.68,2.36-26.58.68.06-.53,5.17,1.55,14.89a12.15,12.15,0,0,0,.41,1.41v0c1.92,11.21,15.27,28.81,21.84,36.28a4.21,4.21,0,0,1,.76,1.27,42.31,42.31,0,0,0,5.24,9.7,14,14,0,0,1,2,4.85c2.12,12.53,8.08,23.56,9.29,36.31.46,4.85,1.55,10.74.9,12.92a3.92,3.92,0,0,0-.21,1.51c.3,3.44,1.4,11.08,2.71,11.74s7.92,2,10.88-1.27a1.87,1.87,0,0,0,.39-1c.58-5.49,2.81-3.11,3.94-1.63a1.23,1.23,0,0,0,1.43.42,12,12,0,0,0,5.63-4.1,1.93,1.93,0,0,0,.4-.87c.89-4.7,1.1-9.32-1.09-13.68a67.21,67.21,0,0,0-6.89-10.75c-6.15-8-9.57-17.13-7.14-28.52a16.32,16.32,0,0,0-2.73-13.32c-1.91-2.64-2.13-5.09-1.44-8.64a111.32,111.32,0,0,0,1.65-32.69c-.17-1.68-1.11-3.55.38-4.88s2.91-.07,4.24.58c6.62,3.24,13,2.28,19.14-1.64,1.43-.91,2.79-1.83,4.51-1.83,7.1,0,10.41-4.66,10.9-7.73a7.87,7.87,0,0,0-1.07-5.19\\\" />\\n            </svg>\\n\\n        </div>\\n        <h5 routerLink=\\\"Home\\\">NOVO Design System</h5>\\n        <a href=\\\"https://github.com/bullhorn/novo-elements\\\"\\n           target=\\\"_blank\\\"\\n           class=\\\"fork-me\\\">Fork Me On Github</a>\\n    </span>\\n    <ul class=\\\"menu-list\\\">\\n        <li class=\\\"menu-section-header\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a routerLink=\\\"/home\\\"\\n               class=\\\"menu-item-header\\\">Introduction</a>\\n        </li>\\n\\n        <li class=\\\"menu-section-header\\\">\\n            <span class=\\\"menu-item-header\\\">Design</span>\\n        </li>\\n        <li class=\\\"menu-item\\\"\\n            *ngFor=\\\"let route of designRoutes\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a [routerLink]=\\\"route.path\\\"\\n               class=\\\"menu-link\\\">{{route.data.title}}</a>\\n        </li>\\n        <li class=\\\"menu-section-header\\\">\\n            <span class=\\\"menu-item-header\\\">Components</span>\\n        </li>\\n        <li class=\\\"menu-item\\\"\\n            *ngFor=\\\"let route of componentRoutes\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a [routerLink]=\\\"route.path\\\"\\n               class=\\\"menu-link\\\">{{route.data.title}}</a>\\n        </li>\\n        <li class=\\\"menu-section-header\\\">\\n            <span class=\\\"menu-item-header\\\">Form Controls</span>\\n        </li>\\n        <li class=\\\"menu-item\\\"\\n            *ngFor=\\\"let route of formRoutes\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a [routerLink]=\\\"route.path\\\"\\n               class=\\\"menu-link\\\">{{route.data.title}}</a>\\n        </li>\\n        <li class=\\\"menu-section-header\\\">\\n            <span class=\\\"menu-item-header\\\">Layout</span>\\n        </li>\\n        <li class=\\\"menu-item\\\"\\n            *ngFor=\\\"let route of layoutRoutes\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a [routerLink]=\\\"route.path\\\"\\n               class=\\\"menu-link\\\">{{route.data.title}}</a>\\n        </li>\\n        <li class=\\\"menu-section-header\\\">\\n            <span class=\\\"menu-item-header\\\">Utils</span>\\n        </li>\\n        <li class=\\\"menu-item\\\"\\n            *ngFor=\\\"let route of utilRoutes\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a [routerLink]=\\\"route.path\\\"\\n               class=\\\"menu-link\\\">{{route.data.title}}</a>\\n        </li>\\n        <li class=\\\"menu-line\\\"></li>\\n        <li class=\\\"menu-section-header\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a routerLink=\\\"/patterns\\\"\\n               class=\\\"menu-item-header menu-link\\\">Patterns</a>\\n        </li>\\n        <li class=\\\"menu-section-header\\\"\\n            routerLinkActive=\\\"current\\\"\\n            [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a routerLink=\\\"/templates\\\"\\n               class=\\\"menu-item-header menu-link\\\">Templates</a>\\n        </li>\\n    </ul>\\n</nav>\\n<main class=\\\"main-content\\\"\\n      [ngClass]=\\\"{open: menuOpen}\\\">\\n    <nav class=\\\"responsive-nav\\\">\\n        <button name=\\\"open-menu\\\"\\n                (click)=\\\"toggleMenu()\\\">\\n            <span>&#9776;</span>\\n        </button>\\n        <svg data-name=\\\"bullhorn-text\\\"\\n             version=\\\"1.1\\\"\\n             xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n             xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n             xmlns:a=\\\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\\\"\\n             x=\\\"0px\\\"\\n             y=\\\"0px\\\"\\n             width=\\\"240.2px\\\"\\n             height=\\\"48.8px\\\"\\n             viewBox=\\\"0 0 240.2 48.8\\\"\\n             style=\\\"enable-background:new 0 0 240.2 48.8;\\\"\\n             xml:space=\\\"preserve\\\">\\n            <g>\\n                <path class=\\\"st0\\\"\\n                      d=\\\"M0,1.5c0-0.6,0.5-1.1,1.1-1.1h20c5.4,0,9.5,1.4,12.3,4.2c2.1,2.1,3.2,4.7,3.2,7.8v0.1c0,1.4-0.2,2.6-0.6,3.8\\n            c-0.4,1.1-0.9,2.1-1.5,2.9c-0.6,0.8-1.3,1.6-2.1,2.2c-0.2,0.2-0.4,0.3-0.7,0.5c-0.7,0.5-0.6,1.6,0.1,1.9c1.9,0.9,3.4,1.9,4.7,3.2\\n            c1.7,1.7,2.6,4.2,2.6,7.4v0.1c0,2.1-0.4,4-1.2,5.6c-0.8,1.6-2,3-3.5,4c-1.5,1.1-3.4,1.9-5.5,2.5c-2.1,0.6-4.5,0.8-7.2,0.8H1.1\\n            C0.5,47.5,0,47,0,46.4V1.5z M19.4,20.3c2.7,0,4.8-0.5,6.5-1.6c1.6-1,2.4-2.6,2.4-4.8v-0.1c0-1.9-0.7-3.3-2.1-4.4\\n            c-1.4-1-3.5-1.6-6.2-1.6H9.3c-0.6,0-1.1,0.5-1.1,1.1v10.2c0,0.6,0.5,1.1,1.1,1.1H19.4z M21.8,40.1c2.8,0,5-0.5,6.7-1.6\\n            c1.6-1.1,2.4-2.7,2.4-4.8v-0.1c0-2-0.8-3.6-2.4-4.6c-1.6-1.1-4-1.6-7.3-1.6h-12c-0.6,0-1.1,0.5-1.1,1.1V39c0,0.6,0.5,1.1,1.1,1.1\\n            H21.8z\\\" />\\n                <path class=\\\"st0\\\"\\n                      d=\\\"M81.3,0h5.9c0.7,0,1.3,0.6,1.3,1.3v45c0,0.7-0.6,1.3-1.3,1.3h-5.9c-0.7,0-1.3-0.6-1.3-1.3v-45\\n            C80.1,0.6,80.6,0,81.3,0z\\\" />\\n                <path class=\\\"st0\\\"\\n                      d=\\\"M96,0h5.9c0.7,0,1.3,0.6,1.3,1.3v45c0,0.7-0.6,1.3-1.3,1.3H96c-0.7,0-1.3-0.6-1.3-1.3v-45\\n            C94.8,0.6,95.3,0,96,0z\\\" />\\n                <path class=\\\"st0\\\"\\n                      d=\\\"M109.5,0l4,0c2.3,0,4.2,1.9,4.2,4.2v13.3c0.9-0.9,2.1-1.9,3.7-2.8c1.6-0.9,3.7-1.4,6.3-1.4c2,0,3.9,0.3,5.5,1\\n            c1.6,0.7,3,1.6,4,2.8c1.1,1.2,1.9,2.7,2.5,4.4c0.6,1.7,0.9,3.6,0.9,5.6v19.1c0,0.6-0.5,1.2-1.2,1.2h-6.1c-0.6,0-1.2-0.5-1.2-1.2\\n            V27.3c0-2.1-0.6-3.8-1.7-4.9c-1.2-1.2-2.7-1.7-4.5-1.7c-1.1,0-2.2,0.2-3.2,0.7c-1,0.5-1.9,1.1-2.6,1.9c-0.7,0.8-1.3,1.7-1.7,2.8\\n            c-0.4,1.1-0.6,2.2-0.6,3.5v16.9c0,0.6-0.5,1.2-1.2,1.2h-6.1c-0.6,0-1.2-0.5-1.2-1.2V5.8V0z\\\" />\\n                <path class=\\\"st0\\\"\\n                      d=\\\"M210.5,14.1h5.3c0.7,0,1.4,0.6,1.4,1.3l0.1,2.4c0.4-0.5,0.9-1,1.5-1.5c0.6-0.5,1.3-1,2.1-1.5\\n            c0.8-0.5,1.8-0.8,2.8-1.1c1-0.3,2.2-0.4,3.6-0.4c4.2,0,7.4,1.2,9.5,3.7c2.2,2.5,3.3,5.8,3.3,10.1V46c0,0.8-0.7,1.5-1.5,1.5h-5.4\\n            c-0.8,0-1.5-0.7-1.5-1.5V27.3c0-2.1-0.6-3.8-1.7-4.9c-1.2-1.2-2.7-1.7-4.5-1.7c-1.1,0-2.2,0.2-3.2,0.7c-1,0.5-1.9,1.1-2.6,1.9\\n            c-0.7,0.8-1.3,1.7-1.7,2.8c-0.4,1.1-0.6,2.2-0.6,3.5V46c0,0.8-0.7,1.5-1.5,1.5h-5.4c-0.8,0-1.5-0.7-1.5-1.5V15.5\\n            C209.1,14.7,209.7,14.1,210.5,14.1z\\\" />\\n                <g>\\n                    <path class=\\\"st0\\\"\\n                          d=\\\"M184.5,14h5.3c0.8,0,1.4,0.6,1.4,1.4l0.1,2.8c0.4-0.5,0.9-1,1.5-1.6c0.6-0.6,1.3-1.1,2.1-1.6\\n                c0.8-0.5,1.7-0.9,2.8-1.2c1.1-0.3,2.3-0.5,3.7-0.5c0.8,0,1.5,0,2.2,0.1c0.3,0,0.5,0.1,0.8,0.2c0.6,0.2,1,0.8,0.9,1.4l-1.2,5.5\\n                c-0.1,0.7-0.8,1.1-1.5,0.9c-0.2,0-0.4-0.1-0.6-0.1c-0.6-0.1-1.3-0.1-2.1-0.1c-1.1,0-2.2,0.2-3.3,0.6c-1,0.4-1.9,0.9-2.7,1.6\\n                c-0.8,0.7-1.4,1.6-1.8,2.6c-0.5,1-0.7,2.1-0.7,3.3V46c0,0.8-0.6,1.4-1.4,1.4h-5.6c-0.8,0-1.4-0.6-1.4-1.4V15.4\\n                C183.1,14.6,183.7,14,184.5,14z\\\" />\\n                </g>\\n                <path id=\\\"u_1_\\\"\\n                      class=\\\"st0\\\"\\n                      d=\\\"M67.4,14.6c-0.7,0-1.3,0.6-1.3,1.3v16.2c0,4.4-3.2,7.4-7,7.4c-0.7,0-1.2,0-1.5,0c-3.9,0-7-3-7-7.4\\n            V15.9c0-0.7-0.6-1.3-1.3-1.3H44c-0.7,0-1.3,0.6-1.3,1.3v18c0,7.8,7.2,13.3,14.7,13.3v0h0.1c0,0,0.1,0,0.1,0l0,0h1.4l0,0\\n            c0,0,0.1,0,0.1,0h0.2v0c7.5-0.1,14.6-5.5,14.6-13.3v-18c0-0.7-0.6-1.3-1.3-1.3H67.4z\\\" />\\n                <g>\\n                    <g>\\n                        <g>\\n                            <path class=\\\"st0\\\"\\n                                  d=\\\"M144,30.9c0-2.4,0.4-4.7,1.3-6.9c0.9-2.2,2.1-4,3.7-5.7c1.6-1.6,3.5-2.9,5.7-3.8c2.2-0.9,4.6-1.4,7.3-1.4\\n                        c2.7,0,5.1,0.5,7.3,1.4c2.2,0.9,4.1,2.2,5.7,3.8c1.6,1.6,2.8,3.5,3.7,5.7c0.9,2.2,1.3,4.4,1.3,6.9s-0.4,4.7-1.3,6.9\\n                        c-0.9,2.2-2.1,4.1-3.7,5.7c-1.6,1.6-3.5,2.9-5.7,3.9c-2.2,0.9-4.6,1.4-7.3,1.4c-2.7,0-5.1-0.5-7.3-1.4c-2.2-0.9-4.1-2.2-5.7-3.9\\n                        c-1.6-1.6-2.8-3.5-3.7-5.7C144.4,35.6,144,33.3,144,30.9z M161.9,41.5c1.6,0,3-0.3,4.2-1c1.2-0.6,2.2-1.5,3-2.5\\n                        c0.8-1,1.4-2.2,1.7-3.4c0.4-1.2,0.6-2.5,0.6-3.7c0-1.2-0.2-2.4-0.6-3.7c-0.4-1.3-1-2.4-1.7-3.4c-0.8-1-1.8-1.9-3-2.5\\n                        c-1.2-0.6-2.6-1-4.2-1c-1.6,0-3,0.3-4.2,1c-1.2,0.6-2.2,1.5-3,2.5c-0.8,1-1.4,2.2-1.7,3.4c-0.4,1.3-0.6,2.5-0.6,3.7\\n                        c0,1.2,0.2,2.5,0.6,3.7c0.4,1.2,1,2.4,1.7,3.4c0.8,1,1.8,1.9,3,2.5C158.9,41.2,160.3,41.5,161.9,41.5z\\\" />\\n                        </g>\\n                    </g>\\n                </g>\\n            </g>\\n        </svg>\\n        <strong>Design System</strong>\\n    </nav>\\n    <section class=\\\"container\\\">\\n        <router-outlet></router-outlet>\\n    </section>\\n</main>\\n\""],"sourceRoot":"webpack:///"}